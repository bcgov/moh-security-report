/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.util.validation;

import java.util.Map;
import javax.validation.ConstraintValidatorFactory;
import javax.validation.MessageInterpolator;
import javax.validation.TraversableResolver;
import javax.validation.ValidationProviderResolver;
import javax.validation.ValidatorFactory;
import org.apache.camel.Endpoint;
import org.apache.camel.component.bean.validator.BeanValidatorComponent;
import static org.apache.camel.component.bean.validator.ValidatorFactories.buildValidatorFactory;
import org.apache.camel.impl.ProcessorEndpoint;

/**
 *
 * @author conrad.gustafson
 */
public class BusinessValidationComponent extends BeanValidatorComponent {

    @Override
    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {
        AuditingBeanValidator beanValidator = new AuditingBeanValidator();  

        ValidatorFactory validatorFactory = buildValidatorFactory(
                false,
                resolveAndRemoveReferenceParameter(parameters, "validationProviderResolver", ValidationProviderResolver.class),
                resolveAndRemoveReferenceParameter(parameters, "messageInterpolator", MessageInterpolator.class),
                resolveAndRemoveReferenceParameter(parameters, "traversableResolver", TraversableResolver.class),
                resolveAndRemoveReferenceParameter(parameters, "constraintValidatorFactory", ConstraintValidatorFactory.class));
        beanValidator.setValidatorFactory(validatorFactory);

        String group = getAndRemoveParameter(parameters, "group", String.class);
        if (group != null) {
            beanValidator.setGroup(getCamelContext().getClassResolver().resolveMandatoryClass(group));
        }

        return new ProcessorEndpoint(uri, this, beanValidator);
    }
    
    
    
}
