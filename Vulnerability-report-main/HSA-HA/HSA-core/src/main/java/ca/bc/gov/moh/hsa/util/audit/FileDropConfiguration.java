/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ca.bc.gov.moh.hsa.util.audit;

import java.util.Properties;
import javax.annotation.Resource;
import org.springframework.stereotype.Component;
import org.springframework.util.StringUtils;

/**
 *
 * @author conrad.gustafson
 */
@Component
public class FileDropConfiguration {

    @Resource(name = "fileDropConfigurationProperties")
    private Properties fileDropConfigurationProperties;
    private final String TRANSACTION_TYPE_ALL = "ALL";
    private final String MESSAGE_CONTEXT_ALL = "ALL";
    
    boolean isMessageToBeSaved(String transactionType, String messageContext) {
        
        Boolean isMessageToBeSaved = Boolean.FALSE;
        
        if (StringUtils.isEmpty(transactionType)) {
            transactionType = TRANSACTION_TYPE_ALL;
        }
        
        if (StringUtils.isEmpty(messageContext)) {
            messageContext = MESSAGE_CONTEXT_ALL;
        }
        
        String propertyKey = transactionType + "." + messageContext;
        String propertyValue = (String) fileDropConfigurationProperties.get(propertyKey);
        
        if (!StringUtils.isEmpty(propertyValue)) {
            isMessageToBeSaved = Boolean.valueOf(propertyValue);
            return isMessageToBeSaved;
        }
        
        // Check the general case for the transaction type
        propertyKey = transactionType + "." + MESSAGE_CONTEXT_ALL;
        propertyValue = (String) fileDropConfigurationProperties.get(propertyKey);
        if (!StringUtils.isEmpty(propertyValue)) {
            isMessageToBeSaved = Boolean.valueOf(propertyValue);
            return isMessageToBeSaved;
        }
                
        // Check the general case for the message context
        propertyKey = TRANSACTION_TYPE_ALL + "." + messageContext;
        propertyValue = (String) fileDropConfigurationProperties.get(propertyKey);
        if (!StringUtils.isEmpty(propertyValue)) {
            isMessageToBeSaved = Boolean.valueOf(propertyValue);
            return isMessageToBeSaved;
        }
        
        // Check the catch-all case
        propertyKey = TRANSACTION_TYPE_ALL + "." + MESSAGE_CONTEXT_ALL;
        propertyValue = (String) fileDropConfigurationProperties.get(propertyKey);
        if (!StringUtils.isEmpty(propertyValue)) {
            isMessageToBeSaved = Boolean.valueOf(propertyValue);
            return isMessageToBeSaved;
        }
        
        return isMessageToBeSaved.booleanValue();
    }
    
}
