/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.converter.hl7ToDto;

import ca.bc.gov.moh.hsa.plr.converter.util.PLRTypeConverterTestConstants;
import java.io.IOException;
import java.io.InputStream;
import java.io.StringWriter;
import java.lang.reflect.Field;
import java.nio.charset.Charset;
import java.util.Arrays;
import java.util.List;
import org.apache.commons.io.IOUtils;
import org.apache.velocity.VelocityContext;

/**
 *
 * @author conrad.gustafson
 */
public class HL7MessageCreator {
    protected static VelocityContext createVelocityContext() throws IllegalArgumentException, IllegalAccessException {
        VelocityContext context;
        context = new VelocityContext();
        
        Class constantsClass = PLRTypeConverterTestConstants.class;
        List<Field> declaredFields = Arrays.asList(constantsClass.getDeclaredFields());
        for (Field declaredField : declaredFields) {
            String name = declaredField.getName();
            String value = (String) declaredField.get(null);
            context.put(name, value);
            
            if (name.endsWith("DATE") || name.endsWith("DTM")) {
                String hl7Name = name + "_HL7";
                 String hl7Value = value.replace("-", "");
                 hl7Value = hl7Value.replace("T", "");
                 hl7Value = hl7Value.replace(":", "");
                 context.put(hl7Name, hl7Value);
            }
        }
        
        return context;
    }

    protected static String getFileContents(String fileName) throws IOException {
        InputStream resourceAsStream = getFileInputStream(fileName);
        StringWriter writer = new StringWriter();
        IOUtils.copy(resourceAsStream, writer, Charset.defaultCharset());
        String fileContents = writer.toString();
        return fileContents;
    }

    protected static InputStream getFileInputStream(String fileName) {
        String resourceName = "samples/" + fileName;
        return UnmarshalBatchHL7RouteBuilderTest.class.getClassLoader().getResourceAsStream(resourceName);
    }
}
