/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.fhir.validation;

import ca.uhn.fhir.context.FhirContext;
import ca.uhn.fhir.context.support.DefaultProfileValidationSupport;
import ca.uhn.fhir.parser.DataFormatException;
import ca.uhn.fhir.parser.IParser;
import ca.uhn.fhir.parser.StrictErrorHandler;
import ca.uhn.fhir.validation.FhirValidator;
import ca.uhn.fhir.validation.SingleValidationMessage;
import ca.uhn.fhir.validation.ValidationResult;
import org.hl7.fhir.common.hapi.validation.support.ValidationSupportChain;
import org.hl7.fhir.common.hapi.validation.validator.FhirInstanceValidator;
import org.hl7.fhir.r4.model.OperationOutcome;
import org.hl7.fhir.r4.model.Patient;
import org.hl7.fhir.r4bc1.model.BCAddress;
import org.hl7.fhir.r4bc1.model.BCPractitioner;
import org.junit.Test;

/**
 * Demo of Fhir validation
 * @author greg.perkins
 */
public class FhirValidationTest {

    @Test
    public void testParseFailure() {
        FhirContext ctx = FhirContext.forR4();

        // Create a parser and configure it to use the strict error handler
        IParser parser = ctx.newXmlParser();
        parser.setParserErrorHandler(new StrictErrorHandler());

        // This example resource is invalid, as Patient.active can not repeat
        String input = "<Patient><active value=\"true\"/><active value=\"false\"/></Patient>";

        // The following will throw a DataFormatException because of the StrictErrorHandler
        Exception dfe = null;
        try{
            parser.parseResource(Patient.class, input);
        }catch(DataFormatException e){
            dfe = e;
        }
        assert(dfe!=null);
    }

    // commented out as there's a structure issue with a model object on the classpath
    //HAPI-1716: Resource class[java.util.Date] does not contain any valid HAPI-FHIR annotations
    //@Test
    public void testValidateInstance() {
        FhirContext ctx = FhirContext.forR4();
        DefaultProfileValidationSupport dpvs = new DefaultProfileValidationSupport(ctx); 
        ValidationSupportChain validationSupportChain = new ValidationSupportChain(
                new DefaultProfileValidationSupport(ctx)
                ,new CustomStructureDefinitionValidationSupport(ctx)
        );

        FhirInstanceValidator instanceValidator = new FhirInstanceValidator(validationSupportChain);
        FhirValidator validator = ctx.newValidator();
        validator.registerValidatorModule(instanceValidator);

        /*
 * If you want, you can configure settings on the validator to adjust
 * its behaviour during validation
         */
        instanceValidator.setAnyExtensionsAllowed(true);

        BCAddress bcAddress = new BCAddress();
        bcAddress.setCity("Victoria");

        BCPractitioner bcPract = new BCPractitioner();
        bcPract.addAddress(bcAddress);

// Validate
        ValidationResult result = validator.validateWithResult(bcPract);

// Do we have any errors or fatal errors?
        System.out.println(result.isSuccessful()); // false

// Show the issues
        for (SingleValidationMessage next : result.getMessages()) {
            System.out.println(" Next issue " + next.getSeverity() + " - " + next.getLocationString() + " - " + next.getMessage());
        }
// Prints:
// Next issue ERROR - /f:Observation - Element '/f:Observation.status': minimum required = 1, but only found 0
// Next issue WARNING - /f:Observation/f:code - Unable to validate code "12345-6" in code system "http://loinc.org"

// You can also convert the result into an operation outcome if you 
// need to return one from a server
        OperationOutcome oo = (OperationOutcome) result.toOperationOutcome();
    }
}
