package ca.bc.gov.moh.hsa.plr.converter.plr.distribution;

import ca.bc.gov.health.plr.dto.provider.esb.AddressDto;
import ca.bc.gov.health.plr.dto.provider.esb.CollegeIdentifierDto;
import ca.bc.gov.health.plr.dto.provider.esb.ConditionsDto;
import ca.bc.gov.health.plr.dto.provider.esb.ConfidentialityIndicatorDto;
import ca.bc.gov.health.plr.dto.provider.esb.CredentialsDto;
import ca.bc.gov.health.plr.dto.provider.esb.DemographicDetailsDto;
import ca.bc.gov.health.plr.dto.provider.esb.DisciplinaryActionDto;
import ca.bc.gov.health.plr.dto.provider.esb.ElectronicAddressDto;
import ca.bc.gov.health.plr.dto.provider.esb.ExpertiseDto;
import ca.bc.gov.health.plr.dto.provider.esb.InformationRouteDto;
import ca.bc.gov.health.plr.dto.provider.esb.JurisdictionNameCodeDto;
import ca.bc.gov.health.plr.dto.provider.esb.NoteDto;
import ca.bc.gov.health.plr.dto.provider.esb.OrgNameDto;
import ca.bc.gov.health.plr.dto.provider.esb.PersonNameDto;
import ca.bc.gov.health.plr.dto.provider.esb.ProviderDetails;
import ca.bc.gov.health.plr.dto.provider.esb.ProviderRelationshipDto;
import ca.bc.gov.health.plr.dto.provider.esb.RegistryIdentifierDto;
import ca.bc.gov.health.plr.dto.provider.esb.RegistryUserRelationshipDto;
import ca.bc.gov.health.plr.dto.provider.esb.StatusDto;
import ca.bc.gov.health.plr.dto.provider.esb.TelecommunicationDto;
import ca.bc.gov.health.plr.dto.provider.esb.WorkLocationDetailsDto;
import ca.bc.gov.health.plr.dto.provider.esb.WorkLocationDto;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 *
 * @author Grant.Hodgins
 */
public class ProviderTestDataBuilder {

    public static final Date SYSTEM_LOW_DATE = new Date(0, 1, 1);
    public static final Date SYSTEM_HIGH_DATE = new Date(8000, 12, 30);

    private static ProviderDetails initFullProvider() {
        ProviderDetails result = new ProviderDetails();
        result.setPauthId(10L);
        result.setType("DEN");
        
        result.setJurisdiction(new JurisdictionNameCodeDto());
        result.getJurisdiction().setJurisdicationNameCode("jurisdictionNameCode");

        List<AddressDto> addresses = new ArrayList<>();
        addresses.add(getAddress());
        result.setAddresses(addresses);

        List<ConditionsDto> conditions = new ArrayList<>();
        conditions.add(getConditions());
        result.setConditions(conditions);

        List<CredentialsDto> credentials = new ArrayList<>();
        credentials.add(getCredentials());
        result.setCredentials(credentials);

        List<DemographicDetailsDto> demographicDetails = new ArrayList<>();
        demographicDetails.add(getDemographicDetails());
        result.setDemographicDetails(demographicDetails);

        List<DisciplinaryActionDto> disciplinaryActions = new ArrayList<>();
        disciplinaryActions.add(getDisciplinaryAction());
        result.setDisciplinaryActions(disciplinaryActions);

        List<ElectronicAddressDto> electronicAddress = new ArrayList<>();
        electronicAddress.add(getElectronicAddress());
        result.setElectronicAddresses(electronicAddress);

        List<ExpertiseDto> expertise = new ArrayList<>();
        expertise.add(getExpertise());
        result.setExpertise(expertise);

        List<CollegeIdentifierDto> identifier = new ArrayList<>();
        identifier.add(getIdentifier());
        result.setIdentifiers(identifier);

        List<InformationRouteDto> informationRoute = new ArrayList<>();
        informationRoute.add(getInformationRoute());
        result.setInformationRoutes(informationRoute);

        List<PersonNameDto> personName = new ArrayList<>();
        personName.add(getPersonName());
        result.setIndNames(personName);

        List<NoteDto> note = new ArrayList<>();
        note.add(getNote());
        result.setNotes(note);

        List<ProviderRelationshipDto> providerRelationship = new ArrayList<>();
        providerRelationship.add(getProviderRelationship());
        result.setProviderRelationships(providerRelationship);

        List<RegistryIdentifierDto> registryIdentifier = new ArrayList<>();
        registryIdentifier.add(getRegistryIdentifier());
        result.setRegistryIdentifiers(registryIdentifier);

        List<RegistryUserRelationshipDto> registryUserRelationship = new ArrayList<>();
        registryUserRelationship.add(getRegistryUserRelationship());
        result.setRegistryUserRelationships(registryUserRelationship);

        List<StatusDto> status = new ArrayList<>();
        status.add(getStatus());
        result.setStatuses(status);

        List<TelecommunicationDto> telecommunication = new ArrayList<>();
        telecommunication.add(getTelecommunication());
        result.setTelecommunication(telecommunication);

        List<WorkLocationDto> workLocations = new ArrayList<>();
        workLocations.add(getWorkLocation());
        result.setWorkLocationList(workLocations);

        return result;
    }

    public static ProviderDetails getPublicProviderDetails() {
        ProviderDetails result = initFullProvider();
        result.setConfidential(false);

        return result;
    }

    public static ProviderDetails getConfidentialProviderDetails() {
        ProviderDetails result = initFullProvider();
        result.setConfidential(true);
        List<ConfidentialityIndicatorDto> confidentialityIndicator = new ArrayList<>();
        confidentialityIndicator.add(getConfidentialityIndicator());
        //result.setConfidentialities(confidentialityIndicator);

        return result;
    }

    public static RegistryIdentifierDto getRegistryIdentifier() {
        RegistryIdentifierDto result = new RegistryIdentifierDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("MOH");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(100L);
        result.setIdentifier("CPN.UNIT-TEST.BC.PRS");
        result.setInvalidatedDate(null);
        result.setTypeCode("CPN");
        result.setTypeId(2929l);
        result.setType("Test Type");
        result.setUserChid("Test User Chiid");
        return result;
    }

    public static CollegeIdentifierDto getIdentifier() {
        CollegeIdentifierDto result = new CollegeIdentifierDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("HA3");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(1L);
        result.setIdentifier("CPN.00000008.BC.PRS");
        result.setInvalidatedDate(null);
        result.setType("Test Type");
        result.setTypeCode("RNID");
        result.setUserChid("Test User Chiid");
        return result;
    }

    public static PersonNameDto getPersonName() {
        PersonNameDto result = new PersonNameDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("MOH");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(1L);
        result.setInvalidatedDate(null);
        result.setType("Test Type");
        result.setTypeCode("CRED");
        result.setTypeId(997l);//credential name
        result.setUserChid("Test User Chiid JUNIT");

        result.setFirstName("First Name");
        result.setLastName("Last Name");
        result.setPreferred(true);
        result.setSecondName("Second Name");
        result.setSuffix("Suffix");
        result.setThirdName("Third Name");

        return result;
    }

    public static OrgNameDto getOrgName() {
        OrgNameDto result = new OrgNameDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("MOH");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setTypeId(997l);//credential name
        result.setUserChid("Test User Chiid JUNIT");

        result.setName("Short Name");
        result.setLongName("Long Name");
        result.setPreferred(true);

        return result;
    }

    public static DemographicDetailsDto getDemographicDetails() {
        DemographicDetailsDto result = new DemographicDetailsDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("MOH");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(1L);
        result.setInvalidatedDate(null);
        result.setType("Test Type");
        result.setTypeCode("TestTypeCode");
        result.setUserChid("Test User Chiid");

        result.setBirthCountry("Canada");
        result.setBirthCountryCode("CA");
        result.setBirthDate(new Date(1950, 1, 1));
        result.setBirthProvState("BC");
        result.setDeathDate(null);
        result.setGender("Male");
        result.setGenderCode("M");
        result.setGenderId(2332l);

        return result;
    }

    public static AddressDto getAddress() {
        AddressDto result = new AddressDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("RNA");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(1L);
        result.setInvalidatedDate(null);
        result.setType("Test Type");
        result.setTypeCode("M");
        result.setTypeId(2838l);  ///address type code Mailing

        result.setUserChid("Test User Chid JUNIT");

        result.setAddressLineFour("Address Line Four");
        result.setAddressLineOne("Address Line One");
        result.setAddressLineThree("Address Line Three");
        result.setAddressLineTwo("Address Line Two");
        result.setCity("Victoria");
        result.setCommunicationPurpose("Communication Purpose");
        result.setCommunicationPurposeCode("BC");
        result.setCommunicationPurposeId(2802l);
        result.setCountry("Canada");
        result.setCountryCode("CA");
        result.setCountryId(1239l);
        result.setProvinceOrStateTxt("British Columbia (BC)");
        result.setValidCpc(false);
        return result;
    }

    public static TelecommunicationDto getTelecommunication() {
        TelecommunicationDto result = new TelecommunicationDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("MOH");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(1L);
        result.setInvalidatedDate(null);
        result.setType("Test Type");
        result.setTypeCode("FAX");
        result.setTypeId(1161l);
        result.setUserChid("Test User Chiid JUNIT");

        result.setAreaCode("250");
        result.setCommunicationPurpose("Communication Purpose");
        result.setCommunicationPurposeCode("BC");
        result.setCommunicationPurposeId(4241l);
        result.setExtension("ext. 1234");
        result.setNumber("555-1234");

        return result;
    }

    public static ElectronicAddressDto getElectronicAddress() {
        ElectronicAddressDto result = new ElectronicAddressDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        //result.setDataOwnerCode("JUNIT");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(999L);
        result.setInvalidatedDate(null);
        result.setCommunicationPurposeId(2802l);
        result.setTypeId(2048l);
        result.setUserChid("TODO");
        result.setDataOwnerCode("MOH");
        result.setAddress("unittest@cgi.com");
        return result;
    }

    public static WorkLocationDto getWorkLocation() {
        WorkLocationDto result = new WorkLocationDto();
        result.setActive(true);
        result.setDataOwnerCode("MOH");
        result.setInvalidatedDate(null);
        result.setOperatorTypeId(null);
        result.setOperatorNameTxt(null);
        result.setOwnerTypeId(null);
        result.setOwnerNameTxt(null);
        result.setStatusId(null);
        result.setPauthId(null);
        result.setUserChid("Test User Chid_JUNIT");
        result.setPrimaryWorkLocationDetails(getWorkLocationDetails());
        result.setIdentifier(1234l);
        result.getAddresses().add(getAddress());
        result.getElectronicAddresses().add(getElectronicAddress());
        result.getTelecommunications().add(getTelecommunication());
        result.getInformationRoutes().add(getInformationRoute());
        result.getWorkLocationDetails().add(getWorkLocationDetails());
        return result;
    }

    public static WorkLocationDetailsDto getWorkLocationDetails() {
        WorkLocationDetailsDto result = new WorkLocationDetailsDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("Test Owner Code");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(1L);
        result.setInvalidatedDate(null);
        result.setType("Test Type");
        result.setTypeCode("PHARM");
        result.setUserChid("Test User Chiid");

        result.setAdditionalAddresseeInfo("Additional Addressee Info");
        result.setDefaultFlag(true);
        result.setName("Name");

        result.setId(-1l);
        
        return result;
    }

    public static StatusDto getStatus() {
        StatusDto result = new StatusDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("MOH");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(1L);
        result.setInvalidatedDate(null);
        result.setType("Test Type");
        result.setTypeCode("ACTIVE");
        result.setTypeId(4268l);

        result.setUserChid("UnitTest");

        result.setClassCode("LIC");
        result.setClassCodeId(2892l);
        result.setClassTxt("Class Text");
        result.setReason("PRAC");
        result.setReasonCode("ReasonCode");
        result.setReasonCodeId(4301l);

        return result;
    }

    public static ConditionsDto getConditions() {
        ConditionsDto result = new ConditionsDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("MOH");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(1L);
        result.setInvalidatedDate(null);
        result.setType("Test Type");
        result.setTypeCode("TestTypeCode");
        result.setTypeId(4310l);//EDUD education
        result.setUserChid("Test User Chiid");

        result.setIdentifier("Identifier");
        result.setRestrictionExplanationText("Restriction Explanation Text");
        result.setRestrictionFlag(true);

        return result;
    }

    public static ExpertiseDto getExpertise() {
        ExpertiseDto result = new ExpertiseDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("MOH");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(1L);
        result.setInvalidatedDate(null);
        result.setType("Test Type");
        result.setTypeCode("DPH");
        result.setUserChid("Test User Chiid");

        result.setRoleType("Role Type");
        result.setRoleTypeCode("PHARM");
        result.setSourcesCode("Sources Code");

        return result;
    }

    public static CredentialsDto getCredentials() {
        CredentialsDto result = new CredentialsDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("MOH");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(1L);
        result.setInvalidatedDate(null);
        result.setType("Test Type");
        result.setTypeCode("BD");
        result.setTypeId(1430l);
        result.setUserChid("Test User Chiid");

        result.setDesignation("BSc. in Fantastic Test");
        result.setGrantingInstitution("Queen's");
        result.setInstitutionCity("Victoria");
        result.setInstitutionCountry("Canada");
        result.setInstitutionCountryCode("CA");
        result.setInstitutionProvState("British Columbia");
        result.setInstitutionProvStateCode("BC");
        result.setRegistrationNumber("Reg Number");
        result.setYearIssued("2000");
        result.setEquivalencyFlag(true);
        
        result.setId(-1l);

        return result;
    }

    public static InformationRouteDto getInformationRoute() {
        InformationRouteDto result = new InformationRouteDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("MOH");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(1L);
        result.setInvalidatedDate(null);
        result.setType("Test Type");
        result.setTypeCode("TestTypeCode");
        result.setUserChid("Test User Chiid");

        result.getAddressDto().setId(Long.MIN_VALUE);
        result.getAddressDto().setType("Address Type");
        result.getAddressDto().setTypeCode("Address Type Code");
        result.getAddressDto().setTypeId(2838l);//mailing address
        result.getAddressDto().setDataOwnerCode("MOH");

        result.setCommunicationDataOwnerCode("Data Owner Code");
        result.setCommunicationPurpose("Communication Purpose");
        result.setCommunicationPurposeCode("Communication Purpose Code");
        result.setCommunicationPurposeId(1465l);// MC ministry contact

        result.setDefaultFlag(true);
        result.setDocumentType("Document Type");
        result.setDocumentTypeCode("Document Type Code");
        result.setDocumentTypeId(551l);//ECG

        //result.setMechanismType("Mechanism Type");
        //result.setMechanismTypeCode("Mechanism Type Code");
        //result.setMechanismTypeId(1281l);//courier

        result.setWorkLocationIdentifier(123456L);

        return result;
    }

    public static DisciplinaryActionDto getDisciplinaryAction() {
        DisciplinaryActionDto result = new DisciplinaryActionDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("MOH");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(1L);
        result.setInvalidatedDate(null);
        result.setType("Test Type");
        result.setTypeCode("TestTypeCode");
        result.setUserChid("Test User Chiid");

        result.setArchiveDate(new Date(2000, 1, 2));
        result.setDescription("Description");
        result.setDisplayFlag(true);
        result.setIdentifier("Identifier");

        return result;
    }

    public static ConfidentialityIndicatorDto getConfidentialityIndicator() {
        ConfidentialityIndicatorDto result = new ConfidentialityIndicatorDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        //  result.setDataOwnerCode("HA3");
        result.setDataOwnerCode("MOH");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(1L);
        result.setInvalidatedDate(null);
        result.setType("Test Type");
        result.setTypeCode("TestTypeCode");
        result.setUserChid("Test User Chiid");

        result.setConfidential(true);
        return result;
    }

    public static ProviderRelationshipDto getProviderRelationship() {
        ProviderRelationshipDto result = new ProviderRelationshipDto();
        result.setActive(true);
        result.setIdentifier("CPS15201");
        // 2820 is CPSID, "Physician ID Number" on WEB9D.
        result.setIdentifierTypeId(2820l);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("HA3");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(1L);
        result.setInvalidatedDate(null);
        result.setRelationshipTypeId(2672l);
        result.setRelationshipTypeCode("relationshipTypeCode");
        result.setTargetRelationshipTypeId(2672l);
        result.setType("Test Type");
        result.setTypeCode("TestTypeCode");
        result.setUserChid("Test User Chiid");

        return result;
    }

    public static RegistryUserRelationshipDto getRegistryUserRelationship() {
        RegistryUserRelationshipDto result = new RegistryUserRelationshipDto();
        result.setDataOwnerCode("MOH");
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        // 00002855 is a valid reg user ID on WEB9D.
        result.setRegistryUserChid("00002885");
        // 213l is RES (Research - Test Code) on WEB9D.
        result.setTypeId(213l);
        // 818 is GRS_CT_REG_USER_TYPE CONS on WEB9D.
        result.setRegUserTypeId(818l);
        return result;
    }

    public static NoteDto getNote() {
        NoteDto result = new NoteDto();
        result.setActive(true);
        result.setCreatedDate(new Date());
        result.setDataOwnerCode("HA3");
        result.setEffectiveEndDate(SYSTEM_HIGH_DATE);
        result.setEffectiveStartDate(SYSTEM_LOW_DATE);
        result.setEndReasonCode(null);
        result.setGenerationNum(1L);
        result.setInvalidatedDate(null);
        result.setType("Test Type");
        result.setTypeCode("TestTypeCode");
        result.setUserChid("Test User Chiid");

        result.setIdentifier("123456");
        result.setNoteText("Note Text");
        return result;
    }


}
