/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.converter.hl7ToDto.add;

import ca.bc.gov.moh.hsa.plr.converter.util.PLRTypeConverterTestConstants;
import ca.bc.gov.moh.hsa.plr.converter.hl7ToDto.HL7MessageCreator;
import java.io.StringWriter;
import java.io.StringReader;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;
import org.apache.velocity.Template;
import org.apache.velocity.VelocityContext;
import org.apache.velocity.app.VelocityEngine;
import org.hl7.v3.m4_0.PRPMIN301010MCCIMT000100Message;
import org.hl7.v3.m4_0.PRPMIN301011MCCIMT000300Message;
import org.xml.sax.InputSource;

/**
 *
 * @author conrad.gustafson
 */
public class HL7AddProviderMessageCreator extends HL7MessageCreator implements PLRTypeConverterTestConstants {

    public static PRPMIN301010MCCIMT000100Message setupAddProviderRequestMessage() throws JAXBException, IllegalArgumentException, IllegalAccessException {
        VelocityEngine ve = new VelocityEngine();
        ve.init();
        Template t = ve.getTemplate("src/test/resources/samples/MinimalFullAdd.xml");
        VelocityContext context;
        context = createVelocityContext();
        StringWriter writer = new StringWriter();
        t.merge(context, writer);

        final String raw = writer.toString();
//        System.out.println(raw);

        StringReader reader = new StringReader(raw);

        JAXBContext jaxbContext = JAXBContext.newInstance("org.hl7.v3.m4_0");
        Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();
        
        final JAXBElement unmarshal = (JAXBElement)jaxbUnmarshaller.unmarshal(new InputSource(reader));

        final PRPMIN301010MCCIMT000100Message addProviderRequest = (PRPMIN301010MCCIMT000100Message) unmarshal.getValue();

        return addProviderRequest;
    }

    public static PRPMIN301011MCCIMT000300Message setupAddProviderResponseMessage() throws JAXBException, IllegalArgumentException, IllegalAccessException {
        VelocityEngine ve = new VelocityEngine();
        ve.init();
        Template t = ve.getTemplate("src/test/resources/samples/hl7AddResponseReference.xml");
        VelocityContext context;
        context = createVelocityContext();
        StringWriter writer = new StringWriter();
        t.merge(context, writer);

        final String raw = writer.toString();
//        System.out.println(raw);

        StringReader reader = new StringReader(raw);

        JAXBContext jaxbContext = JAXBContext.newInstance("org.hl7.v3.m4_0");
        Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();
        
        final JAXBElement unmarshal = (JAXBElement)jaxbUnmarshaller.unmarshal(new InputSource(reader));

        final PRPMIN301011MCCIMT000300Message updateProviderResponse = (PRPMIN301011MCCIMT000300Message) unmarshal.getValue();

        return updateProviderResponse;
    }
}
