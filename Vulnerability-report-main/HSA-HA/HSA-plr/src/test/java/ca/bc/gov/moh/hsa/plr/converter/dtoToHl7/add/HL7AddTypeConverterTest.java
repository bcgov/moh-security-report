/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.converter.dtoToHl7.add;

import ca.bc.gov.health.plr.dto.esb.MaintainProviderResponse;
import ca.bc.gov.moh.hsa.plr.converter.PLRTypeConverter;
import ca.bc.gov.moh.hsa.plr.converter.dtoToHl7.HL7TypeConverterTest;
import ca.bc.gov.moh.hsa.plr.converter.hl7ToDto.add.HL7AddProviderMessageCreator;
import ca.bc.gov.moh.hsa.plr.converter.util.MaintainProviderResponseCreator;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.text.ParseException;
import javax.xml.bind.JAXBException;
import javax.xml.parsers.ParserConfigurationException;
import org.hl7.v3.m4_0.PRPMIN301011MCCIMT000300Message;
import org.junit.Test;
import org.w3c.dom.Document;
import org.xml.sax.SAXException;

public class HL7AddTypeConverterTest extends HL7TypeConverterTest {

    @Test
    public void testConvertMaintainProviderDTOToHL7Add_v40() throws ParseException,
            JAXBException, IllegalAccessException, ParserConfigurationException,
            SAXException, IOException, IllegalAccessException, InvocationTargetException {

        // setup
        MaintainProviderResponse response = MaintainProviderResponseCreator.setupMaintainProviderResponse();

        // execute
        PRPMIN301011MCCIMT000300Message hl7Message = PLRTypeConverter.convertMaintainProviderRequestDTOToAdd40(response);

        // assert 
        // Assert that the output is valid
        Document testDocument = marshalAdd40(hl7Message);
        String documentAsString = convertNodeToString(testDocument);

//        System.out.println(documentAsString);
        // Manually fix all the namespace crapola
        documentAsString = documentAsString.replace("ns2:", "");
        documentAsString = documentAsString.replace("xmlns:ns2=\"urn:hl7-org:v3\"", "xmlns=\"urn:hl7-org:v3\"");
        System.out.println(documentAsString);

        validateStream(documentAsString, SCHEMA_ADD_40_SCHEMA);

        // compare the reference document with the result
        Document referenceDocument = marshalAdd40(HL7AddProviderMessageCreator.setupAddProviderResponseMessage());
        assertXMLDocumentsSimilar(referenceDocument, testDocument);
    }
}
