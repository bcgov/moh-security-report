/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.hl7.fhir.r4bc1.model;

import static ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.ProviderFhirConstants.*;
import ca.uhn.fhir.model.api.annotation.Child;
import ca.uhn.fhir.model.api.annotation.Description;
import ca.uhn.fhir.model.api.annotation.ResourceDef;
import ca.uhn.fhir.util.ElementUtil;
import ca.uhn.fhir.model.api.annotation.Extension;
import java.util.ArrayList;
import java.util.List;
import org.hl7.fhir.r4.model.Address;
import org.hl7.fhir.r4.model.DateType;
import org.hl7.fhir.r4.model.Period;
import org.hl7.fhir.r4.model.Practitioner;

/**
 * General constraints on the Practitioner resource for use in the BC Provider
 * Registry project.
 *
 * @author dan.stepanov
 */
@ResourceDef(name = "BCPractitioner", profile = BC_PRACTITIONER_PROFILE_URL, id = "bc-practitioner")
public class BCPractitioner extends Practitioner {

    /**
     * A custom complex extension for BC Notes Extension with @Extension
     * annotation
     */
    @Child(name = "bc-note-extension", min = 0, max = -1)
    @Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-note-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "BC Note extension", formalDefinition = "BC Notes")
    protected List<BCNoteExtension> bcNoteExtension;

    public List<BCNoteExtension> getBcNoteExtension() {
        if (bcNoteExtension == null) {
            bcNoteExtension = new ArrayList<>();
        }
        return bcNoteExtension;
    }

    public void addBcNoteExtension(BCNoteExtension note) {
        this.getBcNoteExtension().add(note);
    }

    public void setBcNoteExtension(List<BCNoteExtension> myBcNoteExtension) {
        bcNoteExtension = myBcNoteExtension;
    }

//    @Child(name = "bc-birthtime-extension", type = {BCBirthplaceExtension.class})
//    @Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-birthtime-extension", definedLocally = false, isModifier = false)
//    @Description(shortDefinition = "BC Birth Time Extension")
//    protected DateType bcBirthtimeExtension;
//
//    public DateType getBcBirthtimeExtension() {
//        return bcBirthtimeExtension;
//    }
//
//    public void setBcBirthtimeExtension(DateType theBirthtime) {
//        bcBirthtimeExtension = theBirthtime;
//    }
    @Child(name = "bc-practitioner-deathdate-extension")
    @Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-practitioner-deathdate-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "BC Practitioner Date of Death Extension")
    protected DateType bcDeathDateExtension;

    public DateType getBcDeathDateExtension() {
        return bcDeathDateExtension;
    }

    public void setBcDeathDateExtension(DateType theDeathDateExtension) {
        bcDeathDateExtension = theDeathDateExtension;
    }

//    @Child(name = "period")
//    @Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-period-extension", definedLocally = false, isModifier = false)
//    @Description(shortDefinition = "Effective dates")
//    protected Period bcPeriodExtension;
//
//    public Period getBcPeriodExtension() {
//        if (bcPeriodExtension == null) {
//            bcPeriodExtension = new Period();
//        }
//        return bcPeriodExtension;
//    }
//
//    public void setBcPeriodExtension(Period thePeriod) {
//        bcPeriodExtension = thePeriod;
//    }
    /**
     * A custom complex extension for BC License Status Extension with
     *
     * @Extension annotation
     */
    @Child(name = "bc-license-status-extension", min = 0, max = -1)
    @Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-license-status-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "BC License Status Extension")
    protected List<BCLicenseStatusExtension> bcLicenseStatusExtension;

    public List<BCLicenseStatusExtension> getBcLicenseStatusExtension() {
        if (bcLicenseStatusExtension == null) {
            bcLicenseStatusExtension = new ArrayList<>();
        }
        return bcLicenseStatusExtension;
    }

    public void setBcLicenseStatusExtension(List<BCLicenseStatusExtension> myBCLicenseStatusExtension) {
        bcLicenseStatusExtension = myBCLicenseStatusExtension;
    }

    public void addBcLicenseStatusExtension(BCLicenseStatusExtension bcLicenseStatus) {
        this.getBcLicenseStatusExtension().add(bcLicenseStatus);
    }

    /**
     * A custom complex extension for BC Birthplace Extension with @Extension
     * annotation
     */
    @Child(name = "bc-birthplace-extension", type = {Address.class}, min = 0, max = 1)
    @Extension(url = BC_PROVIDER_BIRTHPLACE_EXTENSION_URL, definedLocally = false, isModifier = false)
    @Description(shortDefinition = "BC Birth Place Extension")
    protected Address bcBirthplaceExtension;

    public Address getBcBirthplaceExtension() {
        if (bcBirthplaceExtension == null) {
            bcBirthplaceExtension = new Address();
        }
        return bcBirthplaceExtension;
    }

    public void setBcBirthplaceExtension(Address myBCBirthplaceExtension) {
        bcBirthplaceExtension = myBCBirthplaceExtension;
    }

    @Child(name = "endReason_OwnerCode", type = {BCEndReasonCode_OwnerCodeExtension.class}, min = 0, max = 1)
    @ca.uhn.fhir.model.api.annotation.Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-end-reason-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "End reason code")
    protected BCEndReasonCode_OwnerCodeExtension endReason_OwnerCode;

    public BCEndReasonCode_OwnerCodeExtension getEndReason_OwnerCode() {
        if (endReason_OwnerCode == null) {
            endReason_OwnerCode = new BCEndReasonCode_OwnerCodeExtension();
        }
        return endReason_OwnerCode;
    }

    public void setEndReason_OwnerCode(BCEndReasonCode_OwnerCodeExtension theErcAndOwner) {
        endReason_OwnerCode = theErcAndOwner;
    }

    @Child(name = "period")
    @Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-period-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "Effective dates")
    protected Period period;

    public Period getPeriod() {
        if (period == null) {
            period = new Period();
        }
        return period;
    }

    public void setPeriod(Period thePeriod) {
        period = thePeriod;
    }

    /**
     * A custom complex extension for BC Disciplinary action Extension with
     *
     * @Extension annotation
     */
    @Child(name = "bcDisciplinaryActionExtension", min = 0, max = -1)
    @Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-practitioner-disciplinary-action-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "BC Disciplinary Action extension", formalDefinition = "BC Disciplinary Actions")
    protected List<BCDisciplinaryActionExtension> bcDisciplinaryActionExtension;

    public List<BCDisciplinaryActionExtension> getBcDisciplinaryActionExtension() {
        if (bcDisciplinaryActionExtension == null) {
            bcDisciplinaryActionExtension = new ArrayList<>();
        }
        return bcDisciplinaryActionExtension;
    }

    public void addBcDisciplinaryActionExtension(BCDisciplinaryActionExtension disciplinaryAction) {
        this.getBcDisciplinaryActionExtension().add(disciplinaryAction);
    }

    public void setBcDisciplinaryActionExtension(List<BCDisciplinaryActionExtension> myBcDisciplinaryActionExtension) {
        bcDisciplinaryActionExtension = myBcDisciplinaryActionExtension;
    }

    /**
     * A custom complex extension for BC Condition Extension with @Extension
     * annotation
     */
    @Child(name = "bcConditionExtension", min = 0, max = -1)
    @Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-practitioner-condition-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "BC Condition extension", formalDefinition = "BC Condition")
    protected List<BCConditionExtension> bcConditionExtension;

    public List<BCConditionExtension> getBcConditionExtension() {
        if (bcConditionExtension == null) {
            bcConditionExtension = new ArrayList<>();
        }
        return bcConditionExtension;
    }

    public void addBcConditionExtension(BCConditionExtension condition) {
        this.getBcConditionExtension().add(condition);
    }

    public void setBcConditionExtension(List<BCConditionExtension> myBcConditionExtension) {
        bcConditionExtension = myBcConditionExtension;
    }

    /**
     * A custom complex extension for BC Confidentiality Extension with
     *
     * @Extension annotation
     */
    @Child(name = "bcConfidentialityExtension", min = 0, max = -1)
    @Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-practitioner-confidentiality-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "BC Confidentiality extension", formalDefinition = "BC Confidentiality")
    protected List<BCConfidentialityExtension> bcConfidentialityExtension;

    public List<BCConfidentialityExtension> getBcConfidentialityExtension() {
        if (bcConfidentialityExtension == null) {
            bcConfidentialityExtension = new ArrayList<>();
        }
        return bcConfidentialityExtension;
    }

    public void addBcConfidentialityExtension(BCConfidentialityExtension confidentiality) {
        this.getBcConfidentialityExtension().add(confidentiality);
    }

    public void setBcConfidentialityExtension(List<BCConfidentialityExtension> myBcConfidentialityExtension) {
        bcConfidentialityExtension = myBcConfidentialityExtension;
    }

    /**
     * A custom complex extension for BC Practitioner To Practitioner
     * Relationship Extension with @Extension annotation
     */
    @Child(name = "bcPractitionerRelationshipExtension", min = 0, max = -1)
    @Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-practitioner-relationship-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "BC Practitioner Relationship Extension", formalDefinition = "BC Practitioner To Practitioner Relationship")
    protected List<BCPractitionerRelationshipExtension> bcPractitionerRelationshipExtension;

    public List<BCPractitionerRelationshipExtension> getBcPractitionerRelationshipExtension() {
        if (bcPractitionerRelationshipExtension == null) {
            bcPractitionerRelationshipExtension = new ArrayList<>();
        }
        return bcPractitionerRelationshipExtension;
    }

    public void addBcPractitionerRelationshipExtension(BCPractitionerRelationshipExtension bcPractitionerRelationship) {
        this.getBcPractitionerRelationshipExtension().add(bcPractitionerRelationship);
    }

    public void setBcPractitionerRelationshipExtension(List<BCPractitionerRelationshipExtension> myBcPractitionerRelationshipExtension) {
        bcPractitionerRelationshipExtension = myBcPractitionerRelationshipExtension;
    }

    public void addQualificationOrganization(BCOrganization bcOrg) {
        contained.add((BCOrganization) bcOrg);
    }

    /**
     * It is important to override the isEmpty() method, adding a check for any
     * newly added fields.
     */
    @Override
    public boolean isEmpty() {
        return super.isEmpty() && ElementUtil.isEmpty(active, gender, bcNoteExtension,
                bcDeathDateExtension, bcLicenseStatusExtension, bcDisciplinaryActionExtension,
                bcBirthplaceExtension, contained, qualification, birthDate,
                bcConditionExtension, bcConfidentialityExtension, bcPractitionerRelationshipExtension);
    }

    @Override
    public BCPractitioner copy() {
        BCPractitioner copy = new BCPractitioner();
        copy.active = active;
        copy.gender = gender;
        copy.period = period;
        copy.bcConditionExtension = bcConditionExtension;
        copy.bcDeathDateExtension = bcDeathDateExtension;
        copy.bcLicenseStatusExtension = bcLicenseStatusExtension;
        copy.bcNoteExtension = bcNoteExtension;
        copy.bcBirthplaceExtension = bcBirthplaceExtension;
        copy.contained = contained;
        copy.qualification = qualification;
        copy.birthDate = birthDate;
        copy.bcDisciplinaryActionExtension = bcDisciplinaryActionExtension;
        copy.bcConfidentialityExtension = bcConfidentialityExtension;
        copy.bcPractitionerRelationshipExtension = bcPractitionerRelationshipExtension;
        return copy;
    }

}
