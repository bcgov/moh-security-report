/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.hl7.fhir.r4bc1.model;

import ca.uhn.fhir.model.api.annotation.Child;
import ca.uhn.fhir.model.api.annotation.DatatypeDef;
import ca.uhn.fhir.model.api.annotation.Description;
import org.hl7.fhir.r4.model.CodeableConcept;
import org.hl7.fhir.r4.model.ContactPoint;
import org.hl7.fhir.r4.model.StringType;

/**
 *
 * @author jonathan.wiebe
 */
@DatatypeDef(name = "BCContactPoint")
public class BCContactPoint extends ContactPoint {
    
    @Child(name = "country")
    @ca.uhn.fhir.model.api.annotation.Extension(url = "http://hl7.org/fhir/StructureDefinition/contactpoint-country", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "Country")
    private StringType country;
        
    @Child(name = "areaCode")
    @ca.uhn.fhir.model.api.annotation.Extension(url = "http://hl7.org/fhir/StructureDefinition/contactpoint-area", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "Area Code")
    private StringType areaCode;
        
    @Child(name = "localNumber")
    @ca.uhn.fhir.model.api.annotation.Extension(url = "http://hl7.org/fhir/StructureDefinition/contactpoint-local", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "Local Number")
    private StringType localNumber;
        
    @Child(name = "numberExtension")
    @ca.uhn.fhir.model.api.annotation.Extension(url = "http://hl7.org/fhir/StructureDefinition/contactpoint-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "Extension")
    private StringType numberExtension;

    public StringType getCountry() {
        return country;
    }

    public void setCountry(StringType country) {
        this.country = country;
    }

    public StringType getAreaCode() {
        return areaCode;
    }

    public void setAreaCode(StringType areaCode) {
        this.areaCode = areaCode;
    }

    public StringType getLocalNumber() {
        return localNumber;
    }

    public void setLocalNumber(StringType localNumber) {
        this.localNumber = localNumber;
    }

    public StringType getNumberExtension() {
        return numberExtension;
    }

    public void setNumberExtension(StringType extension) {
        this.numberExtension = extension;
    }
        
    @Child(name = "endReason_OwnerCode", type = {BCEndReasonCode_OwnerCodeExtension.class}, min = 0, max = 1)
    @ca.uhn.fhir.model.api.annotation.Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-end-reason-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "End reason code")
    protected BCEndReasonCode_OwnerCodeExtension endReason_OwnerCode;

    public BCEndReasonCode_OwnerCodeExtension getEndReason_OwnerCode() {
        if (endReason_OwnerCode == null) {
            endReason_OwnerCode = new BCEndReasonCode_OwnerCodeExtension();
        }
        return endReason_OwnerCode;
    }

    public void setEndReason_OwnerCode(BCEndReasonCode_OwnerCodeExtension theErcAndOwner) {
        endReason_OwnerCode = theErcAndOwner;
    }
    
    @Child(name = "bc-communication-purpose-code-extension", type = {BCPurposeCodeExtension.class}, min = 0, max = 1)
    @ca.uhn.fhir.model.api.annotation.Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-communication-purpose-code-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "BC extension for communication purpose codes")
    protected CodeableConcept bcPurposeCodeExtension;

    public CodeableConcept getBcPurposeCodeExtension() {
        if (bcPurposeCodeExtension == null) {
            bcPurposeCodeExtension = new CodeableConcept(); // TODO factory
        }
        return bcPurposeCodeExtension;
    }

    public void setBcPurposeCodeExtension(CodeableConcept theBcPurposeCodeExtension) {
        bcPurposeCodeExtension = theBcPurposeCodeExtension;
    }
}
