/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.hl7.fhir.r4bc1.model;

import ca.uhn.fhir.model.api.annotation.Block;
import ca.uhn.fhir.model.api.annotation.Child;
import ca.uhn.fhir.model.api.annotation.Description;
import ca.uhn.fhir.model.api.annotation.Extension;
import ca.uhn.fhir.util.ElementUtil;
import org.hl7.fhir.r4.model.BooleanType;
import org.hl7.fhir.r4.model.DateType;
import org.hl7.fhir.r4.model.Identifier;
import org.hl7.fhir.r4.model.Period;
import org.hl7.fhir.r4.model.StringType;

/**
 * Custom extension BC Disciplinary Actions for the BC Practitioner profile
 * resources for use in the BC Provider Registry project.
 *
 * @author dan.stepanov
 */
@Block
public class BCDisciplinaryActionExtension extends BCCommonExtensions {

    @Child(name = "disciplinaryIdentifier")
    @Extension(url = "identifier", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "disciplinary identifier")
    private Identifier disciplinaryIdentifier;

    @Child(name = "disciplinaryDescription")
    @Extension(url = "description", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "disciplinary description")
    private StringType disciplinaryDescription;

    @Child(name = "displayFlag")
    @Extension(url = "displayFlag", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "display flag")
    private BooleanType displayFlag;

    @Child(name = "archiveDate")
    @Extension(url = "archiveDate", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "archive date")
    protected DateType archiveDate;

    public DateType getArchiveDate() {
        return archiveDate;
    }

    public Identifier getDisciplinaryIdentifier() {
        if (disciplinaryIdentifier == null) {
            disciplinaryIdentifier = new Identifier();
        }
        return disciplinaryIdentifier;
    }

    public StringType getDisciplinaryDescription() {
        if (disciplinaryDescription == null) {
            disciplinaryDescription = new StringType("");
        }
        return disciplinaryDescription;
    }

    public BooleanType getDisplayFlag() {
        return displayFlag;
    }

    public void setDisciplinaryIdentifier(Identifier theIdentifier) {
        disciplinaryIdentifier = theIdentifier;
    }

    public void setDisciplinaryDescription(StringType theDescription) {
        disciplinaryDescription = theDescription;
    }

    public void setDisplayFlag(BooleanType theDisplayFlag) {
        displayFlag = theDisplayFlag;
    }

    public void setArchiveDate(DateType theArchiveDate) {
        archiveDate = theArchiveDate;
    }

    @Child(name = "period")
    @Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-period-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "Effective dates")
    protected Period period;

    public Period getPeriod() {
        if (period == null) {
            period = new Period();
        }
        return period;
    }

    public void setPeriod(Period thePeriod) {
        period = thePeriod;
    }

    @Override
    public BCDisciplinaryActionExtension copy() {
        BCDisciplinaryActionExtension copy = new BCDisciplinaryActionExtension();
        copy.disciplinaryIdentifier = disciplinaryIdentifier;
        copy.disciplinaryDescription = disciplinaryDescription;
        copy.displayFlag = displayFlag;
        copy.archiveDate = archiveDate;
        copy.period = period;
        return copy;
    }

    @Override
    public boolean isEmpty() {
        return super.isEmpty() && ElementUtil.isEmpty(disciplinaryIdentifier, disciplinaryDescription, displayFlag, archiveDate, period);
    }

}
