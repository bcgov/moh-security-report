/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.hl7.fhir.r4bc1.model;

import ca.uhn.fhir.model.api.annotation.Block;
import ca.uhn.fhir.model.api.annotation.Child;
import ca.uhn.fhir.model.api.annotation.Description;
import ca.uhn.fhir.model.api.annotation.Extension;
import ca.uhn.fhir.util.ElementUtil;
import org.hl7.fhir.r4.model.Identifier;
import org.hl7.fhir.r4.model.Period;
import org.hl7.fhir.r4.model.StringType;

/**
 * Custom extension BC Note for the Practitioner/Location/Organization BC
 * profile resources for use in the BC Provider Registry project.
 *
 * @author dan.stepanov
 */
@Block
public class BCNoteExtension extends BCCommonExtensions {

    @Child(name = "noteIdentifier")
    @Extension(url = "identifier", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "note identifier")
    private Identifier noteIdentifier;

    @Child(name = "noteText")
    @Extension(url = "text", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "note text")
    private StringType noteText;

    public Identifier getNoteIdentifier() {
        if (noteIdentifier == null) {
            noteIdentifier = new Identifier();
        }
        return noteIdentifier;
    }

    public StringType getNoteText() {
        if (noteText == null) {
            noteText = new StringType("");
        }
        return noteText;
    }

    public void setNoteIdentifier(Identifier theNoteIdentifier) {
        noteIdentifier = theNoteIdentifier;
    }

    public void setNoteText(StringType theNoteText) {
        noteText = theNoteText;
    }

    @Override
    public BCNoteExtension copy() {
        BCNoteExtension copy = new BCNoteExtension();
        copy.noteIdentifier = noteIdentifier;
        copy.noteText = noteText;
        copy.period = period;
        return copy;
    }

    @Child(name = "period")
    @Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-period-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "Effective dates")
    protected Period period;

    public Period getPeriod() {
        if (period == null) {
            period = new Period();
        }
        return period;
    }

    public void setPeriod(Period thePeriod) {
        period = thePeriod;
    }

    @Override
    public boolean isEmpty() {
        return super.isEmpty() && ElementUtil.isEmpty(noteIdentifier, noteText, period);
    }

}
