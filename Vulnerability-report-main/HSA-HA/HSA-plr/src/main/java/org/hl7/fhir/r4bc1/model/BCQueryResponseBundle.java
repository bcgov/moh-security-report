/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.hl7.fhir.r4bc1.model;

import ca.uhn.fhir.model.api.annotation.Child;
import ca.uhn.fhir.model.api.annotation.Description;
import ca.uhn.fhir.model.api.annotation.ResourceDef;
import ca.uhn.fhir.util.ElementUtil;
import org.hl7.fhir.r4.model.Bundle;
import org.hl7.fhir.r4.model.OperationOutcome;

/**
 * General constraints on the BCQueryResponseBundle - this profile sets the
 * minimum expectations for a Bundle resource that submits BCPractitionerBundle
 * and OperationOutcome information for use in the BC Provider Registry project.
 *
 * @author dan.stepanov
 */
@ResourceDef(name = "BCQueryResponseBundle", id = "bc-query-response-bundle")
public class BCQueryResponseBundle extends Bundle {

    public void addBcPractitionerBundle(BCPractitionerBundle bcPractitionerBundle) {
        this.addEntry().setResource(bcPractitionerBundle);
    }
    
    public void addBcOrganizationBundle(BCOrganizationBundle bcOrganizationBundle) {
        this.addEntry().setResource(bcOrganizationBundle);
    }

    @Child(name = "bcOperationOutcomeQueryResponse", type = {OperationOutcome.class})
    @Description(shortDefinition = "OperationOutcomeQueryResponse", formalDefinition = "OperationOutcomeQueryResponse")
    protected OperationOutcome bcOperationOutcomeQueryResponse;

    public OperationOutcome getBcOperationOutcomeQueryResponse() {
        return bcOperationOutcomeQueryResponse;
    }

    public void setBcOperationOutcomeQueryResponse(OperationOutcome bcOperationOutcomeQueryResponse) {
        this.bcOperationOutcomeQueryResponse = bcOperationOutcomeQueryResponse;
    }

    public void addBcOperationOutcomeQueryResponse(OperationOutcome bcOperationOutcomeQueryResponse) {
        this.addEntry().setResource(bcOperationOutcomeQueryResponse);
    }

    protected Bundle.BundleType bcQueryResponseBundleType;

    public Bundle.BundleType getBcQueryResponseBundleTypeBundleType() {
        return bcQueryResponseBundleType.SEARCHSET;
    }

    /**
     * It is important to override the isEmpty() method, adding a check for any
     * newly added fields.
     *
     * @return boolean
     */
    @Override
    public boolean isEmpty() {
        return super.isEmpty() && ElementUtil.isEmpty(bcOperationOutcomeQueryResponse, bcQueryResponseBundleType);
    }

    @Override
    public BCQueryResponseBundle copy() {
        BCQueryResponseBundle copy = new BCQueryResponseBundle();
        copy.bcQueryResponseBundleType = bcQueryResponseBundleType;
        copy.bcOperationOutcomeQueryResponse = bcOperationOutcomeQueryResponse;
        return copy;
    }

}
