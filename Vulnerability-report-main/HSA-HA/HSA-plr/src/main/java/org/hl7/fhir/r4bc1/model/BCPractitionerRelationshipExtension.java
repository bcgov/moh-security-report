/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.hl7.fhir.r4bc1.model;

import ca.uhn.fhir.model.api.annotation.Block;
import ca.uhn.fhir.model.api.annotation.Child;
import ca.uhn.fhir.model.api.annotation.Description;
import ca.uhn.fhir.model.api.annotation.Extension;
import ca.uhn.fhir.util.ElementUtil;
import org.hl7.fhir.r4.model.CodeableConcept;
import org.hl7.fhir.r4.model.Period;
import org.hl7.fhir.r4.model.Reference;

/**
 * Custom extension BC Practitioner to Practitioner Relationship for the BC
 * Practitioner profile resources for use in the BC Provider Registry project.
 *
 * @author dan.stepanov
 */
@Block
public class BCPractitionerRelationshipExtension extends BCCommonExtensions {

    @Child(name = "bc-relationship-type-extension")
    @Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-relationship-type-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "relationship type")
    private CodeableConcept relationshipType;
    
    @Child(name = "practitioner")
    @Extension(url = "practitioner", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "reference practitioner")
    private Reference bcPractitionerRef;


    public void setBcPractitionerRef(Reference myPractitionerRef) {
        this.bcPractitionerRef = myPractitionerRef;
    }

    
    public CodeableConcept getRelationshipType() {
        if (relationshipType == null) {
            relationshipType = new CodeableConcept();
        }
        return relationshipType;
    }
    
    public Reference getBcPractitionerRef() {
        if (bcPractitionerRef == null) {
            bcPractitionerRef = new Reference();
        }
        return bcPractitionerRef;
    }

    public void setRelationshipType(CodeableConcept theConditionCode) {
        relationshipType = theConditionCode;
    }

    @Child(name = "period")
    @Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-period-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "Effective dates")
    protected Period period;

    public Period getPeriod() {
        if (period == null) {
            period = new Period();
        }
        return period;
    }

    public void setPeriod(Period thePeriod) {
        period = thePeriod;
    }

    @Override
    public BCPractitionerRelationshipExtension copy() {
        BCPractitionerRelationshipExtension copy = new BCPractitionerRelationshipExtension();
        copy.relationshipType = relationshipType;
        copy.period = period;
        copy.bcPractitionerRef = bcPractitionerRef;
        return copy;
    }

    @Override
    public boolean isEmpty() {
        return super.isEmpty() && ElementUtil.isEmpty(relationshipType, period, bcPractitionerRef);
    }

}
