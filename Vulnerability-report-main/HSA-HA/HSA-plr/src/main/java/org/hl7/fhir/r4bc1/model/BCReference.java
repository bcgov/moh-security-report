/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.hl7.fhir.r4bc1.model;

import ca.uhn.fhir.model.api.annotation.Child;
import ca.uhn.fhir.model.api.annotation.DatatypeDef;
import ca.uhn.fhir.model.api.annotation.Description;
import ca.uhn.fhir.model.api.annotation.Extension;
import ca.uhn.fhir.util.ElementUtil;
import org.hl7.fhir.r4.model.CodeableConcept;
import org.hl7.fhir.r4.model.Reference;

/**
 * New Data Type Profile for BC Reference to include extensions and use in the
 * BC Provider Registry project.
 *
 * @author dan.stepanov
 */
@DatatypeDef(name = "BCReference")
public class BCReference extends Reference {
    
    @Child(name = "endReason_OwnerCode", type = {BCEndReasonCode_OwnerCodeExtension.class}, min = 0, max = 1)
    @ca.uhn.fhir.model.api.annotation.Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-end-reason-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "End reason code")
    protected BCEndReasonCode_OwnerCodeExtension endReason_OwnerCode;

    public BCEndReasonCode_OwnerCodeExtension getEndReason_OwnerCode() {
        if (endReason_OwnerCode == null) {
            endReason_OwnerCode = new BCEndReasonCode_OwnerCodeExtension();
        }
        return endReason_OwnerCode;
    }

    public void setEndReason_OwnerCode(BCEndReasonCode_OwnerCodeExtension theErcAndOwner) {
        endReason_OwnerCode = theErcAndOwner;
    }

    /**
     * A custom complex extension for BC Practitioner relationship Extension
     * with @Extension annotation
     */
    @Child(name = "bc-relationship-type-extension")
    @Extension(url = "http://hl7.org/fhir/ca-bc/provider/StructureDefinition/bc-relationship-type-extension", definedLocally = false, isModifier = false)
    @Description(shortDefinition = "relationship type")
    private CodeableConcept relationshipType;

    public CodeableConcept getRelationshipType() {
        if (relationshipType == null) {
            relationshipType = new CodeableConcept();
        }
        return relationshipType;
    }

    public void setRelationshipType(CodeableConcept theConditionCode) {
        relationshipType = theConditionCode;
    }

    @Override
    public BCReference copy() {
        BCReference copy = new BCReference();
        copy.endReason_OwnerCode = endReason_OwnerCode;
        copy.relationshipType = relationshipType;
        return copy;
    }

    @Override
    public boolean isEmpty() {
        return super.isEmpty() && ElementUtil.isEmpty(endReason_OwnerCode, relationshipType);
    }
}
