/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.hl7.fhir.r4bc1.model;

import static ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.ProviderFhirConstants.BC_PRACTITIONER_BUNDLE_PROFILE_URL;
import ca.uhn.fhir.model.api.annotation.Child;
import ca.uhn.fhir.model.api.annotation.Description;
import ca.uhn.fhir.model.api.annotation.ResourceDef;
import ca.uhn.fhir.util.ElementUtil;
import org.hl7.fhir.r4.model.Bundle;

/**
 * General constraints on the BCPractitionerBundle - this profile sets the
 * minimum expectations for a Bundle resource that submits Practitioner and
 * PractitionerRole information for use in the BC Provider Registry project.
 *
 * @author dan.stepanov
 */
@ResourceDef(name = "BCPractitionerBundle", profile = BC_PRACTITIONER_BUNDLE_PROFILE_URL, id = "bc-practitioner-bundle")
public class BCPractitionerBundle extends Bundle {

    @Child(name = "bcPractitioner", type = {BCPractitioner.class})
    @Description(shortDefinition = "BCPractitioner", formalDefinition = "BCPractitioner")
    protected BCPractitioner bcPractitioner;

    public BCPractitioner getBcPractitioner() {
        return bcPractitioner;
    }

    public void setBcPractitioner(BCPractitioner bcPractitioner) {
        this.bcPractitioner = bcPractitioner;
    }

    public void addBcPractitionerRole(BCPractitionerRole bcPractitionerRole) {
        this.addEntry().setResource(bcPractitionerRole);
    }

    protected BundleType bcPractitionerBundleType;

    public BundleType getBcPractitionerBundleType() {
        return bcPractitionerBundleType.TRANSACTION;
    }

    /**
     * It is important to override the isEmpty() method, adding a check for any
     * newly added fields.
     *
     * @return boolean
     */
    @Override
    public boolean isEmpty() {
        return super.isEmpty() && ElementUtil.isEmpty(bcPractitioner, bcPractitionerBundleType);
    }

    @Override
    public BCPractitionerBundle copy() {
        BCPractitionerBundle copy = new BCPractitionerBundle();
        copy.bcPractitionerBundleType = bcPractitionerBundleType;
        copy.bcPractitioner = bcPractitioner;
        return copy;
    }

}
