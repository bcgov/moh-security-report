/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.converter;

import ca.bc.gov.health.plr.dto.esb.BatchRequest;
import ca.bc.gov.health.plr.dto.esb.BatchResponse;
import ca.bc.gov.moh.hsa.plr.converter.dtotoprsxml.PLREntityToPLRXMLTypeConverter;
import ca.bc.gov.moh.hsa.plr.converter.prsXmlToDto.PLRXMLToEntityConverter;
import ca.bc.gov.moh.hsa.plr.converter.dtotohl7.PLREntityToHL7AddTypeConverter;
import ca.bc.gov.moh.hsa.plr.converter.dtotohl7.PLREntityToHL7UpdateTypeConverter;
import ca.bc.gov.health.plr.dto.esb.MaintainProviderRequest;
import ca.bc.gov.health.plr.dto.esb.MaintainProviderResponse;
import ca.bc.gov.health.plr.dto.esb.QueryRequest;
import ca.bc.gov.moh.hsa.plr.converter.hl7todto40.AddProviderHL7ToEntityConverter;
import ca.bc.gov.moh.hsa.plr.converter.hl7todto40.UpdateProviderHL7ToEntityConverter;
import ca.bc.gov.moh.hsa.plr.converter.hl7todto416.HL7_416_ToEntityConverter;
import ca.bc.gov.moh.hsa.plr.entity.transaction.MaintainProviderRequestEntity;
import ca.bc.gov.moh.hsa.plr.entity.transaction.MaintainProviderResponseEntity;
import ca.bc.gov.moh.hsa.plr.entity.transaction.QueryRequestEntity;
import ca.bc.gov.moh.hsa.plr.entity.transaction.QueryResponseEntity;
import java.net.URISyntaxException;
import java.text.ParseException;
import org.apache.camel.Converter;
import org.hl7.v3.m4_0.PRPMIN301010MCCIMT000100Message;
import org.hl7.v3.m4_0.PRPMIN301011MCCIMT000300Message;
import org.hl7.v3.m4_0.PRPMIN303010MCCIMT000100Message;
import org.hl7.v3.m4_0.PRPMIN303011MCCIMT000300Message;
import org.hl7.v3.m4_0.QUMTIN200002MCCIMT000300Message;
import org.hl7.v3.m4_16.PRPMIN306010;
import ca.bc.gov.health.plr.dto.esb.QueryResponse;
import ca.bc.gov.moh.hsa.plr.converter.dtotohl7.PLREntityToHL7BatchTypeConverter;
import ca.bc.gov.moh.hsa.plr.converter.dtotohl7416.PLREntityToHL7QueryResponseTypeConverter;
import ca.bc.gov.moh.hsa.plr.converter.hl7todto40.BatchRequestHL7ToEntityConverter;
import ca.bc.gov.moh.hsa.plr.entity.transaction.BatchRequestEntity;
import ca.bc.gov.moh.hsa.plr.entity.transaction.BatchResponseEntity;
import static ca.bc.gov.moh.hsa.util.audit.TransactionIDAssigner.TRANSACTION_ID_HEADER_KEY;
import java.lang.reflect.InvocationTargetException;
import javax.xml.bind.JAXBException;
import javax.xml.parsers.ParserConfigurationException;
import org.apache.camel.Exchange;
import org.hl7.v3.m4_0.MCCIMT200100Batch;
import org.hl7.v3.m4_16.PRPMIN306011UV01;
import prs2.whic.org.GRSMESSAGES;

/**
 *
 * @author conrad.gustafson
 */
@Converter
public class PLRTypeConverter {

//    @Converter
//    public static MaintainProviderRequest convertGRSMESSAGEToMaintainProviderRequestDTO(GRSMESSAGE grsMessage) throws ParseException {
//        MaintainProviderRequestEntity convertGrsMessageToEntity = PLRXMLToEntityConverter.convertGrsMessageToEntity(grsMessage);
//        return PLREntityToDtoTypeConverter.convertMaintainProviderTransactionRequestToDTO(convertGrsMessageToEntity);
//    }
    @Converter
    public static MaintainProviderRequest convertPRPMIN301010ToMaintainProviderRequestDTO(PRPMIN301010MCCIMT000100Message addProviderMessage) throws ParseException, URISyntaxException {
        AddProviderHL7ToEntityConverter converter = new AddProviderHL7ToEntityConverter();
        MaintainProviderRequestEntity entity = converter.convertPRPMIN301010ToEntity(addProviderMessage);
        return PLREntityToDtoTypeConverter.convertMaintainProviderTransactionRequestToDTO(entity);
    }

    @Converter
    public static MaintainProviderRequest convertPRPMIN303010ToMaintainProviderRequestDTO(PRPMIN303010MCCIMT000100Message addProviderMessage) throws ParseException, URISyntaxException {
        UpdateProviderHL7ToEntityConverter converter = new UpdateProviderHL7ToEntityConverter();
        MaintainProviderRequestEntity entity = converter.convertPRPMIN303010ToEntity(addProviderMessage);
        return PLREntityToDtoTypeConverter.convertMaintainProviderTransactionRequestToDTO(entity);
    }

    @Converter
    public static BatchRequest convertPRSXMLToBatchRequest(GRSMESSAGES grsMessages, Exchange exchange) throws ParseException {
        String transactionId = (String) exchange.getIn().getHeader(TRANSACTION_ID_HEADER_KEY);
        BatchRequestEntity batchRequestEntity = PLRXMLToEntityConverter.convertGrsMessagesToEntity(grsMessages, transactionId);
        return PLREntityToDtoTypeConverter.convertBatchRequestEntityToDTO(batchRequestEntity);
    }

    @Converter
    public static prs2.whic.org.response.GRSMESSAGES convertBatchResponseToPRSXML(BatchResponse batchResponse)
            throws IllegalAccessException, InvocationTargetException {
        BatchResponseEntity batchResponseEntity = BatchResponseToEntityConverter.convertBatchResponseToEntity(batchResponse);
        return PLREntityToPLRXMLTypeConverter.convertRequestResponseEntityToPLRXML(batchResponseEntity);
    }

    @Converter
    public static QUMTIN200002MCCIMT000300Message convertBatchResponseToHL7(BatchResponse batchResponse, Exchange exchange)
            throws ParseException, ParserConfigurationException, JAXBException, IllegalAccessException, InvocationTargetException {
        BatchResponseEntity batchResponseEntity = BatchResponseToEntityConverter.convertBatchResponseToEntity(batchResponse);
        return PLREntityToHL7BatchTypeConverter.convertBatchResponseEntityToHl7(batchResponseEntity);
    }

    @Converter
    public static BatchRequest convertHL7BatchRequestToEntity(MCCIMT200100Batch batchRequest, Exchange exchange) throws ParseException, JAXBException {
        BatchRequestHL7ToEntityConverter converter = new BatchRequestHL7ToEntityConverter();
        String transactionId = (String) exchange.getIn().getHeader(TRANSACTION_ID_HEADER_KEY);
        BatchRequestEntity batchRequestEntity = converter.convertMCCIMT200100BatchToEntity(batchRequest, transactionId);
        return PLREntityToDtoTypeConverter.convertBatchRequestEntityToDTO(batchRequestEntity);
    }

    @Converter
    public static PRPMIN301011MCCIMT000300Message convertMaintainProviderRequestDTOToAdd40(MaintainProviderResponse response)
            throws ParseException, IllegalAccessException, InvocationTargetException {
        MaintainProviderResponseEntity maintainProviderResponseEntity = MaintainProviderResponseToEntityConverter.convertMaintainProviderResponseMessageToEntity(response);
        return PLREntityToHL7AddTypeConverter.convertMaintainProviderResponseEntityToAdd40(maintainProviderResponseEntity);
    }

    @Converter
    public static PRPMIN303011MCCIMT000300Message convertMaintainProviderRequestDTOToUpdate40(MaintainProviderResponse response)
            throws ParseException, IllegalAccessException, InvocationTargetException {
        MaintainProviderResponseEntity maintainProviderResponseEntity = MaintainProviderResponseToEntityConverter.convertMaintainProviderResponseMessageToEntity(response);
        return PLREntityToHL7UpdateTypeConverter.convertMaintainProviderResponseEntityToUpdate40(maintainProviderResponseEntity);
    }

    @Converter
    public static QueryRequest convertPRPMIN306010ToQueryRequestDTO(PRPMIN306010 queryRequestMessage) throws ParseException {
        HL7_416_ToEntityConverter converter = new HL7_416_ToEntityConverter();
        QueryRequestEntity queryRequestEntity = converter.convertQueryRequestMessageToQueryRequestEntity(queryRequestMessage);
        return PLREntityToDtoTypeConverter.convertQueryRequestEntityToDTO(queryRequestEntity);
    }

    @Converter
    public static PRPMIN306011UV01 convertQueryResponseToPRPMIN306011UV01(QueryResponse queryResponse)
            throws IllegalAccessException, InvocationTargetException {
        QueryResponseEntity queryResponseEntity = QueryResponseToEntityConverter.convertQueryResponseToEntity(queryResponse);
        return PLREntityToHL7QueryResponseTypeConverter.convertQueryResponseEntityToHL7(queryResponseEntity);
    }

}
