/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.esb.service.maintain;

import ca.bc.gov.health.plr.dto.esb.DistributionNotification;
import org.apache.camel.Exchange;
import org.apache.camel.Processor;
import org.hl7.v3.m4_0.HL7RequestMessage;
import org.hl7.v3.m4_0.MCCIMT000300Acknowledgement;
import org.hl7.v3.m4_0.MCCIMT000300TargetMessage;
import org.hl7.v3.m4_0.PRPMIN301011MCCIMT000300Message;
import org.hl7.v3.m4_0.PRPMIN303011MCCIMT000300Message;
import org.hl7.v3.m4_0.QUMTIN200002MCCIMT000300Message;
import org.hl7.v3.m4_16.II;
import org.hl7.v3.m4_16.MCCIMT000300BCTargetMessage;
import org.hl7.v3.m4_16.PRPMIN306010MCCIMT000100BCMessage;
import org.hl7.v3.m4_16.PRPMIN306011UV01;

/**
 * Extracts the original message ID from an incoming message, 
 * and adds it to the outbound response
 * 
 * @author greg.perkins
 */
public class MessageIdExtractor implements Processor {

    public static final String MESSAGE_ID_KEY = "ORIGINAL_MESSAGE_ID";
    public static final String OID = "2.16.840.1.113883.3.40.1.9";

    /**
     * Processes the message
     * @param exchange Exchange
     * @throws Exception 
     */
    @Override
    public void process(Exchange exchange) throws Exception {
        Object body = exchange.getIn().getBody();
        if (body instanceof HL7RequestMessage) {
            //Inbound maintain message
            HL7RequestMessage request = (HL7RequestMessage) body;
            String messageId = request.getId().getExtension();
            exchange.getIn().setHeader(MESSAGE_ID_KEY, messageId);
        } else if (body instanceof PRPMIN306010MCCIMT000100BCMessage) {
            //Inbound query message
            PRPMIN306010MCCIMT000100BCMessage request = (PRPMIN306010MCCIMT000100BCMessage) body;
            String messageId = request.getId().getExtension();
            exchange.getIn().setHeader(MESSAGE_ID_KEY, messageId);
        } else if (body instanceof QUMTIN200002MCCIMT000300Message){
            //Inbound batch
            QUMTIN200002MCCIMT000300Message request = (QUMTIN200002MCCIMT000300Message)body;
            String messageId = request.getId().getExtension();
            exchange.getIn().setHeader(MESSAGE_ID_KEY, messageId);
        } else if (body instanceof DistributionNotification){
            DistributionNotification request = (DistributionNotification)body;
            String messageId = request.getUniqueMessageId();
            exchange.getIn().setHeader(MESSAGE_ID_KEY, messageId);
        } else if (body instanceof PRPMIN301011MCCIMT000300Message) {
            //Outbound maintain
            String messageId = exchange.getIn().getHeader(MESSAGE_ID_KEY, String.class);
            PRPMIN301011MCCIMT000300Message response = (PRPMIN301011MCCIMT000300Message) body;
            for (MCCIMT000300Acknowledgement ack : response.getAcknowledgement()) {
                populateMessageIdInAck(ack, messageId);
            }
        } else if (body instanceof PRPMIN303011MCCIMT000300Message) {
            //Outbound maintain
            String messageId = exchange.getIn().getHeader(MESSAGE_ID_KEY, String.class);
            PRPMIN303011MCCIMT000300Message response = (PRPMIN303011MCCIMT000300Message) body;
            for (MCCIMT000300Acknowledgement ack : response.getAcknowledgement()) {
                populateMessageIdInAck(ack, messageId);
            }
        } else if (body instanceof PRPMIN306011UV01) {
            //Outbound query
            String messageId = exchange.getIn().getHeader(MESSAGE_ID_KEY, String.class);
            PRPMIN306011UV01 response = (PRPMIN306011UV01) body;
            II id = new II();
            id.setExtension(messageId);
            id.setRoot(OID);
            MCCIMT000300BCTargetMessage tm = new MCCIMT000300BCTargetMessage();
            tm.setId(id);
            response.getAcknowledgement().getValue().setTargetMessage(tm);
        } else if (body instanceof QUMTIN200002MCCIMT000300Message){
            String messageId = exchange.getIn().getHeader(MESSAGE_ID_KEY, String.class);
            QUMTIN200002MCCIMT000300Message response = (QUMTIN200002MCCIMT000300Message)body;
            //Put messageId somewhere?
        }
    }

    /**
     * Creates an II element, and adds it to the ACK
     * @param ack MCCIMT000300Acknowledgement
     * @param messageId 
     */
    private void populateMessageIdInAck(MCCIMT000300Acknowledgement ack, String messageId) {
        org.hl7.v3.m4_0.II id = new org.hl7.v3.m4_0.II();
        id.setExtension(messageId);
        id.setRoot(OID);
        if (ack.getTargetMessage()==null){
            ack.setTargetMessage(new MCCIMT000300TargetMessage());
        }
        ack.getTargetMessage().setId(id);
    }

}
