/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir;

import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetAttributesCommon;
import static ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.ProviderFhirConstants.*;
import ca.bc.gov.moh.hsa.plr.esb.fhir.common.FHIRFactory;
import java.util.Date;

/**
 *
 * @author dan.stepanov
 */
public class SetOrganizationAttributes extends SetAttributesCommon {

    public SetOrganizationAttributes(FHIRFactory theFactory) {
        super(theFactory);
    }

    public void setOrganizationId(Object organization, String resourceTypeId) {
        factory.callMethod(organization, "setId", resourceTypeId);
    }

    public void setOrganizationIdSystem(Object organization, String system) {
        factory.callMethod(organization, "setSystem", system);
    }

    public void setOrganizationIdValue(Object organization, String value) {
        factory.callMethod(organization, "setValue", value);
    }

    public void setOrganizationNote(Object organization, Object note) {
        factory.callMethod(organization, "addBcNoteExtension", note);
    }

    public void addOrganizationTelecom(Object organization, Object telecom) {
        factory.callMethod(organization, "addTelecom", telecom);
//        factory.callMethod(organization, "addBcContactPoint", telecom);
    }

    public void setOrganizationName(Object organization, Object orgName) {
        factory.callMethod(organization, "setNameElement", orgName);
    }

    public void addOrganizationAlias(Object organization, String description) {
        factory.callMethod(organization, "addAlias", description);
    }

    public void setOrganizationAddress(Object organization, Object address) {
        factory.callMethod(organization, "addAddress", address);
    }

    public void setOrganizationResourceType(Object organization, Object resourceType) {
        factory.callMethod(organization, "addContained", resourceType);
    }

    public void setOrganizationERCOwner(Object organization, Object ercOwnerExtension) {
        factory.getSetEndReasonCode_OwnerCodeExtensionAttributes().setERCOwner(organization, ercOwnerExtension);
    }

    public void addOrganizationBCIdentifier(Object organization, Object bcIdentifier) {
        factory.callMethod(organization, "addIdentifier", bcIdentifier);
    }

    public void setOrganizationTextAlias(Object organization, String orgLongNameDesc) {
        factory.callMethod(organization, "addAlias", orgLongNameDesc);
    }

    public void setOrganizationBCName(Object organization, String orgBCName) {
        factory.callMethod(organization, "setNameElement", factory.stringToStringType(orgBCName));
    }

    public void setOrganizationBCName(Object organization, Object orgBCNameStringType) {
        factory.callMethod(organization, "setNameElement", orgBCNameStringType);
    }

    public void setOrganizationCustomBcName(Object organization, Object orgBCName) {
        factory.callMethod(organization, "setBcName", orgBCName);
    }

    public void setOrganizationLicenseStatus(Object organization, Object licenseStatus) {
        factory.callMethod(organization, "addBcLicenseStatusExtension", licenseStatus);
    }

    public void setOrganizationCustomNameElement(Object organization, FHIRFactory.NameUse nameUseOfficial, String orgBCName, Date orgEffectiveStart, Date orgEffectiveEnd, String endReasonCode, String dataOwnerCode) {

        if (orgBCName != null && !orgBCName.isEmpty()) {

            // add new nameUse
            Object name = factory.stringToStringType(orgBCName);
            setOrganizationBCName(organization, name);

            if (nameUseOfficial != null) {
                // Create BC NameUse extension and add it to the nameUseType/_name 
                
                factory.getSetExtensionAttributes().addExtension(name, BC_NAME_USE_EXTENSION_URL, factory.newCode(nameUseOfficial.toString().toLowerCase()), null);
            }

            // Create bc period extension and add it to the nameUseType/_name 
            Object bcPeriod = factory.newPeriod();
            factory.getSetPeriodAttributes().setPeriodStartEnd(bcPeriod, orgEffectiveStart, orgEffectiveEnd);
            factory.getSetExtensionAttributes().addExtension(name, BC_NAME_PERIOND_EXTENSION_URL, bcPeriod, null);

            if (dataOwnerCode != null || endReasonCode != null) {

                Object bcEndReasonOwnerCodeExt = factory.newExtension();
                
                // Create dataOwnerCode new extension and add it to parent bcEndReasonOwnerCodeExt extension
                if (dataOwnerCode != null) {
                    Object ownerIdentifier = factory.newIdentifier();
                    factory.getSetIdentifierAttributes().setIdentifierAssigner(ownerIdentifier, dataOwnerCode);
                    factory.getSetExtensionAttributes().addExtension(bcEndReasonOwnerCodeExt, BC_OWNER_CODE_CUSTODIAN_ID_EXTENSION_URL, ownerIdentifier, null);
                }

                // Create endReasonCode new extension and add it to parent bcEndReasonOwnerCodeExt extension
                if (endReasonCode != null) {
                    Object cc = factory.newCodeableConcept();
                    Object coding = factory.newCoding();
                    factory.getSetCodingAttributes().setCodingCode(coding, endReasonCode);
                    factory.getSetCodingAttributes().setCodingSystem(coding, ProviderFhirConstants.BC_END_REASON_CODING_SYSTEM_LINK);
                    factory.getSetCodeableConceptAttributes().setCoding(cc, coding);
                    factory.getSetExtensionAttributes().addExtension(bcEndReasonOwnerCodeExt, BC_END_REASON_CODE_EXTENSION_URL, cc, null);
                }

                // add custom complex extension for bc end reason and owner code extension to new Org Name
                factory.getSetExtensionAttributes().addExtension(name, BC_END_REASON_OWNER_CODE_EXTENSION_URL, null, bcEndReasonOwnerCodeExt);
            }
        }
    }
    
    public void setOrganizationActiveStatus(Object organization, boolean activeStatus) {
        // add new booleanType activeStatus  
        Object booleanActiveStatus = factory.newBooleanType(activeStatus);
        factory.callMethod(organization, "setActiveElement", booleanActiveStatus);
    }
}
