/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.converter;

import ca.bc.gov.health.plr.dto.esb.Acknowledgment;
import ca.bc.gov.moh.hsa.plr.entity.transaction.QueryResponseEntity;
import ca.bc.gov.health.plr.dto.esb.QueryResponse;
import ca.bc.gov.health.plr.dto.provider.esb.ProviderDetails;
import static ca.bc.gov.moh.hsa.plr.converter.PLRDtoToEntityConverter.convertAcknowledgements;
import static ca.bc.gov.moh.hsa.plr.converter.PLRDtoToEntityConverter.convertHeader;
import static ca.bc.gov.moh.hsa.plr.converter.PLRDtoToEntityConverter.convertProvider;
import static ca.bc.gov.moh.hsa.plr.converter.PLRDtoToEntityConverter.convertSource;
import static ca.bc.gov.moh.hsa.plr.converter.PLRDtoToEntityConverter.convertTarget;
import static ca.bc.gov.moh.hsa.plr.converter.PLRDtoToEntityConverter.initialize;
import ca.bc.gov.moh.hsa.plr.entity.transaction.AcknowledgementEntity;
import ca.bc.gov.moh.hsa.plr.entity.transaction.ProviderAttribute;
import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.Collection;

/**
 *
 * @author conrad.gustafson
 */
public class QueryResponseToEntityConverter extends PLRDtoToEntityConverter {

    static QueryResponseEntity convertQueryResponseToEntity(QueryResponse queryResponse)
            throws IllegalAccessException, InvocationTargetException {

        QueryResponseEntity out = new QueryResponseEntity();
        convertHeader(queryResponse, out);
        convertTarget(queryResponse, out);
        convertSource(queryResponse, out);

        out.setProviderDetails(new ArrayList<ProviderAttribute>());

        Collection<Acknowledgment> acknowledgements = queryResponse.getAcknowledgments();
        Collection<AcknowledgementEntity> newAcknowledgementEntities = convertAcknowledgements(acknowledgements);

        out.getAcknowledgmentAttributes().addAll(newAcknowledgementEntities);

        Collection<ProviderAttribute> providerAttributes = out.getProviderDetails();

        Collection<ProviderDetails> providerDetails = queryResponse.getProviderDetails();
        for (ProviderDetails providerDetail : providerDetails) {
            ProviderAttribute providerAttribute = new ProviderAttribute();
            initialize(providerAttribute);
            convertProvider(providerDetail, providerAttribute);
            providerAttribute.setUserId(queryResponse.getSourceUserId());
            providerAttributes.add(providerAttribute);
        }

        out.setStatusCode(queryResponse.getStatusCode());
        out.setResponseCode(queryResponse.getResponseCode());

        out.setRegistryOrgUserId(queryResponse.getRegistryUserOrgId());
        out.setSourceOrganizationChid(queryResponse.getSourceOrganizationChid());

        return out;

    }

}
