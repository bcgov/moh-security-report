/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.fhir.validation;

import ca.uhn.fhir.context.FhirContext;
import ca.uhn.fhir.parser.IParser;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.hl7.fhir.common.hapi.validation.support.PrePopulatedValidationSupport;
import org.hl7.fhir.r4.model.StructureDefinition;

/**
 * Validation Support implementation to read custom Structure Definitions off the classpath
 * @author greg.perkins
 */
public class CustomStructureDefinitionValidationSupport extends PrePopulatedValidationSupport{
 
    /**
     * Creates a new CustomStructureDefinitionValidationSupport object
     * @param context FhirContext
     */
    public CustomStructureDefinitionValidationSupport(FhirContext context){
        this(context,"structureDefinitions");
    }
    
    /**
     * Creates a new CustomStructureDefinitionValidationSupport object
     * @param context FhirContext
     * @param rootPath String - The location on the classpath to search for Structure Definitions
     */
    public CustomStructureDefinitionValidationSupport(FhirContext context, String rootPath){
        super(context);
        
        IParser jsonParser = context.forR4().newJsonParser();
        File[] profiles = new File(this.getClass().getClassLoader().getResource(rootPath).getFile()).listFiles();
        for (File file: profiles){
            try {
                StructureDefinition sd = (StructureDefinition) jsonParser.parseResource(new FileReader(file));
                super.addStructureDefinition(sd);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(CustomStructureDefinitionValidationSupport.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

}
