/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.converter.facilitytofhir;

import ca.bc.gov.moh.hsa.plr.esb.fhir.common.FHIRFactory;
import ca.bc.gov.health.plr.dto.esb.DistributionNotification;
import ca.bc.gov.health.plr.dto.facility.esb.FacilityDto;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.ProviderFhirConstants;
import ca.bc.gov.moh.hsa.plr.esb.service.util.GetFacilityIFC;
import java.util.Calendar;
import org.apache.camel.Converter;

/**
 *
 * @author jonathan.wiebe
 */
@Converter
public class DistributionNoticationToFHIRConverter_ForLocation {

    @Converter
    public static String convertToBundle(DistributionNotification in) {
        FHIRFactory factory = new FHIRFactory(in.getFHIRVersion());

        // there must be a facility
        if (in.getFacilityDto() == null) {
            throw new IllegalArgumentException("Could not determine Distribution target entity (Provider or Location).");
        }

        String out = null;
        Object bundle = factory.newBundle();
        factory.getSetBundleAttributes().setBundleType(bundle, FHIRFactory.BundleType.TRANSACTION);
        factory.getSetBundleAttributes().setBundleId(bundle, "TODO Distrib Event Item id");
        factory.getSetBundleAttributes().setBundleTimeStamp(bundle, Calendar.getInstance().getTime());

        // add the location resource request (PUT or add Location)
        Object request = factory.newBundleEntryRequestComponent();
        factory.getSetBundleAttributes().setBundleEntryRequestComponentMethod(request, FHIRFactory.HttpMethod.POST);
        factory.getSetBundleAttributes().setBundleEntryRequestComponentURL(request, "/Location/" + GetFacilityIFC.getFacilityIFC(in.getFacilityDto()));

        // add location resource
        Object location = factory.newBCLocation();
        factory.getSetLocationAttributes().setLocationId(location, GetFacilityIFC.getFacilityIFC(in.getFacilityDto()));
        factory.getSetBundleAttributes().addBundleEntry(bundle, location, ProviderFhirConstants.FHIR_URL + "/Location/" + GetFacilityIFC.getFacilityIFC(in.getFacilityDto()), request);
        
        // add identifiers to location
        addFacilityIdentifiers(factory, location, in.getFacilityDto());
        addFacilityName(factory, location, in.getFacilityDto());
        addFacilityCivicAddress(factory, location, in.getFacilityDto());
        addFacilityDetail(factory, location, in.getFacilityDto());
        addFacilityAddress(factory, location, in.getFacilityDto());
        addFacilityTelephone(factory, location, in.getFacilityDto());
        addFacilityElectronicAddress(factory, location, in.getFacilityDto());
        addFacilityNote(factory, location, in.getFacilityDto());

        out = factory.encodeToString(bundle);

        return out;
    }

    public static void addFacilityIdentifiers(FHIRFactory factory, Object location, FacilityDto facility) {
        if (facility != null && facility.getFacilityIdentifiers() != null && facility.getFacilityIdentifiers().size() >= 1) {
            MapFacilityToBCLocationFhir.addFacilityIdentifiersToBCLocation(factory, facility.getFacilityIdentifiers(), location);
        }
    }

    public static void addFacilityName(FHIRFactory factory, Object  location, FacilityDto facility) {
        if (facility != null && facility.getFacilityNames() != null && facility.getFacilityNames().size() >= 1) {
            MapFacilityToBCLocationFhir.addFacilityNameToBCLocation(factory, facility.getFacilityNames().get(0), location);
        }
    }

    public static void addFacilityCivicAddress(FHIRFactory factory, Object location, FacilityDto facility) {
        if (facility != null && facility.getCivicAddresses() != null && facility.getCivicAddresses().size() >= 1) {
            MapFacilityToBCLocationFhir.addFacilityCivicAddressToBCLocation(factory, facility.getCivicAddresses().get(0), location);
        }
    }

    public static void addFacilityDetail(FHIRFactory factory, Object location, FacilityDto facility) {
        if (facility != null && facility.getFacilityDetails() != null && facility.getFacilityDetails().size() >= 1) {
            MapFacilityToBCLocationFhir.addFacilityDetailsToBCLocation(factory, facility.getFacilityDetails().get(0), location);
        }
    }

    public static void addFacilityAddress(FHIRFactory factory, Object location, FacilityDto facility) {
        if (facility != null && facility.getAddresses() != null && facility.getAddresses().size() >= 1) {
            MapFacilityToBCLocationFhir.addFacilityMailAddressToBCLocationAddress(factory, facility.getAddresses().get(0), location);
        }
    }

    public static void addFacilityTelephone(FHIRFactory factory, Object location, FacilityDto facility) {
        if (facility != null && facility.getTelecommunication() != null && facility.getTelecommunication().size() >= 1) {
            MapFacilityToBCLocationFhir.addFacilityTelecomToBCLocation(factory, facility.getTelecommunication(), location);
        }
    }

    public static void addFacilityElectronicAddress(FHIRFactory factory, Object location, FacilityDto facility) {
        if (facility != null && facility.getElectronicAddresses() != null && facility.getElectronicAddresses().size() >= 1) {
            MapFacilityToBCLocationFhir.addFacilityElectronicAddressToBCLocation(factory, facility.getElectronicAddresses(), location);
        }
    }

    public static void addFacilityNote(FHIRFactory factory, Object location, FacilityDto facility) {
        if (facility != null && facility.getNotes() != null && facility.getNotes().size() >= 1) {
            MapFacilityNotesToBCNotesExtensionFhir.addFacilityNotesToBCLocation(factory, facility.getNotes(), location);
        }
    }
}
