/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.esb.service.util;

import ca.bc.gov.health.plr.dto.esb.BatchResponse;
import static ca.bc.gov.moh.hsa.util.audit.TransactionIDAssigner.TRANSACTION_ID_HEADER_KEY;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.apache.camel.Exchange;
import org.apache.camel.Processor;

/**
 *
 * @author greg.perkins
 */
public class ConvertMetadataToHeaders implements Processor {

    /**
     * The "direct:plrBatch" and "rest://post:plrBatch" form an asynchronous route.
     * "direct:plrBatch" sends the batch file to PLR, and "rest://post:plrBatch"
     * receives the response sometime later. When we do this, we lose important
     * Camel headers.
     * 
     * METADATA_KEYS identifies headers to be copied to the request body. They
     * will be echoed back by PLR in the response and restored the headers.
     * 
     *     hl7 - true if the batch file should be processed as HL7.
     *     client - identifies which SFTP folder to write the response too.
     *     TRANSACTION_ID_HEADER_KEY - used to identify the batch file process across routes.
     */
    public static final List<String> METADATA_KEYS = Arrays.asList("hl7", "client", TRANSACTION_ID_HEADER_KEY);    
    
        /**
         * Convert some BatchRequest metadata to Camel message headers.
         */
        @Override
        public void process(Exchange exchange) throws Exception {
            BatchResponse batchRequest = exchange.getIn().getBody(BatchResponse.class);
            Map<String, Object> esbMetadata = batchRequest.getEsbMetadata();
            for (String key : METADATA_KEYS) {
                exchange.getIn().setHeader(key, esbMetadata.get(key));
            }
        }
    }
