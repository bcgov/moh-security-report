/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.converter.facilitytofhir;

import ca.bc.gov.moh.hsa.plr.esb.fhir.common.FHIRFactory;
import java.util.Date;

/**
 *
 * @author jonathan.wiebe
 */
public class SetBundleAttributes extends SetAttributesCommon {

    public SetBundleAttributes(FHIRFactory theFactory) {
        super(theFactory);
    }

    public void setBundleType(Object bundle, FHIRFactory.BundleType bundleType) {

        switch (bundleType) {
            case TRANSACTION: {
                if (version == FHIRFactory.FHIR_VERSION.R4 || version == FHIRFactory.FHIR_VERSION.R4BC1) {
                    factory.callMethod(bundle, "setType", org.hl7.fhir.r4.model.Bundle.BundleType.TRANSACTION);
                }
                break;
            }
            case SEARCHSET: {
                if (version == FHIRFactory.FHIR_VERSION.R4 || version == FHIRFactory.FHIR_VERSION.R4BC1) {
                    factory.callMethod(bundle, "setType", org.hl7.fhir.r4.model.Bundle.BundleType.SEARCHSET);
                }
                break;
            }
            default:
        }
    }

    public void setBundleId(Object bundle, String bundleId) {
        factory.callMethod(bundle, "setId", bundleId);
    }

    public void setBundleTimeStamp(Object bundle, Date date) {
        factory.callMethod(bundle, "setTimestamp", date);
    }

    public void setBundleEntryRequestComponentURL(Object bundleEntryRequest, String url) {
        factory.callMethod(bundleEntryRequest, "setUrl", url);
    }

    /**
     * Adds a bundle entry, along with some attributes
     *
     * @param bundle parent bundle
     * @param resource BCLocation FHIR resource
     * @param url full url of resource
     * @param bundleEntryRequest entry object
     */
    public void addBundleEntry(Object bundle, Object resource, String url, Object bundleEntryRequest) {
        Object bundleEntry = factory.newBundleEntryComponent();
        factory.callMethod(bundle, "addEntry", bundleEntry);
        factory.callMethod(bundleEntry, "setResource", resource);
        factory.callMethod(bundleEntry, "setFullUrl", url);
        factory.callMethod(bundleEntry, "setRequest", bundleEntryRequest);
    }

    public void setBundleEntryRequestComponentMethod(Object bundleEntryRequest, FHIRFactory.HttpMethod method) {
        switch (method) {
            case POST: {
                if (version == FHIRFactory.FHIR_VERSION.R4 || version == FHIRFactory.FHIR_VERSION.R4BC1) {
                    factory.callMethod(bundleEntryRequest, "setMethod", org.hl7.fhir.r4.model.Bundle.HTTPVerb.POST);
                }
                break;
            }
            case PUT: {
                if (version == FHIRFactory.FHIR_VERSION.R4 || version == FHIRFactory.FHIR_VERSION.R4BC1) {
                    factory.callMethod(bundleEntryRequest, "setMethod", org.hl7.fhir.r4.model.Bundle.HTTPVerb.PUT);
                }
                break;

            }
            default:
        }
    }

}
