/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.converter.facilitytofhir;

import ca.bc.gov.moh.hsa.plr.esb.fhir.common.FHIRFactory;
import static ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.ProviderFhirConstants.*;
import java.util.Date;

/**
 *
 * @author jonathan.wiebe
 */
public class SetNameAttributes extends SetAttributesCommon {

    public SetNameAttributes(FHIRFactory theFactory) {
        super(theFactory);
    }

    public void setNameValue(Object parent, String name) {
        if (version == FHIRFactory.FHIR_VERSION.R4BC1) {
            factory.callMethod(parent, "setValue", name);
        }
    }

    public void setNamePeriod(Object parent, Date start, Date end) {
        factory.getSetPeriodAttributes().addPeriod(parent, start, end);
    }

    public void setNameERCOwner(Object parent, String endReasonCode, String dataOwnerCode) {
        factory.getSetEndReasonCode_OwnerCodeExtensionAttributes().addERCOwner(parent, endReasonCode, dataOwnerCode);
    }

    public void setNameFamily(Object parent, String familyName) {
        factory.callMethod(parent, "setFamily", familyName);
    }

    public void setNameGiven(Object parent, String firstName, String secondName, String thirdName) {
        StringBuilder fullGivenName = new StringBuilder();
        if (firstName != null && !firstName.isEmpty()) {
            factory.callMethod(parent, "addGiven", firstName);
            fullGivenName.append(firstName + " ");
        }
        if (secondName != null && !secondName.isEmpty()) {
            factory.callMethod(parent, "addGiven", secondName);
            fullGivenName.append(secondName + " ");
        }
        if (thirdName != null && !thirdName.isEmpty()) {
            factory.callMethod(parent, "addGiven", thirdName);
            fullGivenName.append(thirdName);
        }
    }

    public void setNamePrefix(Object parent, String prefixName) {
        factory.callMethod(parent, "addPrefix", prefixName);
    }

    public void setNameSuffix(Object parent, String suffixName) {
        factory.callMethod(parent, "addSuffix", suffixName);
    }

    public void setNameUse(Object nameUse, FHIRFactory.NameUse nameUseCode) {
        factory.callMethod(nameUse, "setUse", translateNameUseToHAPI(nameUseCode));
    }

    public void setNameOrgValue(Object nameOrg, String nameOrgValue) {
        factory.callMethod(nameOrg, "setValue", nameOrgValue);
    }

    public void setNameOrgTextDesc(Object nameOrg, String nameOrgTextDesc) {
        factory.callMethod(nameOrg, "setText", nameOrgTextDesc);
    }

    public void setNameUseOrg(Object parent, Object nameUseOrgCode) {
        factory.callMethod(parent, "setCodeNameUse", nameUseOrgCode);
    }

    public Object translateNameUseToHAPI(FHIRFactory.NameUse nameUseCode) {
        return toNameUseR4(nameUseCode);
    }
    
    private Object toNameUseR4(FHIRFactory.NameUse nameUseCode) {
        
        switch(nameUseCode) {
            case USUAL: {
                return org.hl7.fhir.r4.model.HumanName.NameUse.USUAL;
            }
            case OFFICIAL: {
                return org.hl7.fhir.r4.model.HumanName.NameUse.OFFICIAL;
            }
            default: {
                return org.hl7.fhir.r4.model.HumanName.NameUse.NULL;
            }
        }
    }

}
