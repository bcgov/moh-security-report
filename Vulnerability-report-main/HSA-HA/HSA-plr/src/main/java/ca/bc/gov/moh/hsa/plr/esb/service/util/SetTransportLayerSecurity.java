/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.esb.service.util;

import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.http.config.RegistryBuilder;
import org.apache.http.conn.socket.ConnectionSocketFactory;
import org.apache.http.conn.socket.PlainConnectionSocketFactory;
import org.apache.http.conn.ssl.SSLConnectionSocketFactory;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;
import org.apache.http.ssl.SSLContexts;

/**
 * Enforces the configuration/setting of specific TLSv1.2 version for Apache
 * HTTPClient in SSLContext
 *
 * @author dan.stepanov
 */
public class SetTransportLayerSecurity {

    private static final String CLASSNAME = SetTransportLayerSecurity.class.getSimpleName();
    private static final Logger LOG = Logger.getLogger(CLASSNAME);

    public static final String TLS_V_12 = "TLSv1.2";
    public static final String HTTP = "http";
    public static final String HTTPS = "https";

    /**
     * Set the https to use TLSv1.2 and customized HTTP client connection pool.
     *
     * @throws KeyManagementException - specific security exception
     * @throws NoSuchAlgorithmException - specific security exception
     *
     * @return httpClient CloseableHttpClient - customized Apache HttpClient
     */
    public static CloseableHttpClient getRegistry() throws KeyManagementException, NoSuchAlgorithmException {

        SSLConnectionSocketFactory sslConnectionSocketFactory
                = new SSLConnectionSocketFactory(SSLContexts.createDefault(),
                        new String[]{TLS_V_12}, null, SSLConnectionSocketFactory.getDefaultHostnameVerifier());

        LOG.log(Level.INFO, "SetTransportLayerSecurity getRegistry() before Http connection pooling");

        PoolingHttpClientConnectionManager poolingHttpClientConnectionManager
                = new PoolingHttpClientConnectionManager(
                        RegistryBuilder.<ConnectionSocketFactory>create()
                                .register(HTTP, PlainConnectionSocketFactory.getSocketFactory())
                                .register(HTTPS, sslConnectionSocketFactory)
                                .build());

        // Customize the HTTP client connection pool
        CloseableHttpClient httpClient = HttpClientBuilder.create()
                .setConnectionManager(poolingHttpClientConnectionManager)
                .build();

        LOG.log(Level.INFO, "SetTransportLayerSecurity getRegistry() after httpClient customization");

        return httpClient;
    }

}
