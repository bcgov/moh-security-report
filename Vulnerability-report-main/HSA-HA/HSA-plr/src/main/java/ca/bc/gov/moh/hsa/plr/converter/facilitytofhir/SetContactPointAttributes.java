/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.converter.facilitytofhir;

import ca.bc.gov.moh.hsa.plr.esb.fhir.common.FHIRFactory;

/**
 *
 * @author jonathan.wiebe
 */
public class SetContactPointAttributes extends SetAttributesCommon {

    public SetContactPointAttributes(FHIRFactory theFactory) {
        super(theFactory);
    }

    public void setContactPointSystem(Object contactPoint, FHIRFactory.ContactPointSystem system) {
        if (version == FHIRFactory.FHIR_VERSION.R4 || version == FHIRFactory.FHIR_VERSION.R4BC1) {
            factory.callMethod(contactPoint, "setSystem", toContactPointSystemR4(system));
        }
    }

    public void setContactPointValue(Object contactPoint, String value) {
        factory.callMethod(contactPoint, "setValue", value);
    }

    public void setContactPointERCOwner(Object contactPoint, Object ercOwnerExtension) {
        factory.getSetEndReasonCode_OwnerCodeExtensionAttributes().setERCOwner(contactPoint, ercOwnerExtension);
    }

    public void setContactPointTelephone(Object contactPoint, String areaCode, String number, String extension) {
        StringBuilder phoneNbrFhir = new StringBuilder();
        if (areaCode != null && !areaCode.isEmpty()) {
            factory.callMethod(contactPoint, "setAreaCode", factory.newStringType(areaCode));
            phoneNbrFhir.append(areaCode);
        }
        if (number != null && !number.isEmpty()) {
            factory.callMethod(contactPoint, "setLocalNumber", factory.newStringType(number));
            phoneNbrFhir.append(number);
        }
        if (extension != null && !extension.isEmpty()) {
            factory.callMethod(contactPoint, "setNumberExtension", factory.newStringType(extension));
            phoneNbrFhir.append(extension);
        }

        setContactPointValue(contactPoint, phoneNbrFhir.toString());
    }
    
    public void setContactPointPurposeCode(Object contactPoint, Object purposeCode) {
        factory.getSetPurposeCodeAttributes().setPurposeCoding(contactPoint, purposeCode);
    }

    private Object toContactPointSystemR4(FHIRFactory.ContactPointSystem system) {
        switch (system) {
            case EMAIL: {
                return org.hl7.fhir.r4.model.ContactPoint.ContactPointSystem.EMAIL;
            }
            case URL: {
                return org.hl7.fhir.r4.model.ContactPoint.ContactPointSystem.URL;
            }
            case FAX: {
                return org.hl7.fhir.r4.model.ContactPoint.ContactPointSystem.FAX;
            }
            case NULL: {
                return org.hl7.fhir.r4.model.ContactPoint.ContactPointSystem.NULL;
            }
            case OTHER: {
                return org.hl7.fhir.r4.model.ContactPoint.ContactPointSystem.OTHER;
            }
            case PAGER: {
                return org.hl7.fhir.r4.model.ContactPoint.ContactPointSystem.PAGER;
            }
            case PHONE: {
                return org.hl7.fhir.r4.model.ContactPoint.ContactPointSystem.PHONE;
            }
            case SMS: {
                return org.hl7.fhir.r4.model.ContactPoint.ContactPointSystem.SMS;
            }
            default:
                return org.hl7.fhir.r4.model.ContactPoint.ContactPointSystem.NULL;
        }
    }
}
