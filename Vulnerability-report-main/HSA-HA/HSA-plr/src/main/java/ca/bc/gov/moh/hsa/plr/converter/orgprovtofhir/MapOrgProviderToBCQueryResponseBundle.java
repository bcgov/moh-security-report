/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.converter.orgprovtofhir;

import ca.bc.gov.health.plr.dto.esb.Acknowledgment;
import ca.bc.gov.health.plr.dto.esb.QueryResponse;
import ca.bc.gov.health.plr.dto.provider.esb.ProviderDetails;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.MapIndivProviderToBCQueryResponseBundle;
import ca.bc.gov.moh.hsa.plr.esb.fhir.common.FHIRFactory;
import java.util.Collection;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.camel.Exchange;

/**
 * Class for mapping components between PLR Organization Provider and FHIR BC
 * QueryResponseBundle profile resource.
 *
 * @author greg.perkins
 */
public class MapOrgProviderToBCQueryResponseBundle extends MapIndivProviderToBCQueryResponseBundle {

    private static final String CLASSNAME = MapOrgProviderToBCQueryResponseBundle.class.getSimpleName();
    private static final Logger LOG = Logger.getLogger(CLASSNAME);

    public static Object addProviderToBCQueryResponseBundle(FHIRFactory factory, QueryResponse queryResponse) {
        return addOrganizationsToBCQueryResponseBundle(factory, queryResponse, null);
    }

    public static Object addOrganizationsToBCQueryResponseBundle(FHIRFactory factory, QueryResponse queryResponse, Exchange exchange) {

        // create BCPractitionerBundle/operationOutcomeQueryResponse types for FHIR model
        Object operationOutcomeQueryResponseFhir = factory.newOperationOutcome();
        Object bcQueryResponseBundleFhir = factory.newBCQueryResponseBundle();

        Collection<ProviderDetails> orgProviders = queryResponse.getProviderDetails();
        Collection<Acknowledgment> acknowledgements = queryResponse.getAcknowledgments();

        if (!orgProviders.isEmpty()) {
            for (ProviderDetails orgProviderDetail : orgProviders) {

                if (orgProviderDetail != null && orgProviderDetail.getPauthId() != null) {
                    Object bcOrganizationBundleFhir = factory.newBCOrganizationBundle();

                    // set Organization bundle type to BundleType.TRANSACTION  
                    factory.getSetBundleAttributes().setBundleType(bcOrganizationBundleFhir, FHIRFactory.BundleType.TRANSACTION);

                    MapOrgProviderToBCOrganizationBundle.addOrgProviderToBCOrganizationBundle(factory, orgProviderDetail, bcOrganizationBundleFhir);

                    // SetQueryResponseBundleAttributes w/BCOrganizationBundle profile
                    factory.getSetQueryResponseBundleAttributes().setOrganizationBundle(bcQueryResponseBundleFhir, bcOrganizationBundleFhir);

                    // json parse encoded BCOrganizationBundle
                    String jsonParsedBCOrganizationBundleFhir = factory.parseEncodedBcOrganizationBundle(bcOrganizationBundleFhir);

                    LOG.log(Level.INFO, "MapOrgProviderToBCQueryResponseBundle addOrganizationsToBCQueryResponseBundle jsonParsedBCOrganizationBundleFhir: {0}.",
                            new Object[]{jsonParsedBCOrganizationBundleFhir});

                }
            }
        } else if (exchange != null) {
            handle404(exchange);
        }
        mapResponseMessages(acknowledgements, factory, exchange, operationOutcomeQueryResponseFhir, bcQueryResponseBundleFhir);

        return bcQueryResponseBundleFhir;
    }

}
