/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.esb.service.maintain;

import ca.bc.gov.health.plr.dto.esb.MaintainProviderRequest;
import ca.bc.gov.health.plr.dto.provider.esb.AddressDto;
import ca.bc.gov.health.plr.dto.provider.esb.CollegeIdentifierDto;
import ca.bc.gov.health.plr.dto.provider.esb.JurisdictionNameCodeDto;
import ca.bc.gov.health.plr.dto.provider.esb.ProviderDetails;
import static ca.bc.gov.moh.hsa.plr.converter.dtotohl7.HL740Constants.ACCEPT_ACK_CODE;
import static ca.bc.gov.moh.hsa.plr.converter.dtotohl7.HL740Constants.PROCESSING_CODE;
import static ca.bc.gov.moh.hsa.plr.converter.dtotohl7.HL740Constants.PROCESSING_MODE_CODE;
import static ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.ProviderFhirConstants.JURISDICTION_BC_CODE;
import static ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.ProviderFhirConstants.TYPE_CODE_INDIV_PROVIDER;
import ca.uhn.fhir.context.FhirContext;
import ca.uhn.fhir.parser.IParser;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.UUID;
import org.apache.camel.Exchange;
import org.apache.camel.Processor;
import org.hl7.fhir.r4.model.Bundle;
import org.hl7.fhir.r4.model.Practitioner;

/**
 *
 * @author jonathan.wiebe
 */
public class FHIRProcessorMaintainIn implements Processor {

    FhirContext ctx = FhirContext.forR4();

    @Override
    public void process(Exchange exchng) throws Exception {
        IParser jparser = ctx.newJsonParser();
        IParser xparser = ctx.newXmlParser();
        String id = exchng.getIn().getHeader("id", String.class);
        String format = exchng.getIn().getHeader("_format", String.class);
        if (format != null) {
            exchng.getIn().setHeader("contentType", format);
        } else {
            exchng.getIn().setHeader("contentType", "application/fhir+json");
            //application/xml-patch+xml
        }

        Bundle bundle = jparser.parseResource(Bundle.class, exchng.getIn().getBody(String.class));

        Practitioner pr = (Practitioner) bundle.getEntry().get(0).getResource();
        MaintainProviderRequest mr = new MaintainProviderRequest();
        mr.setProviderDetails(new ProviderDetails());
        mr.setUniqueMessageID(UUID.randomUUID().toString());
        mr.setProcessingCode(PROCESSING_CODE);
        mr.setProcessModeCode(PROCESSING_MODE_CODE);
        mr.setAcceptAckCode(ACCEPT_ACK_CODE);
        mr.setRegistryUserOrgId(
                "jwiebe");

        String idType = exchng.getIn().getHeader("idType", String.class);
        if (idType
                != null && !idType.isEmpty()) {
            ArrayList<CollegeIdentifierDto> idList = new ArrayList();
            CollegeIdentifierDto ci = new CollegeIdentifierDto();
            idList.add(ci);
            ci.setIdentifier(id);
            ci.setTypeCode(idType);
            mr.getProviderDetails().setIdentifiers(idList);
            AddressDto addrDto = new AddressDto();
            addrDto.setAddressLineOne(pr.getAddress().get(0).getLine().get(0).getValue());
            addrDto.setCity(pr.getAddress().get(0).getCity());
            addrDto.setCountryCode("CA");
            addrDto.setProvinceOrStateTxt(pr.getAddress().get(0).getState());
            addrDto.setPostalCode(pr.getAddress().get(0).getPostalCode());
            Calendar cal = Calendar.getInstance();
            cal.add(Calendar.MONTH, +99);
            addrDto.setEffectiveEndDate(cal.getTime());
            cal.add(Calendar.MONTH, -99);
            addrDto.setEffectiveStartDate(cal.getTime());
            addrDto.setCommunicationPurposeCode("BC");
            addrDto.setTypeCode("M");
            addrDto.setEndReasonCode("CHG");
            addrDto.setValidationStatus("U");
            mr.getProviderDetails().setAddresses(new ArrayList<AddressDto>());
            mr.getProviderDetails().getAddresses().add(addrDto);
        }

        String roleType = exchng.getIn().getHeader("roleType", String.class);
        if (roleType
                != null && !roleType.isEmpty()) {
            mr.getProviderDetails().setType(roleType);
        }
        JurisdictionNameCodeDto j = new JurisdictionNameCodeDto();
        j.setJurisdicationNameCode(JURISDICTION_BC_CODE);
        mr.getProviderDetails().setJurisdiction(j);
        mr.getProviderDetails().setProviderType(TYPE_CODE_INDIV_PROVIDER);
        exchng.getIn()
                .setBody(mr, MaintainProviderRequest.class
                );
        exchng.getIn()
                .setHeader(MessageIdExtractor.MESSAGE_ID_KEY, mr.getUniqueMessageID());
    }

}
