/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.plr.esb.fhir.common;

import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.ReflectionUtils;
import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetAddressAttributes;
import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetBundleAttributes;
import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetCHSAExtensionAttributes;
import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetCivicAddressAttributes;
import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetCodeableConceptAttributes;
import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetContactPointAttributes;
import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetEndReasonCode_OwnerCodeExtensionAttributes;
import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetExtensionAttributes;
import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetFacilityDetailsAttributes;
import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetIdentifierAttributes;
import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetLocationAttributes;
import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetNameAttributes;
import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetNoteAttributes;
import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetPeriodAttributes;
import ca.bc.gov.moh.hsa.plr.converter.facilitytofhir.SetReferenceAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetCodingAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetSpecialtyCodeableConceptAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.FhirContextFactory;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.ProviderFhirConstants;
import static ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.ProviderFhirConstants.*;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetBirthDateTimeAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetConditionAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetConfidentialityAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetDisciplinaryActionAttributes;

import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetLicenseStatusAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetOperationOutcomeIssueComponentAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetOrganizationAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetOrganizationBundleAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetPractitionerAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetPractitionerBundleAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetPractitionerQualificationComponentAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetPractitionerQualificationExtensionAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetPractitionerRelationshipAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetPractitionerRoleAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetPurposeCodeAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetQualificationAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetQueryResponseBundleAttributes;
import ca.bc.gov.moh.hsa.plr.converter.indivprovtofhir.SetQueryResponseOrganizationBundleAttributes;
import ca.uhn.fhir.context.FhirContext;
import ca.uhn.fhir.parser.IParser;
import ca.uhn.fhir.validation.ValidationResult;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.hl7.fhir.r4bc1.model.BCFacilityDetailsExtension;

/**
 *
 * @author jonathan.wiebe
 */
public class FHIRFactory {

    private static final String CLASSNAME = FHIRFactory.class.getSimpleName();
    private static final Logger LOG = Logger.getLogger(CLASSNAME);

    private FhirContext context = null;

    public FhirContext getContext() {
        return context;
    }

    public void setContext(FhirContext context) {
        this.context = context;
    }

    /**
     * Reflectively call a method with an argument
     *
     * @param targetObject object whose method we want to call
     * @param methodName method name
     * @param value argument
     */
    public Object callMethod(Object targetObject, String methodName, Object value) {
        Method method;
        Object retObject = null;
        try {
            if (value != null) {
                method = ReflectionUtils.hasMethod(targetObject, methodName, value);
            } else {
                method = ReflectionUtils.hasMethod(targetObject, methodName);
            }
            if (method != null) {
                if (value != null) {
                    retObject = ReflectionUtils.methodInvoke(targetObject, methodName, true, value);
                } else {
                    retObject = ReflectionUtils.methodInvoke(targetObject, methodName);
                }
            } else {
                LOG.severe("Method " + methodName + " not found in class " + targetObject.getClass().getSimpleName());
            }
        } catch (SecurityException ex) {
            LOG.severe(ex.getLocalizedMessage());
        } catch (IllegalArgumentException ex) {
            LOG.severe(ex.getLocalizedMessage());
        } catch (InvocationTargetException ex) {
            LOG.severe(ex.getLocalizedMessage());
        }
        return retObject;
    }

    /**
     * Reflectively call a method with no arguments
     *
     * @param targetObject object whose method we wish to call
     * @param methodName method name
     */
    public Object callMethod(Object targetObject, String methodName) {
        return callMethod(targetObject, methodName, null);
    }

    public String encodeToString(Object bundle) {
        if (version == FHIR_VERSION.R4BC1) {
            return newJSONParser().encodeResourceToString((org.hl7.fhir.r4.model.Bundle) bundle);
        }
        return null;
    }

    public FHIR_VERSION getVersion() {
        return version;
    }

    public SetIdentifierAttributes getSetIdentifierAttributes() {
        return setIdentifierAttributes;
    }

    public Object newPeriod() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.Period();
        }
        return null;
    }

    public Object newBCEndReasonCode_OwnerCodeExtension() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCEndReasonCode_OwnerCodeExtension();
        }
        return null;
    }

    public Object newBCSpecialtySourceExtension() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCSpecialtySourceExtension();
        }
        return null;
    }

    public Object newCode(String code) {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.CodeType(code);
        }
        return null;
    }

    public Object newCodeableConcept() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.CodeableConcept();
        }
        return null;
    }

    public SetCodeableConceptAttributes getSetCodeableConceptAttributes() {
        return setCodeableConceptAtrributes;
    }

    public Object newReference() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.Reference();
        }
        return null;
    }

    public Object newBCNoteExtension() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCNoteExtension();
        }
        return null;
    }

    public Object newSpecialty() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCSpecialtyCodeableConcept();
        }
        return null;
    }

    public Object newBCLicenseStatus() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCLicenseStatusExtension();
        }
        return null;
    }

    public Object newBCCommunicationCodeableConcept() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCCommunicationCodeableConcept();
        }
        return null;
    }

    public Object newBCQualification() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCQualification();
        }
        return null;
    }

    public Object newBCPractitionerQualificationExtension() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCPractitionerQualificationExtension();
        }
        return null;
    }

    public Object newBCOrganization() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCOrganization();
        }
        return null;
    }

    public Object newBCPractitionerQualificationComponent() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCPractitionerQualificationComponent();
        }
        return null;
    }

    public Object newDisciplinaryAction() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCDisciplinaryActionExtension();
        }
        return null;
    }

    public SetQualificationAttributes getSetQualificationAttributes() {
        return this.setQualificationAttributes;
    }

    public SetSpecialtyCodeableConceptAttributes getSetSpecialtyCodeableConceptAttributes() {
        return this.setSpecialtyCodeableConceptAttributes;
    }

    public SetLicenseStatusAttributes getSetLicenseStatusAttributes() {
        return this.setLicenseStatusAttributes;
    }

    public SetNoteAttributes getSetNoteAttributes() {
        return this.setNoteAttributes;
    }

    public SetPeriodAttributes getSetPeriodAttributes() {
        return this.setPeriodAttributes;
    }

    public SetReferenceAttributes getSetReferenceAttributes() {
        return this.setReferenceAttributes;
    }

    public SetDisciplinaryActionAttributes getSetDisciplinaryActionAttributes() {
        return this.setDisciplinaryActionAttributes;
    }

    public SetConditionAttributes getSetConditionAttributes() {
        return this.setConditionAttributes;
    }

    public SetConfidentialityAttributes getSetConfidentialityAttributes() {
        return this.setConfidentialityAttributes;
    }

    public SetPractitionerRelationshipAttributes getSetPractitionerRelationshipAttributes() {
        return this.setPractitionerRelationshipAttributes;
    }

    public Object newBCContactPoint() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCContactPoint();
        }
        return null;
    }

    public SetContactPointAttributes getSetContactPointAttributes() {
        return setContactPointAttributes;
    }

    public SetNameAttributes getSetNameAttributes() {
        return setNameAttributes;
    }

    public SetExtensionAttributes getSetExtensionAttributes() {
        return setExtensionAttributes;
    }

    public Object newExtension() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.Extension();
        }
        return null;
    }

    public Object newBCAddress() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCAddress();
        }
        return null;
    }

    public SetCivicAddressAttributes getSetCivicAddressAttributes() {
        return setCivicAddressAttributes;
    }

    public Object newLocationPositionComponent() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.Location.LocationPositionComponent();
        }
        return null;
    }

    public SetCHSAExtensionAttributes getSetCHSAExtensionAttributes() {
        return setCHSAExtensionAttributes;
    }

    public SetAddressAttributes getSetAddressAttributes() {
        return setAddressAttributes;
    }

    public Object newCHSAExtension() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCFacilityCHSAExtension();
        }
        return null;
    }

    public Object newBCName() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCName();
        }
        return null;
    }

    public Object newStringType() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.StringType();
        }
        return null;
    }

    public Object newStringType(String s) {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.StringType(s);
        }
        return null;
    }

    public Object newIdType() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.IdType();
        }
        return null;
    }

    public Object newCoding() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.Coding();
        }
        return null;
    }

    public SetCodingAttributes getSetCodingAttributes() {
        return setCodingAtrributes;
    }

    public Object newAddress() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.Address();
        }
        return null;
    }

    public Object newBCPurposeCodeExtension() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCPurposeCodeExtension();
        }
        return null;
    }

    public Object newBCHumanName() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCHumanName();
        }
        return null;
    }

    public Object newDateType() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.DateType();
        }
        return null;
    }

    public Object newDateTimeType(Date dateTime) {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.DateTimeType(dateTime);
        }
        return null;
    }

    public SetBirthDateTimeAttributes getSetBirthDateTimeAttributes() {
        return setBirthDateTimeAttributes;
    }

    public Object newDateType(Date deathDate) {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.DateType(deathDate);
        }
        return null;
    }

    public Object newBooleanType(boolean displayFlag) {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.BooleanType(displayFlag);
        }
        return null;
    }

    public Object newBCConditionExtension() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCConditionExtension();
        }
        return null;
    }

    public Object newBCConfidentialityExtension() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCConfidentialityExtension();
        }
        return null;
    }

    public Object newBCPractitionerRelationshipExtension() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCPractitionerRelationshipExtension();
        }
        return null;
    }

    public Object newBCReference() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCReference();
        }
        return null;
    }

    public Object newOOIssueSeverity(FHIRFactory.OperationOutcomeIssueSeverity severity) {
        if (version == FHIR_VERSION.R4BC1) {
            switch (severity) {
                case WARNING: {
                    return org.hl7.fhir.r4.model.OperationOutcome.IssueSeverity.WARNING;
                }
                case INFORMATION: {
                    return org.hl7.fhir.r4.model.OperationOutcome.IssueSeverity.INFORMATION;
                }
                case ERROR: {
                    return org.hl7.fhir.r4.model.OperationOutcome.IssueSeverity.ERROR;
                }
                default:
                    return org.hl7.fhir.r4.model.OperationOutcome.IssueSeverity.NULL;
            }
        }
        return null;
    }

    public enum OperationOutcomeIssueSeverity {
        WARNING, ERROR, INFORMATION, NULL
    }

    public Object newOOIssueCode(FHIRFactory.OperationOutcomeIssueCode type) {
        if (version == FHIR_VERSION.R4BC1) {
            switch (type) {
                case BUSINESSRULE: {
                    return org.hl7.fhir.r4.model.OperationOutcome.IssueType.BUSINESSRULE;
                }
                case EXCEPTION: {
                    return org.hl7.fhir.r4.model.OperationOutcome.IssueType.EXCEPTION;
                }
                default:
                    return org.hl7.fhir.r4.model.OperationOutcome.IssueType.NULL;
            }
        }
        return null;
    }

    public enum OperationOutcomeIssueCode {
        BUSINESSRULE, EXCEPTION
    }

    public enum FHIR_VERSION {
        R4, R5, R4BC1, R4BC2
    }
    private FHIR_VERSION version = FHIR_VERSION.R4;
    private SetBundleAttributes setBundleAttributes;
    private SetLocationAttributes setLocationAttributes;
    private SetIdentifierAttributes setIdentifierAttributes;
    private SetEndReasonCode_OwnerCodeExtensionAttributes setEndReasonCode_OwnerCodeExtensionAttributes;
    private SetCodeableConceptAttributes setCodeableConceptAtrributes;
    private SetNoteAttributes setNoteAttributes;
    private SetPeriodAttributes setPeriodAttributes;
    private SetReferenceAttributes setReferenceAttributes;
    private SetContactPointAttributes setContactPointAttributes;
    private SetNameAttributes setNameAttributes;
    private SetExtensionAttributes setExtensionAttributes;
    private SetCivicAddressAttributes setCivicAddressAttributes;
    private SetCHSAExtensionAttributes setCHSAExtensionAttributes;
    private SetAddressAttributes setAddressAttributes;
    private SetFacilityDetailsAttributes setFacilityDetailsAttributes;
    private SetSpecialtyCodeableConceptAttributes setSpecialtyCodeableConceptAttributes;
    private SetCodingAttributes setCodingAtrributes;

    // Practitioner attributes
    private SetPractitionerAttributes setPractitionerAttributes;
    // PractitionerRole attributes
    private SetPractitionerRoleAttributes setPractitionerRoleAttributes;
    // PractitionerBundle attributes
    private SetPractitionerBundleAttributes setPractitionerBundleAttributes;
    // QueryResponseBundle attributes
    private SetQueryResponseBundleAttributes setQueryResponseBundleAttributes;
    // SetOperationOutcomeIssueComponentAttributes attributes
    private SetOperationOutcomeIssueComponentAttributes setOperationOutcomeIssueComponentAttributes;
    private SetPurposeCodeAttributes setPurposeCodeAttributes;
    private SetLicenseStatusAttributes setLicenseStatusAttributes;
    // qualifications 
    private SetQualificationAttributes setQualificationAttributes;
    private SetPractitionerQualificationExtensionAttributes setPracQualifExtAttributes;
    // Organization attributes
    private SetOrganizationAttributes setOrganizationAttributes;
    private SetPractitionerQualificationComponentAttributes setPractitionerQualificationComponentAttributes;
    private SetBirthDateTimeAttributes setBirthDateTimeAttributes;
    // disciplinary actions
    private SetDisciplinaryActionAttributes setDisciplinaryActionAttributes;
    // conditions attributes
    private SetConditionAttributes setConditionAttributes;
    // Confidentiality attributes
    private SetConfidentialityAttributes setConfidentialityAttributes;
    // Practitioner Relationship attributes
    private SetPractitionerRelationshipAttributes setPractitionerRelationshipAttributes;
    // OrganizationBundle attributes
    private SetOrganizationBundleAttributes setOrganizationBundleAttributes;
    // QueryResponseOrganizationBundle attributes
    private SetQueryResponseOrganizationBundleAttributes setQueryResponseOrganizationBundleAttributes;

    public SetFacilityDetailsAttributes getSetFacilityDetailsAttributes() {
        return setFacilityDetailsAttributes;
    }

    public SetBundleAttributes getSetBundleAttributes() {
        return this.setBundleAttributes;
    }

    public SetLocationAttributes getSetLocationAttributes() {
        return this.setLocationAttributes;
    }

    public SetEndReasonCode_OwnerCodeExtensionAttributes getSetEndReasonCode_OwnerCodeExtensionAttributes() {
        return this.setEndReasonCode_OwnerCodeExtensionAttributes;
    }

    public SetPractitionerAttributes getSetPractitionerAttributes() {
        return this.setPractitionerAttributes;
    }

    public SetPractitionerRoleAttributes getSetPractitionerRoleAttributes() {
        return this.setPractitionerRoleAttributes;
    }

    public SetPractitionerBundleAttributes getSetPractitionerBundleAttributes() {
        return this.setPractitionerBundleAttributes;
    }

    public SetQueryResponseBundleAttributes getSetQueryResponseBundleAttributes() {
        return this.setQueryResponseBundleAttributes;
    }

    public SetOperationOutcomeIssueComponentAttributes getSetOperationOutcomeIssueComponentAttributes() {
        return this.setOperationOutcomeIssueComponentAttributes;
    }

    public SetPurposeCodeAttributes getSetPurposeCodeAttributes() {
        return this.setPurposeCodeAttributes;
    }

    public SetPractitionerQualificationExtensionAttributes getSetPracQualifExtAttributes() {
        return setPracQualifExtAttributes;
    }

    public SetOrganizationAttributes getSetOrganizationAttributes() {
        return this.setOrganizationAttributes;
    }

    public SetPractitionerQualificationComponentAttributes getSetPractitionerQualificationComponentAttributes() {
        return this.setPractitionerQualificationComponentAttributes;
    }

    public SetOrganizationBundleAttributes getSetOrganizationBundleAttributes() {
        return this.setOrganizationBundleAttributes;
    }

    public SetQueryResponseOrganizationBundleAttributes getSetQueryResponseOrganizationBundleAttributes() {
        return this.setQueryResponseOrganizationBundleAttributes;
    }

    public FHIRFactory(String FHIRVersion) {
        if (FHIRVersion.matches("R4BC1")) {
            context = FhirContextFactory.forR4();
            version = FHIR_VERSION.R4BC1;
        }
        setBundleAttributes = new SetBundleAttributes(this);
        setLocationAttributes = new SetLocationAttributes(this);
        setIdentifierAttributes = new SetIdentifierAttributes(this);
        setEndReasonCode_OwnerCodeExtensionAttributes = new SetEndReasonCode_OwnerCodeExtensionAttributes(this);
        setCodeableConceptAtrributes = new SetCodeableConceptAttributes(this);
        setNoteAttributes = new SetNoteAttributes(this);
        setPeriodAttributes = new SetPeriodAttributes(this);
        setReferenceAttributes = new SetReferenceAttributes(this);
        setContactPointAttributes = new SetContactPointAttributes(this);
        setNameAttributes = new SetNameAttributes(this);
        setExtensionAttributes = new SetExtensionAttributes(this);
        setCivicAddressAttributes = new SetCivicAddressAttributes(this);
        setCHSAExtensionAttributes = new SetCHSAExtensionAttributes(this);
        setAddressAttributes = new SetAddressAttributes(this);
        setFacilityDetailsAttributes = new SetFacilityDetailsAttributes(this);

        // add practitioner/practitioner role
        setPractitionerAttributes = new SetPractitionerAttributes(this);
        setPractitionerRoleAttributes = new SetPractitionerRoleAttributes(this);
        setPractitionerBundleAttributes = new SetPractitionerBundleAttributes(this);
        setQueryResponseBundleAttributes = new SetQueryResponseBundleAttributes(this);
        setOperationOutcomeIssueComponentAttributes = new SetOperationOutcomeIssueComponentAttributes(this);
        setSpecialtyCodeableConceptAttributes = new SetSpecialtyCodeableConceptAttributes(this);
        setCodingAtrributes = new SetCodingAttributes(this);
        setPurposeCodeAttributes = new SetPurposeCodeAttributes(this);
        setLicenseStatusAttributes = new SetLicenseStatusAttributes(this);
        setQualificationAttributes = new SetQualificationAttributes(this);
        setPracQualifExtAttributes = new SetPractitionerQualificationExtensionAttributes(this);
        // add organization
        setOrganizationAttributes = new SetOrganizationAttributes(this);
        setPractitionerQualificationComponentAttributes = new SetPractitionerQualificationComponentAttributes(this);
        setBirthDateTimeAttributes = new SetBirthDateTimeAttributes(this);
        setDisciplinaryActionAttributes = new SetDisciplinaryActionAttributes(this);
        setConditionAttributes = new SetConditionAttributes(this);
        setConfidentialityAttributes = new SetConfidentialityAttributes(this);
        setPractitionerRelationshipAttributes = new SetPractitionerRelationshipAttributes(this);
        setOrganizationBundleAttributes = new SetOrganizationBundleAttributes(this);
        setQueryResponseOrganizationBundleAttributes = new SetQueryResponseOrganizationBundleAttributes(this);
    }

    public BCFacilityDetailsExtension newBCFacilityDetailsExtension() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCFacilityDetailsExtension();
        }
        return null;
    }

    public IParser newJSONParser() {
        IParser parser = context.newJsonParser();
        parser.setPrettyPrint(true);
        return parser;
    }

    public Object newBundle() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.Bundle();
        }
        return null;
    }

    public Object newBundleEntryComponent() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.Bundle.BundleEntryComponent();
        }
        return null;
    }

    public Object newBCLocation() {
        // add r5 when we need to, now always r4
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCLocation();
        }
        return null;
    }

    public Object newBCPractitioner() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCPractitioner();
        }
        return null;
    }

    public Object newBCPractitionerRole() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCPractitionerRole();
        }
        return null;
    }

    public Object newBCPractitionerBundle() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCPractitionerBundle();
        }
        return null;
    }

    public Object newBCQueryResponseBundle() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCQueryResponseBundle();
        }
        return null;
    }

    public Object newOperationOutcome() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.OperationOutcome();
        }
        return null;
    }

    public Object newOperationOutcomeIssueComponent() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.OperationOutcome.OperationOutcomeIssueComponent();
        }
        return null;
    }

    public Object newBCOrganizationBundle() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCOrganizationBundle();
        }
        return null;
    }

    public String parseEncodedBcPractitioner(Object practitioner) {
        if (version == FHIR_VERSION.R4BC1) {
            return newJSONParser().encodeResourceToString((org.hl7.fhir.r4bc1.model.BCPractitioner) practitioner);
        }
        return null;
    }

    public String parseEncodedBcPractitionerRole(Object practitionerRole) {
        if (version == FHIR_VERSION.R4BC1) {
            return newJSONParser().encodeResourceToString((org.hl7.fhir.r4bc1.model.BCPractitionerRole) practitionerRole);
        }
        return null;
    }

    public String parseEncodedBcPractitionerBundle(Object practitionerBundle) {
        if (version == FHIR_VERSION.R4BC1) {
            return newJSONParser().encodeResourceToString((org.hl7.fhir.r4bc1.model.BCPractitionerBundle) practitionerBundle);
        }
        return null;
    }

    public String parseEncodedBcQueryResponseBundle(Object queryResponseBundleFhir) {
        if (version == FHIR_VERSION.R4BC1) {
            return newJSONParser().encodeResourceToString((org.hl7.fhir.r4bc1.model.BCQueryResponseBundle) queryResponseBundleFhir);
        }
        return null;
    }

    public String parseEncodedBcOrganization(Object organization) {
        if (version == FHIR_VERSION.R4BC1) {
            return newJSONParser().encodeResourceToString((org.hl7.fhir.r4bc1.model.BCOrganization) organization);
        }
        return null;
    }

    public String parseEncodedBcLocation(Object location) {
        if (version == FHIR_VERSION.R4BC1) {
            return newJSONParser().encodeResourceToString((org.hl7.fhir.r4bc1.model.BCLocation) location);
        }
        return null;
    }

    public String parseEncodedBcOrganizationBundle(Object organizationBundle) {
        if (version == FHIR_VERSION.R4BC1) {
            return newJSONParser().encodeResourceToString((org.hl7.fhir.r4bc1.model.BCOrganizationBundle) organizationBundle);
        }
        return null;
    }

    public Object initializeFhirValidator() {
        if (version == FHIR_VERSION.R4BC1) {
            return context.newValidator().setValidateAgainstStandardSchema(true);
        }
        return null;
    }

    public ValidationResult initializeFhirValidationResult(String parsedResourceFhir) {
        if (version == FHIR_VERSION.R4BC1) {
            return context.newValidator().validateWithResult(parsedResourceFhir);
        }
        return null;
    }

    /**
     * FHIR Identifier
     *
     * @return r4 Identifier
     */
    public Object newIdentifier() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.Identifier();
        }
        return null;
    }

    /**
     * Custom BC FHIR Identifier
     *
     * @return r4bc1 version
     */
    public Object newBCIdentifier() {
        // add r5 when we need to, now always r4
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4bc1.model.BCIdentifier();
        }
        return null;
    }

    public Object newBundleEntryRequestComponent() {
        if (version == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.Bundle.BundleEntryRequestComponent();
        }
        return null;
    }

    public enum HttpMethod {
        POST, PUT
    }

    public enum BundleType {
        TRANSACTION, SEARCHSET
    }

    public enum IdentifierUse {
        OFFICIAL, USUAL
    }

    public enum AddressType {
        PHYSICAL, POSTAL, BOTH, NULL
    }

    public enum AddressUse {
        WORK, HOME, NULL
    }

    public enum ContactPointSystem {
        EMAIL, URL, FAX, NULL, OTHER, PAGER, PHONE, SMS
    }

    public enum ContactPointUse {
        WORK, MOBILE, HOME, TEMP, NULL, OLD
    }

    public enum NameUse {
        USUAL, OFFICIAL, TEMP, ANONYMOUS, NULL
    }

    public enum ConfidentialityUse {
        N, R, NULL
    }

    /**
     * Maps gender from PLR code to FHIR code.
     *
     * @param genderPLRCode PLR code
     * @return administrative gender
     */
    public Object genderMapperPLRDtoToFHIR(String genderPLRCode) {
        if (version == FHIR_VERSION.R4BC1) {
            if (genderPLRCode.matches(GENDER_CODE_FEMALE)) {
                return org.hl7.fhir.r4.model.Enumerations.AdministrativeGender.FEMALE;
            } else if (genderPLRCode.matches(GENDER_CODE_MALE)) {
                return org.hl7.fhir.r4.model.Enumerations.AdministrativeGender.MALE;
            } else { //if (genderPLRCode.matches(GENDER_CODE_UNKNOWN)) {
                return org.hl7.fhir.r4.model.Enumerations.AdministrativeGender.UNKNOWN;
            }
        }
        return null;
    }

    /**
     * Maps address type from PLR code to FHIR code.
     *
     * @param addressPLRCode PLR code
     * @return AddressType
     */
    public FHIRFactory.AddressType addressTypeMapperPLRtoToFHIR(String addressPLRCode) {
        if (version == FHIR_VERSION.R4BC1) {
            if (addressPLRCode.matches(ADDRESS_TYPE_MAIL)) {
                return FHIRFactory.AddressType.POSTAL;
            } else if (addressPLRCode.matches(ADDRESS_TYPE_PHYSICAL)) {
                return FHIRFactory.AddressType.PHYSICAL;
            } else { //if (!addressPLRCode.matches(ADDRESS_TYPE_MAIL) && !addressPLRCode.matches(ADDRESS_TYPE_PHYSICAL)) {
                return FHIRFactory.AddressType.NULL;
            }
        }
        return null;
    }

    /**
     * Maps telecom contact point types from PLR code to FHIR code.
     *
     * @param telecomPLRCode PLR type code
     * @return ContactPointSystem
     */
    public FHIRFactory.ContactPointSystem telecomTypeMapperPLRDtoToFHIR(String telecomPLRCode) {
        if (version == FHIR_VERSION.R4BC1) {
            if (telecomPLRCode.matches(TELECOM_TYPE_TELEPHONE)) {
                return FHIRFactory.ContactPointSystem.PHONE;
            } else if (telecomPLRCode.matches(TELECOM_TYPE_FAX)) {
                return FHIRFactory.ContactPointSystem.FAX;
            } else if (telecomPLRCode.matches(TELECOM_TYPE_PAGER)) {
                return FHIRFactory.ContactPointSystem.PAGER;
            } else if (telecomPLRCode.matches(TELECOM_TYPE_MODEM)) {
                return FHIRFactory.ContactPointSystem.OTHER;
            } else if (telecomPLRCode.matches(TELECOM_TYPE_MOBILE)) {
                return FHIRFactory.ContactPointSystem.SMS;
            } else if (telecomPLRCode.matches(TELECOM_TYPE_EMAIL)) {
                return FHIRFactory.ContactPointSystem.EMAIL;
            } else if (telecomPLRCode.matches(TELECOM_TYPE_FTP)) {
                return FHIRFactory.ContactPointSystem.URL;
            } else if (telecomPLRCode.matches(TELECOM_TYPE_HTTP)) {
                return FHIRFactory.ContactPointSystem.URL;
            } else { //if (!telecomPLRCode.matches(TELECOM_TYPE_TELEPHONE) && !addressPLRCode.matches(TELECOM_TYPE_FAX)) {
                return FHIRFactory.ContactPointSystem.NULL;
            }
        }
        return null;
    }

    /**
     * Maps name type from PLR code to FHIR code.
     *
     * @param namePLRCode PLR code
     * @return Object NameUse
     */
    public FHIRFactory.NameUse nameTypeMapperPLRtoToFHIR(String namePLRCode) {
        if (version == FHIR_VERSION.R4BC1) {
            if (namePLRCode.matches(CURRENT_NAME_TYPE_CODE_USE_L)) {
                return FHIRFactory.NameUse.USUAL;
            } else if (namePLRCode.matches(CRED_NAME_TYPE_CODE_USE_C)) {
                return FHIRFactory.NameUse.OFFICIAL;
            } else { //if (!namePLRCode.matches(CURRENT_NAME_TYPE_CODE_USE_L) && !namePLRCode.matches(CURRENT_NAME_TYPE_CODE_USE_L)) {
                return FHIRFactory.NameUse.NULL;
            }
        }
        return null;
    }

    /**
     * Maps confidentiality from PLR code to FHIR code.
     *
     * @param confidentialityFlagPLRCode PLR code
     * @return V3Confidentiality normal/restricted
     */
    public String confidentialityMapperPLRDtoToFHIR(boolean confidentialityFlagPLRCode) {
        if (version == FHIR_VERSION.R4BC1) {
            if (confidentialityFlagPLRCode == true) {
                return org.hl7.fhir.r4.model.codesystems.V3Confidentiality.R.name();
            } else if (confidentialityFlagPLRCode == false) {
                return org.hl7.fhir.r4.model.codesystems.V3Confidentiality.N.name();
            } else {
                return org.hl7.fhir.r4.model.codesystems.V3Confidentiality.NULL.name();
            }
        }
        return null;
    }

    public Object stringToStringType(String string) {
        if (getVersion() == FHIR_VERSION.R4BC1) {
            return new org.hl7.fhir.r4.model.StringType(string);
        }
        return null;
    }

    /**
     * Maps identifier type from PLR code to FHIR code.
     *
     * @param identifierPLRCode PLR code
     * @return Object IdentifierUse
     */
    public FHIRFactory.IdentifierUse identifierTypeMapperPLRtoToFHIR(String identifierPLRCode) {
        // they are all official
        return FHIRFactory.IdentifierUse.OFFICIAL;
    }

    public static void main(String[] s) {
        FHIRFactory factory = new FHIRFactory("R4");
        Object bundle = factory.newBundle();
        factory.setBundleAttributes.setBundleType(bundle, FHIRFactory.BundleType.TRANSACTION);
        factory.setBundleAttributes.setBundleId(bundle, "TODO Distrib Event Item id");
        factory.setBundleAttributes.setBundleTimeStamp(bundle, Calendar.getInstance().getTime());

        // add the location resource request (PUT or add Location)
        Object bundleEntryRequest = factory.newBundleEntryRequestComponent();
        factory.setBundleAttributes.setBundleEntryRequestComponentMethod(bundleEntryRequest, FHIRFactory.HttpMethod.POST);
        factory.setBundleAttributes.setBundleEntryRequestComponentURL(bundleEntryRequest, "/Location/");

        // add location resource
        Object location = factory.newBCLocation();
        factory.setLocationAttributes.setLocationId(location, "loc id");
        factory.setBundleAttributes.addBundleEntry(bundle, location, ProviderFhirConstants.FHIR_URL + "/Location/", bundleEntryRequest);
        factory.setIdentifierAttributes.addBCIdentifier(location, "system", "IFC", Calendar.getInstance().getTime(), Calendar.getInstance().getTime(), FHIRFactory.IdentifierUse.OFFICIAL);

        Object ownerErc = factory.newBCEndReasonCode_OwnerCodeExtension();
        Object ownerId = factory.newBCIdentifier();
        factory.getSetIdentifierAttributes().setIdentifierAssigner(ownerId, "custodian");
        factory.setEndReasonCode_OwnerCodeExtensionAttributes.setERCOwner_Custodian(ownerErc, ownerId);

        Object erc = factory.newCodeableConcept();
        factory.getSetCodeableConceptAttributes().setCodeableConceptText(erc, "CEASE");
        factory.setEndReasonCode_OwnerCodeExtensionAttributes.setERCOwner_Custodian(ownerErc, ownerId);

        // add pract resource
        Object practitioner = factory.newBCPractitioner();
        factory.setPractitionerAttributes.setPractitionerId(practitioner, "prac id");
        factory.setIdentifierAttributes.addBCIdentifier(practitioner, "system", "IPC", Calendar.getInstance().getTime(), Calendar.getInstance().getTime(), FHIRFactory.IdentifierUse.OFFICIAL);

        // add pract resource
        Object practitionerRole = factory.newBCPractitionerRole();
        factory.setPractitionerRoleAttributes.setPractitionerRoleId(practitionerRole, "prac role id");
        Object pracSpecialty = factory.getSetSpecialtyCodeableConceptAttributes();
        factory.setPractitionerRoleAttributes.setPractitionerRoleSpecialty(practitionerRole, pracSpecialty);

        LOG.log(Level.INFO, "FHIRFactory factory.encodeToString bundle is: {0}.", new Object[]{factory.encodeToString(bundle)});
    }
}
