<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.2.xsd
                           http://camel.apache.org/schema/spring
                           http://camel.apache.org/schema/spring/camel-spring.xsd
                           http://www.springframework.org/schema/jee 
                           http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
  
  <import resource="classpath:environmentSpecific.xml"/>
  <import resource="classpath:deployFlavourSpecific.xml"/>   
  
  <bean id="fileDropConfigurationProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
    <property name="location" value="classpath:fileDropConfig.properties"/>
  </bean>
  
  <bean id="camelTracer" class="org.apache.camel.processor.interceptor.Tracer">
    <property name="traceExceptions" value="false"/>
    <property name="traceInterceptors" value="true"/>
    <property name="logLevel" value="INFO"/>
    <property name="logName" value="ca.bc.gov.heath.hsa.camel"/>
  </bean>	   

  <bean id="traceFormatter" class="org.apache.camel.processor.interceptor.DefaultTraceFormatter">
    <property name="showBody" value="false"/>
    <property name="showOutBody" value="false"/>
    <property name="showBodyType" value="false"/>
    <property name="showBreadCrumb" value="true"/>
    <property name="showHeaders" value="false"/>
  </bean> 	   
  
  <context:component-scan base-package="ca.bc.gov.moh.hsa" />
  <camelContext trace="true" xmlns="http://camel.apache.org/schema/spring" handleFault="true">
    <contextScan />
    <jmxAgent id="agent" createConnector="true" serviceUrlPath="camel1"/>
    <!-- custom routes NEEDS to be set up in deployFlavourSpecific.xml in sub module -->
    <routeContextRef ref="customRoutes"/>

  </camelContext>
  
  <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" >
    <property name="persistenceProviderClass" value="org.eclipse.persistence.jpa.PersistenceProvider"/>
    <property name="packagesToScan" value="ca.bc.gov.moh.hsa.util.audit.entity,org.apache.camel.processor.idempotent.jpa" />
    <property name="dataSource" ref="dataSource" />
    <property name="jpaVendorAdapter">
      <bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
        <property name="showSql" value="false"/>
        <property name="generateDdl" value="true"/>
        <!--property name="databasePlatform" value="org.eclipse.persistence.platform.database.HSQLPlatform"/--> 
	<!--<property name="databasePlatform" value="org.eclipse.persistence.platform.database.PostgreSQLPlatform"/>-->
        <property name="databasePlatform" value="org.eclipse.persistence.platform.database.OraclePlatform"/>
	<!--property name="databasePlatform" value="org.eclipse.persistence.platform.database.SQLServerPlatform"/--> 
      </bean>
    </property>
    <property name="jpaDialect">
      <bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect" />
    </property>
    <property name="loadTimeWeaver">
      <bean class="org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver" />
    </property>  
  </bean>
  
  <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="entityManagerFactory" />
  </bean>
  
  <tx:annotation-driven />
  
  <bean id="persistenceExceptionTranslationPostProcessor"
        class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

  <!-- we define our jpa based idempotent repository we want to use in the file consumer -->
  <bean id="jpaStore" class="org.apache.camel.processor.idempotent.jpa.JpaMessageIdRepository">
    <!-- Here we refer to the entityManagerFactory -->
    <constructor-arg index="0" ref="entityManagerFactory"/>
    <!-- This 2nd parameter is the name  (= a category name).
         You can have different repositories with different names -->
    <constructor-arg index="1" value="FileConsumer"/>
  </bean>
  
</beans>

