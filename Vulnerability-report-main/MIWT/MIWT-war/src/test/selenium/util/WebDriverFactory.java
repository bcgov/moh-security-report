package selenium.util;

import java.net.URL;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;

/**
 *
 * @author CGI Information Management Consultants Inc.
 */
public class WebDriverFactory {

    public enum DRIVER_TYPE {

        LOCAL, SERVER
    };
    private static Map<String, WebDriver> remoteDriverCache = new ConcurrentHashMap<>();

    public static WebDriver getInstance() throws Exception {
        DesiredCapabilities desiredCapabilities = DesiredCapabilities.internetExplorer();
        desiredCapabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true);
        desiredCapabilities.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true);

        return getInstance(WebDriverFactory.DRIVER_TYPE.LOCAL, desiredCapabilities);
    }

    public static WebDriver getInstance(WebDriverFactory.DRIVER_TYPE driverType, DesiredCapabilities desiredCapabilities) throws Exception {

        WebDriver driver;

        if (DRIVER_TYPE.SERVER.equals(driverType)) {
            String url = "http://" + SeleniumConfigLoader.getProperty("server-hostname", "localhost") + ":" + SeleniumConfigLoader.getProperty("server-port", "4444") + "/wd/hub";
            String key = url + desiredCapabilities.toString();
            driver = remoteDriverCache.get(key);

            if (driver == null) {
                driver = new RemoteWebDriver(new URL(url), desiredCapabilities);
                remoteDriverCache.put(key, driver);
            }
        } else {
            driver = new RemoteWebDriver(desiredCapabilities);
        }

        return driver;
    }
}
