package mid.selenium.functional.util;

import static mid.selenium.pageobjects.admin.MaintainAnatomicalCodeTablePage.XPATH_FOR_ANATOMICAL_REGION_CODE_FIELD;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import selenium.util.ActionBot;

/**
 *
 * @author CGI Information Management Consultants Inc.
 */
public class ValidationUtils {
    public static final String ADD_SUCCESSFUL = "Add Successful";    
    public static final String UPDATE_SUCCESSFUL = "Update Successful";
    public static final String EFFECTIVE_DATE_REQUIRED = "Effective Date is required";
    public static final String EFFECTIVE_DATE_INVALID = "Effective Date";
    public static final String EXPIRY_DATE_INVALID = "Expiry Date";
    public static final String EXPIRY_MUST_BE_GREATER_THAN_EFFECTIVE_DATE = "Expiry Date must be greater than Effective Date";
    public static final String MAXIMUM_FIELD_LENGTH_REACHED = "Maximum field length reached";
    public static final String NON_EDITABLE_FIELD = "Field should be disabled, but it is not";
    public static final String MAXIMUM_FIELD_LENGTH_VALIDATION_MSG_NOT_EXPECTED = "No Maximum Length validation message expected";
    
    
    public static final String XPATH_SUCCESSFUL_MSG = "//div[@id='content']//span[@class='ui-messages-info-summary']";
    public static final String XPATH_FOR_GLOBAL_VALIDATION_MSG = "//div[@id='content']//span[@class='ui-messages-error-summary']";
    public static final String XPATH_FOR_MAXIMUM_LENGTH_MSG = "//span[@class='lengthWarn']";
    

    public static void assertMessageIsDisplayed(String xpathMessageContainer, String expectedMessage, WebDriver driver) {
        String displayed = driver.findElement(By.xpath(xpathMessageContainer)).getText();
        assert displayed.contains(expectedMessage) : String.format("Expected message '%s' to be displayed, instead of '%s'", expectedMessage, displayed); 

    }
    
     public static void assertFieldIsNotEditable(String xpathForField, String fieldName, WebDriver driver, ActionBot actionBot) {
         
         WebElement elem = driver.findElement(By.xpath(XPATH_FOR_ANATOMICAL_REGION_CODE_FIELD));

        try {
            actionBot.type(elem, "Not Edit");
            assert false : String.format("%s Field should be disabled, but it is not", fieldName);
        } catch (Exception e) {
            assert true;
        }
         
     }
   
}
