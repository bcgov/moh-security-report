package ca.bc.gov.health.mid.ejb.entity;

import ca.bc.gov.health.annotation.CodeTable;
import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.List;

/**
 *
 * @author CGI Information Management Consultants Inc.
 */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "MIRD_FACILITY")
@NamedQueries({
    @NamedQuery(name = "Facility.findAll", query = "SELECT f FROM Facility f"),
    @NamedQuery(name = "Facility.findAllValid", query = "SELECT e FROM Facility e WHERE e.expiryDt IS NULL OR e.expiryDt >= CURRENT_DATE ORDER BY e.facilityNm")})
@CodeTable(label="FACILITY_NM",value="FACILITY_ID")
public class Facility implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @NotNull
    @Column(name = "FACILITY_ID")
    private Long facilityId;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 255)
    @Column(name = "FACILITY_NM")
    private String facilityNm;
    @Size(max = 50)
    @Column(name = "ADDRESS_LINE_1")
    private String addressLine1;
    @Size(max = 50)
    @Column(name = "ADDRESS_LINE_2")
    private String addressLine2;
    @Size(max = 50)
    @Column(name = "ADDRESS_LINE_3")
    private String addressLine3;
    @Size(max = 30)
    @Column(name = "CITY_NM")
    private String cityNm;
    @Size(max = 10)
    @Column(name = "POSTAL_CODE_TXT")
    private String postalCodeTxt;
    @Size(max = 32)
    @Column(name = "HSDA_CD")
    private String hsdaCd;
    @Size(max = 50)
    @Column(name = "HSDA_NM")
    private String hsdaNm;
    @Size(max = 32)
    @Column(name = "LHA_CD")
    private String lhaCd;
    @Size(max = 50)
    @Column(name = "LHA_NM")
    private String lhaNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "EFFECTIVE_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveDt;
    @Column(name = "EXPIRY_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date expiryDt;
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Size(max = 32)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Size(max = 32)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
	@Version
    private Long statelessTransactionNbr;
//    @OneToMany(cascade = CascadeType.ALL, mappedBy = "facilityId")
//    private List<ProcedureMap> procedureMapList;
    @OneToMany(mappedBy = "facilityId", fetch=FetchType.LAZY)
    private List<Booking> bookingList;
    @JoinColumn(name = "HEALTH_AUTHORITY_ID", referencedColumnName = "HEALTH_AUTHORITY_ID")
    @ManyToOne(optional = false)
    private HealthAuthority healthAuthorityId;
    @OneToMany(mappedBy = "facilityId", fetch=FetchType.LAZY)
    private List<CompletedProcedure> completedProcedureList;
    @OneToMany(mappedBy = "facilityId", fetch=FetchType.LAZY)
    private List<Equipment> equipmentList;

    public Facility() {
    }

    public Facility(Long facilityId) {
        this.facilityId = facilityId;
    }

    public Facility(Long facilityId, String facilityNm, Date effectiveDt) {
        this.facilityId = facilityId;
        this.facilityNm = facilityNm;
        this.effectiveDt = effectiveDt;
    }

    public Long getFacilityId() {
        return facilityId;
    }

    public void setFacilityId(Long facilityId) {
        this.facilityId = facilityId;
    }

    public String getFacilityNm() {
        return facilityNm;
    }

    public void setFacilityNm(String facilityNm) {
        this.facilityNm = facilityNm;
    }

    public String getAddressLine1() {
        return addressLine1;
    }

    public void setAddressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
    }

    public String getAddressLine2() {
        return addressLine2;
    }

    public void setAddressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
    }

    public String getAddressLine3() {
        return addressLine3;
    }

    public void setAddressLine3(String addressLine3) {
        this.addressLine3 = addressLine3;
    }

    public String getCityNm() {
        return cityNm;
    }

    public void setCityNm(String cityNm) {
        this.cityNm = cityNm;
    }

    public String getPostalCodeTxt() {
        return postalCodeTxt;
    }

    public void setPostalCodeTxt(String postalCodeTxt) {
        this.postalCodeTxt = postalCodeTxt;
    }

    public String getHsdaCd() {
        return hsdaCd;
    }

    public void setHsdaCd(String hsdaCd) {
        this.hsdaCd = hsdaCd;
    }

    public String getHsdaNm() {
        return hsdaNm;
    }

    public void setHsdaNm(String hsdaNm) {
        this.hsdaNm = hsdaNm;
    }

    public String getLhaCd() {
        return lhaCd;
    }

    public void setLhaCd(String lhaCd) {
        this.lhaCd = lhaCd;
    }

    public String getLhaNm() {
        return lhaNm;
    }

    public void setLhaNm(String lhaNm) {
        this.lhaNm = lhaNm;
    }

    public Date getEffectiveDt() {
        return effectiveDt;
    }

    public void setEffectiveDt(Date effectiveDt) {
        this.effectiveDt = effectiveDt;
    }

    public Date getExpiryDt() {
        return expiryDt;
    }

    public void setExpiryDt(Date expiryDt) {
        this.expiryDt = expiryDt;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

//    public List<ProcedureMap> getProcedureMapList() {
//        return procedureMapList;
//    }
//
//    public void setProcedureMapList(List<ProcedureMap> procedureMapList) {
//        this.procedureMapList = procedureMapList;
//    }

    public List<Booking> getBookingList() {
        return bookingList;
    }

    public void setBookingList(List<Booking> bookingList) {
        this.bookingList = bookingList;
    }

    public HealthAuthority getHealthAuthorityId() {
        return healthAuthorityId;
    }

    public void setHealthAuthorityId(HealthAuthority healthAuthorityId) {
        this.healthAuthorityId = healthAuthorityId;
    }

    public List<CompletedProcedure> getCompletedProcedureList() {
        return completedProcedureList;
    }

    public void setCompletedProcedureList(List<CompletedProcedure> completedProcedureList) {
        this.completedProcedureList = completedProcedureList;
    }

    public List<Equipment> getEquipmentList() {
        return equipmentList;
    }

    public void setEquipmentList(List<Equipment> equipmentList) {
        this.equipmentList = equipmentList;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (facilityId != null ? facilityId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Facility)) {
            return false;
        }
        Facility other = (Facility) object;
        if ((this.facilityId == null && other.facilityId != null) || (this.facilityId != null && !this.facilityId.equals(other.facilityId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.mid.ejb.entity.Facility[ facilityId=" + facilityId + " ]";
    }
    
}
