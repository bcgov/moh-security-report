package ca.bc.gov.health.mid.ejb.entity;

import ca.bc.gov.health.annotation.CodeTable;
import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author CGI Information Management Consultants Inc.
 */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "MIRD_PROCEDURE_RID")
@SequenceGenerator(name="ProcedureRidSeq", sequenceName="MIRD_PROCEDURE_RID_SEQ", allocationSize=1, initialValue=1)
@NamedQueries({
    @NamedQuery(name = "ProcedureRid.findAll", query = "SELECT p FROM ProcedureRid p")})
@CodeTable
public class ProcedureRid implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="ProcedureRidSeq")
        @NotNull
    @Column(name = "PROCEDURE_RID_ID")
    private Long procedureRidId;
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Size(max = 32)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Size(max = 32)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
	@Version
    private Long statelessTransactionNbr;
    @JoinColumn(name = "RID_CODE", referencedColumnName = "RID_CODE")
    @ManyToOne(optional = false)
    private RadlexRid ridCode;
    @JoinColumn(name = "PROCEDURE_ID", referencedColumnName = "PROCEDURE_ID")
    @ManyToOne(optional = false)
    private Procedure procedureId;

    public ProcedureRid() {
    }

    public ProcedureRid(Long procedureRidId) {
        this.procedureRidId = procedureRidId;
    }

    public Long getProcedureRidId() {
        return procedureRidId;
    }

    public void setProcedureRidId(Long procedureRidId) {
        this.procedureRidId = procedureRidId;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public RadlexRid getRidCode() {
        return ridCode;
    }

    public void setRidCode(RadlexRid ridCode) {
        this.ridCode = ridCode;
    }

    public Procedure getProcedureId() {
        return procedureId;
    }

    public void setProcedureId(Procedure procedureId) {
        this.procedureId = procedureId;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (procedureRidId != null ? procedureRidId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof ProcedureRid)) {
            return false;
        }
        ProcedureRid other = (ProcedureRid) object;
        if ((this.procedureRidId == null && other.procedureRidId != null) || (this.procedureRidId != null && !this.procedureRidId.equals(other.procedureRidId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.mid.ejb.entity.ProcedureRid[ procedureRidId=" + procedureRidId + " ]";
    }
    
}
