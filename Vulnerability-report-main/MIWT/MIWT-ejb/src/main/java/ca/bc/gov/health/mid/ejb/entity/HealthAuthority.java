package ca.bc.gov.health.mid.ejb.entity;

import ca.bc.gov.health.annotation.CodeTable;
import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.List;

/**
 * @author CGI Information Management Consultants Inc.
 */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "MIRD_HEALTH_AUTHORITY")
@SequenceGenerator(name = "HealthAuthoritySeq", sequenceName = "MIRD_HEALTH_AUTHORITY_SEQ", allocationSize = 1, initialValue = 1)
@NamedQueries({
        @NamedQuery(name = "HealthAuthority.findAll", query = "SELECT h FROM HealthAuthority h ORDER BY h.healthAuthorityId"),
        @NamedQuery(name = "HealthAuthority.findByCd", query = "SELECT h FROM HealthAuthority h WHERE h.healthAuthorityCd = :healthAuthorityCd")})
@CodeTable(label = "HEALTH_AUTHORITY_CD", value = "HEALTH_AUTHORITY_ID")
@Cacheable
public class HealthAuthority implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @NotNull
    @Column(name = "HEALTH_AUTHORITY_ID")
    private Long healthAuthorityId;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 10)
    @Column(name = "HEALTH_AUTHORITY_CD")
    private String healthAuthorityCd;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 255)
    @Column(name = "HEALTH_AUTHORITY_NM")
    private String healthAuthorityNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "EFFECTIVE_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveDt;
    @Column(name = "EXPIRY_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date expiryDt;
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Size(max = 32)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Size(max = 32)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
    @Version
    private Long statelessTransactionNbr;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<PriorityLevelMap> priorityLevelMapList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<StatusMap> statusMapList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<ModalityMap> modalityMapList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<SnapshotLog> snapshotLogList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<ProvinceMap> provinceMapList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<FundingTypeMap> fundingTypeMapList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<PostponeReasonMap> postponeReasonMapList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<ProcedureMap> procedureMapList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    @OrderBy("approvalDtm")
    private List<DataApproval> dataApprovalList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<FindingsMap> findingsMapList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<EncounterTypeMap> encounterTypeMapList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<Facility> facilityList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<AppropriatenessMap> appropriatenessMapList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<ExamReasonMap> examReasonMapList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<GenderMap> genderMapList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<TimedExamMap> timedExamMapList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<CancellationReasonMap> cancellationReasonMapList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "healthAuthorityId", fetch = FetchType.LAZY)
    private List<AnatomicalImgagingRegionMap> anatomicalImgagingRegionMapList;

    public HealthAuthority() {
    }

    public HealthAuthority(Long healthAuthorityId) {
        this.healthAuthorityId = healthAuthorityId;
    }

    public HealthAuthority(Long healthAuthorityId, String healthAuthorityCd, String healthAuthorityNm, Date effectiveDt) {
        this.healthAuthorityId = healthAuthorityId;
        this.healthAuthorityCd = healthAuthorityCd;
        this.healthAuthorityNm = healthAuthorityNm;
        this.effectiveDt = effectiveDt;
    }

    public Long getHealthAuthorityId() {
        return healthAuthorityId;
    }

    public void setHealthAuthorityId(Long healthAuthorityId) {
        this.healthAuthorityId = healthAuthorityId;
    }

    public String getHealthAuthorityCd() {
        return healthAuthorityCd;
    }

    public void setHealthAuthorityCd(String healthAuthorityCd) {
        this.healthAuthorityCd = healthAuthorityCd;
    }

    public String getHealthAuthorityNm() {
        return healthAuthorityNm;
    }

    public void setHealthAuthorityNm(String healthAuthorityNm) {
        this.healthAuthorityNm = healthAuthorityNm;
    }

    public Date getEffectiveDt() {
        return effectiveDt;
    }

    public void setEffectiveDt(Date effectiveDt) {
        this.effectiveDt = effectiveDt;
    }

    public Date getExpiryDt() {
        return expiryDt;
    }

    public void setExpiryDt(Date expiryDt) {
        this.expiryDt = expiryDt;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public List<PriorityLevelMap> getPriorityLevelMapList() {
        return priorityLevelMapList;
    }

    public void setPriorityLevelMapList(List<PriorityLevelMap> priorityLevelMapList) {
        this.priorityLevelMapList = priorityLevelMapList;
    }

    public List<StatusMap> getStatusMapList() {
        return statusMapList;
    }

    public void setStatusMapList(List<StatusMap> statusMapList) {
        this.statusMapList = statusMapList;
    }

    public List<ModalityMap> getModalityMapList() {
        return modalityMapList;
    }

    public void setModalityMapList(List<ModalityMap> modalityMapList) {
        this.modalityMapList = modalityMapList;
    }

    public List<SnapshotLog> getSnapshotLogList() {
        return snapshotLogList;
    }

    public void setSnapshotLogList(List<SnapshotLog> snapshotLogList) {
        this.snapshotLogList = snapshotLogList;
    }

    public List<ProvinceMap> getProvinceMapList() {
        return provinceMapList;
    }

    public void setProvinceMapList(List<ProvinceMap> provinceMapList) {
        this.provinceMapList = provinceMapList;
    }

    public List<FundingTypeMap> getFundingTypeMapList() {
        return fundingTypeMapList;
    }

    public void setFundingTypeMapList(List<FundingTypeMap> fundingTypeMapList) {
        this.fundingTypeMapList = fundingTypeMapList;
    }

    public List<PostponeReasonMap> getPostponeReasonMapList() {
        return postponeReasonMapList;
    }

    public void setPostponeReasonMapList(List<PostponeReasonMap> postponeReasonMapList) {
        this.postponeReasonMapList = postponeReasonMapList;
    }

    public List<ProcedureMap> getProcedureMapList() {
        return procedureMapList;
    }

    public void setProcedureMapList(List<ProcedureMap> procedureMapList) {
        this.procedureMapList = procedureMapList;
    }

    public List<DataApproval> getDataApprovalList() {
        return dataApprovalList;
    }

    public void setDataApprovalList(List<DataApproval> dataApprovalList) {
        this.dataApprovalList = dataApprovalList;
    }

    public List<FindingsMap> getFindingsMapList() {
        return findingsMapList;
    }

    public void setFindingsMapList(List<FindingsMap> findingsMapList) {
        this.findingsMapList = findingsMapList;
    }

    public List<EncounterTypeMap> getEncounterTypeMapList() {
        return encounterTypeMapList;
    }

    public void setEncounterTypeMapList(List<EncounterTypeMap> encounterTypeMapList) {
        this.encounterTypeMapList = encounterTypeMapList;
    }

    public List<Facility> getFacilityList() {
        return facilityList;
    }

    public void setFacilityList(List<Facility> facilityList) {
        this.facilityList = facilityList;
    }

    public List<AppropriatenessMap> getAppropriatenessMapList() {
        return appropriatenessMapList;
    }

    public void setAppropriatenessMapList(List<AppropriatenessMap> appropriatenessMapList) {
        this.appropriatenessMapList = appropriatenessMapList;
    }

    public List<ExamReasonMap> getExamReasonMapList() {
        return examReasonMapList;
    }

    public void setExamReasonMapList(List<ExamReasonMap> examReasonMapList) {
        this.examReasonMapList = examReasonMapList;
    }

    public List<GenderMap> getGenderMapList() {
        return genderMapList;
    }

    public void setGenderMapList(List<GenderMap> genderMapList) {
        this.genderMapList = genderMapList;
    }

    public List<TimedExamMap> getTimedExamMapList() {
        return timedExamMapList;
    }

    public void setTimedExamMapList(List<TimedExamMap> timedExamMapList) {
        this.timedExamMapList = timedExamMapList;
    }

    public List<CancellationReasonMap> getCancellationReasonMapList() {
        return cancellationReasonMapList;
    }

    public void setCancellationReasonMapList(List<CancellationReasonMap> cancellationReasonMapList) {
        this.cancellationReasonMapList = cancellationReasonMapList;
    }

    public List<AnatomicalImgagingRegionMap> getAnatomicalImgagingRegionMapList() {
        return anatomicalImgagingRegionMapList;
    }

    public void setAnatomicalImgagingRegionMapList(List<AnatomicalImgagingRegionMap> anatomicalImgagingRegionMapList) {
        this.anatomicalImgagingRegionMapList = anatomicalImgagingRegionMapList;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (healthAuthorityId != null ? healthAuthorityId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof HealthAuthority)) {
            return false;
        }
        HealthAuthority other = (HealthAuthority) object;
        if ((this.healthAuthorityId == null && other.healthAuthorityId != null) || (this.healthAuthorityId != null && !this.healthAuthorityId.equals(other.healthAuthorityId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.mid.ejb.entity.HealthAuthority[ healthAuthorityId=" + healthAuthorityId + " ]";
    }

}
