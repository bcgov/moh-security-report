package ca.bc.gov.health.mid.ejb.session;

import ca.bc.gov.health.mid.ejb.entity.ImagingProcedure;
import jakarta.ejb.Local;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.concurrent.atomic.AtomicInteger;

/**
 *
 * @author CGI Information Management Consultants Inc.
 */
@Local
public interface ImagingProcedureFacadeLocal extends SearchableFacadeLocal  {

    void create(ImagingProcedure imagingProcedure);

    void edit(ImagingProcedure imagingProcedure);

    void remove(ImagingProcedure imagingProcedure);
    
    ImagingProcedure find(Object id);

    List<ImagingProcedure> findAll();

    List<ImagingProcedure> findRange(int[] range);

    int count();
    
    List<String> findAllBookingIDsForHA(String haCode);
    
    List<ImagingProcedure> findAllBookingIDsForHAFromDate(String haCode, Date date);
    
    List<ImagingProcedure> findAllForHAForDateRange(String haCode, Date fromDate, Date toDate);

    public Map<String, String> findBookingMapForHa(Long haCode);

    public int batch(List<ImagingProcedure> list, Long ha, int startLine, List<String> messages, Map<String, Object[]> bookingIds, String username, AtomicInteger inserts, AtomicInteger updates);
    
    public int batchToTempTable(List<ImagingProcedure> list, String uploadKey, int startLine, List<String> messages);
    
    public void cleanupTempTable(String uploadKey);
    
    public void cleanupOldRecords();
    
    public void processData(String uploadKey, AtomicInteger inserts, AtomicInteger updates, AtomicInteger dbErrors);
}
