package ca.bc.gov.health.mid.ejb.entity;

import ca.bc.gov.health.annotation.CodeTable;
import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.List;

/**
 *
 * @author CGI Information Management Consultants Inc.
 */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "MIRD_AGE_RANGE")
@SequenceGenerator(name="AgeRangeSeq", sequenceName="MIRD_AGE_RANGE_SEQ", allocationSize=1, initialValue=1)
@NamedQueries({
    @NamedQuery(name = "AgeRange.findAll", query = "SELECT a FROM AgeRange a ORDER BY a.startAge")
   ,@NamedQuery(name = "AgeRange.findAllValid", query = "SELECT a FROM AgeRange a WHERE a.expiryDt IS NULL OR a.expiryDt >= CURRENT_DATE ORDER BY a.startAge")})
@CodeTable(label="START_AGE",value="AGE_RANGE_ID")
public class AgeRange implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="AgeRangeSeq")
        @NotNull
    @Column(name = "AGE_RANGE_ID")
    private Long ageRangeId;
    @Basic(optional = false)
    @NotNull
    @Column(name = "START_AGE")
    @Min(value=0, message="Start age cannot be less than zero(0)")
    private long startAge;
    @Basic(optional = false)
    @NotNull
    @Column(name = "END_AGE")
    @Min(value=1, message="End age cannot be less than 1")
    private long endAge;
    @Basic(optional = false)
    @NotNull    
    @Column(name = "EFFECTIVE_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveDt;
    @Column(name = "EXPIRY_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date expiryDt;
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Size(max = 32)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Size(max = 32)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
	@Version
    private Long statelessTransactionNbr;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "ageRangeId", fetch=FetchType.LAZY)
    private List<CompletedProcedure> completedProcedureList;

    public AgeRange() {
    }

    public AgeRange(Long ageRangeId) {
        this.ageRangeId = ageRangeId;
    }

    public AgeRange(Long ageRangeId, long startAge, long endAge, Date effectiveDt) {
        this.ageRangeId = ageRangeId;
        this.startAge = startAge;
        this.endAge = endAge;
        this.effectiveDt = effectiveDt;
    }
    
    public String getDisplayTxt(){
        return startAge+" - "+endAge;
    }

    public Long getAgeRangeId() {
        return ageRangeId;
    }

    public void setAgeRangeId(Long ageRangeId) {
        this.ageRangeId = ageRangeId;
    }

    public long getStartAge() {
        return startAge;
    }

    public void setStartAge(long startAge) {
        this.startAge = startAge;
    }

    public long getEndAge() {
        return endAge;
    }

    public void setEndAge(long endAge) {
        this.endAge = endAge;
    }

    public Date getEffectiveDt() {
        return effectiveDt;
    }

    public void setEffectiveDt(Date effectiveDt) {
        this.effectiveDt = effectiveDt;
    }

    public Date getExpiryDt() {
        return expiryDt;
    }

    public void setExpiryDt(Date expiryDt) {
        this.expiryDt = expiryDt;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public List<CompletedProcedure> getCompletedProcedureList() {
        return completedProcedureList;
    }

    public void setCompletedProcedureList(List<CompletedProcedure> completedProcedureList) {
        this.completedProcedureList = completedProcedureList;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (ageRangeId != null ? ageRangeId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof AgeRange)) {
            return false;
        }
        AgeRange other = (AgeRange) object;
        if ((this.ageRangeId == null && other.ageRangeId != null) || (this.ageRangeId != null && !this.ageRangeId.equals(other.ageRangeId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.mid.ejb.entity.AgeRange[ ageRangeId=" + ageRangeId + " ]";
    }
    
}
