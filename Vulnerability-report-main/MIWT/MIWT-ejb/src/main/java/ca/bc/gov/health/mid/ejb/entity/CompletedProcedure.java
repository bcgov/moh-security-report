package ca.bc.gov.health.mid.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author CGI Information Management Consultants Inc.
 */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "MIRD_COMPLETED_PROCEDURE")
@SequenceGenerator(name="CompletedProcedureSeq", sequenceName="MIRD_COMPLETED_PROCEDURE_SEQ", allocationSize=100, initialValue=1)
@NamedQueries({
    @NamedQuery(name = "CompletedProcedure.findAll", query = "SELECT c FROM CompletedProcedure c")})
public class CompletedProcedure implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="CompletedProcedureSeq")
        @NotNull
    @Column(name = "COMPLETED_PROCEDURE_ID")
    private Long completedProcedureId;
    @Size(max = 50)
    @Column(name = "HA_PROCEDURE_ID")
    private String haProcedureId;
    @Size(max = 50)
    @Column(name = "URN")
    private String urn;
    @Size(max = 1)
    @Column(name = "SEDATION_YN")
    private String sedationYn;
    @Column(name = "PROCEDURE_DURATION")
    private Long procedureDuration;
    @Column(name = "PROCEDURE_PERFORMED_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date procedurePerformedDt;
    @Column(name = "DRAFT_RESULTS_AVAIL_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date draftResultsAvailDt;
    @Column(name = "FINAL_RESULTS_AVAIL_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date finalResultsAvailDt;
    @Size(max = 10)
    @Column(name = "PRACTITIONER_ID")
    private String practitionerId;
    @Size(max = 5)
    @Column(name = "MSP_NO")
    private String mspNo;
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Size(max = 32)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Column(name = "EXAM_COUNT")
    private Integer examCount;
    @Size(max = 32)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
	@Version
    private Long statelessTransactionNbr;
    @JoinColumn(name = "PROCEDURE_ID", referencedColumnName = "PROCEDURE_ID")
    @ManyToOne
    private Procedure procedureId;
    @JoinColumn(name = "MODALITY_CD", referencedColumnName = "MODALITY_TYPE_CD")
    @ManyToOne
    private Modality modalityCd;
    @JoinColumn(name = "FUNDING_TYPE_CD", referencedColumnName = "FUNDING_TYPE_CD")
    @ManyToOne
    private FundingType fundingTypeCd;
    @JoinColumn(name = "FINDING_CD", referencedColumnName = "FINDING_CD")
    @ManyToOne
    private Findings findingCd;
    @JoinColumn(name = "FACILITY_ID", referencedColumnName = "FACILITY_ID")
    @ManyToOne
    private Facility facilityId;
    @JoinColumn(name = "EQUIPMENT_ID", referencedColumnName = "EQUIPMENT_ID")
    @ManyToOne
    private Equipment equipmentId;
    @JoinColumn(name = "BOOKING_ID", referencedColumnName = "BOOKING_ID")
    @ManyToOne(optional = false)
    private Booking bookingId;
    @JoinColumn(name = "FIRST_IMAGING_REGION_CD", referencedColumnName = "IMAGING_REGION_CD")
    @ManyToOne
    private AnatomicalImagingRegion firstImagingRegionCd;
    @JoinColumn(name = "AGE_RANGE_ID", referencedColumnName = "AGE_RANGE_ID")
    @ManyToOne(optional = false)
    private AgeRange ageRangeId;

            //Health Authority
        //Priority
        //Timed Exam
        //Gender
    @Column(name = "HEALTH_AUTHORITY_ID")
    private Long healthAuthorityId;
    @Column(name = "PRIORITY_LEVEL_ID")
    private Long priorityLevelId;
    @Column(name = "TIMED_EXAM_YN")
    private String timedExamYn;
    @Column(name = "GENDER_CD")
    private String genderCd;
    
    @JoinColumn(name = "BODY_PART_CD", referencedColumnName = "BP_CD")
    @ManyToOne
    private BodyPart bodyPartCd;
    
    public CompletedProcedure() {
    }

    public CompletedProcedure(Long completedProcedureId) {
        this.completedProcedureId = completedProcedureId;
    }

    public Long getCompletedProcedureId() {
        return completedProcedureId;
    }

    public void setCompletedProcedureId(Long completedProcedureId) {
        this.completedProcedureId = completedProcedureId;
    }

    public String getHaProcedureId() {
        return haProcedureId;
    }

    public void setHaProcedureId(String haProcedureId) {
        this.haProcedureId = haProcedureId;
    }

    public String getUrn() {
        return urn;
    }

    public void setUrn(String urn) {
        this.urn = urn;
    }

    public String getSedationYn() {
        return sedationYn;
    }

    public void setSedationYn(String sedationYn) {
        this.sedationYn = sedationYn;
    }

    public Long getProcedureDuration() {
        return procedureDuration;
    }

    public void setProcedureDuration(Long procedureDuration) {
        this.procedureDuration = procedureDuration;
    }

    public Date getProcedurePerformedDt() {
        return procedurePerformedDt;
    }

    public void setProcedurePerformedDt(Date procedurePerformedDt) {
        this.procedurePerformedDt = procedurePerformedDt;
    }

    public Date getDraftResultsAvailDt() {
        return draftResultsAvailDt;
    }

    public void setDraftResultsAvailDt(Date draftResultsAvailDt) {
        this.draftResultsAvailDt = draftResultsAvailDt;
    }

    public Date getFinalResultsAvailDt() {
        return finalResultsAvailDt;
    }

    public void setFinalResultsAvailDt(Date finalResultsAvailDt) {
        this.finalResultsAvailDt = finalResultsAvailDt;
    }

    public String getPractitionerId() {
        return practitionerId;
    }

    public void setPractitionerId(String practitionerId) {
        this.practitionerId = practitionerId;
    }

    public String getMspNo() {
        return mspNo;
    }

    public void setMspNo(String mspNo) {
        this.mspNo = mspNo;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Procedure getProcedureId() {
        return procedureId;
    }

    public void setProcedureId(Procedure procedureId) {
        this.procedureId = procedureId;
    }

    public Modality getModalityCd() {
        return modalityCd;
    }

    public void setModalityCd(Modality modalityCd) {
        this.modalityCd = modalityCd;
    }

    public FundingType getFundingTypeCd() {
        return fundingTypeCd;
    }

    public void setFundingTypeCd(FundingType fundingTypeCd) {
        this.fundingTypeCd = fundingTypeCd;
    }

    public Findings getFindingCd() {
        return findingCd;
    }

    public void setFindingCd(Findings findingCd) {
        this.findingCd = findingCd;
    }

    public Facility getFacilityId() {
        return facilityId;
    }

    public void setFacilityId(Facility facilityId) {
        this.facilityId = facilityId;
    }

    public Equipment getEquipmentId() {
        return equipmentId;
    }

    public void setEquipmentId(Equipment equipmentId) {
        this.equipmentId = equipmentId;
    }

    public Booking getBookingId() {
        return bookingId;
    }

    public void setBookingId(Booking bookingId) {
        this.bookingId = bookingId;
    }

    public AnatomicalImagingRegion getFirstImagingRegionCd() {
        return firstImagingRegionCd;
    }

    public void setFirstImagingRegionCd(AnatomicalImagingRegion firstImagingRegionCd) {
        this.firstImagingRegionCd = firstImagingRegionCd;
    }

    public AgeRange getAgeRangeId() {
        return ageRangeId;
    }

    public void setAgeRangeId(AgeRange ageRangeId) {
        this.ageRangeId = ageRangeId;
    }

    public Long getHealthAuthorityId() {
        return healthAuthorityId;
    }

    public void setHealthAuthorityId(Long healthAuthorityId) {
        this.healthAuthorityId = healthAuthorityId;
    }

    public Long getPriorityLevelId() {
        return priorityLevelId;
    }

    public void setPriorityLevelId(Long priorityLevelId) {
        this.priorityLevelId = priorityLevelId;
    }

    public String getTimedExamYn() {
        return timedExamYn;
    }

    public void setTimedExamYn(String timedExamYn) {
        this.timedExamYn = timedExamYn;
    }

    public String getGenderCd() {
        return genderCd;
    }

    public void setGenderCd(String genderCd) {
        this.genderCd = genderCd;
    }
    
    
    public Integer getExamCount() {
        return examCount;
    }

    public void setExamCount(Integer examCount) {
        this.examCount = examCount;
    }

    public BodyPart getBodyPartCd() {
        return bodyPartCd;
    }

    public void setBodyPartCd(BodyPart bodyPartCd) {
        this.bodyPartCd = bodyPartCd;
    }
    @Override
    public int hashCode() {
        int hash = 0;
        hash += (completedProcedureId != null ? completedProcedureId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof CompletedProcedure)) {
            return false;
        }
        CompletedProcedure other = (CompletedProcedure) object;
        if ((this.completedProcedureId == null && other.completedProcedureId != null) || (this.completedProcedureId != null && !this.completedProcedureId.equals(other.completedProcedureId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.mid.ejb.entity.CompletedProcedure[ completedProcedureId=" + completedProcedureId + " ]";
    }
    
}
