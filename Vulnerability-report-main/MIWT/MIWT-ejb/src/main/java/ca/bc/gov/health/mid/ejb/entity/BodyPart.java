package ca.bc.gov.health.mid.ejb.entity;

import ca.bc.gov.health.annotation.CodeTable;
import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import jakarta.xml.bind.annotation.XmlTransient;
import java.io.Serializable;
import java.math.BigInteger;
import java.util.Date;
import java.util.List;

/**
 *
 * @author CGI Information Management Consultants Inc.
 */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "MIRD_BODY_PART")
@NamedQueries({
    @NamedQuery(name = "BodyPart.findAll", query = "SELECT m FROM BodyPart m "),
    @NamedQuery(name = "BodyPart.findAllValid", query = "SELECT m FROM BodyPart m WHERE m.expiryDt IS NULL OR m.expiryDt >= CURRENT_DATE ORDER BY m.bpCd"),
    @NamedQuery(name = "BodyPart.findByBpCd", query = "SELECT m FROM BodyPart m WHERE m.bpCd = :bpCd"),
    @NamedQuery(name = "BodyPart.findByBpNm", query = "SELECT m FROM BodyPart m WHERE m.bpNm = :bpNm"),
    @NamedQuery(name = "BodyPart.findByBpDesc", query = "SELECT m FROM BodyPart m WHERE m.bpDesc = :bpDesc"),
    @NamedQuery(name = "BodyPart.findByEffectiveDt", query = "SELECT m FROM BodyPart m WHERE m.effectiveDt = :effectiveDt"),
    @NamedQuery(name = "BodyPart.findByExpiryDt", query = "SELECT m FROM BodyPart m WHERE m.expiryDt = :expiryDt"),
    @NamedQuery(name = "BodyPart.findByCreatedOnDtm", query = "SELECT m FROM BodyPart m WHERE m.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "BodyPart.findByLastModifiedOnDtm", query = "SELECT m FROM BodyPart m WHERE m.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "BodyPart.findByCreatedByNm", query = "SELECT m FROM BodyPart m WHERE m.createdByNm = :createdByNm"),
    @NamedQuery(name = "BodyPart.findByLastModifiedByNm", query = "SELECT m FROM BodyPart m WHERE m.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "BodyPart.findByStatelessTransactionNbr", query = "SELECT m FROM BodyPart m WHERE m.statelessTransactionNbr = :statelessTransactionNbr")})
@CodeTable(label = "BP_NM", value = "BP_CD")
public class BodyPart implements Serializable {

    @OneToMany(cascade = CascadeType.ALL, mappedBy = "bodyPartCd", fetch = FetchType.LAZY)
    private List<Procedure> procedureList;

    private static final long serialVersionUID = 1L;
    @Id
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 16)
    @Column(name = "BP_CD")
    private String bpCd;
    @Size(max = 64)
    @Column(name = "BP_NM")
    private String bpNm;
    @Size(max = 256)
    @Column(name = "BP_DESC")
    private String bpDesc;
    @Column(name = "EFFECTIVE_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveDt;
    @Column(name = "EXPIRY_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date expiryDt;
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Size(max = 32)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Size(max = 32)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
    private BigInteger statelessTransactionNbr;

    public BodyPart() {
    }

    public BodyPart(String bpCd) {
        this.bpCd = bpCd;
    }

    public String getBpCd() {
        return bpCd;
    }

    public void setBpCd(String bpCd) {
        this.bpCd = bpCd;
    }

    public String getBpNm() {
        return bpNm;
    }

    public void setBpNm(String bpNm) {
        this.bpNm = bpNm;
    }

    public String getBpDesc() {
        return bpDesc;
    }

    public void setBpDesc(String bpDesc) {
        this.bpDesc = bpDesc;
    }

    public Date getEffectiveDt() {
        return effectiveDt;
    }

    public void setEffectiveDt(Date effectiveDt) {
        this.effectiveDt = effectiveDt;
    }

    public Date getExpiryDt() {
        return expiryDt;
    }

    public void setExpiryDt(Date expiryDt) {
        this.expiryDt = expiryDt;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public BigInteger getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(BigInteger statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (bpCd != null ? bpCd.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof BodyPart)) {
            return false;
        }
        BodyPart other = (BodyPart) object;
        if ((this.bpCd == null && other.bpCd != null) || (this.bpCd != null && !this.bpCd.equals(other.bpCd))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.mid.ejb.entity.MirdBodyPart[ bpCd=" + bpCd + " ]";
    }

    @XmlTransient
    public List<Procedure> getProcedureList() {
        return procedureList;
    }

    public void setProcedureList(List<Procedure> procedureList) {
        this.procedureList = procedureList;
    }

}
