package ca.bc.gov.health.mid.ejb.entity.custom;

import jakarta.faces.model.SelectItem;
import java.util.ArrayList;
import java.util.List;

/**
 * Holds query criteria for the Case Distribution reports
 * @author CGI Information Management Consultants Inc.
 */
public class CaseDistributionCriteria {

    private List<CaseDistributionFilter> filters;

    public CaseDistributionCriteria() {
        filters = new ArrayList<CaseDistributionFilter>();
    }
    
    public List<DynamicColumn> buildColumnList(){
        List<DynamicColumn> cols = new ArrayList<DynamicColumn>();
        CaseDistributionFilter primary = null;
        CaseDistributionFilter secondary = null;
        for (CaseDistributionFilter filter : filters) {
            if (filter.getPrimaryGrouping()){
                primary = filter;
            }else if (filter.getSecondaryGrouping()){
                secondary = filter;
            }
        }
        if (primary!=null){
            cols.add(new DynamicColumn("label", primary.getLabel()));
            if (secondary!=null){
                for (SelectItem item : (secondary.getSelectedOptionAsSelectItem().isEmpty()?secondary.getOptions():secondary.getSelectedOptionAsSelectItem())) {
                    cols.add(new DynamicColumn(item.getLabel(),item.getLabel()));
                }
            }
            cols.add(new DynamicColumn("total", "Total"));
        }
        return cols;
    }

    public String getGroupingDisplayTxt() {
        StringBuilder label = new StringBuilder("Case Distribution by ");
        String primary = null;
        String secondary = null;
        for (CaseDistributionFilter filter : filters) {
            if (filter.getPrimaryGrouping()){
                primary = filter.getLabel();
            }else if (filter.getSecondaryGrouping()){
                secondary = filter.getLabel();
            }
        }
        if (primary!=null){
            label.append(primary);
        }
        if (secondary!=null){
            label.append(" and ").append(secondary).append(" ");
        }
        
        return label.toString();
    }

    public String getGroupingSlugTxt() {
        StringBuilder label = new StringBuilder("case-distribution-");
        String primary = null;
        String secondary = null;
        for (CaseDistributionFilter filter : filters) {
            if (filter.getPrimaryGrouping()){
                primary = filter.getLabel();
            }else if (filter.getSecondaryGrouping()){
                secondary = filter.getLabel();
            }
        }
        if (primary!=null){
            label.append(primary);
        }
        if (secondary!=null){
            label.append("-and-").append(secondary);
        }

        return label.toString();
    }
    
    
    public String getCriteriaDisplayTxtForPrimaryGroup() {
        StringBuilder label = new StringBuilder();
        CaseDistributionFilter primary = null;
        
        for (CaseDistributionFilter filter : filters) {
            if (filter.getPrimaryGrouping()){
                primary = filter;
                break;
            }
        }
        
        if (primary!=null){
            label.append(primary.getLabel()).append(" = ");
            
            for (SelectItem s : primary.getSelectedOptionAsSelectItem()) {
                label.append(s.getLabel()).append(", ");
            }
             label.delete(label.length() - 2, label.length());
        }
        
        return label.toString();
    }
    
     public String getCriteriaDisplayTxtForSecondaryGroup() {
        StringBuilder label = new StringBuilder();
        CaseDistributionFilter secondary = null;
        
        for (CaseDistributionFilter filter : filters) {
            if (filter.getSecondaryGrouping()){
                secondary = filter;
                break;
            }
        }
        
        if (secondary!=null){
            label.append(secondary.getLabel()).append(" = ");
            
            for (SelectItem s : secondary.getSelectedOptionAsSelectItem()) {
                label.append(s.getLabel()).append(", ");
            }
            
            label.delete(label.length() - 2, label.length());
        }
        
        return label.toString();
    }
    
    public String getCriteriaDisplayTxt() {
        StringBuilder label = new StringBuilder("Case Distribution by ");
        String primary = null;
        String secondary = null;
        for (CaseDistributionFilter filter : filters) {
            if (filter.getPrimaryGrouping()){
                primary = filter.getLabel();
            }else if (filter.getSecondaryGrouping()){
                secondary = filter.getLabel();
            }
        }
        if (primary!=null){
            label.append(primary+" ");
        }
        if (secondary!=null){
            label.append("and "+secondary+" ");
        }
        boolean first = true;
        for (CaseDistributionFilter filter : filters) {
            if (filter.getSelectedOptions().length > 0) {
                if (first) {
                    first = false;
                    label.append("having ");
                } else {
                    label.append(" | ");
                }
                label.append(" " + filter.getLabel() + " = ");
                for (String value : filter.getSelectedOptions()) {
                    label.append(decode(value, filter.getOptions()) + ", ");
                }
                label.delete(label.length() - 2, label.length());
            }
        }
        return label.toString();
    }

    private String decode(Object value, List<SelectItem> options) {
        for (SelectItem selectItem : options) {
            if (selectItem.getValue().toString().equals(value.toString())) {
                return selectItem.getLabel();
            }
        }
        return "";
    }

    public List<CaseDistributionFilter> getFilters() {
        return filters;
    }

    public void setFilters(List<CaseDistributionFilter> filters) {
        this.filters = filters;
    }
}
