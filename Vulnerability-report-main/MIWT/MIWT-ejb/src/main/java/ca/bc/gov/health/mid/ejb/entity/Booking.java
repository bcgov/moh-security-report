package ca.bc.gov.health.mid.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.List;

/**
 *
 * @author CGI Information Management Consultants Inc.
 */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "MIRD_BOOKING")
@SequenceGenerator(name="BookingSeq", sequenceName="MIRD_BOOKING_SEQ", allocationSize=100, initialValue=1)
@NamedQueries({
    @NamedQuery(name = "Booking.findAll", query = "SELECT b FROM Booking b")
    })
public class Booking implements Serializable {
    private static final long serialVersionUID = 1L;
    @NotNull
    @Column(name = "PROCEDURE_BOOKING_ID")
    private String procedureBookingId;
    @Id
    @GeneratedValue(strategy=GenerationType.SEQUENCE,generator="BookingSeq")
    @NotNull
    @Column(name = "BOOKING_ID")
    private Long bookingId;    
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 10)
    @Column(name = "STATUS_CD")
    private String statusCd;
    @Column(name = "EXAM_ID")
    private String examId;
    @Column(name = "HEALTH_AUTHORITY_ID")
    @Basic(optional = false)
    @NotNull
    private Long healthAuthorityId;
    @Size(max = 10)
    @Column(name = "PRACTITIONER_ID")
    private String practitionerId;
    @Basic(optional = false)
    @NotNull
    @Size(max = 5)
    @Column(name = "MSP_NO")
    private String mspNo;
    @Column(name = "WAIT_TIME_DAYS")
    private Long waitTimeDays;
    @Column(name = "REFERRAL_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date referralDt;
    @Column(name = "BOOKING_FORM_RECEIVED_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date bookingFormReceivedDt;
    @Column(name = "BOOKING_FORM_CREATED_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date bookingFormCreatedDt;
    @Column(name = "PATIENT_PREFERENCE_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date patientPreferenceDt;
    @Column(name = "PROCEDURE_SCHEDULED_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date procedureScheduledDt;
    @Column(name = "PROCEDURE_CANCELLED_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date procedureCancelledDt;
    @Column(name = "PROCEDURE_POSTPONED_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date procedurePostponedDt;
    @Column(name = "PAT_UNAVAIL_START_DT_1")
    @Temporal(TemporalType.TIMESTAMP)
    private Date patUnavailStartDt1;
    @Column(name = "PAT_UNAVAIL_END_DT_1")
    @Temporal(TemporalType.TIMESTAMP)
    private Date patUnavailEndDt1;
    @Column(name = "PAT_UNAVAIL_START_DT_2")
    @Temporal(TemporalType.TIMESTAMP)
    private Date patUnavailStartDt2;
    @Column(name = "PAT_UNAVAIL_END_DT_2")
    @Temporal(TemporalType.TIMESTAMP)
    private Date patUnavailEndDt2;
    @Column(name = "PAT_UNAVAIL_START_DT_3")
    @Temporal(TemporalType.TIMESTAMP)
    private Date patUnavailStartDt3;
    @Column(name = "PAT_UNAVAIL_END_DT_3")
    @Temporal(TemporalType.TIMESTAMP)
    private Date patUnavailEndDt3;
    @Column(name = "TIMED_EXAM_YN")
    private Character timedExamYn;
    @Column(name = "TIMED_EXAM_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date timedExamDt;
    @Column(name = "BENCHMARK_WAIT_TIME")
    private Long benchmarkWaitTime;
    @Column(name = "PROCEDURE_PERFORMED_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date procedurePerformedDt;
    @Column(name = "RESULTS_SENT_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date resultsSentDt;
    @Column(name = "PROCEDURE_DURATION_MIN")
    private Long procedureDurationMin;
    @Size(max = 1)
    @Column(name = "SEDATION_YN")
    private String sedationYn;
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Size(max = 32)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Size(max = 32)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
    @Version
    private Long statelessTransactionNbr;
    @Column(name = "EXAM_COUNT")
    private Integer examCount;
    @JoinColumn(name = "PROCEDURE_ID", referencedColumnName = "PROCEDURE_ID")
    @ManyToOne
    private Procedure procedureId;
    @JoinColumn(name = "PRIORITY_LEVEL", referencedColumnName = "PRIORITY_LEVEL_ID")
    @ManyToOne
    private PriorityLevel priorityLevel;
    @JoinColumn(name = "POSTPONED_REASON_CD", referencedColumnName = "POSTPONE_REASON_CD")
    @ManyToOne
    private PostponeReason postponedReasonCd;
    @JoinColumn(name = "PATIENT_ID", referencedColumnName = "PATIENT_ID")
    @ManyToOne
    private Patient patientId;
    @JoinColumn(name = "MODALITY_TYPE_CD", referencedColumnName = "MODALITY_TYPE_CD")
    @ManyToOne
    private Modality modalityTypeCd;
    @JoinColumn(name = "FACILITY_ID", referencedColumnName = "FACILITY_ID")
    @ManyToOne
    private Facility facilityId;
    @JoinColumn(name = "EXAM_REASON", referencedColumnName = "EXAM_REASON_CD")
    @ManyToOne(optional = false)
    private ExamReason examReason;
    @JoinColumn(name = "EQUIPMENT_ID", referencedColumnName = "EQUIPMENT_ID")
    @ManyToOne
    private Equipment equipmentId;
    @JoinColumn(name = "ENCOUNTER_TYPE_CD", referencedColumnName = "ENCOUNTER_TYPE_CD")
    @ManyToOne
    private EncounterType encounterTypeCd;
    @JoinColumn(name = "CANCELLATION_REASON_CD", referencedColumnName = "CANCELLATION_REASON_CD")
    @ManyToOne
    private CancellationReason cancellationReasonCd;
    @JoinColumn(name = "APPROPRIATENESS_CD", referencedColumnName = "APPROPRIATENESS_CD")
    @ManyToOne
    private Appropriateness appropriatenessCd;
    @JoinColumn(name = "FIRST_IMAGING_REGION_CD", referencedColumnName = "IMAGING_REGION_CD")
    @ManyToOne
    private AnatomicalImagingRegion firstImagingRegionCd;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "bookingId", fetch=FetchType.LAZY)
    private List<CompletedProcedure> completedProcedureList;
    
    @JoinColumn(name = "BODY_PART_CD", referencedColumnName = "BP_CD")
    @ManyToOne
    private BodyPart bodyPartCd;

    public Booking() {
    }

    public Booking(Long bookingId) {
        this.bookingId = bookingId;
    }

    public Booking(Long bookingId, String statusCd, String examId, String mspNo) {
        this.bookingId = bookingId;
        this.statusCd = statusCd;
        this.examId = examId;
        this.mspNo = mspNo;
    }

    public Long getBookingId() {
        return bookingId;
    }

    public void setBookingId(Long bookingId) {
        this.bookingId = bookingId;
    }
    
    public Integer getExamCount() {
        return examCount;
    }
    
    public void setExamCount(Integer examCount){
        this.examCount = examCount;
    }

    public String getStatusCd() {
        return statusCd;
    }

    public void setStatusCd(String statusCd) {
        this.statusCd = statusCd;
    }

    public String getExamId() {
        return examId;
    }

    public void setExamId(String examId) {
        this.examId = examId;
    }

    public String getPractitionerId() {
        return practitionerId;
    }

    public void setPractitionerId(String practitionerId) {
        this.practitionerId = practitionerId;
    }

    public String getMspNo() {
        return mspNo;
    }

    public void setMspNo(String mspNo) {
        this.mspNo = mspNo;
    }

    public Long getWaitTimeDays() {
        return waitTimeDays;
    }

    public void setWaitTimeDays(Long waitTimeDays) {
        this.waitTimeDays = waitTimeDays;
    }

    public Date getReferralDt() {
        return referralDt;
    }

    public void setReferralDt(Date referralDt) {
        this.referralDt = referralDt;
    }

    public Date getBookingFormReceivedDt() {
        return bookingFormReceivedDt;
    }

    public void setBookingFormReceivedDt(Date bookingFormReceivedDt) {
        this.bookingFormReceivedDt = bookingFormReceivedDt;
    }

    public Date getBookingFormCreatedDt() {
        return bookingFormCreatedDt;
    }

    public void setBookingFormCreatedDt(Date bookingFormCreatedDt) {
        this.bookingFormCreatedDt = bookingFormCreatedDt;
    }

    public Date getPatientPreferenceDt() {
        return patientPreferenceDt;
    }

    public void setPatientPreferenceDt(Date patientPreferenceDt) {
        this.patientPreferenceDt = patientPreferenceDt;
    }

    public Date getProcedureScheduledDt() {
        return procedureScheduledDt;
    }

    public void setProcedureScheduledDt(Date procedureScheduledDt) {
        this.procedureScheduledDt = procedureScheduledDt;
    }

    public Date getProcedureCancelledDt() {
        return procedureCancelledDt;
    }

    public void setProcedureCancelledDt(Date procedureCancelledDt) {
        this.procedureCancelledDt = procedureCancelledDt;
    }

    public Date getProcedurePostponedDt() {
        return procedurePostponedDt;
    }

    public void setProcedurePostponedDt(Date procedurePostponedDt) {
        this.procedurePostponedDt = procedurePostponedDt;
    }

    public Date getPatUnavailStartDt1() {
        return patUnavailStartDt1;
    }

    public void setPatUnavailStartDt1(Date patUnavailStartDt1) {
        this.patUnavailStartDt1 = patUnavailStartDt1;
    }

    public Date getPatUnavailEndDt1() {
        return patUnavailEndDt1;
    }

    public void setPatUnavailEndDt1(Date patUnavailEndDt1) {
        this.patUnavailEndDt1 = patUnavailEndDt1;
    }

    public Date getPatUnavailStartDt2() {
        return patUnavailStartDt2;
    }

    public void setPatUnavailStartDt2(Date patUnavailStartDt2) {
        this.patUnavailStartDt2 = patUnavailStartDt2;
    }

    public Date getPatUnavailEndDt2() {
        return patUnavailEndDt2;
    }

    public void setPatUnavailEndDt2(Date patUnavailEndDt2) {
        this.patUnavailEndDt2 = patUnavailEndDt2;
    }

    public Date getPatUnavailStartDt3() {
        return patUnavailStartDt3;
    }

    public void setPatUnavailStartDt3(Date patUnavailStartDt3) {
        this.patUnavailStartDt3 = patUnavailStartDt3;
    }

    public Date getPatUnavailEndDt3() {
        return patUnavailEndDt3;
    }

    public void setPatUnavailEndDt3(Date patUnavailEndDt3) {
        this.patUnavailEndDt3 = patUnavailEndDt3;
    }

    public Character getTimedExamYn() {
        return timedExamYn;
    }

    public void setTimedExamYn(Character timedExamYn) {
        this.timedExamYn = timedExamYn;
    }

    public Date getTimedExamDt() {
        return timedExamDt;
    }

    public void setTimedExamDt(Date timedExamDt) {
        this.timedExamDt = timedExamDt;
    }

    public Long getBenchmarkWaitTime() {
        return benchmarkWaitTime;
    }

    public void setBenchmarkWaitTime(Long benchmarkWaitTime) {
        this.benchmarkWaitTime = benchmarkWaitTime;
    }

    public Date getProcedurePerformedDt() {
        return procedurePerformedDt;
    }

    public void setProcedurePerformedDt(Date procedurePerformedDt) {
        this.procedurePerformedDt = procedurePerformedDt;
    }

    public Date getResultsSentDt() {
        return resultsSentDt;
    }

    public void setResultsSentDt(Date resultsSentDt) {
        this.resultsSentDt = resultsSentDt;
    }

    public Long getProcedureDurationMin() {
        return procedureDurationMin;
    }

    public void setProcedureDurationMin(Long procedureDurationMin) {
        this.procedureDurationMin = procedureDurationMin;
    }

    public String getSedationYn() {
        return sedationYn;
    }

    public void setSedationYn(String sedationYn) {
        this.sedationYn = sedationYn;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Procedure getProcedureId() {
        return procedureId;
    }

    public void setProcedureId(Procedure procedureId) {
        this.procedureId = procedureId;
    }

    public PriorityLevel getPriorityLevel() {
        return priorityLevel;
    }

    public void setPriorityLevel(PriorityLevel priorityLevel) {
        this.priorityLevel = priorityLevel;
    }

    public PostponeReason getPostponedReasonCd() {
        return postponedReasonCd;
    }

    public void setPostponedReasonCd(PostponeReason postponedReasonCd) {
        this.postponedReasonCd = postponedReasonCd;
    }

    public Patient getPatientId() {
        return patientId;
    }

    public void setPatientId(Patient patientId) {
        this.patientId = patientId;
    }

    public Modality getModalityTypeCd() {
        return modalityTypeCd;
    }

    public void setModalityTypeCd(Modality modalityTypeCd) {
        this.modalityTypeCd = modalityTypeCd;
    }

    public Facility getFacilityId() {
        return facilityId;
    }

    public void setFacilityId(Facility facilityId) {
        this.facilityId = facilityId;
    }

    public ExamReason getExamReason() {
        return examReason;
    }

    public void setExamReason(ExamReason examReason) {
        this.examReason = examReason;
    }

    public Equipment getEquipmentId() {
        return equipmentId;
    }

    public void setEquipmentId(Equipment equipmentId) {
        this.equipmentId = equipmentId;
    }

    public EncounterType getEncounterTypeCd() {
        return encounterTypeCd;
    }

    public void setEncounterTypeCd(EncounterType encounterTypeCd) {
        this.encounterTypeCd = encounterTypeCd;
    }

    public CancellationReason getCancellationReasonCd() {
        return cancellationReasonCd;
    }

    public void setCancellationReasonCd(CancellationReason cancellationReasonCd) {
        this.cancellationReasonCd = cancellationReasonCd;
    }

    public Appropriateness getAppropriatenessCd() {
        return appropriatenessCd;
    }

    public void setAppropriatenessCd(Appropriateness appropriatenessCd) {
        this.appropriatenessCd = appropriatenessCd;
    }

    public AnatomicalImagingRegion getFirstImagingRegionCd() {
        return firstImagingRegionCd;
    }

    public void setFirstImagingRegionCd(AnatomicalImagingRegion firstImagingRegionCd) {
        this.firstImagingRegionCd = firstImagingRegionCd;
    }

    public List<CompletedProcedure> getCompletedProcedureList() {
        return completedProcedureList;
    }

    public void setCompletedProcedureList(List<CompletedProcedure> completedProcedureList) {
        this.completedProcedureList = completedProcedureList;
    }

    public Long getHealthAuthorityId() {
        return healthAuthorityId;
    }

    public void setHealthAuthorityId(Long healthAuthorityId) {
        this.healthAuthorityId = healthAuthorityId;
    }

    public String getProcedureBookingId() {
        return procedureBookingId;
    }

    public void setProcedureBookingId(String procedureBookingId) {
        this.procedureBookingId = procedureBookingId;
    }

    public BodyPart getBodyPartCd() {
        return bodyPartCd;
    }

    public void setBodyPartCd(BodyPart bodyPartCd) {
        this.bodyPartCd = bodyPartCd;
    }
    
    
    @Override
    public int hashCode() {
        int hash = 0;
        hash += (bookingId != null ? bookingId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Booking)) {
            return false;
        }
        Booking other = (Booking) object;
        if ((this.bookingId == null && other.bookingId != null) || (this.bookingId != null && !this.bookingId.equals(other.bookingId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.mid.ejb.entity.Booking[ bookingId=" + bookingId + " ]";
    }
    
}
