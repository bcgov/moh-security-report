/*
 * Search.java
 *
 * Created on Dec 4, 2009, 1:45:48 PM
 */
 
package ca.bc.gov.health.pharmacare.web;

import ca.bc.gov.health.pcbl.session.BenDtlFacadeLocal;
import jakarta.enterprise.context.SessionScoped;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.application.FacesMessage.Severity;
import jakarta.faces.context.FacesContext;
import jakarta.faces.model.SelectItem;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

/**
 * Backing Bean for the Search Criteria screen
 *
 * @author greg.perkins
 */
@SessionScoped
@Named("Search")
public class Search implements Serializable {

    private String drugName = "";
    private String dinPinNpn = "";
    private String planCode = "";
    private String ahfsClassCode = "";
    private String atcClassCode = "";
    private String drugManufacturerCode = "";
    private boolean showSummary = false;
    
    @Inject
    private BenDtlFacadeLocal benefitFacade;
    
    /**
     * <p>Construct a new Page bean instance.</p>
     */
    public Search() {
        reset();
    }
    
    public String doNothing(){
        return null;
    }
    
    public List<String> autocomplete(String suggestion){
        String prefix = suggestion.toUpperCase();
        List<String> matches = new ArrayList<String>();
        DropLists dl = (DropLists)resolveVariable("DropLists");
        List<SelectItem> all = dl.getDrugNames();
        for (SelectItem selectItem : all) {
            if (selectItem.getLabel().toUpperCase().startsWith(prefix)){
                matches.add(selectItem.getLabel());
            }
        }
        return matches;
    }
    
    public String summarySearch(){
        showSummary = true;
        return search();
    }
    
    /**
     * Search button handler
     * @return String
     */
    public String search(){
        if (!validateSearch()){
            return null;
        }else{
            List results = benefitFacade.search(drugName, dinPinNpn, planCode, 
                    ahfsClassCode, atcClassCode, drugManufacturerCode);
            if (results.size()==0){
                addMessage("No drugs found for selected criteria. "+
                           "Please try again. See home page for drugs searchable by the search tool." , FacesMessage.SEVERITY_WARN);
                return null;
            }else{
                if(getFacesContext().getMessages().hasNext()){
                    getFacesContext().getMessages().remove();
                }
                if (!showSummary){
                    SearchResults sr = (SearchResults)resolveVariable("SearchResults");
                    sr.setResults(results);
                    return "searchResults";
                }else{
                    SummaryList sl = (SummaryList)resolveVariable("SummaryList");
                    sl.setResults(results);
                    sl.makeDistinct();
                    return "summaryList";
                }
            }
        }
    }
    
    /**
     * Validates the search criteria
     * @return boolean (True if rules are satisfied)
     */
    public boolean validateSearch(){
        if (hasAValue(planCode)
                || hasAValue(drugName)
                || hasAValue(dinPinNpn)
                || hasAValue(ahfsClassCode)
                || hasAValue(atcClassCode)
                || hasAValue(drugManufacturerCode)){
            return true;
        }else{
            addMessage("Please enter one or more selections before clicking Search.", FacesMessage.SEVERITY_ERROR);
            return false;
        }
    }
    
    /**
     * Determines if messages have been queued
     * @return boolean
     */
    public boolean getMessagesExist(){
        return getFacesContext().getMessages().hasNext();
    }
    
    /**
     * Reset button handler
     * @return String
     */
    public String reset(){
        drugName = "";
        dinPinNpn = "";
        planCode = "";
        ahfsClassCode = "";
        atcClassCode = "";
        drugManufacturerCode = "";
        showSummary = false;
        return "search";
    }    

    /* Helper Methods */
    
    /**
     * Returns the FacesContext instance
     * @return FacesContext
     */
    private FacesContext getFacesContext() {
        return FacesContext.getCurrentInstance();
    }
    
    /**
     * Resolves a EL expression against the current FacesContext
     * @param name String
     * @return Object
     */
    private Object resolveVariable(String name){
        return getFacesContext().getApplication().getELResolver().getValue(FacesContext.getCurrentInstance().getELContext(), null, name);
    }    
    
    /**
     * Determines if a String is null or empty
     * @param in String
     * @return boolean
     */
    private boolean hasAValue(String in){
        return in!=null && !"".equals(in);
    }
    
    /**
     * Adds a global message to the FacesContext
     * @param message String
     */
    private void addMessage(String message, Severity severity){
        getFacesContext().addMessage(null, new FacesMessage(severity, null, message));
    }       
    
    /* Getters and Setters */
    
    public String getAhfsClassCode() {
        return ahfsClassCode;
    }

    public void setAhfsClassCode(String ahfsClassCode) {
        this.ahfsClassCode = ahfsClassCode;
    }

    public String getAtcClassCode() {
        return atcClassCode;
    }

    public void setAtcClassCode(String atcClassCode) {
        this.atcClassCode = atcClassCode;
    }

    public String getDinPinNpn() {
        return dinPinNpn;
    }

    public void setDinPinNpn(String dinPinNpn) {
        this.dinPinNpn = dinPinNpn;
    }

    public String getPlanCode() {
        return planCode;
    }

    public void setPlanCode(String planCode) {
        this.planCode = planCode;
    }

    public String getDrugManufacturerCode() {
        return drugManufacturerCode;
    }

    public void setDrugManufacturerCode(String drugManufacturerCode) {
        this.drugManufacturerCode = drugManufacturerCode;
    }

    public String getDrugName() {
        return drugName;
    }

    public void setDrugName(String drugName) {
        this.drugName = drugName;
    }

    public boolean getShowSummary() {
        return showSummary;
    }

    public void setShowSummary(boolean showSummary) {
        this.showSummary = showSummary;
    }

    public void setBenefitFacade(BenDtlFacadeLocal benefitFacade) {
        this.benefitFacade = benefitFacade;
    }

    
}

