/*******************************************************************************
 * Copyright Â© 2015, Province of British Columbia.                             *
 *                                                                             *
 * All rights reserved.                                                        *
 *                                                                             *
 * File:                        AuditListener.java                             *
 * Date of Last Commit: $Date:: 2015-06-22 17:18:37 -0700 (Mon, 22 Jun 2015) $ *
 * Revision Number:      $Rev:: 2540                                         $ *
 * Last Commit by:    $Author:: cmatsond                                     $ *
 *                                                                             *
 *******************************************************************************/

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.ejb.entitylistener;

import java.lang.reflect.InvocationTargetException;
import java.security.Principal;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

import org.apache.commons.beanutils.PropertyUtils;

import jakarta.annotation.Resource;
import jakarta.ejb.SessionContext;
import jakarta.faces.context.FacesContext;
import jakarta.persistence.PrePersist;
import jakarta.persistence.PreUpdate;

/**
 *
 * @author greg.perkins
 */
public class AuditListener {

    private static final String CLASS_NAME = AuditListener.class.getName();
    private static final Logger log = Logger.getLogger(CLASS_NAME);
    public static final String USER_SESSION_KEY = "ca.bc.gov.health.login.USER_KEY";

    @Resource
    private SessionContext context;

    public AuditListener() {
        log.log(Level.INFO, "Entity Listener created");
    }

    @PrePersist
    public void prePersist(Object entity) {
        try {
            PropertyUtils.setProperty(entity, "createdOnDtm", new Date());
            PropertyUtils.setProperty(entity, "createdByNm", findUserName());
            PropertyUtils.setProperty(entity, "statelessTransactionNbr", 1l);
        } catch (IllegalAccessException | InvocationTargetException | NoSuchMethodException e) {
            log.log(Level.SEVERE, "prePersist encountered an error see stacktrace", e);
        }
    }

    @PreUpdate
    public void preUpdate(Object entity) {
        try {
            PropertyUtils.setProperty(entity, "lastModifiedOnDtm", new Date());
            PropertyUtils.setProperty(entity, "lastModifiedByNm", findUserName());
        } catch (IllegalAccessException | InvocationTargetException | NoSuchMethodException e) {
            log.log(Level.SEVERE, "preUpdate encountered an error see stacktrace", e);
        }
    }

    /**
     * Pulls the current user's name
     *
     * @return String
     */
    private String findUserName() {
        Principal user = (Principal) FacesContext.getCurrentInstance().getExternalContext().getSessionMap()
                .get(USER_SESSION_KEY);
	    return user.getName();

    }
}
