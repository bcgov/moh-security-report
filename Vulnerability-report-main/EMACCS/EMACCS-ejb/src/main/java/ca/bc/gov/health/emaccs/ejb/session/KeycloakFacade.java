package ca.bc.gov.health.emaccs.ejb.session;

import java.util.ArrayList;
import java.util.List;

import ca.bc.gov.health.security.AuthorizationHeaderRequestFilter;
import ca.bc.gov.health.security.KeycloakTokenSupplier;
import ca.bc.gov.health.security.OidcConfig;
import jakarta.annotation.PostConstruct;
import jakarta.annotation.PreDestroy;
import jakarta.ejb.Stateless;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import jakarta.ws.rs.client.Client;
import jakarta.ws.rs.client.ClientBuilder;
import jakarta.ws.rs.client.WebTarget;
import jakarta.ws.rs.core.GenericType;
import jakarta.ws.rs.core.MediaType;
import jakarta.ws.rs.core.Response;

@Named
@Stateless
public class KeycloakFacade {

	@Inject
	private OidcConfig oidcConfig;

	private Client client;
	private KeycloakTokenSupplier tokenSupplier;

	@PostConstruct
	public void init() {
		tokenSupplier = new KeycloakTokenSupplier(oidcConfig.getTokenUri(), oidcConfig.getUmsClientId(),
				oidcConfig.getUmsClientSecret());
		client = ClientBuilder.newBuilder().build();
		client.register(new AuthorizationHeaderRequestFilter(tokenSupplier));
	}

	@PreDestroy
	public void destroy() {
		if (client != null) {
			client.close();
		}
		tokenSupplier.closeClient();
	}

	public List<KeycloakUser> getAdminUsers(String role) {		
		String url = String.format("%s/moh_citizen/clients/%s/roles/%s/users", oidcConfig.getUmsApiUri(), oidcConfig.getClientGuid(),
				role);
		WebTarget target = client.target(url);
		Response response = target.request().accept(MediaType.APPLICATION_JSON_TYPE).get();
		List<KeycloakUser> users = response.readEntity(new GenericType<List<KeycloakUser>>() {});
		users.forEach(user -> user.setRole(role));
		return users;
	}

}
