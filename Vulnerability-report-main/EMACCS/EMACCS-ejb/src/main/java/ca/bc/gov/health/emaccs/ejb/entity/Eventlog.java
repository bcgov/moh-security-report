/*******************************************************************************
 * Copyright Â© 2015, Province of British Columbia.                             *
 *                                                                             *
 * All rights reserved.                                                        *
 *                                                                             *
 * File:                        Eventlog.java                                  *
 * Date of Last Commit: $Date:: 2015-06-22 17:18:37 -0700 (Mon, 22 Jun 2015) $ *
 * Revision Number:      $Rev:: 2540                                         $ *
 * Last Commit by:    $Author:: cmatsond                                     $ *
 *                                                                             *
 *******************************************************************************/

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.emaccs.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.Lob;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "EVENTLOG", schema = "EMA")
@SequenceGenerator(name="EventlogSeq", sequenceName="EVENTLOG_SEQ", allocationSize=1, initialValue=1)
@NamedQueries({
    @NamedQuery(name = "Eventlog.findAll", query = "SELECT e FROM Eventlog e")})
public class Eventlog implements Serializable {
    private static final long serialVersionUID = 1L;
    // @Max(value=?)  @Min(value=?)//if you know range of your decimal fields consider using these annotations to enforce field validation
    @Id
@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="EventlogSeq")
        @NotNull
    @Column(name = "EVENTLOG_ID")
    private BigDecimal eventlogId;
    @Column(name = "COMPLAIN_ID")
    private Long complainId;
    @Column(name = "INCIDENT_ID")
    private Long incidentId;
    @Column(name = "EVENTDATE")
    @Temporal(TemporalType.TIMESTAMP)
    private Date eventdate;
    @Size(max = 6)
    @Column(name = "EVENTNO")
    private String eventno;
    @Size(max = 6)
    @Column(name = "LICNO")
    private String licno;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Size(max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
	@Version
    private Long statelessTransactionNbr;
    @Size(max = 6)
    @Column(name = "COMPNO")
    private String compno;
    @Size(max = 6)
    @Column(name = "CASENO")
    private String caseno;
    @Size(max = 6)
    @Column(name = "INCNO")
    private String incno;
    @Lob
    @Column(name = "EVENTMEMO")
    private String eventmemo;
    @JoinColumn(name = "SH_ID", referencedColumnName = "SH_ID")
    @ManyToOne(optional = false)
    private Lkstkhldr shId;
    @JoinColumn(name = "DATEID", referencedColumnName = "DATEID")
    @ManyToOne(optional = false)
    private Eventdates dateid;
    @JoinColumn(name = "CASE_ID", referencedColumnName = "CASE_ID")
    @ManyToOne
    private Case caseId;

    public Eventlog() {
    }

    public Eventlog(BigDecimal eventlogId) {
        this.eventlogId = eventlogId;
    }

    public Eventlog(BigDecimal eventlogId, String createdByNm, Date createdOnDtm) {
        this.eventlogId = eventlogId;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
    }

    public BigDecimal getEventlogId() {
        return eventlogId;
    }

    public void setEventlogId(BigDecimal eventlogId) {
        this.eventlogId = eventlogId;
    }

    public Long getComplainId() {
        return complainId;
    }

    public void setComplainId(Long complainId) {
        this.complainId = complainId;
    }

    public Long getIncidentId() {
        return incidentId;
    }

    public void setIncidentId(Long incidentId) {
        this.incidentId = incidentId;
    }

    public Date getEventdate() {
        return eventdate;
    }

    public void setEventdate(Date eventdate) {
        this.eventdate = eventdate;
    }

    public String getEventno() {
        return eventno;
    }

    public void setEventno(String eventno) {
        this.eventno = eventno;
    }

    public String getLicno() {
        return licno;
    }

    public void setLicno(String licno) {
        this.licno = licno;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public String getCompno() {
        return compno;
    }

    public void setCompno(String compno) {
        this.compno = compno;
    }

    public String getCaseno() {
        return caseno;
    }

    public void setCaseno(String caseno) {
        this.caseno = caseno;
    }

    public String getIncno() {
        return incno;
    }

    public void setIncno(String incno) {
        this.incno = incno;
    }

    public String getEventmemo() {
        return eventmemo;
    }

    public void setEventmemo(String eventmemo) {
        this.eventmemo = eventmemo;
    }

    public Lkstkhldr getShId() {
        return shId;
    }

    public void setShId(Lkstkhldr shId) {
        this.shId = shId;
    }

    public Eventdates getDateid() {
        return dateid;
    }

    public void setDateid(Eventdates dateid) {
        this.dateid = dateid;
    }

    public Case getCaseId() {
        return caseId;
    }

    public void setCaseId(Case caseId) {
        this.caseId = caseId;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (eventlogId != null ? eventlogId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Eventlog)) {
            return false;
        }
        Eventlog other = (Eventlog) object;
        if ((this.eventlogId == null && other.getEventlogId() != null) || (this.eventlogId != null && !this.eventlogId.equals(other.getEventlogId()))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.emaccs.ejb.entity.Eventlog[ eventlogId=" + eventlogId + " ]";
    }
    
}
