/*******************************************************************************
 * Copyright Â© 2015, Province of British Columbia.                             *
 *                                                                             *
 * All rights reserved.                                                        *
 *                                                                             *
 * File:                        Evalhist.java                                  *
 * Date of Last Commit: $Date:: 2015-06-22 17:18:37 -0700 (Mon, 22 Jun 2015) $ *
 * Revision Number:      $Rev:: 2540                                         $ *
 * Last Commit by:    $Author:: cmatsond                                     $ *
 *                                                                             *
 *******************************************************************************/

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.emaccs.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "EVALHIST", schema = "EMA")
@SequenceGenerator(name="EvalhistSeq", sequenceName="EVALHIST_SEQ", allocationSize=1, initialValue=1)
@NamedQueries({
    @NamedQuery(name = "Evalhist.findAll", query = "SELECT e FROM Evalhist e")})
public class Evalhist implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="EvalhistSeq")
        @NotNull
    @Column(name = "EVALHIST_ID")
    private Long evalhistId;
    @Size(max = 50)
    @Column(name = "COMMENTS")
    private String comments;
    @Column(name = "EVALBFDATE")
    @Temporal(TemporalType.TIMESTAMP)
    private Date evalbfdate;
    @Column(name = "EVALDATE")
    @Temporal(TemporalType.TIMESTAMP)
    private Date evaldate;
    @Column(name = "EVALPASS")
    private Short evalpass;
    @Size(max = 3)
    @Column(name = "EVALREASON")
    private String evalreason;
    @Size(max = 20)
    @Column(name = "FROM_EMARS")
    private String fromEmars;
    @Size(max = 20)
    @Column(name = "FROM_FRRS")
    private String fromFrrs;
    @Column(name = "ISCURRENT")
    private Short iscurrent;
    @Size(max = 6)
    @Column(name = "LICNO")
    private String licno;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Size(max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
	@Version
    private Long statelessTransactionNbr;
    @JoinColumn(name = "REGIS_ID", referencedColumnName = "REGIS_ID")
    @ManyToOne
    private EmergencyMedicalAssistant regisId;
    @JoinColumn(name = "EVCODE", referencedColumnName = "EVCODE")
    @ManyToOne(optional = false)
    private Lkeval evcode;

    public Evalhist() {
    }

    public Evalhist(Long evalhistId) {
        this.evalhistId = evalhistId;
    }

    public Evalhist(Long evalhistId, String createdByNm, Date createdOnDtm) {
        this.evalhistId = evalhistId;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
    }

    public Long getEvalhistId() {
        return evalhistId;
    }

    public void setEvalhistId(Long evalhistId) {
        this.evalhistId = evalhistId;
    }

    public String getComments() {
        return comments;
    }

    public void setComments(String comments) {
        this.comments = comments;
    }

    public Date getEvalbfdate() {
        return evalbfdate;
    }

    public void setEvalbfdate(Date evalbfdate) {
        this.evalbfdate = evalbfdate;
    }

    public Date getEvaldate() {
        return evaldate;
    }

    public void setEvaldate(Date evaldate) {
        this.evaldate = evaldate;
    }

    public Short getEvalpass() {
        return evalpass;
    }

    public void setEvalpass(Short evalpass) {
        this.evalpass = evalpass;
    }

    public String getEvalreason() {
        return evalreason;
    }

    public void setEvalreason(String evalreason) {
        this.evalreason = evalreason;
    }

    public String getFromEmars() {
        return fromEmars;
    }

    public void setFromEmars(String fromEmars) {
        this.fromEmars = fromEmars;
    }

    public String getFromFrrs() {
        return fromFrrs;
    }

    public void setFromFrrs(String fromFrrs) {
        this.fromFrrs = fromFrrs;
    }

    public Short getIscurrent() {
        return iscurrent;
    }

    public void setIscurrent(Short iscurrent) {
        this.iscurrent = iscurrent;
    }

    public String getLicno() {
        return licno;
    }

    public void setLicno(String licno) {
        this.licno = licno;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public EmergencyMedicalAssistant getRegisId() {
        return regisId;
    }

    public void setRegisId(EmergencyMedicalAssistant regisId) {
        this.regisId = regisId;
    }

    public Lkeval getEvcode() {
        return evcode;
    }

    public void setEvcode(Lkeval evcode) {
        this.evcode = evcode;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (evalhistId != null ? evalhistId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Evalhist)) {
            return false;
        }
        Evalhist other = (Evalhist) object;
        if ((this.evalhistId == null && other.getEvalhistId() != null) || (this.evalhistId != null && !this.evalhistId.equals(other.getEvalhistId()))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.emaccs.ejb.entity.Evalhist[ evalhistId=" + evalhistId + " ]";
    }
    
}
