/*******************************************************************************
 * Copyright Â© 2015, Province of British Columbia.                             *
 *                                                                             *
 * All rights reserved.                                                        *
 *                                                                             *
 * File:                        LicenceMaintenance.java                        *
 * Date of Last Commit: $Date:: 2015-06-22 17:18:37 -0700 (Mon, 22 Jun 2015) $ *
 * Revision Number:      $Rev:: 2540                                         $ *
 * Last Commit by:    $Author:: cmatsond                                     $ *
 *                                                                             *
 *******************************************************************************/

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.emaccs.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import ca.bc.gov.health.emaccs.ejb.entity.custom.CCStatus;
import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.ColumnResult;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.EntityResult;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.PostLoad;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.SqlResultSetMapping;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Transient;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author greg.perkins ,fields={
 * @FieldResult(name="", column="")}
 */
@Entity
@SqlResultSetMapping(name = "LicenceMaintenanceWithTotals",
        entities = {
            @EntityResult(entityClass = LicenceMaintenance.class)},
        columns = {
            @ColumnResult(name = "patientCount_Pre"),
            @ColumnResult(name = "patientCount_Post"),
            @ColumnResult(name = "otherActivityCredits_Adj"),
            @ColumnResult(name = "otherActivityCredits_App"),
            @ColumnResult(name = "otherActivityCredits_Pend"),
            @ColumnResult(name = "approvedActivityCredits_Pre"),
            @ColumnResult(name = "approvedActivityCredits_Post")
        })
@EntityListeners({AuditListener.class})
@Table(name = "CMEDAT", schema = "EMA")
@SequenceGenerator(name = "LicenceMaintenanceSeq", sequenceName = "EMA_CMEDAT_SEQ", allocationSize = 1, initialValue = 1)
@NamedQueries({
    @NamedQuery(name = "LicenceMaintenance.findAll", query = "SELECT l FROM LicenceMaintenance l")})
public class LicenceMaintenance implements CCStatus, Serializable {

    @Column(name = "CMEBFDATE")
    @Temporal(TemporalType.TIMESTAMP)
    private Date cmebfdate;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "CMEDATE")
    @Temporal(TemporalType.TIMESTAMP)
    private Date cmedate;
    @Column(name = "STATUS_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    private Date statusDate;
    @Size(max = 100)
    @Column(name = "ASSIGNED_TO_USERNAME")
    private String assignedToUsername;
    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "LicenceMaintenanceSeq")
    @NotNull
    @Column(name = "CMEDAT_ID")
    private Long cmedatId;
    @Column(name = "CMECOMPLET")
    private Short cmecomplet;
    @Column(name = "CMEREQUIRD")
    private Short cmerequird;
    @Size(max = 4)
    @Column(name = "CMEYEAR")
    private String cmeyear;
    @Size(max = 50)
    @Column(name = "COMMENTS")
    private String comments;
    @Size(max = 20)
    @Column(name = "FROM_EMARS")
    private String fromEmars;
    @Size(max = 20)
    @Column(name = "FROM_FRRS")
    private String fromFrrs;
    @Size(max = 6)
    @Column(name = "LICNO")
    private String licno;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Size(max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
    private Long statelessTransactionNbr;
    @JoinColumn(name = "REGIS_ID", referencedColumnName = "REGIS_ID")
    @ManyToOne
    private EmergencyMedicalAssistant regisId;

    @JoinColumn(name = "CCODE", referencedColumnName = "CCODE")
    @ManyToOne(optional = false)
    private Lkcmedat ccode;

    @JoinColumn(name = "REPORTYR", referencedColumnName = "ID")
    @ManyToOne
    private ReportingYear reportyr;
///
    @JoinColumn(name = "EXAM_RECOMMENDATION", referencedColumnName = "ID")
    @ManyToOne(optional = false)
    private Lkexamtype examRecommendation;

    @JoinColumn(name = "DIRECTOR_APPROVAL", referencedColumnName = "ID")
    @ManyToOne(optional = false)
    private Lkadjstatus directorApproval;
    @Transient
    private String orig_directorApproval;

    @JoinColumn(name = "LAST_DIRECTOR_APPROVAL", referencedColumnName = "ID")
    @ManyToOne
    private Lkadjstatus lastDirectorApproval;

    @Column(name = "LAST_DIRECTOR_APPROVAL_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastDirectorApprovalDate;

    @JoinColumn(name = "LAST_EMA_STATUS", referencedColumnName = "CCODE")
    @ManyToOne
    private Lkcmedat lastEmaStatus;

    @Transient
    private int patientCount_Pre;
    @Transient
    private int patientCount_Post;

    @Transient
    private Double otherActivityCredits_Adj;
    @Transient
    private Double otherActivityCredits_App;
    @Transient
    private Double otherActivityCredits_Pend;
    @Transient
    private Double approvedActivityCredits_Pre;
    @Transient
    private Double approvedActivityCredits_Post;

    @Transient
    private Lkcmedat originalCcode;

    public LicenceMaintenance() {
    }

    public LicenceMaintenance(Long cmedatId) {
        this.cmedatId = cmedatId;
    }

    public LicenceMaintenance(Long cmedatId, String createdByNm, Date createdOnDtm) {
        this.cmedatId = cmedatId;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
    }

    public Long getCmedatId() {
        return cmedatId;
    }

    public void setCmedatId(Long cmedatId) {
        this.cmedatId = cmedatId;
    }

    public Short getCmecomplet() {
        return cmecomplet;
    }

    public void setCmecomplet(Short cmecomplet) {
        this.cmecomplet = cmecomplet;
    }

    public Short getCmerequird() {
        return cmerequird;
    }

    public void setCmerequird(Short cmerequird) {
        this.cmerequird = cmerequird;
    }

    public String getCmeyear() {
        return cmeyear;
    }

    public void setCmeyear(String cmeyear) {
        this.cmeyear = cmeyear;
    }

    public String getComments() {
        return comments;
    }

    public void setComments(String comments) {
        this.comments = comments;
    }

    public String getFromEmars() {
        return fromEmars;
    }

    public void setFromEmars(String fromEmars) {
        this.fromEmars = fromEmars;
    }

    public String getFromFrrs() {
        return fromFrrs;
    }

    public void setFromFrrs(String fromFrrs) {
        this.fromFrrs = fromFrrs;
    }

    public String getLicno() {
        return licno;
    }

    public void setLicno(String licno) {
        this.licno = licno;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public EmergencyMedicalAssistant getRegisId() {
        return regisId;
    }

    public void setRegisId(EmergencyMedicalAssistant regisId) {
        this.regisId = regisId;
    }

    public Lkcmedat getCcode() {
        return ccode;
    }

    public void setCcode(Lkcmedat ccode) {
        this.ccode = ccode;
    }

    public ReportingYear getReportyr() {
        return reportyr;
    }

    public void setReportyr(ReportingYear reportyr) {
        this.reportyr = reportyr;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (cmedatId != null ? cmedatId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof LicenceMaintenance)) {
            return false;
        }
        LicenceMaintenance other = (LicenceMaintenance) object;
        if ((this.cmedatId == null && other.getCmedatId() != null) || (this.cmedatId != null && !this.cmedatId.equals(other.getCmedatId()))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.emaccs.ejb.entity.LicenceMaintenance[ cmedatId=" + cmedatId + " ]";
    }

    public Date getCmebfdate() {
        return cmebfdate;
    }

    public void setCmebfdate(Date cmebfdate) {
        this.cmebfdate = cmebfdate;
    }

    public Date getCmedate() {
        return cmedate;
    }

    public void setCmedate(Date cmedate) {
        this.cmedate = cmedate;
    }

    public Date getStatusDate() {
        return statusDate;
    }

    public void setStatusDate(Date statusDate) {
        this.statusDate = statusDate;
    }

    public String getAssignedToUsername() {
        return assignedToUsername;
    }

    public void setAssignedToUsername(String assignedToUsername) {
        this.assignedToUsername = assignedToUsername;
    }

    public Lkadjstatus getDirectorApproval() {
        return directorApproval;
    }

    public void setDirectorApproval(Lkadjstatus directorApproval) {
        this.directorApproval = directorApproval;
    }

    public Lkexamtype getExamRecommendation() {
        return examRecommendation;
    }

    public void setExamRecommendation(Lkexamtype examRecommendation) {
        this.examRecommendation = examRecommendation;
    }

    public Lkadjstatus getLastDirectorApproval() {
        return lastDirectorApproval;
    }

    public void setLastDirectorApproval(Lkadjstatus lastDirectorApproval) {
        this.lastDirectorApproval = lastDirectorApproval;
    }

    public Date getLastDirectorApprovalDate() {
        return lastDirectorApprovalDate;
    }

    public void setLastDirectorApprovalDate(Date lastDirectorApprovalDate) {
        this.lastDirectorApprovalDate = lastDirectorApprovalDate;
    }

    public Lkcmedat getLastEmaStatus() {
        return lastEmaStatus;
    }

    public void setLastEmaStatus(Lkcmedat lastEmaStatus) {
        this.lastEmaStatus = lastEmaStatus;
    }

    /**
     * *
     * optional aggregate
     *
     * @return
     */
    public int getPatientCount_Pre() {
        return patientCount_Pre;
    }

    public void setPatientCount_Pre(int patientCount_Pre) {
        this.patientCount_Pre = patientCount_Pre;
    }

    public int getPatientCount_Post() {
        return patientCount_Post;
    }

    public void setPatientCount_Post(int patientcount_post) {
        this.patientCount_Post = patientcount_post;
    }

    public Double getOtherActivityCredits_Adj() {
        return otherActivityCredits_Adj;
    }

    public Double getOtherActivityCredits_App() {
        return otherActivityCredits_App;
    }

    public Double getOtherActivityCredits_Pend() {
        return otherActivityCredits_Pend;
    }

    public void setOtherActivityCredits_Adj(Double otherActivityCredits_Adj) {
        this.otherActivityCredits_Adj = otherActivityCredits_Adj;
    }

    public void setOtherActivityCredits_App(Double otherActivityCredits_App) {
        this.otherActivityCredits_App = otherActivityCredits_App;
    }

    public void setOtherActivityCredits_Pend(Double otherActivityCredits_Pend) {
        this.otherActivityCredits_Pend = otherActivityCredits_Pend;
    }

    public Double getApprovedActivityCredits_Pre() {
        return approvedActivityCredits_Pre;
    }

    public Double getApprovedActivityCredits_Post() {
        return approvedActivityCredits_Post;
    }

    public void setApprovedActivityCredits_Pre(Double approvedActivityCredits_Pre) {
        this.approvedActivityCredits_Pre = approvedActivityCredits_Pre;
    }

    public void setApprovedActivityCredits_Post(Double approvedActivityCredits_Post) {
        this.approvedActivityCredits_Post = approvedActivityCredits_Post;
    }

    @Override
    public Long getEMA_Id() {
        if (regisId != null) {
            return regisId.getRegisId();
        }
        return null;
    }

    //Added so determinations could be done for changes in status
    @PostLoad
    private void setTransient() {
        originalCcode = ccode;
        orig_directorApproval = directorApproval.getAddesc().toLowerCase();
    }

    //not part of the table
    public Lkcmedat getOriginalCcode() {
        return originalCcode;
    }
    //not part of the table

    public String getLowercaseOriginalDirectorApproval() {
        return orig_directorApproval;
    }
}
