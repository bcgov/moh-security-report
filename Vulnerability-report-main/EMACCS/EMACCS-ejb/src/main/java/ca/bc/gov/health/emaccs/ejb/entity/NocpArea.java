/*******************************************************************************
 * Copyright Â© 2015, Province of British Columbia.                             *
 *                                                                             *
 * All rights reserved.                                                        *
 *                                                                             *
 * File:                        NocpArea.java                                  *
 * Date of Last Commit: $Date:: 2015-06-22 17:18:37 -0700 (Mon, 22 Jun 2015) $ *
 * Revision Number:      $Rev:: 2540                                         $ *
 * Last Commit by:    $Author:: cmatsond                                     $ *
 *                                                                             *
 *******************************************************************************/

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.emaccs.ejb.entity;

import ca.bc.gov.health.annotation.CodeTable;
import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.List;

/**
 *
 * @author greg.perkins
 */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "EMA_CODES_NOCP_AREAS", schema = "EMA")
@SequenceGenerator(name="NocpAreaSeq", sequenceName="EMA_CODES_NOCP_AREAS_SEQ", allocationSize=1, initialValue=1)
@NamedQueries({
    @NamedQuery(name = "NocpArea.findAll", query = "SELECT n FROM NocpArea n")})
@CodeTable(label="AREA_NAME",value="ID")
public class NocpArea implements Serializable {
    @Basic(optional = false)
    @NotNull
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "nocpAreaId")
    private List<ActivityNocpArea> activityNocpAreaList;
    private static final long serialVersionUID = 1L;
    @Id
@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="NocpAreaSeq")
        @NotNull
    @Column(name = "ID")
    private Long id;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 300)
    @Column(name = "AREA_NAME")
    private String areaName;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 10)
    @Column(name = "AREA_CODE")
    private String areaCode;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Size(max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
	@Version
    private Long statelessTransactionNbr;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "nocpAreaId")
    private List<NocpCompetencyType> nocpCompetencyTypeList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "nocpAreaId")
    private List<OtherActivity> otherActivityList;

    public NocpArea() {
    }

    public NocpArea(Long id) {
        this.id = id;
    }

    public NocpArea(Long id, String areaName, String areaCode, String createdByNm, Date createdOnDtm) {
        this.id = id;
        this.areaName = areaName;
        this.areaCode = areaCode;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getAreaName() {
        return areaName;
    }

    public void setAreaName(String areaName) {
        this.areaName = areaName;
    }

    public String getAreaCode() {
        return areaCode;
    }

    public void setAreaCode(String areaCode) {
        this.areaCode = areaCode;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public List<NocpCompetencyType> getNocpCompetencyTypeList() {
        return nocpCompetencyTypeList;
    }

    public void setNocpCompetencyTypeList(List<NocpCompetencyType> nocpCompetencyTypeList) {
        this.nocpCompetencyTypeList = nocpCompetencyTypeList;
    }

    public List<OtherActivity> getOtherActivityList() {
        return otherActivityList;
    }

    public void setOtherActivityList(List<OtherActivity> otherActivityList) {
        this.otherActivityList = otherActivityList;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof NocpArea)) {
            return false;
        }
        NocpArea other = (NocpArea) object;
        if ((this.id == null && other.getId() != null) || (this.id != null && !this.id.equals(other.getId()))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.emaccs.ejb.entity.NocpArea[ id=" + id + " ]";
    }

    public List<ActivityNocpArea> getActivityNocpAreaList() {
        return activityNocpAreaList;
    }

    public void setActivityNocpAreaList(List<ActivityNocpArea> activityNocpAreaList) {
        this.activityNocpAreaList = activityNocpAreaList;
    }
    
}
