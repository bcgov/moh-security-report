/*******************************************************************************
 * Copyright Â© 2015, Province of British Columbia.                             *
 *                                                                             *
 * All rights reserved.                                                        *
 *                                                                             *
 * File:                        PatientContact.java                            *
 * Date of Last Commit: $Date:: 2015-06-22 17:18:37 -0700 (Mon, 22 Jun 2015) $ *
 * Revision Number:      $Rev:: 2540                                         $ *
 * Last Commit by:    $Author:: cmatsond                                     $ *
 *                                                                             *
 *******************************************************************************/

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.emaccs.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import ca.bc.gov.health.emaccs.ejb.entity.custom.CCStatus;
import ca.bc.gov.health.emaccs.ejb.session.AbstractFacade;
import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Transient;
import jakarta.persistence.Version;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "EMA_PATIENT_CONTACTS", schema = "EMA")
@SequenceGenerator(name="PatientContactSeq", sequenceName="EMA_PATIENT_CONTACTS_SEQ", allocationSize=1, initialValue=1)
@NamedQueries({
    @NamedQuery(name = "PatientContact.findAll", query = "SELECT p FROM PatientContact p")})
public class PatientContact implements CCStatus,Serializable {
    private static final long serialVersionUID = 1L;
    @Id
@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="PatientContactSeq")
        @NotNull
    @Column(name = "ID")
    private Long id;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CALL_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    private Date callDate;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Size(max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
	@Version
    private Long statelessTransactionNbr;
    @JoinColumn(name = "EMA_ID", referencedColumnName = "REGIS_ID")
    @ManyToOne(optional = false)
    private EmergencyMedicalAssistant emaId;
    @JoinColumn(name = "SKILL2_ID", referencedColumnName = "ID")
    @ManyToOne
    private Skill skill2Id;
    @JoinColumn(name = "SKILL1_ID", referencedColumnName = "ID")
    @ManyToOne
    private Skill skill1Id;
    @JoinColumn(name = "REPORTING_YEAR_ID", referencedColumnName = "ID")
    @ManyToOne(optional = false)
    private ReportingYear reportingYearId;
    @JoinColumn(name = "CONTACT_TYPE_ID", referencedColumnName = "ID")
    @ManyToOne
    private ContactType contactTypeId;
    @JoinColumn(name = "CONTACT_SUBTYPE_ID", referencedColumnName = "ID")
    @ManyToOne
    private ContactSubtype contactSubtypeId;
    @Size(max = 200)
    @Column(name = "LOCATION")
    private String location;

    @Transient
    private AbstractFacade.EntityChange change= AbstractFacade.EntityChange.None;
    
    public PatientContact() {
    }

    public PatientContact(Long id) {
        this.id = id;
    }

    public PatientContact(Long id, Date callDate, String createdByNm, Date createdOnDtm) {
        this.id = id;
        this.callDate = callDate;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
    }
    
    public PatientContact(Long id, Date callDate, ReportingYear reportingYearId, 
            ContactType contactTypeId, ContactSubtype contactSubtypeId, 
            Skill skill1Id, Skill skill2Id, String createdByNm, Date createdOnDtm) {        
        this.id = id;
        this.callDate = callDate;
        this.reportingYearId = reportingYearId;
        this.contactTypeId = contactTypeId;
        this.contactSubtypeId = contactSubtypeId;
        this.skill1Id = skill1Id;
        this.skill2Id = skill2Id;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Date getCallDate() {
        return callDate;
    }

    public void setCallDate(Date callDate) {
        this.callDate = callDate;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public EmergencyMedicalAssistant getEmaId() {
        return emaId;
    }

    public void setEmaId(EmergencyMedicalAssistant emaId) {
        this.emaId = emaId;
    }

    public Skill getSkill2Id() {
        return skill2Id;
    }

    public void setSkill2Id(Skill skill2Id) {
        this.skill2Id = skill2Id;
    }

    public Skill getSkill1Id() {
        return skill1Id;
    }

    public void setSkill1Id(Skill skill1Id) {
        this.skill1Id = skill1Id;
    }

    public ReportingYear getReportingYearId() {
        return reportingYearId;
    }

    public void setReportingYearId(ReportingYear reportingYearId) {
        this.reportingYearId = reportingYearId;
    }

    public ContactType getContactTypeId() {
        return contactTypeId;
    }

    public void setContactTypeId(ContactType contactTypeId) {
        this.contactTypeId = contactTypeId;
    }

    public ContactSubtype getContactSubtypeId() {
        return contactSubtypeId;
    }

    public void setContactSubtypeId(ContactSubtype contactSubtypeId) {
        this.contactSubtypeId = contactSubtypeId;
    }

    public String getLocation() {
        return location;
    }

    public void setLocation(String location) {
        this.location = location;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof PatientContact)) {
            return false;
        }
        PatientContact other = (PatientContact) object;
        if ((this.id == null && other.getId() != null) || (this.id != null && !this.id.equals(other.getId()))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.emaccs.ejb.entity.PatientContact[ id=" + id + " ]";
    }

    @Override
    public Long getEMA_Id() {
        if(emaId !=null){
            return emaId.getRegisId();
        }
        return null;
    }
    
    public AbstractFacade.EntityChange getChange() {
        return change;
    }

    public void setChange(AbstractFacade.EntityChange change) {
        this.change = change;
    }
}
