/*******************************************************************************
 * Copyright Â© 2015, Province of British Columbia.                             *
 *                                                                             *
 * All rights reserved.                                                        *
 *                                                                             *
 * File:                        AttachmentServlet.java                         *
 * Date of Last Commit: $Date:: 2015-06-22 17:18:37 -0700 (Mon, 22 Jun 2015) $ *
 * Revision Number:      $Rev:: 2540                                         $ *
 * Last Commit by:    $Author:: cmatsond                                     $ *
 *                                                                             *
 *******************************************************************************/

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.emaccs.servlet;

import ca.bc.gov.health.emaccs.ejb.entity.AdjudicationRequest;
import ca.bc.gov.health.emaccs.ejb.entity.OtherActivity2;
import ca.bc.gov.health.emaccs.ejb.session.AdjudicationRequestFacadeLocal;
import ca.bc.gov.health.emaccs.ejb.session.OtherActivity2FacadeLocal;
import jakarta.ejb.EJB;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;

/**
 *
 * @author greg.perkins
 */
public class AttachmentServlet extends HttpServlet{
    private static final long serialVersionUID = 1L;
    @EJB
    private OtherActivity2FacadeLocal otherActivity2Facade;
    @EJB
    private AdjudicationRequestFacadeLocal adjudicationRequestFacade;

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse resp) throws ServletException, IOException {
        String id = request.getParameter("id");
        String ent = request.getParameter("ent");
        byte[] data;
        switch (ent) {
            case "activity":
                {
                    OtherActivity2 oa = otherActivity2Facade.find(Long.parseLong(id));
                    data = (byte[])oa.getAttachment();
                    resp.setHeader("content-type", oa.getMimetype());
                    resp.setHeader("content-disposition", "attachment;filename="+oa.getFilename().replaceAll(" ", "_")); //Added replace to prevent a bug on file download
                    resp.setHeader("content-length",""+data.length);
                    resp.getOutputStream().write(data);
                    break;
                }
            case "adjudication":
                {
                    AdjudicationRequest oa = adjudicationRequestFacade.find(Long.parseLong(id));
                    data = (byte[])oa.getAttachment();
                    resp.setHeader("content-type", oa.getMimetype());
                    resp.setHeader("content-disposition", "attachment;filename="+oa.getFilename());
                    resp.setHeader("content-length",""+data.length);
                    resp.getOutputStream().write(data);
                    break;
                }
            default:
                return;
        }
        resp.getOutputStream().flush();
        resp.getOutputStream().close();
    }


}
