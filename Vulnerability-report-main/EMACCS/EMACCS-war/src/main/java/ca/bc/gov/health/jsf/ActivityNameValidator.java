/*******************************************************************************
 * Copyright Â© 2015, Province of British Columbia.                             *
 *                                                                             *
 * All rights reserved.                                                        *
 *                                                                             *
 * File:                        ActivityNameValidator.java                     *
 * Date of Last Commit: $Date:: 2015-06-22 17:18:37 -0700 (Mon, 22 Jun 2015) $ *
 * Revision Number:      $Rev:: 2540                                         $ *
 * Last Commit by:    $Author:: cmatsond                                     $ *
 *                                                                             *
 *******************************************************************************/

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.jsf;

import jakarta.enterprise.context.RequestScoped;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.component.UIComponent;
import jakarta.faces.component.UIInput;
import jakarta.faces.component.UIOutput;
import jakarta.faces.context.FacesContext;
import jakarta.faces.validator.FacesValidator;
import jakarta.faces.validator.Validator;
import jakarta.faces.validator.ValidatorException;
import java.io.Serializable;
import java.util.logging.Level;
import java.util.logging.Logger;

/* This validator is used for checking whether or not the user has supplied both an Activity Name and an Approved Activity Name on the
 * Batch Activity Evaluation screen, which isn't allowed
 */
@RequestScoped
@FacesValidator("validator.activityNames")
public class ActivityNameValidator implements Validator,Serializable{
    private static final String CLASS_NAME = ActivityNameValidator.class.getName();
    private static final Logger log = Logger.getLogger(CLASS_NAME );
    @Override
    public void validate(FacesContext context, UIComponent component, Object value) throws ValidatorException {
        if(! (component instanceof UIInput)){
            log.log(Level.WARNING, "Validate did not recieve a UIInput component");
            return;
        }
        /* Approved Activity Id */
        String approvedActivityId = (String) value;
        
        /* Activity Name */
        String componentId = (String)((UIInput)component).getAttributes().get("NewActivityName");
        String activityId = (String)((UIOutput)context.getViewRoot().findComponent(componentId)).getValue();
        
        
        if(approvedActivityId!=null && activityId!=null && !approvedActivityId.isEmpty() && !activityId.isEmpty()) {
            String msg = "Please provide either an Activity Name or an Approved Activity Name, but not both";
            if (component.getAttributes().get("message")!=null){
                msg = (String)component.getAttributes().get("message");
            }
            FacesMessage message = new FacesMessage(msg);
            message.setSeverity(FacesMessage.SEVERITY_ERROR);
            throw new ValidatorException(message);            
        }
    }

    
}
