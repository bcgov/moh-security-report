/*******************************************************************************
 * Copyright Â© 2015, Province of British Columbia.                             *
 *                                                                             *
 * All rights reserved.                                                        *
 *                                                                             *
 * File:                        MaintainBulletin.java                          *
 * Date of Last Commit: $Date:: 2015-06-22 17:18:37 -0700 (Mon, 22 Jun 2015) $ *
 * Revision Number:      $Rev:: 2540                                         $ *
 * Last Commit by:    $Author:: cmatsond                                     $ *
 *                                                                             *
 *******************************************************************************/

package ca.bc.gov.health.emaccs.web;

import ca.bc.gov.health.ejb.exception.FacadeException;
import ca.bc.gov.health.emaccs.ejb.entity.Bulletin;
import ca.bc.gov.health.emaccs.ejb.session.BulletinFacadeLocal;
import ca.bc.gov.health.jsf.BaseBean;
import jakarta.annotation.PostConstruct;
import jakarta.ejb.EJB;
import jakarta.faces.view.ViewScoped;
import jakarta.inject.Named;
import java.io.Serializable;
import java.util.List;

/**
 * Backing bean for Bulletin code table maintenance
 */
@ViewScoped
@Named("MaintainBulletin")
public class MaintainBulletin extends BaseBean implements Serializable {
    private static final long serialVersionUID = 1L;

    
    @EJB
    private BulletinFacadeLocal bulletinFacade;


    private List<Bulletin> allBulletins;
    private Bulletin bulletin;
    private Object selectedKey;

    public MaintainBulletin() {
    }

    @PostConstruct
    public void init() {
        allBulletins = bulletinFacade.findAll();
        bulletin = new Bulletin();
    }

    /**
     * Adds a new record
     */
    public String add() {

        nullify();

        try {
            bulletinFacade.create(bulletin);
            addInfoMessage("Add Successful");
        } catch (FacadeException e) {
            addErrorMessage("Add Failed");
        }
        return clear();

    }

    /**
     * Updates an existing record
     */
    public String update() {

        nullify();
        try{
            bulletinFacade.edit(bulletin);
            addInfoMessage("Update Successful");
        }catch(FacadeException e){
            addErrorMessage("Update Failed");
        }

        return clear();

    }

    /**
     * Deletes a record
     */
    public String delete() {
        nullify();
        try {
            for (int i = 0; i < allBulletins.size(); i++) {
                if (allBulletins.get(i).getId().equals(selectedKey)) {
                    bulletinFacade.remove(allBulletins.get(i));
                }
            }
            addInfoMessage("Remove Successful");
        } catch (FacadeException e) {
            addErrorMessage("Delete Failed");
        }
        return clear();
    }

    /**
     * Clears the form
     */
    public String clear() {
        init();
        selectedKey = null;
        bulletin = new Bulletin();
        resetComponent("form1");
        return null;
    }

    /**
     * Selects a record for editing
     */
    public String select() {
        for (int i = 0; i < allBulletins.size(); i++) {
            if (allBulletins.get(i).getId().equals(selectedKey)) {
                bulletin = allBulletins.get(i);
            }
        }
        return null;
    }

    /**
     * Nullifies any parent records where proper PKs aren't set
     */
    private void nullify() {
    }
    /*
     * Getters and Setters
     */

    public List<Bulletin> getAllBulletins() {
        return allBulletins;
    }

    public void setAllBulletins(List<Bulletin> allBulletins) {
        this.allBulletins = allBulletins;
    }

    public Bulletin getBulletin() {
        return bulletin;
    }

    public void setBulletin(Bulletin bulletin) {
        this.bulletin = bulletin;
    }

    public Object getSelectedKey() {
        return selectedKey;
    }

    public void setSelectedKey(Object selectedKey) {
        this.selectedKey = selectedKey;
    }
}