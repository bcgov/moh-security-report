/*******************************************************************************
 * Copyright Â© 2015, Province of British Columbia.                             *
 *                                                                             *
 * All rights reserved.                                                        *
 *                                                                             *
 * File:                        MaintainCodeTables.java                        *
 * Date of Last Commit: $Date:: 2016-11-18 12:55:57 -0800 (Fri, 18 Nov 2016) $ *
 * Revision Number:      $Rev:: 2649                                         $ *
 * Last Commit by:    $Author:: tschiavo                                     $ *
 *                                                                             *
 *******************************************************************************/

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.emaccs.web;

import ca.bc.gov.health.ejb.exception.FacadeException;
import ca.bc.gov.health.emaccs.ejb.session.batch.CreditTransferBatchFacadeLocal;
import ca.bc.gov.health.jsf.BaseBean;
import jakarta.ejb.EJB;
import jakarta.faces.event.ValueChangeEvent;
import jakarta.faces.view.ViewScoped;
import jakarta.inject.Named;
import java.io.Serializable;

/**
 *
 * @author joshua.lewis
 */
@ViewScoped
@Named("MaintainCodeTables")
public class MaintainCodeTables extends BaseBean implements Serializable{



    @EJB
    private CreditTransferBatchFacadeLocal batchFacade;
    
    private long  reportingYearId;


    /**
     * Creates a new instance of MaintainCodeTables
     */
    public MaintainCodeTables() {

    }

    /**
     * Action listener to kick off batch transfer credit job
     * @return
     */
    public String batch() {
        try{

            
            String msg = batchFacade.transferCredits(reportingYearId);
            super.addInfoMessage(msg);
        }catch(FacadeException e){
            super.addErrorMessage("Batch Transfer failed, interrogate the log.");
        }
        return null;
    }
     public void changeReportingYear(ValueChangeEvent event) {
        reportingYearId = (Long) event.getNewValue();
     }
    
    public long getReportingYearId() {
        return reportingYearId;
    }

    public void setReportingYearId(long reportingYearId) {
        this.reportingYearId = reportingYearId;
    }



}
