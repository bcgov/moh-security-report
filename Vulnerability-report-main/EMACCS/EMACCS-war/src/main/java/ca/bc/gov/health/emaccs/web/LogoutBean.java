package ca.bc.gov.health.emaccs.web;

import ca.bc.gov.health.security.OidcConfig;
import fish.payara.security.openid.api.OpenIdContext;
import jakarta.enterprise.context.RequestScoped;
import jakarta.faces.context.FacesContext;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import jakarta.servlet.ServletException;
import java.io.IOException;
import java.io.Serializable;
import java.net.URLEncoder;

@RequestScoped
@Named("Logout")
public class LogoutBean implements Serializable {

    private static final long serialVersionUID = 1L;

    @Inject
    private OpenIdContext context;

    @Inject
    private OidcConfig oidcConfig;

    public String logout() throws ServletException, IOException {

        String idToken = "";
        if (context.getIdentityToken() != null) {
            idToken = context.getIdentityToken().getToken();
        }

        /**
         * Currently Keycloak does not support logging out of SiteMinder IDP's automatically so we set the Keycloak
         * Logout redirect_uri= parameter to be the SiteMinder logout and we set the SiteMinder returl= parameter to be
         * application which chains both logouts for full Single Sign Out. https://github.com/bcgov/ocp-sso/issues/4
         */
        String logoutUrl
                = oidcConfig.getSiteminderLogoutUri()
                + "?retnow=1&returl="
                + oidcConfig.getRedirectUri();
        String keycloakLogoutUrl
                = oidcConfig.getProviderUri()
                + "protocol/openid-connect/logout?post_logout_redirect_uri="
                + URLEncoder.encode(logoutUrl, "UTF-8")
                + "&id_token_hint=" + idToken;

        FacesContext.getCurrentInstance().getExternalContext().redirect(keycloakLogoutUrl);
        FacesContext.getCurrentInstance().getExternalContext().invalidateSession();
        return null;
    }

}
