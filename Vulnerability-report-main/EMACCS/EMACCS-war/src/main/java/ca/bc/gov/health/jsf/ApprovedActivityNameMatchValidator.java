/*******************************************************************************
 * Copyright Â© 2015, Province of British Columbia.                             *
 *                                                                             *
 * All rights reserved.                                                        *
 *                                                                             *
 * File:                        ApprovedActivityNameMatchValidator.java        *
 * Date of Last Commit: $Date:: 2015-06-22 17:18:37 -0700 (Mon, 22 Jun 2015) $ *
 * Revision Number:      $Rev:: 2540                                         $ *
 * Last Commit by:    $Author:: cmatsond                                     $ *
 *                                                                             *
 *******************************************************************************/

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.jsf;

import ca.bc.gov.health.emaccs.ejb.entity.ApprovedActivity;
import ca.bc.gov.health.emaccs.web.SubmitApprovedActivities;
import jakarta.enterprise.context.RequestScoped;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.component.UIComponent;
import jakarta.faces.context.FacesContext;
import jakarta.faces.validator.FacesValidator;
import jakarta.faces.validator.Validator;
import jakarta.faces.validator.ValidatorException;
import jakarta.inject.Inject;
import java.io.Serializable;
import java.util.List;

/*
 * This validator checks if a submitted Approved Activity name matches an existing Approved Activity name
 */
@RequestScoped
@FacesValidator(value = "validator.approvedActivityNameMatcher", managed = true)
public class ApprovedActivityNameMatchValidator implements Validator, Serializable {

    @Inject
    SubmitApprovedActivities submitApprovedActivities;

    @Override
    public void validate(FacesContext context, UIComponent component, Object value) throws ValidatorException {

        /* Submitted Approved Activity Name */
        Long approvedActivityId = (Long) value;
        List<ApprovedActivity> aList = submitApprovedActivities.getApprovedActivityList();
        String msg = "Each Approved Activity may only be selected once per reporting year.";

        if (approvedActivityId != null && approvedActivityId > 0) {

            for (ApprovedActivity aa : aList) {
                if (approvedActivityId.equals(aa.getActivityId().getId())) {

                    FacesMessage message = new FacesMessage(msg);
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    throw new ValidatorException(message);
                }
            }

        }

    }

}
