/*******************************************************************************
 * Copyright Â© 2015, Province of British Columbia.                             *
 *                                                                             *
 * All rights reserved.                                                        *
 *                                                                             *
 * File:                        DateComparisonValidator.java                   *
 * Date of Last Commit: $Date:: 2015-06-22 17:18:37 -0700 (Mon, 22 Jun 2015) $ *
 * Revision Number:      $Rev:: 2540                                         $ *
 * Last Commit by:    $Author:: cmatsond                                     $ *
 *                                                                             *
 *******************************************************************************/

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.jsf;

import jakarta.enterprise.context.RequestScoped;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.component.UIComponent;
import jakarta.faces.component.UIInput;
import jakarta.faces.context.FacesContext;
import jakarta.faces.validator.FacesValidator;
import jakarta.faces.validator.Validator;
import jakarta.faces.validator.ValidatorException;
import java.io.Serializable;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author greg.perkins
 */
@RequestScoped
@FacesValidator("validator.dateComparison")
public class DateComparisonValidator implements Validator,Serializable{
  private static final String CLASS_NAME = DateComparisonValidator.class.getName();
  private static final Logger log = Logger.getLogger(CLASS_NAME );
    /*
     * This validator ensures that the 'beforeDate' is before the 'afterDate,'
     * and that neither are after today
     */
    @Override
    public void validate(FacesContext context, UIComponent component, Object value) throws ValidatorException {
        if(! (component instanceof UIInput)){
            log.log(Level.WARNING, "Validate did not recieve a UIInput component");
            return;
        }
        if (value == null || ((UIInput)component).getAttributes().get("beforeDate") == null){ 
            return;
        }

        Date toDate   = (Date) value;
        UIInput fromDateInput = (UIInput) component.getAttributes().get("beforeDate");
        Date fromDate = (Date) fromDateInput.getValue();

        if (fromDate != null) {
            if (toDate.before(fromDate)) {

                String msg = "Start Date cannot be after End Date";
                if (component.getAttributes().get("message") != null){
                    msg = (String)component.getAttributes().get("message");
                }
                FacesMessage message = new FacesMessage(msg);
                message.setSeverity(FacesMessage.SEVERITY_ERROR);
                throw new ValidatorException(message);
            }
            else if (toDate.after(new Date())) {
                String msg = "End Date cannot be after today.";
                if (component.getAttributes().get("message") != null){
                    msg = (String)component.getAttributes().get("message");
                }
                FacesMessage message = new FacesMessage(msg);
                message.setSeverity(FacesMessage.SEVERITY_ERROR);
                throw new ValidatorException(message);
            }
        }
    }


}
