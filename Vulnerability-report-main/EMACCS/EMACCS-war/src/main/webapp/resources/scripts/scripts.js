function detectEnter(event) {
    if(event.keyCode == 13) {
        document.getElementById("form1:LicenceNumber").blur();
        return false;
    }
}
function unsetReturned() {
    var returnedMail = jQuery("input:hidden[id$='returnmail']").val()
    if (returnedMail=="-1") {
        //jQuery("input:hidden[name$='returnmail']").val(0);
        jQuery("span.rf-msgs-err").hide();
    }
}
$(document).unbind('keydown').bind('keydown', function (event) {
    var doPrevent = false;
    if (event.keyCode === 8) {
        var d = event.srcElement || event.target;
        if ((d.tagName.toUpperCase() === 'INPUT' && (d.type.toUpperCase() === 'TEXT' || d.type.toUpperCase() === 'PASSWORD'))
             || d.tagName.toUpperCase() === 'TEXTAREA') {
            doPrevent = d.readOnly || d.disabled;
        }
        else {
            doPrevent = true;
        }
    }

    if (doPrevent) {
        event.preventDefault();
    }
});

$(document).ready(function() {
    $('li.dropdown').mouseenter(function() {
        $(this).toggleClass('active-dropdown');
    });

    $('li.dropdown').mouseleave(function() {
        $(this).toggleClass('active-dropdown');
    });
});

// Session Management
const TIMEOUT = 1920000; // 32 MINS slightly longer than KC session timeout, 1 minute less than timeout in web.xml
const ACTIVITY_CHECK_INTERVAL = 60000; // 1 min
const MAX_TIME_REMAINING_BEFORE_GROWL = 120000; // growl will be shown when this many seconds are remaining in the session

$(document).ready(function () {
    $.active = false;
    $.growl = false;
    $.elapsed = 0;
    $('body').bind('click keypress', function () {
        $.active = true;
    });
    checkActivity();
    setInterval(checkActivity, ACTIVITY_CHECK_INTERVAL); // function, interval
});

function checkActivity() {
    if ($.active) {
        $.elapsed = 0;
        $.active = false;
        $.growl = false;
        PF('timeoutWarning').removeAll();
        extendSession(); // p:remoteCommand in gov30Template.xhtml
    }
    if ($.elapsed < TIMEOUT) {
        $.elapsed += ACTIVITY_CHECK_INTERVAL;
        // console.log($.elapsed + " " + new Date());

        if ($.elapsed > (TIMEOUT - MAX_TIME_REMAINING_BEFORE_GROWL) && $.growl === false) {
            PF('timeoutWarning').show([{
                    "summary": "Your session is about to expire",
                    "detail": "Please continue using the application to extend your session",
                    "severity": "warn"}]);
            $.growl = true;
        }
    } else {
        endSession().then(() => location.reload());
    }
}