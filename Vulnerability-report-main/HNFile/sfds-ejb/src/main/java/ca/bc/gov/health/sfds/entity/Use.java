package ca.bc.gov.health.sfds.entity;

import ca.bc.gov.health.sfds.dto.RulesbasedaccountDto;
import ca.bc.gov.health.sfds.dto.UseDto;
import jakarta.persistence.AttributeOverride;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import java.io.Serializable;
import java.math.BigDecimal;

/** The persistent class for the USES database table. */
@Entity
@NamedQuery(name = "Use.findByUseId", query = "SELECT u FROM Use u WHERE u.useId = :useId")
@Table(name = "USES")
@AttributeOverride(name = "name", column = @Column(name = "NAME"))
@AttributeOverride(name = "useId", column = @Column(name = "USE_ID"))
@AttributeOverride(name = "timeLimit", column = @Column(name = "TIME_LIMIT"))
@AttributeOverride(name = "acknowledgement", column = @Column(name = "ACKNOWLEDGEMENT"))
@AttributeOverride(name = "confirmationType", column = @Column(name = "CONFIRMATION_TYPE"))
@AttributeOverride(name = "notificationType", column = @Column(name = "NOTIFICATION_TYPE"))
@AttributeOverride(name = "searchFields", column = @Column(name = "SEARCH_FIELDS"))
@AttributeOverride(name = "sendLabel", column = @Column(name = "SEND_LABEL"))
@AttributeOverride(name = "sortComparator", column = @Column(name = "SORT_COMPARATOR"))
@AttributeOverride(name = "textMessage", column = @Column(name = "TEXT_MESSAGE"))
@AttributeOverride(name = "timeLimit", column = @Column(name = "TIME_LIMIT"))
@AttributeOverride(name = "createDate", column = @Column(name = "CREATE_DATE"))
@AttributeOverride(name = "createUser", column = @Column(name = "CREATE_USER"))
@AttributeOverride(name = "modifyDate", column = @Column(name = "MODIFY_DATE"))
@AttributeOverride(name = "modifyUser", column = @Column(name = "MODIFY_USER"))
@AttributeOverride(name = "description", column = @Column(name = "DESCRIPTION"))
@AttributeOverride(name = "fileRecognizer", column = @Column(name = "FILE_RECOGNIZER"))
@AttributeOverride(name = "fileRenamer", column = @Column(name = "FILE_RENAMER"))
@AttributeOverride(name = "fileSizeLimit", column = @Column(name = "FILE_SIZE_LIMIT"))
@AttributeOverride(name = "getLabel", column = @Column(name = "GET_LABEL"))

public class Use extends UseDto implements Serializable {

	private static final long serialVersionUID = -1040642979456312578L;
	@Id
	@SequenceGenerator(name = "USES_ID_GENERATOR", sequenceName = "USES_SEQ", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "USES_ID_GENERATOR")
	@Column(name = "ID")
	private Long id;

	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "LOCK_SEQ_NUM")
	private BigDecimal lockSeqNum;

	public BigDecimal getLockSeqNum() {
		return this.lockSeqNum;
	}

	public void setLockSeqNum(BigDecimal lockSeqNum) {
		this.lockSeqNum = lockSeqNum;
	}

	// bi-directional many-to-one association to Rulesbasedaccount
	@ManyToOne
	@JoinColumn(name = "ACCOUNT_ID")
	private Rulesbasedaccount rulesbasedaccount;

	public Rulesbasedaccount getRulesbasedaccount() {
		return this.rulesbasedaccount;
	}

	public void setRulesbasedaccount(Rulesbasedaccount rulesbasedaccount) {
		this.rulesbasedaccount = rulesbasedaccount;
	}

	public void initTransientFields() {
		super.setMulti(this.getRulesbasedaccount() == null);
		super.setRulesbasedaccountDto(this.getRulesbasedaccount() == null ? new RulesbasedaccountDto() : this.getRulesbasedaccount().toDto());
		super.setPersisted(this.getId() != null);
	}
}
