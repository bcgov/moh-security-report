package ca.bc.gov.health.sfds.entity;

import jakarta.persistence.*;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

/** The persistent class for the DATA_RECIPIENTS database table. */
@Entity
@Table(name = "DATA_RECIPIENTS")
@NamedQuery(name = "DataRecipient.findAll", query = "SELECT d FROM DataRecipient d")
@NamedQuery(name = "DataRecipient.findByIdAndLockNumber", query = "SELECT d FROM DataRecipient d WHERE d.id = :id AND d.lockSeqNum = :lockSeqNum")
public class DataRecipient implements Serializable {
  private static final long serialVersionUID = 1L;

  @Id
  @SequenceGenerator(name = "DATA_RECIPIENTS_ID_GENERATOR", sequenceName = "FDS_SEQ", allocationSize = 1)
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "DATA_RECIPIENTS_ID_GENERATOR")
  private long id;

  @Column(name = "ACKNOWLEDGEMENT_FLAG")
  private String acknowledgementFlag;

  @Column(name = "BUSINESS_FILENAME")
  private String businessFilename;

  @Column(name = "CONFIRMATION_FLAG")
  private String confirmationFlag;

  @Temporal(TemporalType.DATE)
  @Column(name = "CREATE_DATE")
  private Date createDate;

  @Column(name = "CREATE_USER")
  private String createUser;

  @Column(name = "DATA_TRANSFER_STATUS")
  private String dataTransferStatus;

  @Column(name = "LOCK_SEQ_NUM")
  private BigDecimal lockSeqNum;

  @Temporal(TemporalType.DATE)
  @Column(name = "MODIFY_DATE")
  private Date modifyDate;

  @Column(name = "MODIFY_USER")
  private String modifyUser;

  @Column(name = "NOTIFICATION_FLAG")
  private String notificationFlag;

  @Column(name = "OVERWRITE_SERVER_FLAG")
  private String overwriteServerFlag;

  @Temporal(TemporalType.DATE)
  @Column(name = "RECEIVING_DATE")
  private Date receivingDate;

  @Column(name = "RECEIVING_UID")
  private String receivingUid;

  @Column(name = "SERVER_FILENAME")
  private String serverFilename;

  // bi-directional many-to-one association to Account
  @ManyToOne
  @JoinColumn(name = "ACT_ID")
  private Account account;

  // bi-directional many-to-one association to DataTransportTransaction
  @ManyToOne
  @JoinColumn(name = "DTT_ID")
  private DataTransportTransaction dataTransportTransaction;

  // bi-directional many-to-one association to TransportErrorCode
  @ManyToOne
  @JoinColumn(name = "TEC_ID")
  private TransportErrorCode transportErrorCode;

  public DataRecipient() {
	  super();
  }

  public long getId() {
    return this.id;
  }

  public void setId(long id) {
    this.id = id;
  }

  public String getAcknowledgementFlag() {
    return this.acknowledgementFlag;
  }

  public void setAcknowledgementFlag(String acknowledgementFlag) {
    this.acknowledgementFlag = acknowledgementFlag;
  }

  public String getBusinessFilename() {
    return this.businessFilename;
  }

  public void setBusinessFilename(String businessFilename) {
    this.businessFilename = businessFilename;
  }

  public String getConfirmationFlag() {
    return this.confirmationFlag;
  }

  public void setConfirmationFlag(String confirmationFlag) {
    this.confirmationFlag = confirmationFlag;
  }

  public Date getCreateDate() {
    return this.createDate;
  }

  public void setCreateDate(Date createDate) {
    this.createDate = createDate;
  }

  public String getCreateUser() {
    return this.createUser;
  }

  public void setCreateUser(String createUser) {
    this.createUser = createUser;
  }

  public String getDataTransferStatus() {
    return this.dataTransferStatus;
  }

  public void setDataTransferStatus(String dataTransferStatus) {
    this.dataTransferStatus = dataTransferStatus;
  }

  public BigDecimal getLockSeqNum() {
    return this.lockSeqNum;
  }

  public void setLockSeqNum(BigDecimal lockSeqNum) {
    this.lockSeqNum = lockSeqNum;
  }

  public Date getModifyDate() {
    return this.modifyDate;
  }

  public void setModifyDate(Date modifyDate) {
    this.modifyDate = modifyDate;
  }

  public String getModifyUser() {
    return this.modifyUser;
  }

  public void setModifyUser(String modifyUser) {
    this.modifyUser = modifyUser;
  }

  public String getNotificationFlag() {
    return this.notificationFlag;
  }

  public void setNotificationFlag(String notificationFlag) {
    this.notificationFlag = notificationFlag;
  }

  public String getOverwriteServerFlag() {
    return this.overwriteServerFlag;
  }

  public void setOverwriteServerFlag(String overwriteServerFlag) {
    this.overwriteServerFlag = overwriteServerFlag;
  }

  public Date getReceivingDate() {
    return this.receivingDate;
  }

  public void setReceivingDate(Date receivingDate) {
    this.receivingDate = receivingDate;
  }

  public String getReceivingUid() {
    return this.receivingUid;
  }

  public void setReceivingUid(String receivingUid) {
    this.receivingUid = receivingUid;
  }

  public String getServerFilename() {
    return this.serverFilename;
  }

  public void setServerFilename(String serverFilename) {
    this.serverFilename = serverFilename;
  }

  public Account getAccount() {
    return this.account;
  }

  public void setAccount(Account account) {
    this.account = account;
  }

  public DataTransportTransaction getDataTransportTransaction() {
    return this.dataTransportTransaction;
  }

  public void setDataTransportTransaction(DataTransportTransaction dataTransportTransaction) {
    this.dataTransportTransaction = dataTransportTransaction;
  }

  public TransportErrorCode getTransportErrorCode() {
    return this.transportErrorCode;
  }

  public void setTransportErrorCode(TransportErrorCode transportErrorCode) {
    this.transportErrorCode = transportErrorCode;
  }
}
