package ca.bc.gov.health.sfds.entity;

import jakarta.persistence.*;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

/** The persistent class for the DATA_PARCEL_IDENTIFIERS database table. */
@Entity
@Table(name = "DATA_PARCEL_IDENTIFIERS")
@NamedQuery(name = "DataParcelIdentifier.findByContextId", query
        = "SELECT d.id FROM DataParcelIdentifier d"
        + " WHERE d.contextIdCode = :code "
        + "   AND COALESCE(d.effectiveDate, CAST(:lowDate DATE)) <= :currentDate"
        + "   AND COALESCE(d.endDate, CAST(:highDate DATE)) > :currentDate"
        + "   AND ((:parentDataParcelIdentifier is null AND d.parentDataParcelIdentifier is null) OR d.parentDataParcelIdentifier.id = :parentDataParcelIdentifier)")
@NamedQuery(name = "DataParcelIdentifier.findAll", query = "SELECT d FROM DataParcelIdentifier d")
@NamedQuery(name = "DataParcelIdentifier.findById", query = "SELECT d FROM DataParcelIdentifier d WHERE d.id = :id")
@NamedQuery(name = "DataParcelIdentifier.findByUniqueKey", query
        = "SELECT d.id FROM DataParcelIdentifier d"
        + " WHERE d.contextIdCode = :code"
        + "   AND d.parentDataParcelIdentifier.id = :parentDataParcelIdentifier"
        + "   AND COALESCE(d.effectiveDate, CAST(:lowDate DATE)) <= COALESCE(CAST(:effectiveDate DATE), CAST(:lowDate DATE))")
@SequenceGenerator(name = "DATA_PARCEL_IDENTIFIERS_ID_GENERATOR", sequenceName = "DPCL_SEQ", allocationSize = 1)
public class DataParcelIdentifier implements Serializable {

  private static final long serialVersionUID = 1L;

  @Id
  @GeneratedValue(
          strategy = GenerationType.SEQUENCE,
          generator = "DATA_PARCEL_IDENTIFIERS_ID_GENERATOR")
  @Column(name = "ID")
  private long id;

  @Column(name = "CONTEXT_ID_CODE")
  private String contextIdCode;

  @Temporal(TemporalType.DATE)
  @Column(name = "CREATE_DATE")
  private Date createDate;

  @Column(name = "CREATE_USER")
  private String createUser;

  @Column(name = "DPI_TYPE")
  private String dpiType;

  @Temporal(TemporalType.DATE)
  @Column(name = "EFFECTIVE_DATE")
  private Date effectiveDate;

  @Temporal(TemporalType.DATE)
  @Column(name = "END_DATE")
  private Date endDate;

  @Column(name = "LOCK_SEQ_NUM")
  private BigDecimal lockSeqNum;

  @Temporal(TemporalType.DATE)
  @Column(name = "MODIFY_DATE")
  private Date modifyDate;

  @Column(name = "MODIFY_USER")
  private String modifyUser;

  // bi-directional many-to-one association to DataParcelIdentifier
  @ManyToOne
  @JoinColumn(name = "DPI_ID")
  private DataParcelIdentifier parentDataParcelIdentifier;

  // bi-directional many-to-one association to DataParcelIdentifier
  @OneToMany(mappedBy = "parentDataParcelIdentifier")
  private List<DataParcelIdentifier> dataParcelIdentifiers;

  // bi-directional many-to-one association to ParcelContextReference
  @OneToMany(mappedBy = "dataParcelIdentifier")
  private List<ParcelContextReference> parcelContextReferences;

  public DataParcelIdentifier() {/* no-args constructor */}

  public long getId() {
    return this.id;
  }

  public void setId(long id) {
    this.id = id;
  }

  public String getContextIdCode() {
    return this.contextIdCode;
  }

  public void setContextIdCode(String contextIdCode) {
    this.contextIdCode = contextIdCode;
  }

  public Date getCreateDate() {
    return this.createDate;
  }

  public void setCreateDate(Date createDate) {
    this.createDate = createDate;
  }

  public String getCreateUser() {
    return this.createUser;
  }

  public void setCreateUser(String createUser) {
    this.createUser = createUser;
  }

  public String getDpiType() {
    return this.dpiType;
  }

  public void setDpiType(String dpiType) {
    this.dpiType = dpiType;
  }

  public Date getEffectiveDate() {
    return this.effectiveDate;
  }

  public void setEffectiveDate(Date effectiveDate) {
    this.effectiveDate = effectiveDate;
  }

  public Date getEndDate() {
    return this.endDate;
  }

  public void setEndDate(Date endDate) {
    this.endDate = endDate;
  }

  public BigDecimal getLockSeqNum() {
    return this.lockSeqNum;
  }

  public void setLockSeqNum(BigDecimal lockSeqNum) {
    this.lockSeqNum = lockSeqNum;
  }

  public Date getModifyDate() {
    return this.modifyDate;
  }

  public void setModifyDate(Date modifyDate) {
    this.modifyDate = modifyDate;
  }

  public String getModifyUser() {
    return this.modifyUser;
  }

  public void setModifyUser(String modifyUser) {
    this.modifyUser = modifyUser;
  }

  public DataParcelIdentifier getParentDataParcelIdentifier() {
    return this.parentDataParcelIdentifier;
  }

  public void setParentDataParcelIdentifier(DataParcelIdentifier dataParcelIdentifier) {
    this.parentDataParcelIdentifier = dataParcelIdentifier;
  }

  public List<DataParcelIdentifier> getDataParcelIdentifiers() {
    return this.dataParcelIdentifiers;
  }

  public void setDataParcelIdentifiers(List<DataParcelIdentifier> dataParcelIdentifiers) {
    this.dataParcelIdentifiers = dataParcelIdentifiers;
  }

  public List<ParcelContextReference> getParcelContextReferences() {
    return this.parcelContextReferences;
  }

  public void setParcelContextReferences(List<ParcelContextReference> parcelContextReferences) {
    this.parcelContextReferences = parcelContextReferences;
  }

  public ParcelContextReference addParcelContextReference(
          ParcelContextReference parcelContextReference) {
    getParcelContextReferences().add(parcelContextReference);
    parcelContextReference.setDataParcelIdentifier(this);

    return parcelContextReference;
  }

  public ParcelContextReference removeParcelContextReference(
          ParcelContextReference parcelContextReference) {
    getParcelContextReferences().remove(parcelContextReference);
    parcelContextReference.setDataParcelIdentifier(null);

    return parcelContextReference;
  }
}
