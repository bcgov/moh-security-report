package ca.bc.gov.health.sfds.entity;

import jakarta.persistence.*;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

/**
 * The persistent class for the DATA_TRANSPORT_TRANSACTIONS database table.
 */
@Entity
@Table(name = "DATA_TRANSPORT_TRANSACTIONS")
@NamedQuery(
        name = "DataTransportTransaction.findAll",
        query = "SELECT d FROM DataTransportTransaction d")
@NamedNativeQuery(
        name = "DataTransportTransaction.getFileMetadata",
        query = "SELECT  "
        + "       dtt.id AS dtt_id, "
        + "       dtt.filename AS original_filename, "
        + "       dr.business_filename AS business_filename, "
        + "       dtt.filesize AS filesize, "
        + "       dr.data_transfer_status AS status, "
        + "       dtt.sending_uid AS sending_uid,  "
        + "       dtt.sending_date AS sending_date, "
        + "       dtt_accounts.account_identifier AS sending_act_identifier, "
        + "       dtt_accounts_3.name AS sending_account, "
        + "       dr.receiving_uid AS receiving_uid, "
        + "       dr.receiving_date AS receiving_date, "
        + "       dtt_accounts_2.account_identifier AS receiving_act_identifier, "
        + "       dtt_accounts_2.name AS receiving_account, "
        + "       dtt.transport_use_name AS use_id, "
        + "       uses.name AS use_name, "
        + "       uses.get_label AS use_get_label, "
        + "       uses.send_label AS use_send_label, "
        + "       dr.ID AS dr_id, "
        + "       dr.LOCK_SEQ_NUM AS dr_lock_seq_num "
        + "FROM  "
        + "       DATA_TRANSPORT_TRANSACTIONS dtt  "
        + "       inner join ACCOUNTS dtt_accounts on dtt_accounts.id = dtt.act_id "
        + "       inner join DATA_RECIPIENTS dr on dr.dtt_id = dtt.id "
        + "       inner join ACCOUNTS dtt_accounts_2 on dr.act_id = dtt_accounts_2.id "
        + "       left outer join ACCOUNTS dtt_accounts_3 on dtt_accounts_3.account_identifier = dtt_accounts.account_identifier "
        + "       inner join USES uses on uses.use_id = dtt.transport_use_name "
        + "WHERE  "
        + "       dtt_accounts_2.account_identifier = ?accountId "
        + "       AND dr.server_filename = ?fileName ",
        resultSetMapping = "MapFileMetaData"
)
@SqlResultSetMapping(
        name = "MapFileMetaData",
        classes = {
            @ConstructorResult(
                    columns = {
                        @ColumnResult(name = "dtt_id", type = BigDecimal.class),
                        @ColumnResult(name = "original_filename", type = String.class),
                        @ColumnResult(name = "business_filename", type = String.class),
                        @ColumnResult(name = "filesize", type = Long.class),
                        @ColumnResult(name = "status", type = String.class),
                        @ColumnResult(name = "sending_uid", type = String.class),
                        @ColumnResult(name = "sending_date", type = Date.class),
                        @ColumnResult(name = "sending_act_identifier"),
                        @ColumnResult(name = "sending_account"),
                        @ColumnResult(name = "receiving_uid", type = String.class),
                        @ColumnResult(name = "receiving_act_identifier"),
                        @ColumnResult(name = "receiving_account"),
                        @ColumnResult(name = "receiving_date", type = Date.class),
                        @ColumnResult(name = "use_id"),
                        @ColumnResult(name = "use_name"),
                        @ColumnResult(name = "use_get_label"),
                        @ColumnResult(name = "use_send_label"),
                        @ColumnResult(name = "dr_id", type = BigDecimal.class),
                        @ColumnResult(name = "dr_lock_seq_num", type = BigDecimal.class)
                    },
                     targetClass = ca.bc.gov.health.sfds.dto.FileMetaDataDto.class)
        }
)

public class DataTransportTransaction implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @SequenceGenerator(name = "DATA_TRANSPORT_TRANSACTIONS_ID_GENERATOR", sequenceName = "FDS_SEQ", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "DATA_TRANSPORT_TRANSACTIONS_ID_GENERATOR")
    private long id;

    @Column(name = "ACKNOWLEDGEMENT_TYPE")
    private String acknowledgementType;

    @Column(name = "CONFIRMATION_TYPE")
    private String confirmationType;

    @Temporal(TemporalType.DATE)
    @Column(name = "CREATE_DATE")
    private Date createDate;

    @Column(name = "CREATE_USER")
    private String createUser;

    private String filename;

    private BigDecimal filesize;

    @Column(name = "LOCK_SEQ_NUM")
    private BigDecimal lockSeqNum;

    @Temporal(TemporalType.DATE)
    @Column(name = "MODIFY_DATE")
    private Date modifyDate;

    @Column(name = "MODIFY_USER")
    private String modifyUser;

    @Column(name = "NOTIFICATION_TYPE")
    private String notificationType;

    @Temporal(TemporalType.DATE)
    @Column(name = "SENDING_DATE")
    private Date sendingDate;

    @Column(name = "SENDING_UID")
    private String sendingUid;

    @Column(name = "TRANSPORT_USE_NAME")
    private String transportUseName;

    // bi-directional many-to-one association to DataRecipient
    @OneToMany(mappedBy = "dataTransportTransaction")
    private List<DataRecipient> dataRecipients;

    // bi-directional many-to-one association to Account
    @ManyToOne
    @JoinColumn(name = "ACT_ID")
    private Account account;

    public DataTransportTransaction() {
        super();
    }

    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getAcknowledgementType() {
        return this.acknowledgementType;
    }

    public void setAcknowledgementType(String acknowledgementType) {
        this.acknowledgementType = acknowledgementType;
    }

    public String getConfirmationType() {
        return this.confirmationType;
    }

    public void setConfirmationType(String confirmationType) {
        this.confirmationType = confirmationType;
    }

    public Date getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    public String getCreateUser() {
        return this.createUser;
    }

    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }

    public String getFilename() {
        return this.filename;
    }

    public void setFilename(String filename) {
        this.filename = filename;
    }

    public BigDecimal getFilesize() {
        return this.filesize;
    }

    public void setFilesize(BigDecimal filesize) {
        this.filesize = filesize;
    }

    public BigDecimal getLockSeqNum() {
        return this.lockSeqNum;
    }

    public void setLockSeqNum(BigDecimal lockSeqNum) {
        this.lockSeqNum = lockSeqNum;
    }

    public Date getModifyDate() {
        return this.modifyDate;
    }

    public void setModifyDate(Date modifyDate) {
        this.modifyDate = modifyDate;
    }

    public String getModifyUser() {
        return this.modifyUser;
    }

    public void setModifyUser(String modifyUser) {
        this.modifyUser = modifyUser;
    }

    public String getNotificationType() {
        return this.notificationType;
    }

    public void setNotificationType(String notificationType) {
        this.notificationType = notificationType;
    }

    public Date getSendingDate() {
        return this.sendingDate;
    }

    public void setSendingDate(Date sendingDate) {
        this.sendingDate = sendingDate;
    }

    public String getSendingUid() {
        return this.sendingUid;
    }

    public void setSendingUid(String sendingUid) {
        this.sendingUid = sendingUid;
    }

    public String getTransportUseName() {
        return this.transportUseName;
    }

    public void setTransportUseName(String transportUseName) {
        this.transportUseName = transportUseName;
    }

    public List<DataRecipient> getDataRecipients() {
        return this.dataRecipients;
    }

    public void setDataRecipients(List<DataRecipient> dataRecipients) {
        this.dataRecipients = dataRecipients;
    }

    public DataRecipient addDataRecipient(DataRecipient dataRecipient) {
        getDataRecipients().add(dataRecipient);
        dataRecipient.setDataTransportTransaction(this);

        return dataRecipient;
    }

    public DataRecipient removeDataRecipient(DataRecipient dataRecipient) {
        getDataRecipients().remove(dataRecipient);
        dataRecipient.setDataTransportTransaction(null);

        return dataRecipient;
    }

    public Account getAccount() {
        return this.account;
    }

    public void setAccount(Account account) {
        this.account = account;
    }
}
