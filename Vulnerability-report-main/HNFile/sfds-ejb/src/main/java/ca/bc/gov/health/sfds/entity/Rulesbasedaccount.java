package ca.bc.gov.health.sfds.entity;

import ca.bc.gov.health.sfds.dto.RulesbasedaccountDto;
import ca.bc.gov.health.sfds.enums.NotificationType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

/** The persistent class for the RULESBASEDACCOUNTS database table. */
@Entity
@Table(name = "RULESBASEDACCOUNTS")
@NamedQuery(name = "Rulesbasedaccount.findAll", query = "SELECT r FROM Rulesbasedaccount r")
@NamedQuery(name = "Rulesbasedaccount.findByAccountId", query = "SELECT r FROM Rulesbasedaccount r WHERE r.accountId = :accountId")
@NamedQuery(name = "Rulesbasedaccount.findByRecipient", query = "SELECT r FROM Rulesbasedaccount r WHERE r.recipient = :recipient")
@NamedQuery(name = "Rulesbasedaccount.findBySendingUse", query = "SELECT r FROM Rulesbasedaccount r WHERE r.sendingUseId = :sendingUseId")
public class Rulesbasedaccount implements Serializable {
	private static final long serialVersionUID = 1L;

	private static final String SIMPLE_METAPROCESSOR = "moh.fds.batch.processors.SimpleMetaProcessor";

	@Id
	@SequenceGenerator(name = "RULESBASEDACCOUNTS_ID_GENERATOR", sequenceName = "RBA_SEQ", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "RULESBASEDACCOUNTS_ID_GENERATOR")
	private long id;

	@Column(name = "ACCOUNT_ID")
	private String accountId;

	@Column(name = "ACKNOWLEDGEMENT_TYPE")
	@Enumerated(EnumType.STRING)
	private NotificationType acknowledgementType;

	@Column(name = "BUSINESS_AREA")
	private String businessArea;

	@Column(name = "CONFIRMATION_TYPE")
	@Enumerated(EnumType.STRING)
	private NotificationType confirmationType;

	@Temporal(TemporalType.DATE)
	@Column(name = "CREATE_DATE")
	private Date createDate;

	@Column(name = "CREATE_USER")
	private String createUser;

	@Column(name = "LOCK_SEQ_NUM")
	private BigDecimal lockSeqNum;

	private String metaprocessor;

	@Temporal(TemporalType.DATE)
	@Column(name = "MODIFY_DATE")
	private Date modifyDate;

	@Column(name = "MODIFY_USER")
	private String modifyUser;

	@Column(name = "NOTIFICATION_TYPE")
	@Enumerated(EnumType.STRING)
	private NotificationType notificationType;

	private String overwrite;

	@Column(name = "RECIPIENT")
	private String recipient;

	@Column(name = "SENDING_USE_ID")
	private String sendingUseId;

	// bi-directional many-to-one association to Uses
	@OneToMany(mappedBy = "rulesbasedaccount")
	private List<Use> uses;

	public Rulesbasedaccount() {
		super();
		this.setMetaprocessor(SIMPLE_METAPROCESSOR);
	}

	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public String getAccountId() {
		return this.accountId;
	}

	public void setAccountId(String accountId) {
		this.accountId = accountId;
	}

	public NotificationType getAcknowledgementType() {
		return this.acknowledgementType;
	}

	public void setAcknowledgementType(NotificationType acknowledgementType) {
		this.acknowledgementType = acknowledgementType;
	}

	public String getBusinessArea() {
		return this.businessArea;
	}

	public void setBusinessArea(String businessArea) {
		this.businessArea = businessArea;
	}

	public NotificationType getConfirmationType() {
		return this.confirmationType;
	}

	public void setConfirmationType(NotificationType confirmationType) {
		this.confirmationType = confirmationType;
	}

	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	public String getCreateUser() {
		return this.createUser;
	}

	public void setCreateUser(String createUser) {
		this.createUser = createUser;
	}

	public BigDecimal getLockSeqNum() {
		return this.lockSeqNum;
	}

	public void setLockSeqNum(BigDecimal lockSeqNum) {
		this.lockSeqNum = lockSeqNum;
	}

	public String getMetaprocessor() {
		return this.metaprocessor;
	}

	public void setMetaprocessor(String metaprocessor) {
		this.metaprocessor = metaprocessor;
	}

	public Date getModifyDate() {
		return this.modifyDate;
	}

	public void setModifyDate(Date modifyDate) {
		this.modifyDate = modifyDate;
	}

	public String getModifyUser() {
		return this.modifyUser;
	}

	public void setModifyUser(String modifyUser) {
		this.modifyUser = modifyUser;
	}

	public NotificationType getNotificationType() {
		return this.notificationType;
	}

	public void setNotificationType(NotificationType notificationType) {
		this.notificationType = notificationType;
	}

	public String getOverwrite() {
		return this.overwrite;
	}

	public void setOverwrite(String overwrite) {
		this.overwrite = overwrite;
	}

	public String getRecipient() {
		return this.recipient;
	}

	public void setRecipient(String recipient) {
		this.recipient = recipient;
	}

	public String getSendingUseId() {
		return this.sendingUseId;
	}

	public void setSendingUseId(String sendingUseId) {
		this.sendingUseId = sendingUseId;
	}

	public List<Use> getUses() {
		return this.uses;
	}

	public void setUses(List<Use> uses) {
		this.uses = uses;
	}

	public Use addUs(Use use) {
		getUses().add(use);
		use.setRulesbasedaccount(this);

		return use;
	}

	public Use removeUs(Use us) {
		getUses().remove(us);
		us.setRulesbasedaccount(null);

		return us;
	}

	public RulesbasedaccountDto toDto() {
		RulesbasedaccountDto dto = new RulesbasedaccountDto();

		dto.setRecipient(this.getRecipient());
		dto.setBusinessArea(this.getBusinessArea());
		dto.setOverwrite(this.getOverwrite());
		dto.setSendingUseId(this.getSendingUseId());
		dto.setNotificationType(this.getNotificationType());
		dto.setConfirmationType(this.getConfirmationType());
		dto.setAcknowledgementType(this.getAcknowledgementType());
		dto.setAccountId(this.getAccountId());
		dto.setId(this.getId());
		
		return dto;
	}
}
