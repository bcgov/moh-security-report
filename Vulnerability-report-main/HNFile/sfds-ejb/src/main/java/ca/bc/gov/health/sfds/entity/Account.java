package ca.bc.gov.health.sfds.entity;

import ca.bc.gov.health.sfds.dto.MetaDto;
import jakarta.persistence.*;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

/**
 * The persistent class for the ACCOUNTS database table.
 */
@Entity
@Table(name = "ACCOUNTS")
@NamedQuery(name = "Account.findAllActive", query = "SELECT a FROM Account a WHERE a.activeFlag = 'Y'")
@NamedQuery(name = "Account.findByAccountIdentifier", query = "SELECT a FROM Account a WHERE a.accountIdentifier = :accountIdentifier")
@NamedQuery(name = "Account.findById", query = "SELECT a FROM Account a WHERE a.id = :id")
@NamedNativeQuery(name = "Account.findRecipients",
        query = "SELECT * FROM (\n"
        + "SELECT * FROM (\n"
        + "SELECT accounts.account_identifier, accounts.name, accounts.city,\n"
        + "  case when prac_payee_numbers.prac_payee_number is null then 'N/A' else prac_payee_numbers.prac_payee_number end as prac_payee_number\n"
        + "FROM accounts inner join application_uses on accounts.id = application_uses.act_id\n"
        + " left outer join prac_payee_numbers on accounts.id = prac_payee_numbers.act_id\n"
        + "WHERE application_uses.consumer_name = ?consumer AND\n"
        + "     accounts.active_flag = 'Y' AND\n"
        + "     (regexp_like(upper(accounts.city), upper(?criteria))\n"
        + "     OR\n"
        + "     regexp_like(upper(accounts.name), upper(?criteria)))\n"
        + "UNION\n"
        + "SELECT accounts.account_identifier as account_identifier, accounts.NAME as name, accounts.city as city, n2.prac_payee_number as prac_payee_number\n"
        + "FROM accounts inner join application_uses on accounts.id = application_uses.act_id\n"
        + "              inner join prac_payee_numbers n1 on accounts.id = n1.act_id\n"
        + "              left outer join prac_payee_numbers n2 on accounts.id = n2.act_id\n"
        + "WHERE\n"
        + "     upper(application_uses.consumer_name) = upper(?consumer) AND\n"
        + "     accounts.active_flag = 'Y' AND\n"
        + "     regexp_like(n1.prac_payee_number, ?criteria)\n"
        + ") ORDER BY NAME) WHERE ROWNUM <= ?maximum",
        resultSetMapping = "mapRecipients"
)
@SqlResultSetMapping(
        name = "mapRecipients",
        classes = {
            @ConstructorResult(
                    columns = {
                        @ColumnResult(name = "account_identifier"),
                        @ColumnResult(name = "name"),
                        @ColumnResult(name = "city"),
                        @ColumnResult(name = "prac_payee_number")
                    },
                    targetClass = ca.bc.gov.health.sfds.dto.RecipientDto.class)
        }
)
@SequenceGenerator(name = "ACCOUNTS_ID_GENERATOR", sequenceName = "FDS_SEQ", allocationSize = 1)
public class Account implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "ACCOUNTS_ID_GENERATOR")
    private long id;

    @Column(name = "ACCOUNT_IDENTIFIER")
    private String accountIdentifier;

    @Column(name = "ACTIVE_FLAG")
    private String activeFlag;

    private String city;

    private String country;

    @Temporal(TemporalType.DATE)
    @Column(name = "CREATE_DATE")
    private Date createDate;

    @Column(name = "CREATE_USER")
    private String createUser;

    @Column(name = "LOCK_SEQ_NUM")
    private BigDecimal lockSeqNum;

    @Column(name = "MARKED_AT")
    private BigDecimal markedAt;

    @Temporal(TemporalType.DATE)
    @Column(name = "MODIFY_DATE")
    private Date modifyDate;

    @Column(name = "MODIFY_USER")
    private String modifyUser;

    private String name;

    @Column(name = "PHONE_NUMBER")
    private String phoneNumber;

    @Column(name = "PHYSICAL_ADDRESS1")
    private String physicalAddress1;

    @Column(name = "PHYSICAL_ADDRESS2")
    private String physicalAddress2;

    @Column(name = "POSTAL_CODE")
    private String postalCode;

    private String province;

    @Temporal(TemporalType.DATE)
    @Column(name = "SOURCE_CREATE_DATE")
    private Date sourceCreateDate;

    @Temporal(TemporalType.DATE)
    @Column(name = "SOURCE_MODIFY_DATE")
    private Date sourceModifyDate;

    // bi-directional many-to-one association to AccountContact
    @OneToMany(mappedBy = "account")
    private List<AccountContact> accountContacts;

    // bi-directional many-to-one association to ApplicationUse
    @OneToMany(mappedBy = "account")
    private List<ApplicationUse> applicationUses;

    // bi-directional many-to-one association to DataRecipient
    @OneToMany(mappedBy = "account")
    private List<DataRecipient> dataRecipients;

    // bi-directional many-to-one association to DataTransportTransaction
    @OneToMany(mappedBy = "account")
    private List<DataTransportTransaction> dataTransportTransactions;

    // bi-directional many-to-one association to Location
    @OneToMany(mappedBy = "account")
    private List<Location> locations;

    // bi-directional many-to-one association to PracPayeeNumber
    @OneToMany(mappedBy = "account")
    private List<PracPayeeNumber> pracPayeeNumbers;

    public Account() {
        super();
    }

    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getAccountIdentifier() {
        return this.accountIdentifier;
    }

    public void setAccountIdentifier(String accountIdentifier) {
        this.accountIdentifier = accountIdentifier;
    }

    public String getActiveFlag() {
        return this.activeFlag;
    }

    public void setActiveFlag(String activeFlag) {
        this.activeFlag = activeFlag;
    }

    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public String getCountry() {
        return this.country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public Date getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    public String getCreateUser() {
        return this.createUser;
    }

    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }

    public BigDecimal getLockSeqNum() {
        return this.lockSeqNum;
    }

    public void setLockSeqNum(BigDecimal lockSeqNum) {
        this.lockSeqNum = lockSeqNum;
    }

    public BigDecimal getMarkedAt() {
        return this.markedAt;
    }

    public void setMarkedAt(BigDecimal markedAt) {
        this.markedAt = markedAt;
    }

    public Date getModifyDate() {
        return this.modifyDate;
    }

    public void setModifyDate(Date modifyDate) {
        this.modifyDate = modifyDate;
    }

    public String getModifyUser() {
        return this.modifyUser;
    }

    public void setModifyUser(String modifyUser) {
        this.modifyUser = modifyUser;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getPhoneNumber() {
        return this.phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    public String getPhysicalAddress1() {
        return this.physicalAddress1;
    }

    public void setPhysicalAddress1(String physicalAddress1) {
        this.physicalAddress1 = physicalAddress1;
    }

    public String getPhysicalAddress2() {
        return this.physicalAddress2;
    }

    public void setPhysicalAddress2(String physicalAddress2) {
        this.physicalAddress2 = physicalAddress2;
    }

    public String getPostalCode() {
        return this.postalCode;
    }

    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    public String getProvince() {
        return this.province;
    }

    public void setProvince(String province) {
        this.province = province;
    }

    public Date getSourceCreateDate() {
        return this.sourceCreateDate;
    }

    public void setSourceCreateDate(Date sourceCreateDate) {
        this.sourceCreateDate = sourceCreateDate;
    }

    public Date getSourceModifyDate() {
        return this.sourceModifyDate;
    }

    public void setSourceModifyDate(Date sourceModifyDate) {
        this.sourceModifyDate = sourceModifyDate;
    }

    public List<AccountContact> getAccountContacts() {
        return this.accountContacts;
    }

    public void setAccountContacts(List<AccountContact> accountContacts) {
        this.accountContacts = accountContacts;
    }

    public AccountContact addAccountContact(AccountContact accountContact) {
        getAccountContacts().add(accountContact);
        accountContact.setAccount(this);

        return accountContact;
    }

    public AccountContact removeAccountContact(AccountContact accountContact) {
        getAccountContacts().remove(accountContact);
        accountContact.setAccount(null);

        return accountContact;
    }

    public List<ApplicationUse> getApplicationUses() {
        return this.applicationUses;
    }

    public void setApplicationUses(List<ApplicationUse> applicationUses) {
        this.applicationUses = applicationUses;
    }

    public ApplicationUse addApplicationUs(ApplicationUse applicationUse) {
        getApplicationUses().add(applicationUse);
        applicationUse.setAccount(this);

        return applicationUse;
    }

    public ApplicationUse removeApplicationUs(ApplicationUse applicationUse) {
        getApplicationUses().remove(applicationUse);
        applicationUse.setAccount(null);

        return applicationUse;
    }

    public List<DataRecipient> getDataRecipients() {
        return this.dataRecipients;
    }

    public void setDataRecipients(List<DataRecipient> dataRecipients) {
        this.dataRecipients = dataRecipients;
    }

    public DataRecipient addDataRecipient(DataRecipient dataRecipient) {
        getDataRecipients().add(dataRecipient);
        dataRecipient.setAccount(this);

        return dataRecipient;
    }

    public DataRecipient removeDataRecipient(DataRecipient dataRecipient) {
        getDataRecipients().remove(dataRecipient);
        dataRecipient.setAccount(null);

        return dataRecipient;
    }

    public List<DataTransportTransaction> getDataTransportTransactions() {
        return this.dataTransportTransactions;
    }

    public void setDataTransportTransactions(
            List<DataTransportTransaction> dataTransportTransactions) {
        this.dataTransportTransactions = dataTransportTransactions;
    }

    public DataTransportTransaction addDataTransportTransaction(
            DataTransportTransaction dataTransportTransaction) {
        getDataTransportTransactions().add(dataTransportTransaction);
        dataTransportTransaction.setAccount(this);

        return dataTransportTransaction;
    }

    public DataTransportTransaction removeDataTransportTransaction(
            DataTransportTransaction dataTransportTransaction) {
        getDataTransportTransactions().remove(dataTransportTransaction);
        dataTransportTransaction.setAccount(null);

        return dataTransportTransaction;
    }

    public List<Location> getLocations() {
        return this.locations;
    }

    public void setLocations(List<Location> locations) {
        this.locations = locations;
    }

    public Location addLocation(Location location) {
        getLocations().add(location);
        location.setAccount(this);

        return location;
    }

    public Location removeLocation(Location location) {
        getLocations().remove(location);
        location.setAccount(null);

        return location;
    }

    public List<PracPayeeNumber> getPracPayeeNumbers() {
        return this.pracPayeeNumbers;
    }

    public void setPracPayeeNumbers(List<PracPayeeNumber> pracPayeeNumbers) {
        this.pracPayeeNumbers = pracPayeeNumbers;
    }

    public PracPayeeNumber addPracPayeeNumber(PracPayeeNumber pracPayeeNumber) {
        getPracPayeeNumbers().add(pracPayeeNumber);
        pracPayeeNumber.setAccount(this);

        return pracPayeeNumber;
    }

    public PracPayeeNumber removePracPayeeNumber(PracPayeeNumber pracPayeeNumber) {
        getPracPayeeNumbers().remove(pracPayeeNumber);
        pracPayeeNumber.setAccount(null);

        return pracPayeeNumber;
    }

    public MetaDto getMeta() {
        return new MetaDto(this.getAccountIdentifier(), this.getName());
    }
}
