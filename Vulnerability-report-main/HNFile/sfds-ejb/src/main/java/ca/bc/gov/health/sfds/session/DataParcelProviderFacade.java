package ca.bc.gov.health.sfds.session;

import ca.bc.gov.health.sfds.entity.DataParcelProvider;
import ca.bc.gov.health.sfds.service.IDataParcelProviderFacade;
import ca.bc.gov.health.sfds.util.SFDSConstants;
import jakarta.ejb.Stateless;
import jakarta.ejb.TransactionManagement;
import jakarta.ejb.TransactionManagementType;
import jakarta.persistence.Query;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 * Facade for Data Parcel Provider entity
 *
 * @author vladimir.dovgalyuk
 *
 */
@Stateless
@TransactionManagement(TransactionManagementType.CONTAINER)
public class DataParcelProviderFacade extends AbstractFacade<DataParcelProvider> implements IDataParcelProviderFacade {

    private static final Logger LOG = LogManager.getLogger(DataParcelProviderFacade.class);

    /**
     * no-arg constructor
     */
    public DataParcelProviderFacade() {
        super(DataParcelProvider.class);
    }

    /**
     * Retrieve parcel data load by id
     *
     * @param id
     * @return Content of parcel data BLOB
     */
    @Override
    public byte[] getParcelData(Long id) {

        LOG.debug("Retrieving Data Parcel BLOB for ID {}", id);
        return findById(id).getDataParcel();
    }

    @Override
    public Long createDataParcelProvider(byte[] content, String user) {
        LOG.debug("Create new Data Parcel Provider");

        DataParcelProvider dataParcelProvider = new DataParcelProvider();

        dataParcelProvider.setCreateUser(user);
        dataParcelProvider.setDppType(SFDSConstants.BULLETIN_DPP_TYPE);
        dataParcelProvider.setDataParcel(content);

        entityManager.persist(dataParcelProvider);

        LOG.debug("New Data Parcel Provider ID is {}", dataParcelProvider.getId());

        return dataParcelProvider.getId();
    }

    public DataParcelProvider findById(Long id) {
        Query query = getEntityManager().createNamedQuery("DataParcelProvider.findById");
        query.setParameter("id", id);
        return (DataParcelProvider) query.getSingleResult();
    }

    @Override
    public void updateDataParcelProvider(Long id, String content, String user) {

        LOG.debug("Update Data Parcel Provider with ID {}", id);

        DataParcelProvider dataParcelProvider = findById(id);
        Charset charset = StandardCharsets.UTF_8;
        dataParcelProvider.setDataParcel(content.getBytes(charset));
        dataParcelProvider.setModifyUser(user);
        getEntityManager().merge(dataParcelProvider);

        LOG.debug("Data Parcel Provider with ID {} updated", id);
    }

    @Override
    public void deleteDataParcelProvider(Long id) {
        LOG.debug("Delete Data Parcel Provider with ID {}", id);

        DataParcelProvider dataParcelProvider = findById(id);
        getEntityManager().remove(dataParcelProvider);

        LOG.debug("Data Parcel Provider with ID {} deleted", id);
    }

}
