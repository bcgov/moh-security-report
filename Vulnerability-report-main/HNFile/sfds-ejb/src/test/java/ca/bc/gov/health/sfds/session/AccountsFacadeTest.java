package ca.bc.gov.health.sfds.session;

import ca.bc.gov.health.sfds.dto.MetaDto;
import ca.bc.gov.health.sfds.dto.RecipientDto;
import ca.bc.gov.health.sfds.util.SFDSUtils;
import java.util.List;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.junit.Before;
import org.junit.Test;

public class AccountsFacadeTest extends AbstractFacadeTest {

    private static final Logger LOG = LogManager.getLogger(AccountsFacadeTest.class);

    protected static AccountsFacade facade;

    private static final String BCMA = "bcma";

    @Before
    public void setUp() {
        facade = new AccountsFacade();
        facade.entityManager = entityManager;
    }

    @Test
    public void getDescription() {
        LOG.debug("\n===== Testing getDescription");
        String description = facade.getDescription(BCMA);
        assert (description != null);
        LOG.debug("\n===== Test completed \n");
    }

    @Test
    public void getRecipients() {
        LOG.debug("\n===== Testing getRecipients");

        String filter = "raj 11111";
        List<RecipientDto> result = facade.getRecipients("phc", SFDSUtils.transformSearchFilter(filter));
        assert (!result.isEmpty());
        for (RecipientDto recipient : result) {
            LOG.debug("\n\t" + recipient.toString());
        }

        LOG.debug("\n===== Test completed \n");
    }

    @Test
    public void getActiveAccountMetas() {
        LOG.debug("\n===== Testing getActiveAccountMetas");
        List<MetaDto> result = facade.getActiveAccountMetas();
        assert (!result.isEmpty());
        LOG.debug("\n===== found " + result.size() + " active accounts");
        LOG.debug("\n===== Test completed \n");
    }

    public void transformFilter() {
        LOG.debug("\n===== Testing transformFilter");

        String filter = "\"abc cde\" fgh 1111 222";
        LOG.debug("Original filter is {}", filter);
        String transformedFilter = SFDSUtils.transformSearchFilter(filter);
        LOG.debug("Transformed filter is {}", transformedFilter);
        assert (!"".equals(transformedFilter));

        LOG.debug("\n===== Test completed \n");
    }
}
