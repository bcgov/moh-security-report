package ca.bc.gov.health.sfds.files;

import com.jcraft.jsch.ChannelSftp;
import java.io.Serializable;
import java.util.Date;

public class ServerFileEntry implements Serializable {

    private static final long serialVersionUID = 7225963136186775964L;

    private transient ChannelSftp.LsEntry file;

    /**
     * SFTPFileEntry constructor.
     *
     * @param file
     */
    public ServerFileEntry(ChannelSftp.LsEntry file) {
        this.file = file;
    }

    /**
     * Gets the file
     *
     * @return Returns a ChannelSftp.LsEntry
     */
    public ChannelSftp.LsEntry getFile() {
        return file;
    }

    /**
     * Gets the file name
     *
     * @return Returns a String
     */
    public String getName() {
        return file.getFilename();
    }

    /**
     * Gets the file size
     *
     * @return Returns a long
     */
    public long getSize() {
        return file.getAttrs().getSize();
    }

    /**
     * Gets the file modified date
     *
     * @return Returns a Date
     */
    public Date getDate() {
        return new Date(file.getAttrs().getMTime() * 1000L);
    }

    /**
     * Gets the file modified time
     *
     * @return Returns a long
     */
    public long getTime() {
        return file.getAttrs().getMTime();
    }

    /**
     * ServerFileEntry compareTo
     *
     * @param inObj
     * @return Returns 0 if files have same modified times and names
     */
    public int compareTo(Object inObj) {
        if (inObj != null && this.file != null) {
            if (inObj instanceof ServerFileEntry) {
                ServerFileEntry f = (ServerFileEntry) inObj;
                long inTime = f.getTime();
                long myTime = this.getTime();
                String inFilename = f.getName();
                String myFilename = this.getName();

                // Sort by File Modified Time Desc
                if (myTime < inTime) {
                    return -1;
                } else if (myTime > inTime) {
                    return 1;
                } else {
                    // If same Modified Time, Sort by File Name Desc
                    if (myFilename.compareTo(inFilename) < 0) {
                        return -1;
                    } else if (myFilename.compareTo(inFilename) > 0) {
                        return 1;
                    } else {
                        return 0;
                    }
                }
            } else {
                throw new ClassCastException("Objects are not the same");
            }
        } else {
            throw new NullPointerException("Object cannot be null");
        }
    }
}
