package ca.bc.gov.health.sfds.files;

import ca.bc.gov.health.sfds.dto.FileMetaDataDto;
import ca.bc.gov.health.sfds.util.SFDSConstants;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

/**
 * Object to store information about SFDS files
 *
 * @author vladimir.dovgalyuk
 *
 */
public class FileDescription implements Serializable {

    private static final long serialVersionUID = -4615122412948558188L;

    private FileMetaDataDto metadata;
    private ServerFileEntry serverData;

    public FileDescription(ServerFileEntry serverData) {
        this.serverData = serverData;
    }

    public FileMetaDataDto getMetadata() {
        return metadata;
    }

    public void setMetadata(FileMetaDataDto metadata) {
        this.metadata = metadata;
    }

    public ServerFileEntry getServerData() {
        return serverData;
    }

    public void setServerData(ServerFileEntry serverData) {
        this.serverData = serverData;
    }

    /**
     * Fields to be displayed on the Inbox page Table: File name, Status, Sending Account label, Send date, Size and Use
     * Use name is used for grouping in the data table on the Inbox page
     */
    public String getUseName() {
        if (this.getMetadata() == null) {
            return SFDSConstants.FILE_WITH_NO_METADATA;
        } else {
            return this.getMetadata().getUseName();
        }
    }

    public String getUseSendLabel() {
        if (this.getMetadata() == null) {
            return SFDSConstants.FILE_WITH_NO_METADATA;
        } else {
            return this.getMetadata().getUseSendLabel();
        }
    }

    public String getUseGetLabel() {
        if (this.getMetadata() == null) {
            return SFDSConstants.FILE_WITH_NO_METADATA;
        } else {
            return this.getMetadata().getUseGetLabel();
        }
    }

    public String getFileName() {
        if (this.getMetadata() != null) {
            return this.getMetadata().getBusinessFilename();
        }
        return this.getServerData().getName();
    }

    public String getStatus() {
        return (this.getMetadata() == null ? "" : this.getMetadata().getStatus());
    }

    public String getStatusForTable() {
        String result = (this.getMetadata() == null ? ""
                : SFDSConstants.FileStatuses.getDescriptionByDatabaseStatus(this.getMetadata().getStatus()));
        if (SFDSConstants.FileStatuses.isNew(result)) {
            return new StringBuilder("<b>").append(result).append("</b>").toString();
        } else {
            return result;
        }
    }

    public String getSendingAccount() {
        return (this.getMetadata() == null ? "" : this.getMetadata().getSendingAccount());
    }

    /**
     * Displays file size in kilobytes. The result is rounded to a nearest value of KB.
     *
     * @return File size in KB
     */
    public String getSizeInKb() {
        long size = this.getServerData().getSize();
        size = (size + 512) / 1024;
        if (size == 0) {
            size = 1;
        }
        return Long.toString(size) + "K";
    }

    /**
     * Real file size.
     *
     * @return File size in bytes.
     */
    public Long getSize() {
        return this.getServerData().getSize();
    }

    public Date getSendDate() {
        return (this.getMetadata() == null ? this.getServerData().getDate() : this.getMetadata().getSentDateTime());
    }

    /**
     * Dialogue adds the following: Receiving Account, Sending UID, Receiving UID, Received Date What is required :
     */
    public String getReceivingAccount() {
        return (this.getMetadata() == null ? "" : this.getMetadata().getReceivingAccount());
    }

    public String getSendingUID() {
        return (this.getMetadata() == null ? "" : this.getMetadata().getSendingUID());
    }

    public String getReceivingUID() {
        return (this.getMetadata() == null ? "" : this.getMetadata().getReceivingUID());
    }

    public Date getReceivedDate() {
        return (this.getMetadata() == null ? null : this.getMetadata().getReceivedDateTime());
    }

    public BigDecimal getDrrID() {
        return (this.getMetadata() == null ? null : this.getMetadata().getDrId());
    }

    public BigDecimal getDrrLockNum() {
        return (this.getMetadata() == null ? null : this.getMetadata().getDrLockSeqNum());
    }

    /**
     * Internal ID: DATA_TRANSPORT_TRANSACTIONS ID -> dttId
     */
    public Long getId() {
        return (this.getMetadata() == null ? null : this.getMetadata().getDTTid().longValue());
    }

    public String getSurrogateId() {
        return (this.getMetadata() == null ? this.getFileName() : this.getMetadata().getDTTid().toString());
    }

    /**
     * Convenience method returning "aggregate" date used in comparator. If no metadata => use server file modification
     * date If metadata available => use in the following order 1) Received date 2) Sent date
     *
     * @return Aggregation of possible dates
     */
    public Date getDateForCompare() {
        if (this.getMetadata() != null) {
            if (this.getMetadata().getReceivedDateTime() != null) {
                return this.getMetadata().getReceivedDateTime();
            } else if (this.getMetadata().getSentDateTime() != null) {
                return this.getMetadata().getSentDateTime();
            } else {
                return this.getServerData().getDate();
            }
        } else {
            return this.getServerData().getDate();
        }
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("File description : ");
        sb.append("\n\tName = ").append(this.getFileName());
        sb.append("\n\tUse = ").append(this.getUseName());
        sb.append("\n\tServer data = ").append(this.getServerData().getFile());
        if (this.getMetadata() != null) {
            sb.append("\n\tSMetadata = ").append(this.getMetadata());
        }
        return sb.toString();
    }

}
