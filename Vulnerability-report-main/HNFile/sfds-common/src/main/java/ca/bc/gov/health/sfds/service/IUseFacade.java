package ca.bc.gov.health.sfds.service;

import ca.bc.gov.health.sfds.dto.MetaDto;
import ca.bc.gov.health.sfds.dto.UseDto;
import ca.bc.gov.health.sfds.exception.DuplicateRecordException;
import jakarta.ejb.Local;
import java.util.List;

/**
 * Facade for dealing with SFDS Uses.
 *
 * @author alexey.malikov
 *
 */
@Local
public interface IUseFacade {

    /**
     * Retrieve all Use DTOs.
     *
     * @return list of all Use DTO.
     */
    public List<UseDto> getAllUses();

    /**
     * Retrieve Use by its ID
     *
     * @param useId the Use ID
     * @return the Use DTO for specified useId or null.
     */
    public UseDto getByUseId(String useId);

    /**
     * Deletes existing use.
     *
     * @param use the use DTO
     */
    public void deleteUse(UseDto use);

    /**
     * Creates Use entity based on the supplied DTO.
     *
     * @param use the use DTO.
     * @throws DuplicateRecordException when a use with the same use ID already exists.
     */
    public void createUse(UseDto use) throws DuplicateRecordException;

    /**
     * Update the Use.
     *
     * @param useDto
     */
    public void updateUse(UseDto useDto);

    /**
     * Checks if RBA exists for give account ID. If internal id is provided, bypasses that record
     *
     * @param accountId Account Identifier
     * @param id RBA id to be bypassed
     * @return true if a record with this account ID already exists, false otherwise
     */
    public boolean rulesBasedAccountExists(String accountId, Long id);

    /**
     * Get list of active uses.
     *
     * @return the list of meta data for active uses.
     */
    public List<MetaDto> getUseMetas();

}
