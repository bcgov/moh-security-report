/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.service.provider;

import ca.bc.gov.health.plr.service.ErrorMessage;
import ca.bc.gov.health.plr.service.validators.ExceptionCommon;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

/**
 * For exceptions thrown by JournalService.
 *
 * @author greg.perkins
 */
public class DuplicateRecordException extends Exception implements ExceptionCommon {

    private static final long serialVersionUID = 1L;

    private List<ErrorMessage> errorMessages;
    
    private String errorCode;

    public DuplicateRecordException(String message) {
        super(message);
    }

    public DuplicateRecordException(List<ErrorMessage> errorMessages) {
        super();
        this.errorMessages = errorMessages;
    }

    @Override
    public List<ErrorMessage> getErrorMessages() {
        if(errorMessages == null){
            errorMessages = new ArrayList<>();
            errorMessages.add(new ErrorMessage(getErrorCode(), getMessage()));
        }
        return errorMessages;
    }

    @Override
    public String getMessage() {
        String message = super.getMessage();
        if(message == null || message.isEmpty()){
            if(errorMessages != null && errorMessages.size() > 0){
                StringBuilder errorBuilder = new StringBuilder();
                Iterator<ErrorMessage> errorIter = errorMessages.iterator();
                while(errorIter.hasNext()){
                    ErrorMessage errorMessage = errorIter.next();
                    if(errorMessage.getErrorCode() != null && !errorMessage.getErrorCode().isEmpty()){
                        errorBuilder.append(errorMessage.getErrorCode()).append(CODE_SEPERATOR);
                    }
                    errorBuilder.append(errorMessage.getErrorMessage());
                    if(errorIter.hasNext()){
                        errorBuilder.append(MESSAGE_SEPERATOR);
                    }
                }
                message = errorBuilder.toString();
            }
        }
        return message;
    }

    @Override
    public String getErrorCode() {
        return errorCode;
    }

    @Override
    public void setErrorCode(String errorCode) {
        this.errorCode = errorCode;
    }
    
    
}
