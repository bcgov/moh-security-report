/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.service.validators;

import ca.bc.gov.health.plr.ejb.entity.PrsCtProvCredentialTypes;
import ca.bc.gov.health.plr.ejb.entity.PrsCtProvExpertiseTypes;
import ca.bc.gov.health.plr.ejb.entity.PrsProviderCredentials;
import ca.bc.gov.health.plr.ejb.entity.PrsProviderExpertises;
import static ca.bc.gov.health.plr.persistence.BusinessRuleKeys.ERROR_INVALID_EXPERTISETYPE;
import ca.bc.gov.health.plr.persistence.BusinessRuleMessageDao;
import ca.bc.gov.health.plr.persistence.CodesDao;
import java.util.List;
import javax.ejb.EJB;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import org.apache.commons.lang3.Validate;

/**
 * REQ-00919 : Validator class which checks if the provider role type have access to the expertise type 
 * 
 * @author sumesh.kariyil
 */
@LocalBean
@Stateless
public class ApplicableExpertiseCodeValidator implements EntityValidator<PrsProviderExpertises>{
    @EJB
    private CodesDao codesDao;
    
    private static final String errorMessage = BusinessRuleMessageDao.getMessageResource(ERROR_INVALID_EXPERTISETYPE);

    @Override
    public void validate(PrsProviderExpertises entity) throws EntityValidationException {
        Validate.notNull(entity);
        Validate.notNull(entity.getPauthPauthId());
        Validate.notNull(entity.getPauthPauthId().getHptCode());
        List<PrsCtProvExpertiseTypes> applicableExpertises = codesDao.getApplicableExpertiseTypes(entity.getPauthPauthId().getHptCode().getCtlId());
        if(applicableExpertises == null || applicableExpertises.isEmpty()){
            throw new EntityValidationException(errorMessage);
        }
        if(! applicableExpertises.contains(entity.getProviderExpertiseTypeCode())){
            throw new EntityValidationException(errorMessage);
        }
    }
}
