/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.dto.converter;

import ca.bc.gov.health.plr.dto.provider.ElectronicAddressDto;
import ca.bc.gov.health.plr.dto.provider.ProviderDto;
import ca.bc.gov.health.plr.ejb.entity.GrsCtEndReasonTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsElectronicAddresses;
import ca.bc.gov.health.plr.ejb.entity.GrsRegistryUsers;
import ca.bc.gov.health.plr.ejb.entity.PrsCtCommunPurposeTypes;
import ca.bc.gov.health.plr.ejb.entity.PrsCtDataOwnerCodes;
import ca.bc.gov.health.plr.ejb.entity.PrsCtElectronicAddrTypes;
import ca.bc.gov.health.plr.ejb.entity.PrsProviders;
import ca.bc.gov.health.plr.ejb.entity.PrsWorkLocations;
import ca.bc.gov.health.plr.persistence.CodesDao;
import ca.bc.gov.health.plr.ejb.entity.util.DatabaseConstants;
import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

/**
 * Converter class for switching between GrsElectronicAddress objects and
 * ElectronicAddress DTOs
 *
 * @author greg.perkins
 */
@Stateless
public class ElectronicAddressDtoConverter {

    @PersistenceContext(unitName = "PLR-ejbPU")
    protected EntityManager em;

    @EJB
    CodesDao codesDao;

    @EJB
    DtoConverter dtoConverter;

    /**
     * Converts a ElectronicAddress into a GrsElectronicAddresses
     *
     * @param dto ElectronicAddress to convert
     * @return Converted GrsElectronicAddresses
     */
    public GrsElectronicAddresses toEntity(ElectronicAddressDto dto) {
        GrsElectronicAddresses newAddress = new GrsElectronicAddresses();
        if (dto.getPauthId() != null) {
            PrsProviders p = em.find(PrsProviders.class, dto.getPauthId());
            newAddress.setPauthPauthId(p);
        }
        if (dto.getId() != null) {
            newAddress.setEaddrId(dto.getId());
        }
        if (dto.getWlWlId() != null) {
            newAddress.setWlWlId(em.find(PrsWorkLocations.class, dto.getWlWlId()));
        }
        if (dto.getCommunicationPurposeId() != null) {
            newAddress.setCmnctnPrpsTypCd(codesDao.lookup(PrsCtCommunPurposeTypes.class, dto.getCommunicationPurposeId()));
        } else if (dto.getCommunicationPurposeCode() != null) {
            newAddress.setCmnctnPrpsTypCd(codesDao.lookup(PrsCtCommunPurposeTypes.class, dto.getCommunicationPurposeCode()));
        }
        if (dto.getTypeId() != null) {
            newAddress.setElectronicAddressTypeCode(codesDao.lookup(PrsCtElectronicAddrTypes.class, dto.getTypeId()));
        } else if (dto.getTypeCode() != null) {
            newAddress.setElectronicAddressTypeCode(codesDao.lookup(PrsCtElectronicAddrTypes.class, dto.getTypeCode()));
        }
        if (dto.getAddress() != null) {
            newAddress.setElectronicAddressTxt(dto.getAddress());
        }
        if (dto.getDataOwnerCode() != null) {
            PrsCtDataOwnerCodes dataOwnerCode = codesDao.lookup(PrsCtDataOwnerCodes.class, dto.getDataOwnerCode());
            newAddress.setDataOwnerCode(dataOwnerCode);
        }
        if (dto.getRuRuID() != null) {
            newAddress.setRuRuId(em.find(GrsRegistryUsers.class, dto.getRuRuID()));
        }
        
        dtoConverter.copyCommonProperties(dto, newAddress);

        return newAddress;
    }
}
