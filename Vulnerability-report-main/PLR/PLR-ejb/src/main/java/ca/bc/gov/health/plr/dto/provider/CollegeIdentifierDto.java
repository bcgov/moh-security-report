package ca.bc.gov.health.plr.dto.provider;

import ca.bc.gov.health.plr.dto.MessageDataBlockDto;
import ca.bc.gov.health.plr.dto.converter.ProviderDtoConverter;
import ca.bc.gov.health.plr.ejb.entity.GrsIdentifiers;
import ca.bc.gov.health.plr.ejb.entity.PrsCtIdentifierTypes;
import ca.bc.gov.health.plr.rule.provider.AcceptableCodeName;
import ca.bc.gov.health.plr.rule.provider.AcceptableId;
import java.lang.reflect.Method;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.validation.constraints.NotNull;
import org.apache.commons.beanutils.PropertyUtils;
import org.apache.commons.lang3.StringUtils;
import javax.validation.constraints.NotBlank;

/**
 *
 * @author David Sharpe <david.a.sharpe@cgi.com>
 */
public class CollegeIdentifierDto extends AbstractProviderDetail implements MessageDataBlockDto {

    
    private static final String[] MESSAGE_DATA_BLOCK_COLUMNS = new String[]{"typeCode"};

    @NotBlank(message = "{error.notblank.part1of2}Identifier{error.notblank.part2of2}")
    @AcceptableId(pattern = ProviderDetailsUtil.provIDPattern)
    String identifier; //aka providerchid
    Long psrPsrID;
    @AcceptableCodeName(clazz = PrsCtIdentifierTypes.class, code = "Identifier Type")
    private String typeCode;
    @NotNull(message = "{error.notblank.part1of2} Provider Identifier Effective Start Date {error.notblank.part2of2}")
    private Date effectiveStartDate;
    private Date effectiveEndDate;
    private Long typeId;

    @Override
    public void setTypeCode(String typeCode) {
        this.typeCode = typeCode;
    }

    /**
     * @return the identifier
     */
    public String getIdentifier() {
        return identifier;
    }

    /**
     * @param identifier the identifier to set
     */
    public void setIdentifier(String identifier) {
        identifier = StringUtils.stripAccents(identifier);
        identifier = StringUtils.strip(identifier);
        this.identifier = identifier;
    }

    public Long getPsrPsrID() {
        return psrPsrID;
    }

    public void setPsrPsrID(Long psrPsrID) {
        this.psrPsrID = psrPsrID;
    }

    public boolean Equals(Object object) {
        if (object == null || !(object instanceof CollegeIdentifierDto)) {
            return false;
        }
        CollegeIdentifierDto toCheck = (CollegeIdentifierDto) object;
        //if the ID (primary key) is not set check vs the identifier & role
        //TODO should Pauth play into this.  thinking no but want to revisit
        if (toCheck.getId() == null && this.getId() == null) {
            if ((toCheck.getIdentifier() != null && toCheck.getIdentifier().equals(this.getIdentifier())) && (toCheck.getTypeCode() != null && toCheck.getTypeCode().equals(this.getTypeCode()))) {
                return true;
            }
            return false;
        }
        if (toCheck.getId() != null && toCheck.getId() == this.getId()) {
            return true;
        }
        return false;
    }

    @Override
    public ca.bc.gov.health.plr.dto.provider.esb.AbstractProviderDetail toEsbVersion() throws Exception {
        ca.bc.gov.health.plr.dto.provider.esb.CollegeIdentifierDto esbVersion = new ca.bc.gov.health.plr.dto.provider.esb.CollegeIdentifierDto();

        PropertyUtils.copyProperties(esbVersion, this);

        return esbVersion;

    }

    @Override
    public String getTypeCode() {
        return typeCode;
    }

    @Override
    public String getBlockName() {
        return "Provider Identifier";
    }

    /**
     * @return the effectiveStartDate
     */
    @Override
    public Date getEffectiveStartDate() {
        return effectiveStartDate;
    }

    /**
     * @param effectiveStartDate the effectiveStartDate to set
     */
    @Override
    public void setEffectiveStartDate(Date effectiveStartDate) {
        this.effectiveStartDate = effectiveStartDate;
    }

    @Override
    public Date getEffectiveEndDate() {
        return effectiveEndDate;
    }

    @Override
    public void setEffectiveEndDate(Date effectiveEndDate) {
        this.effectiveEndDate = effectiveEndDate;
    }

    public Long getTypeId() {
        return typeId;
    }

    public void setTypeId(Long typeId) {
        this.typeId = typeId;
    }

    @Override
    public void addToProviderDto(ProviderDto providerDto) {
        providerDto.getIdentifiers().add(this);
    }

    @Override
    public String[] getMessageDataBlockFields() {
        return MESSAGE_DATA_BLOCK_COLUMNS;
    }
 
    @Override
    public Class getEntityClass() {
        return GrsIdentifiers.class;
    }
    
    @Override
    public Method getDtoConverterMethod() {
        Method method = null;
        try {
            method = ProviderDtoConverter.class.getMethod("buildIdentifier", GrsIdentifiers.class);
        } catch (NoSuchMethodException | SecurityException ex) {
            Logger.getLogger(AddressDto.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // return null is OK
        return method;
    }
}
