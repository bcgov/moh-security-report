
package ca.bc.gov.health.plr.dto.provider;

import ca.bc.gov.health.plr.dto.MessageDataBlockDto;
import ca.bc.gov.health.plr.dto.converter.ProviderDtoConverter;
import ca.bc.gov.health.plr.ejb.entity.PrsCtProvExpertiseTypes;
import ca.bc.gov.health.plr.ejb.entity.PrsProviderExpertises;
import ca.bc.gov.health.plr.rule.provider.AcceptableAnyField;
import ca.bc.gov.health.plr.rule.provider.AcceptableCodeName;
import java.lang.reflect.Method;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.apache.commons.beanutils.PropertyUtils;
import org.apache.commons.lang3.StringUtils;

/**
 *
 * @author David Sharpe <david.a.sharpe@cgi.com>
 */
public class ExpertiseDto extends AbstractProviderDetail implements MessageDataBlockDto{
    String roleType;
    String roleTypeCode;
    @AcceptableAnyField( message = "{error.anyfield.invalidcharacters.part1of2} 'Source's Code' {error.anyfield.invalidcharacters.part2of2}")
    @Size(max = 50, message = "{constraints.size.message.part1of2} 'Source's Code' {constraints.size.message.part2of2}")
    String sourcesCode;
    
    @AcceptableCodeName(clazz = PrsCtProvExpertiseTypes.class, code = "Expertise Type")
    private String typeCode;
    
    private static final String[] RECORD_TYPES = new String[]{"typeCode", "roleTypeCode"};
    @NotNull(message = "{error.notblank.part1of2} Expertise Effective Start Date {error.notblank.part2of2}")
    private Date effectiveStartDate;
    private Date effectiveEndDate;
    private Long typeId;
    
    @Override
    public String[] getRecordTypeFields(){
        return RECORD_TYPES;
    }

    /**
     * @return the roleType
     */
    public String getRoleType() {
        return roleType;
    }

    /**
     * @param roleType the roleType to set
     */
    public void setRoleType(String roleType) {
        this.roleType = roleType;
    }

    /**
     * @return the roleTypeCode
     */
    public String getRoleTypeCode() {
        return roleTypeCode;
    }

    /**
     * @param roleTypeCode the roleTypeCode to set
     */
    public void setRoleTypeCode(String roleTypeCode) {
        this.roleTypeCode = roleTypeCode;
    }

    /**
     * @return the sourcesCode
     */
    public String getSourcesCode() {
        return sourcesCode;
    }

    /**
     * @param sourcesCode the sourcesCode to set
     */
    public void setSourcesCode(String sourcesCode) {
        sourcesCode = StringUtils.stripAccents(sourcesCode);
        sourcesCode = StringUtils.strip(sourcesCode);
        this.sourcesCode = sourcesCode;
    }

    @Override
    public String[] getMessageDataBlockFields() {
        return new String[]{"typeCode"};
    }
    
    @Override
    public ca.bc.gov.health.plr.dto.provider.esb.AbstractProviderDetail toEsbVersion() throws Exception {  
        ca.bc.gov.health.plr.dto.provider.esb.ExpertiseDto esbVersion = new ca.bc.gov.health.plr.dto.provider.esb.ExpertiseDto();        
        
        PropertyUtils.copyProperties(esbVersion, this);
        
        return esbVersion;

    }

    @Override
    public String getTypeCode() {
        return typeCode;
    }

    @Override
    public void setTypeCode(String typeCode) {
        this.typeCode = typeCode;
    }
    @Override
    public String getBlockName() {
        return "Expertise";
    }

    /**
     * @return the effectiveStartDate
     */
    @Override
    public Date getEffectiveStartDate() {
        return effectiveStartDate;
    }

    /**
     * @param effectiveStartDate the effectiveStartDate to set
     */
    @Override
    public void setEffectiveStartDate(Date effectiveStartDate) {
        this.effectiveStartDate = effectiveStartDate;
    }

    @Override
    public Date getEffectiveEndDate() {
        return effectiveEndDate;
    }

    @Override
    public void setEffectiveEndDate(Date effectiveEndDate) {
        this.effectiveEndDate = effectiveEndDate;
    }

    public Long getTypeId() {
        return typeId;
    }

    public void setTypeId(Long typeId) {
        this.typeId = typeId;
    }

    @Override
    public void addToProviderDto(ProviderDto providerDto) {
        providerDto.getExpertise().add(this);
    }
    
    @Override
    public Class getEntityClass() {
        return PrsProviderExpertises.class;
    }
    
    @Override
    public Method getDtoConverterMethod() {
        Method method = null;
        try {
            method = ProviderDtoConverter.class.getMethod("buildExpertise", PrsProviderExpertises.class);
        } catch (NoSuchMethodException | SecurityException ex) {
            Logger.getLogger(AddressDto.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // return null is OK
        return method;
    }

}
