package ca.bc.gov.health.plr.dto.converter;

import ca.bc.gov.health.plr.dto.PartyDetailsDto;
import ca.bc.gov.health.plr.ejb.entity.GrsCtBooleanTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsCtEndReasonTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsParties;
import ca.bc.gov.health.plr.ejb.entity.GrsPartyDetails;
import ca.bc.gov.health.plr.ejb.entity.PrsCtDataOwnerCodes;
import ca.bc.gov.health.plr.persistence.CodeTableCodes;
import ca.bc.gov.health.plr.persistence.CodesDao;
import ca.bc.gov.health.plr.ejb.entity.util.DatabaseConstants;
import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

/**
 * Convert a PartyDetails DTO into a PartyDetails Entity.
 *
 * @author DAdebiyi Kuseju
 */
@Stateless
public class PartyDetailsDtoConverter {

    @PersistenceContext(unitName = "PLR-ejbPU")
    private EntityManager em;
    @EJB
    private CodesDao codesDao;

    public GrsPartyDetails toEntity(PartyDetailsDto dto) {
        GrsPartyDetails entity = new GrsPartyDetails();

        entity.setPtydId(dto.getId());

        if (dto.getPartyId() != null) {
            entity.setPartyPartyId(em.find(GrsParties.class, dto.getPartyId()));
        }

        if (dto.isActive()) {
            entity.setActiveFlag(codesDao.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.YES));
        } else {
            entity.setActiveFlag(codesDao.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.NO));
        }

        if (dto.getDataOwnerCode() != null) {
            entity.setDefaultDataOwnerCode(codesDao.lookup(PrsCtDataOwnerCodes.class, dto.getDataOwnerCode()));
        }

        if (dto.getEndReasonCode() != null) {
            entity.setEndReasonCode(codesDao.lookup(GrsCtEndReasonTypes.class, dto.getEndReasonCode()));
        } else if (dto.getEndReasonCodeId() != null) {
            entity.setEndReasonCode(codesDao.lookup(GrsCtEndReasonTypes.class, dto.getEndReasonCodeId()));
        }

        entity.setEffectiveStartDate(dto.getEffectiveStartDate());
        if(dto.getEffectiveEndDate() != null){
            entity.setEffectiveEndDate(dto.getEffectiveEndDate());
        } else {
            entity.setEffectiveEndDate(DatabaseConstants.SYSTEM_HIGH_DATE.toDate());
        }
        if (dto.getGenerationNum() != null) {
            entity.setGenerationNum(dto.getGenerationNum());
        }
        entity.setInvalidatedDts(dto.getInvalidatedDate());
        entity.setUserChid(dto.getUserChid());
        entity.setCreatedDts(dto.getCreatedDate());
        entity.setAgreementChid(dto.getAgreement());
        entity.setContactDetailsTxt(dto.getContactDetails());

        return entity;
    }
}
