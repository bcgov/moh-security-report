/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.service.validators;

import ca.bc.gov.health.plr.ejb.entity.GrsIdentifiers;
import ca.bc.gov.health.plr.ejb.entity.PrsCtIdentifierTypes;
import static ca.bc.gov.health.plr.persistence.BusinessRuleKeys.ERROR_INVALID_IDENTIFIER_TYPE;
import ca.bc.gov.health.plr.persistence.BusinessRuleMessageDao;
import ca.bc.gov.health.plr.persistence.CodesDao;
import java.util.List;
import javax.ejb.EJB;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import org.apache.commons.lang3.Validate;

/**
 * REQ-00919 : Validator class which checks if the provider role type have access to the provider identifier type 
 * 
 * @author sumesh.kariyil
 */
@LocalBean
@Stateless
public class ApplicableProviderIdentifierValidator implements EntityValidator<GrsIdentifiers>{

    @EJB
    private CodesDao codesDao;
    
    private static final String errorMessage = BusinessRuleMessageDao.getMessageResource(ERROR_INVALID_IDENTIFIER_TYPE);
    
    @Override
    public void validate(GrsIdentifiers entity) throws EntityValidationException {
        Validate.notNull(entity);
        Validate.notNull(entity.getPauthPauthId());
        Validate.notNull(entity.getPauthPauthId().getHptCode());
        List<PrsCtIdentifierTypes> applicableIdentifiers = codesDao.getApplicableIdentifierTypes(entity.getPauthPauthId().getHptCode().getCtlId());
        if(applicableIdentifiers == null || applicableIdentifiers.isEmpty()){
            throw new EntityValidationException(errorMessage);
        }
        if(! applicableIdentifiers.contains(entity.getIdentifierTypeCode())){
            throw new EntityValidationException(errorMessage);
        }
    }
    
}
