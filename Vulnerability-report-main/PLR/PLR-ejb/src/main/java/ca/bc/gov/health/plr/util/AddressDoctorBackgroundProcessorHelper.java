/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.util;

import ca.bc.gov.health.plr.ejb.entity.GrsAddresses;
import ca.bc.gov.health.plr.persistence.CodeTableCodes;
import ca.bc.gov.health.plr.service.provider.MaintainAddressService;
import java.util.HashMap;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.ejb.TransactionAttribute;
import javax.ejb.TransactionAttributeType;
import javax.inject.Inject;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

/**
 *
 * @author jonathan.wiebe
 */
@Stateless
@LocalBean
public class AddressDoctorBackgroundProcessorHelper {

    @Inject
    MaintainAddressService maintainAddressService;

    @PersistenceContext(unitName = "PLR-ejbPU")
    EntityManager em;

    /**
     * Starts a new transaction so each address is saved individually
     *
     * @param ga
     * @return
     */
    @TransactionAttribute(TransactionAttributeType.REQUIRES_NEW)
    public HashMap<String, Integer> validateOldAddress(Long id) {
        try {
            GrsAddresses ga = (GrsAddresses) em.find(GrsAddresses.class, id);
            // make sure we got one
            if (ga != null) {
                // make sure it is still current
                if (ga.getEndReasonCode() == null) {
                    return maintainAddressService.validateOldAddress(ga);
                }
            }
        } catch (Exception ex) {
            // keep going
        }
        return null;
    }

}
