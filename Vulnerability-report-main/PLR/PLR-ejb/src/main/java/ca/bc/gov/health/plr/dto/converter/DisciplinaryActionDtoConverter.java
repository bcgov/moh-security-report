/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.dto.converter;

import ca.bc.gov.health.plr.dto.provider.DisciplinaryActionDto;
import ca.bc.gov.health.plr.dto.provider.ProviderDto;
import ca.bc.gov.health.plr.ejb.entity.GrsCtBooleanTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsCtEndReasonTypes;
import ca.bc.gov.health.plr.ejb.entity.PrsCtDataOwnerCodes;
import ca.bc.gov.health.plr.ejb.entity.PrsDisciplinaryActions;
import ca.bc.gov.health.plr.ejb.entity.PrsProviders;
import ca.bc.gov.health.plr.ejb.entity.util.EntityUtils;
import ca.bc.gov.health.plr.persistence.CodesDao;
import ca.bc.gov.health.plr.ejb.entity.util.DatabaseConstants;
import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

/**
 *
 * @author ian.scott
 */
@Stateless
public class DisciplinaryActionDtoConverter {

    @PersistenceContext(unitName = "PLR-ejbPU")
    EntityManager em;
    
    @EJB
    CodesDao codesDao;
    
    @EJB
    DtoConverter dtoConverter;

    /**
     * Assemble Entity from transfer object
     *
     * @param dto - the transfer object to convert
     * @return - the entity representation of the transfer object
     */
    public PrsDisciplinaryActions toEntity(DisciplinaryActionDto dto) {
        PrsDisciplinaryActions newEntity = new PrsDisciplinaryActions();
        if (dto.getId() != null) {
            newEntity.setDiscaId(dto.getId());
        }
        //set the pauth
        if (dto.getPauthId() != null) {
            newEntity.setPauthPauthId(em.find(PrsProviders.class, dto.getPauthId()));
        }

        newEntity.setDisciplinaryActionChid(dto.getIdentifier());

        GrsCtBooleanTypes displayFlag = EntityUtils.toGrsCtBooleanType(dto.isDisplayFlag(), codesDao);
        newEntity.setDisplayFlag(displayFlag);

        newEntity.setDescriptionTxt(dto.getDescription());

        newEntity.setArchiveDate(dto.getArchiveDate());

        if (dto.getDataOwnerCode() != null) {
            PrsCtDataOwnerCodes dataOwnerCode = codesDao.lookup(PrsCtDataOwnerCodes.class, dto.getDataOwnerCode());
            newEntity.setDataOwnerCode(dataOwnerCode);
        }

        if (dto.getArchiveDate() != null) {
            newEntity.setArchiveDate(dto.getArchiveDate());
        } else {
            // Archive date is optional from the web form, but required at the
            //entity level
            newEntity.setArchiveDate(DatabaseConstants.SYSTEM_HIGH_DATE.toDate());
        }
        
        dtoConverter.copyCommonProperties(dto, newEntity);
        
        return newEntity;
    }
}
