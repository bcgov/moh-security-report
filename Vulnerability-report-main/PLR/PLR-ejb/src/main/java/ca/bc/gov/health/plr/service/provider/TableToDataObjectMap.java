/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.service.provider;

import ca.bc.gov.health.plr.ejb.entity.GrsAddresses;
import ca.bc.gov.health.plr.ejb.entity.GrsElectronicAddresses;
import ca.bc.gov.health.plr.ejb.entity.GrsIdentifiers;
import ca.bc.gov.health.plr.ejb.entity.GrsOrgNames;
import ca.bc.gov.health.plr.ejb.entity.GrsPersonNames;
import ca.bc.gov.health.plr.ejb.entity.GrsRegistryIdentifiers;
import ca.bc.gov.health.plr.ejb.entity.GrsTelephones;
import ca.bc.gov.health.plr.ejb.entity.PrsConditions;
import ca.bc.gov.health.plr.ejb.entity.PrsConfidentialityIndicators;
import ca.bc.gov.health.plr.ejb.entity.PrsDemographicDetails;
import ca.bc.gov.health.plr.ejb.entity.PrsDisciplinaryActions;
import ca.bc.gov.health.plr.ejb.entity.PrsInformationRoutes;
import ca.bc.gov.health.plr.ejb.entity.PrsNotes;
import ca.bc.gov.health.plr.ejb.entity.PrsProvRuRelns;
import ca.bc.gov.health.plr.ejb.entity.PrsProviderCredentials;
import ca.bc.gov.health.plr.ejb.entity.PrsProviderExpertises;
import ca.bc.gov.health.plr.ejb.entity.PrsProviderRelationships;
import ca.bc.gov.health.plr.ejb.entity.PrsStatuses;
import ca.bc.gov.health.plr.ejb.entity.PrsWorkLocationDetails;
import ca.bc.gov.health.plr.ejb.entity.PrsWorkLocations;
import ca.bc.gov.health.plr.ejb.entity.RecordTypeEntity;

/**
 * An Enum which holds the mapping between the table name and data object name
 * For all work location tables - 'WL-' is prefixed to distinguish
 * @author sumesh.kariyil
 */
public enum TableToDataObjectMap {

    GRS_ADDRESS("GRS_ADDRESSES", GrsAddresses.class),
    GRS_ELECTRONIC_ADDRESS("GRS_ELECTRONIC_ADDRESSES", GrsElectronicAddresses.class),
    GRS_IDENTIFIER("GRS_IDENTIFIERS", GrsIdentifiers.class),
    GRS_REGISTRY_IDENTIFIER("GRS_REGISTRY_IDENTIFIERS", GrsRegistryIdentifiers.class),
    GRS_ORGANIZATION_NAME("GRS_ORG_NAMES", GrsOrgNames.class),
    GRS_PERSONAL_NAME("GRS_PERSON_NAMES", GrsPersonNames.class),
    GRS_TELEPHONE("GRS_TELEPHONES", GrsTelephones.class),
    PRS_CONDITION("PRS_CONDITIONS", PrsConditions.class),
    PRS_CONFIDENTIALITY_INDICATOR("PRS_CONFIDENTIALITY_INDICATORS", PrsConfidentialityIndicators.class),
    PRS_DEMOGRAPHIC_DETAIL("PRS_DEMOGRAPHIC_DETAILS", PrsDemographicDetails.class),
    PRS_DISCIPLINARY_ACTION("PRS_DISCIPLINARY_ACTIONS", PrsDisciplinaryActions.class),
    PRS_INFORMATION_ROUTE("PRS_INFORMATION_ROUTES", PrsInformationRoutes.class),
    PRS_NOTE("PRS_NOTES", PrsNotes.class),
    PRS_PROVIDER_CREDENTIAL("PRS_PROVIDER_CREDENTIALS", PrsProviderCredentials.class),
    PRS_PROVIDER_EXPERTISE("PRS_PROVIDER_EXPERTISES", PrsProviderExpertises.class),
    PRS_PROVIDER_RELATIONSHIP("PRS_PROVIDER_RELATIONSHIPS", PrsProviderRelationships.class),
    PRS_PROV_RU_RELN("PRS_PROV_RU_RELNS", PrsProvRuRelns.class),
    PRS_STATUS("PRS_STATUSES", PrsStatuses.class),
    PRS_WORK_LOCATION("PRS_WORK_LOCATIONS", PrsWorkLocations.class),
    PRS_WORK_LOCATION_DETAIL("WL-PRS_WORK_LOCATION_DETAILS", PrsWorkLocationDetails.class),
    PRS_WORK_LOCATION_ADDRESS("WL-GRS_ADDRESSES", GrsAddresses.class),
    PRS_WORK_LOCATION_ELECTRONIC_ADDRESS("WL-GRS_ELECTRONIC_ADDRESSES", GrsElectronicAddresses.class),
    PRS_WORK_LOCATION_TELEPHONE("WL-GRS_TELEPHONES", GrsTelephones.class),
    PRS_WORK_LOCATION_INFORMATION_ROUTE("WL-PRS_INFORMATION_ROUTES", PrsInformationRoutes.class);
    
    final String tableName;
    
    final Class<? extends RecordTypeEntity> entityClassName;

    private TableToDataObjectMap(String tableName, Class<? extends RecordTypeEntity> className) {
        this.tableName = tableName;
        this.entityClassName=className;
    }
    
    public static TableToDataObjectMap fromTableName(String tableName) {
        for (TableToDataObjectMap t : values() ){
            if (t.tableName.equals(tableName)) return t;
        }
        return null;
    }
    
    public static Class<? extends RecordTypeEntity> getEntityFromDataObjectName(String dataObjectName) {
        for (TableToDataObjectMap t : values() ){
            if (t.name().equals(dataObjectName)){
                return t.entityClassName;
            }
        }
        return null;
    }
}
