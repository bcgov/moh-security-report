package ca.bc.gov.health.plr.dto.converter;

import ca.bc.gov.health.plr.dto.provider.OrgNameDto;
import ca.bc.gov.health.plr.ejb.entity.GrsCtBooleanTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsCtEndReasonTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsOrgNames;
import ca.bc.gov.health.plr.ejb.entity.GrsRegistryUsers;
import ca.bc.gov.health.plr.ejb.entity.PrsCtDataOwnerCodes;
import ca.bc.gov.health.plr.ejb.entity.PrsCtNameTypes;
import ca.bc.gov.health.plr.ejb.entity.PrsProviders;
import ca.bc.gov.health.plr.persistence.CodeTableCodes;
import ca.bc.gov.health.plr.persistence.CodesDao;
import ca.bc.gov.health.plr.ejb.entity.util.DatabaseConstants;
import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

/**
 * Converts a DTO into an Entity.
 *
 * @author David Sharpe <david.a.sharpe@cgi.com>
 */
@Stateless
public class OrgNameDtoConverter {

    @PersistenceContext(unitName = "PLR-ejbPU")
    private EntityManager em;
    @EJB
    private CodesDao codesDao;    
    @EJB
    DtoConverter dtoConverter;
    /**
     * Assemble Entity from transfer object.
     *
     * @param dto the transfer object to convert
     * @return the entity representation of the transfer object
     */
    public GrsOrgNames toEntity(OrgNameDto dto) {
        GrsOrgNames newEntity = new GrsOrgNames();
        if (dto.getDataOwnerCode() != null) {
            PrsCtDataOwnerCodes dataOwnerCode = codesDao.lookup(PrsCtDataOwnerCodes.class, dto.getDataOwnerCode());
            newEntity.setDataOwnerCode(dataOwnerCode);
        }
        if (dto.getTypeId() != null) {
            newEntity.setNameTypeCode(codesDao.lookup(PrsCtNameTypes.class, dto.getTypeId()));
        } else if(dto.getTypeCode() != null){
            newEntity.setNameTypeCode(codesDao.lookup(PrsCtNameTypes.class, dto.getTypeCode()));
        }
        if (dto.getId() != null) {
            newEntity.setNmId(dto.getId());
        }
        if (dto.getPauthId() != null) {
            newEntity.setPauthPauthId(em.find(PrsProviders.class, dto.getPauthId()));
        }
        if (dto.getRuRuId() != null) {
            newEntity.setRuRuId(em.find(GrsRegistryUsers.class, dto.getRuRuId()));
        }
        GrsCtBooleanTypes preferredFlag;
        if (dto.isPreferred()) {
            preferredFlag = codesDao.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.YES);
        } else {
            preferredFlag = codesDao.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.NO);
        }
        newEntity.setPnamePreferredFlag(preferredFlag);
        if (dto.getName() != null) {
            newEntity.setOrgnztnNameTxt(dto.getName());
        }
        if (dto.getLongName() != null) {
            newEntity.setOrgnztnLongNameTxt(dto.getLongName());
        }
        
        dtoConverter.copyCommonProperties(dto, newEntity);
        
        return newEntity;
    }
}
