package ca.bc.gov.health.plr.dto.provider;

import ca.bc.gov.health.plr.dto.MessageDataBlockDto;
import ca.bc.gov.health.plr.dto.converter.ProviderDtoConverter;
import ca.bc.gov.health.plr.ejb.entity.GrsTelephones;
import ca.bc.gov.health.plr.ejb.entity.PrsCtTelecomNumberTypes;
import ca.bc.gov.health.plr.rule.provider.AcceptableCharacterValidator;
import ca.bc.gov.health.plr.rule.provider.AcceptableCodeId;
import ca.bc.gov.health.plr.rule.provider.AcceptableCodeName;
import ca.bc.gov.health.plr.rule.provider.AcceptableTelecommunication;
import ca.bc.gov.health.plr.rule.provider.AcceptableTelecommunicationValidator;
import ca.bc.gov.health.plr.rule.provider.TelecomCrossFieldConstraints;
import java.lang.reflect.Method;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.apache.commons.beanutils.PropertyUtils;
import javax.validation.constraints.NotBlank;

/**
 *
 * @author David Sharpe <david.a.sharpe@cgi.com>
 */
@TelecomCrossFieldConstraints
public class TelecommunicationDto extends LocationDto implements MessageDataBlockDto{

    @AcceptableTelecommunication
    @Size(max = 15, message = "{constraints.size.message.part1of2} 'Area Code' {constraints.size.message.part2of2}")
    String areaCode;
    @NotBlank(message = "{error.notblank.part1of2}Phone Number{error.notblank.part2of2}")
    @AcceptableTelecommunication
    @Size(min = 1, max = 30, message = "{constraints.size.message.part1of2} 'Phone Number' {constraints.size.message.part2of2}")
    String number;
    @AcceptableTelecommunication
    @Size(max = 15, message = "{constraints.size.message.part1of2} 'Extension' {constraints.size.message.part2of2}")
    String extension;
    Long ruRuId;
    @AcceptableCodeId(clazz = PrsCtTelecomNumberTypes.class, code = "Telecommunication Type")
    Long typeId;
    @AcceptableCodeName(clazz = PrsCtTelecomNumberTypes.class, code = "Telecommunication Type")
    private String typeCode;

    private static final String[] RECORD_TYPES = new String[]{"communicationPurposeCode"};

    private static final String[] MESSAGE_DATA_BLOCK = new String[]{"communicationPurposeCode", "typeCode"};
    @NotNull(message = "{error.notblank.part1of2} Telecommunication Effective Start Date {error.notblank.part2of2}")
    private Date effectiveStartDate;
    private Date effectiveEndDate;

    @Override
    public String[] getRecordTypeFields() {
        return RECORD_TYPES;
    }

    /**
     * @return the areaCode
     */
    public String getAreaCode() {
        return areaCode;
    }

    /**
     * @param areaCode the areaCode to set
     */
    public void setAreaCode(String areaCode) {
        this.areaCode = handleInvalidCharacters(areaCode);
    }

    /**
     * @return the number
     */
    public String getNumber() {
        return number;
    }

    /**
     * @param number the number to set
     */
    public void setNumber(String number) {
        this.number = handleInvalidCharacters(number);
    }

    /**
     * @return the extension
     */
    public String getExtension() {
        return extension;
    }

    /**
     * @param extension the extension to set
     */
    public void setExtension(String extension) {
        this.extension = handleInvalidCharacters(extension);
    }

    /**
     *
     * @return the registryUserId
     */
    public Long getRuRuId() {
        return ruRuId;
    }

    /**
     *
     * @param ruRuId the registryUseID
     */
    public void setRuRuId(Long ruRuId) {
        this.ruRuId = ruRuId;
    }

    @Override
    public Long getTypeId() {
        return typeId;
    }

    @Override
    public void setTypeId(Long typeId) {
        this.typeId = typeId;
    }

    @Override
    public String[] getMessageDataBlockFields() {
        return MESSAGE_DATA_BLOCK;
    }

    @Override
    public ca.bc.gov.health.plr.dto.provider.esb.AbstractProviderDetail toEsbVersion() throws Exception {
        ca.bc.gov.health.plr.dto.provider.esb.TelecommunicationDto esbVersion = new ca.bc.gov.health.plr.dto.provider.esb.TelecommunicationDto();

        PropertyUtils.copyProperties(esbVersion, this);

        return esbVersion;

    }

    @Override
    public String getTypeCode() {
        return typeCode;
    }

    @Override
    public void setTypeCode(String typeCode) {
        this.typeCode = typeCode;
    }
    @Override
    public String getBlockName() {
        return "Telecommunication";
    }

    /**
     * @return the effectiveStartDate
     */
    @Override
    public Date getEffectiveStartDate() {
        return effectiveStartDate;
    }

    /**
     * @param effectiveStartDate the effectiveStartDate to set
     */
    @Override
    public void setEffectiveStartDate(Date effectiveStartDate) {
        this.effectiveStartDate = effectiveStartDate;
    }

    @Override
    public Date getEffectiveEndDate() {
        return effectiveEndDate;
    }

    @Override
    public void setEffectiveEndDate(Date effectiveEndDate) {
        this.effectiveEndDate = effectiveEndDate;
    }

    @Override
    public void addToProviderDto(ProviderDto providerDto) {
        providerDto.getTelecommunication().add(this);
    }
    
    @Override
    public Class getEntityClass() {
        return GrsTelephones.class;
    }
    
    @Override
    public Method getDtoConverterMethod() {
        Method method = null;
        try {
            method = ProviderDtoConverter.class.getMethod("buildTelephone", GrsTelephones.class);
        } catch (NoSuchMethodException | SecurityException ex) {
            Logger.getLogger(AddressDto.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // return null is OK
        return method;
    }
    
     private static String handleInvalidCharacters(String value) {
        return AcceptableCharacterValidator.handleInvalidCharacters(value, AcceptableTelecommunicationValidator.INVALID_TELECOMMUNICATION_CHARACTERS_PATTERN);
    }

}
