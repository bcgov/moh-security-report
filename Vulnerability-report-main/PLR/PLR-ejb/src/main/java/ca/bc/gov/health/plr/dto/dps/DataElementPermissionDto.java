package ca.bc.gov.health.plr.dto.dps;

import ca.bc.gov.health.plr.dto.DtoCommon;
import java.util.Date;
import java.util.Objects;
import javax.validation.constraints.NotNull;

/**
 *
 * @author sumesh.kariyil
 */
public class DataElementPermissionDto extends DtoCommon implements Cloneable{

    private Long apgId;
    private Long de1Code;
    private String dataObjectName;
    private String declCode;
    private String deCode;
    private String accessCharCode;
    private boolean readFlag;
    private String distributeFlag;
    private boolean updateFlag;
    private String updateOwnFlag;
    private String correctFlag;
    private String viewHistoryFlag;
    @NotNull(message = "{error.notblank.part1of2} Data Element Permission Effective Start Date {error.notblank.part2of2}")
    private Date effectiveStartDate;
    private Date effectiveEndDate;
    
    @Override
    public Date getEffectiveStartDate() {
        return effectiveStartDate;
    }

    @Override
    public void setEffectiveStartDate(Date effectiveStartDate) {
        this.effectiveStartDate = effectiveStartDate;
    }
    
    @Override
    public DataElementPermissionDto clone() throws CloneNotSupportedException{
        return (DataElementPermissionDto)super.clone();
    }

    public Long getApgId() {
        return apgId;
    }

    public void setApgId(Long apgId) {
        this.apgId = apgId;
    }

    public Long getDe1Code() {
        return de1Code;
    }

    public void setDe1Code(Long de1Code) {
        this.de1Code = de1Code;
    }

    public String getDataObjectName() {
        return dataObjectName;
    }

    public void setDataObjectName(String dataObjectName) {
        this.dataObjectName = dataObjectName;
    }

    public String getDeclCode() {
        return declCode;
    }

    public void setDeclCode(String declCode) {
        this.declCode = declCode;
    }

    public String getDeCode() {
        return deCode;
    }

    public void setDeCode(String deCode) {
        this.deCode = deCode;
    }

    public String getAccessCharCode() {
        return accessCharCode;
    }

    public void setAccessCharCode(String accessCharCode) {
        this.accessCharCode = accessCharCode;
    }

    public String getDistributeFlag() {
        return distributeFlag;
    }

    public void setDistributeFlag(String distributeFlag) {
        this.distributeFlag = distributeFlag;
    }

    public String getUpdateOwnFlag() {
        return updateOwnFlag;
    }

    public void setUpdateOwnFlag(String updateOwnFlag) {
        this.updateOwnFlag = updateOwnFlag;
    }

    public String getCorrectFlag() {
        return correctFlag;
    }

    public void setCorrectFlag(String correctFlag) {
        this.correctFlag = correctFlag;
    }

    public String getViewHistoryFlag() {
        return viewHistoryFlag;
    }

    public void setViewHistoryFlag(String viewHistoryFlag) {
        this.viewHistoryFlag = viewHistoryFlag;
    }

    public boolean isReadFlag() {
        return readFlag;
    }

    public void setReadFlag(boolean readFlag) {
        this.readFlag = readFlag;
    }

    public boolean isUpdateFlag() {
        return updateFlag;
    }

    public void setUpdateFlag(boolean updateFlag) {
        this.updateFlag = updateFlag;
    }

    // Don't change this.
    // This is important as the changed item is derived from the clonedList .contains() method
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 13 * hash + Objects.hashCode(this.apgId);
        hash = 13 * hash + Objects.hashCode(this.de1Code);
        hash = 13 * hash + Objects.hashCode(this.declCode);
        hash = 13 * hash + (this.readFlag ? 1 : 0);
        hash = 13 * hash + (this.updateFlag ? 1 : 0);
        return hash;
    }

    // Don't change this.
    // This is important as the changed item is derived from the clonedList .contains() method
    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final DataElementPermissionDto other = (DataElementPermissionDto) obj;
        if (!Objects.equals(this.apgId, other.apgId)) {
            return false;
        } else if (!Objects.equals(this.de1Code, other.de1Code)) {
            return false;
        } else if (!Objects.equals(this.declCode, other.declCode)) {
            return false;
        } else if (this.readFlag != other.readFlag) {
            return false;
        } else if(this.updateFlag != other.updateFlag){
            return false;
        }
        
        return true;
    }
@Override
    public String getBlockName() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Date getEffectiveEndDate() {
        return effectiveEndDate;
    }

    @Override
    public void setEffectiveEndDate(Date effectiveEndDate) {
        this.effectiveEndDate = effectiveEndDate;
    }
}
