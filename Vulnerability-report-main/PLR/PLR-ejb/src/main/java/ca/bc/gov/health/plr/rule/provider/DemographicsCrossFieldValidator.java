package ca.bc.gov.health.plr.rule.provider;

import ca.bc.gov.health.plr.constants.Consts;
import ca.bc.gov.health.plr.dto.provider.DemographicDetailsDto;
import ca.bc.gov.health.plr.ejb.entity.PrsCtCountries;
import ca.bc.gov.health.plr.persistence.BusinessRuleKeys;
import ca.bc.gov.health.plr.persistence.BusinessRuleMessageDao;
import ca.bc.gov.health.plr.persistence.CodeTableCodes;
import ca.bc.gov.health.plr.persistence.CodesDao;
import ca.bc.gov.health.plr.service.provider.AddressSupportService;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;
import org.apache.commons.lang3.StringUtils;

/**
 *
 * @author jonathan.wiebe
 */
public class DemographicsCrossFieldValidator implements ConstraintValidator<DemographicsCrossFieldConstraints, DemographicDetailsDto> {

    CodesDao codesDao;
    AddressSupportService addressSupportService;

    @Override
    public void initialize(DemographicsCrossFieldConstraints constraintAnnotation) {
        try {
            codesDao = (CodesDao) InitialContext.doLookup(Consts.JNDILOOKUP_CODESDAO);
            addressSupportService = (AddressSupportService) InitialContext.doLookup(Consts.JNDILOOKUP_ADDRESS_SUPPORT);
        } catch (NamingException ex) {
            throw new RuntimeException(ex);
        }
    }

    @Override
    public boolean isValid(DemographicDetailsDto value, ConstraintValidatorContext context) {
        if (value == null) {
            return true;
        }
        String countryCode = getCountryCode(value);
        String province = value.getBirthProvState();
        if (isCanadaOrUnitedStates(countryCode)) {
            return addressSupportService.getProvinceDetailsByCountry(countryCode, province) != null;
        } else {
            if (!StringUtils.isEmpty(province)) {
                changeErrorMessage(BusinessRuleKeys.ERROR_DEMOGRAPICHPROVSTATEFIELD_NOTALLOWED, province, context);
                return false;
            }
            return true;
        }
    }
    
    private String getCountryCode(DemographicDetailsDto value) {
        String countryCode = value.getBirthCountryCode();
        if (value.getBirthCountryCodeId() != null && codesDao.codeExists(PrsCtCountries.class, value.getBirthCountryCodeId())) {
            PrsCtCountries foundCountry = codesDao.lookup(PrsCtCountries.class, value.getBirthCountryCodeId());
            countryCode = foundCountry.getCtlNameCode();
        }
        return countryCode;
    }

    static boolean isCanadaOrUnitedStates(String countryCode) {
        return !StringUtils.isEmpty(countryCode)
                && (countryCode.equals(CodeTableCodes.PrsCtCountries.CANADA.getValue())
                || countryCode.equals(CodeTableCodes.PrsCtCountries.UNITED_STATES.getValue()));
    }
    
    private static void changeErrorMessage(BusinessRuleKeys key, String node, ConstraintValidatorContext cvc) {
        cvc.disableDefaultConstraintViolation();
        String message = BusinessRuleMessageDao.getMessageResource(key);
        cvc.buildConstraintViolationWithTemplate(message).addNode(node).addConstraintViolation();
    }

}
