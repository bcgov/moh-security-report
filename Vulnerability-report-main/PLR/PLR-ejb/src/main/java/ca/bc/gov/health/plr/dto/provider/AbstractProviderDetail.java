package ca.bc.gov.health.plr.dto.provider;

import ca.bc.gov.health.plr.dto.EntityClassHelper;
import ca.bc.gov.health.plr.dto.OwnableDto;
import ca.bc.gov.health.plr.dto.businesskey.TypeAndDataOwnerBK;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author David Sharpe <david.a.sharpe@cgi.com>
 */
public abstract class AbstractProviderDetail extends OwnableDto implements EntityClassHelper  {

    private Long pauthId;
    private String dataOwnerName;
    private String type;

    public abstract String getTypeCode();

    public abstract void setTypeCode(String typeCode);

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public abstract Long getTypeId();

    public abstract void setTypeId(Long typeId);

    public Long getPauthId() {
        return pauthId;
    }

    public void setPauthId(Long pauthId) {
        this.pauthId = pauthId;
    }

    public String getDataOwnerName() {
        return dataOwnerName;
    }

    public void setDataOwnerName(String dataOwnerName) {
        this.dataOwnerName = dataOwnerName;
    } 
    
    /**
     * Add this Provider Detail (e.g. Electronic Address) to the given 
     * ProviderDto.
     */
    public abstract void addToProviderDto(ProviderDto providerDto);

    public abstract ca.bc.gov.health.plr.dto.provider.esb.AbstractProviderDetail toEsbVersion() throws Exception;

    // force my dtos to return the entity class
    @Override
    public abstract Class getEntityClass();
    
    // force my dtos to return convert entity to dto
    @Override
    public abstract Method getDtoConverterMethod();

    /**
     * Limit the size of the input list according to the value of maxBusinessObjectShown
     * @param <T> the dto extends AbstractProviderDetail. T is limited to be one of RegistryIdentifierDto, CollegeIdentifierDto, PersonNameDto,
     * OrgNameDto, DemographicDetailsDto, StatusDto, ExpertiseDto, CredentialsDto and ConditionsDto.
     * @param inList a list of instances of T
     * @param maxBusinessObjectShown the max number of business object can be displayed on each data block on provider details page
     * @return 
     */
    public static <T extends AbstractProviderDetail> List<T> limitDtoListBasedOnTypeAndDataOwnerBK(List<T> inList, int maxBusinessObjectShown) {
        if(inList==null) {
            return null;
        } else if(inList.size()<=maxBusinessObjectShown) {
            return inList; 
        }
        
        //find all business key objects
        List<TypeAndDataOwnerBK> bKeyList = new ArrayList<>();
        for(T t : inList) {
            TypeAndDataOwnerBK bk = new TypeAndDataOwnerBK(t.getTypeCode(), t.getDataOwnerCode());
            if(!bKeyList.contains(bk)) {
                bKeyList.add(bk);
            }
        }
        
        //go through each business key object and find all matching dtos
        List<T> allList = new ArrayList<>();
        for(TypeAndDataOwnerBK bk : bKeyList) {
            List<T> tmpList = new ArrayList<>();
            for(T t : inList) {
                TypeAndDataOwnerBK bkFromDto = new TypeAndDataOwnerBK(t.getTypeCode(), t.getDataOwnerCode());
                if(bk.equals(bkFromDto)) {
                    tmpList.add(t);
                }
            }
            //only keep first maxBusinessObjectShown dtos
            if(tmpList.size()>maxBusinessObjectShown) {
                tmpList = tmpList.subList(0, maxBusinessObjectShown);
            }
            if(!tmpList.isEmpty()) {
                allList.addAll(tmpList);
            }
        }
        
        return allList;
        
    }

}
