/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.util;

import ca.bc.gov.health.login.PLRHealthNetServerAuthenticationModule;
import ca.bc.gov.health.login.UserPrincipal;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.faces.context.FacesContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.ws.rs.core.Context;

/**
 *
 * @author Adebiyi.Kuseju
 */
public class PlrRoleHelper {

    private static final Logger logger = Logger.getLogger(PlrRoleHelper.class.getName());
    public static final String organizationIdKey = "orgid";
	
	@Context
    private HttpServletRequest httpRequest;

    public static String getUserName(FacesContext ctx) {

        UserPrincipal user = getUserPrincipal(ctx);

        if (user != null) {
            return user.getName();
        } else {
            logger.log(Level.SEVERE, "Unable to pull user from session: ");
            return "Un-Authenticated";
        }

    }

    public static String getOrganization(FacesContext ctx) {

        UserPrincipal user = getUserPrincipal(ctx);          
        
        if (user != null) {
            return user.getOrganization();
        } else {
            logger.log(Level.SEVERE, "Unable to pull user from session: ");
            return "Un-Authenticated";
        }
    }
    
    
    public static String getOrganization(HttpSession hse) {

        UserPrincipal user = getUserPrincipal(hse);          
        
        if (user != null) {
            return user.getOrganization();
        } else {
            logger.log(Level.SEVERE, "Unable to pull user from session: ");
            return "Un-Authenticated";
        }
    }
    
    public static String getOrganizationId(HttpSession hse) {

        UserPrincipal user = getUserPrincipal(hse);          
        
        if (user != null) {
            return user.getProperty(organizationIdKey);
        } else {
            logger.log(Level.SEVERE, "Unable to pull user from session: ");
            return "Un-Authenticated";
        }
    }

    /**
     * Returns the current user's roles
     *
     * @param ctx FacesContext
     * @return List
     *
     * Adds a 'Public' role to whatever a logged in user may have
     */
    public static List getUserRoles(FacesContext ctx) {
        HttpServletRequest request = (HttpServletRequest) ctx.getExternalContext().getRequest();
        return getUserRoles(request);
    }

    /**
     * Returns the current user's roles
     *
     * @param request HttpServletRequest
     * @return List
     *
     * Adds a 'Public' role to whatever a logged in user may have
     */
    public static List getUserRoles(HttpServletRequest request) {
        List roles = new ArrayList();
        //Not pulling from externalContext.getUserPrincipal() due to bug: http://java.net/jira/browse/GLASSFISH-16587
        UserPrincipal up = (UserPrincipal) (request.getSession()).getAttribute(PLRHealthNetServerAuthenticationModule.USER_SESSION_KEY);
        if (up != null) {
            roles.addAll(up.getRoles());
        }
        return roles;
    }

    private static UserPrincipal getUserPrincipal(FacesContext ctx) {
        return (UserPrincipal) ctx.getExternalContext().getSessionMap().get(PLRHealthNetServerAuthenticationModule.USER_SESSION_KEY);
    }
    
    private static UserPrincipal getUserPrincipal(HttpSession session) {
        return (UserPrincipal) session.getAttribute(PLRHealthNetServerAuthenticationModule.USER_SESSION_KEY);
    }
}
