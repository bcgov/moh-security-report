/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.producer;

import ca.bc.gov.health.plr.constants.Consts;
import ca.bc.gov.health.plr.producer.type.JNDIResource;
import ca.bc.gov.health.plr.producer.type.Type;
import java.util.Hashtable;
import java.util.Map;
import javax.annotation.Resource;
import javax.enterprise.inject.Produces;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;

/**
 * A CDI producer (facade) for  JNDI resources
 *
 * @author Adebiyi.Kuseju
 */
public class JNDIResourceProducer {
	
    @Produces
    @JNDIResource(Type.APPLICATION)
    public Map<String, String> appProperties() throws NamingException {
        Context context = new InitialContext();       
        return (Map<String, String>) context.lookup(Consts.APP_JNDI_RESOURCE);
    }
        

    @Produces
    @JNDIResource(Type.SSO_FILE)
    public Map<String, String> appPropertiesFile() throws NamingException {
        Context context = new InitialContext();       
        return (Map<String, String>) context.lookup(Consts.APP_JNDI_RESOURCE_SSO);
    }

    /**
     * LDAP config resource created in glassfish
     */
    @Produces
    @JNDIResource(Type.LDAP)
    public Hashtable ldapProperites() throws NamingException {
        Context context = new InitialContext();
        return (Hashtable)context.lookup(Consts.JNDI_LOOKUP_RESOURCE_LDAP);
    }
    //@Resource(name = Consts.JNDI_LOOKUP_RESOURCE_LDAP)
    //private Hashtable ldapProps;
    
    

    public Map<String, String> appResource() throws NamingException {
        Context context = new InitialContext();       
        return (Map<String, String>) context.lookup(Consts.APP_JNDI_RESOURCE);
    }
}
