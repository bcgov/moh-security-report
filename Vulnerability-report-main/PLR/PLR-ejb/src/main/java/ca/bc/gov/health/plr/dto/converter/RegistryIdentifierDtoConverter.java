package ca.bc.gov.health.plr.dto.converter;

import ca.bc.gov.health.plr.dto.provider.RegistryIdentifierDto;
import ca.bc.gov.health.plr.ejb.entity.GrsCtBooleanTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsCtEndReasonTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsCtRegIdentifierTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsRegistryIdentifiers;
import ca.bc.gov.health.plr.ejb.entity.PrsProviders;
import ca.bc.gov.health.plr.ejb.entity.util.DatabaseConstants;
import ca.bc.gov.health.plr.persistence.CodeTableCodes;
import ca.bc.gov.health.plr.persistence.CodesDao;
import java.util.Date;
import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import org.apache.commons.lang3.StringUtils;

/**
 *
 * @author David Sharpe <david.a.sharpe@cgi.com>
 */
@Stateless
public class RegistryIdentifierDtoConverter {

    @PersistenceContext(unitName = "PLR-ejbPU")
    private EntityManager em;
    @EJB
    private CodesDao codesDao;
    @EJB
    DtoConverter dtoConverter;
    /**
     * Assemble Entity from transfer object
     *
     * @param dto the transfer object to convert
     * @return the entity representation of the transfer object
     */
    public GrsRegistryIdentifiers toEntity(RegistryIdentifierDto dto) {
        GrsRegistryIdentifiers entity = new GrsRegistryIdentifiers();

        if (dto.getPauthId() != null) {
            entity.setPauthPauthId(em.find(PrsProviders.class, dto.getPauthId()));
        }

        GrsCtRegIdentifierTypes idType = null;
        if(dto.getTypeId() != null){
            idType = codesDao.lookup(GrsCtRegIdentifierTypes.class, dto.getTypeId());
            entity.setIdentifierTypeCode(idType);
        } else if(dto.getTypeCode() != null){
            idType = codesDao.lookup(GrsCtRegIdentifierTypes.class, dto.getTypeCode());
            entity.setIdentifierTypeCode(idType);
        }

        String paddedIdentifier = dto.getRawIdentifier();
        if (StringUtils.isNumeric(paddedIdentifier) && paddedIdentifier.length() < 8) {
            paddedIdentifier = StringUtils.leftPad(paddedIdentifier, 8, "0");
        }

        if (CodeTableCodes.GrsCtRegIdentifierTypes.COMMON_PROVIDER_NUMBER.getValue().equals(idType.getCtlNameCode())) {
            entity.setProviderChid(String.format("CPN.%s.BC.PRS", paddedIdentifier));
        } else if (CodeTableCodes.GrsCtRegIdentifierTypes.INTERNAL_PROVIDER_ID.getValue().equals(idType.getCtlNameCode())) {
            entity.setProviderChid(String.format("IPC.%s.BC.PRS", paddedIdentifier));
        }


        if (dto.getId() != null) {
            entity.setRidId(dto.getId());
        }
        
        dtoConverter.copyCommonProperties(dto, entity);

        return entity;
    }
}
