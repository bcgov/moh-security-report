package ca.bc.gov.health.plr.interceptors;

import ca.bc.gov.health.plr.util.SpoofedUserHelper;
import ca.bc.gov.health.plr.producer.type.Authenticated;
import ca.bc.gov.health.plr.producer.type.User;
import javax.enterprise.inject.Instance;
import javax.inject.Inject;
import javax.interceptor.AroundInvoke;
import javax.interceptor.InvocationContext;

/**
 * An interceptor that checks to see if we know the
 * user currently logged in.
 * 
 * All things being equal, the interceptor is only applicable during
 * testing. While this approach sort of pollutes the application namespace,
 * it helps to set transparently fetch and set the current user for the
 * test suite.
 * 
 * @author Adebiyi.Kuseju
 */
public class TestUserInterceptor {

    @Inject
    @Authenticated
    private Instance<User> user;

    @AroundInvoke
    public Object isTestUser(InvocationContext ivc) throws Exception {        
        
        // This check should always be negative during runtime
        // but may be true during testing
        if (user.get().getUserEntity() == null) {
            user.get().setUserId(SpoofedUserHelper.currentUser);
        }
       
        return ivc.proceed();
    }
}
