package ca.bc.gov.health.plr.service;

import ca.bc.gov.health.login.UserPrincipal;
import ca.bc.gov.health.plr.producer.type.Authenticated;
import ca.bc.gov.health.plr.producer.type.User;
import ca.bc.gov.health.plr.security.LdapRoles;
import javax.ejb.Stateless;
import javax.enterprise.inject.Instance;
import javax.inject.Inject;

/**
 * A generic service for sending email messages with attachments
 *
 * @author adebiyi.kuseju
 */
@Stateless
public class PlrUserRoleService {

    @Inject
    @Authenticated
    private Instance<User> user;

    /**
     * Return true is current logged user is reg admin, else return false
     *
     * @return
     */
    public boolean isRegAdmin() {
        UserPrincipal up = user.get().getUserPrincipal();
        return up != null && up.getRoles().contains(LdapRoles.REG_ADMIN.getValue());
    }
    
    /**
     * Return true is current logged user has primary source role, else return false
     *
     * @return
     */
    public boolean isPrimarySource() {
        UserPrincipal up = user.get().getUserPrincipal();
        return up != null && up.getRoles().contains(LdapRoles.PRIMARY_SOURCE.getValue());
    }
    
    /**
     * Return true is current logged user has secondary source role, else return false
     *
     * @return
     */
    public boolean isSecondarySource() {
        UserPrincipal up = user.get().getUserPrincipal();
        return up != null && up.getRoles().contains(LdapRoles.SECONDARY_SOURCE.getValue());
    }
    
    
    /**
     * Return true is current logged user has consumer role, else return false
     *
     * @return
     */
    public boolean isConsumer() {
        UserPrincipal up = user.get().getUserPrincipal();
        return up != null && up.getRoles().contains(LdapRoles.CONSUMER.getValue());
    }

}
