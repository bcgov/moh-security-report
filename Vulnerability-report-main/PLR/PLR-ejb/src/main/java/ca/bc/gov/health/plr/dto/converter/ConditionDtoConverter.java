/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.dto.converter;

import ca.bc.gov.health.plr.dto.provider.ConditionsDto;
import ca.bc.gov.health.plr.ejb.entity.GrsCtBooleanTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsCtEndReasonTypes;
import ca.bc.gov.health.plr.ejb.entity.PrsConditions;
import ca.bc.gov.health.plr.ejb.entity.PrsCtConditionTypes;
import ca.bc.gov.health.plr.ejb.entity.PrsCtDataOwnerCodes;
import ca.bc.gov.health.plr.ejb.entity.PrsProviderSubRoles;
import ca.bc.gov.health.plr.ejb.entity.PrsProviders;
import ca.bc.gov.health.plr.ejb.entity.util.DatabaseConstants;
import ca.bc.gov.health.plr.ejb.entity.util.EntityUtils;
import ca.bc.gov.health.plr.persistence.CodesDao;
import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

/**
 *
 * @author ian.scott
 */
@Stateless
public class ConditionDtoConverter {

    @PersistenceContext(unitName = "PLR-ejbPU")
    EntityManager em;

    @EJB
    CodesDao codesDao;

    @EJB
    DtoConverter dtoConverter;

    /**
     * Assemble Entity from transfer object
     *
     * @param dto - the transfer object to convert
     * @return - the entity representation of the transfer object
     */
    public PrsConditions toEntity(ConditionsDto dto) {
        PrsConditions newEntity = new PrsConditions();
        if (dto.getId() != null) {
            newEntity.setPresId(dto.getId());
        }

        newEntity.setConditionChid(dto.getIdentifier());

        //set the pauth
        if (dto.getPauthId() != null) {
            newEntity.setPauthPauthId(em.find(PrsProviders.class, dto.getPauthId()));
        }

        if (dto.getPsrPsrID() != null) {
            PrsProviderSubRoles pSubRole = new PrsProviderSubRoles();
            pSubRole.setPsrId(dto.getPsrPsrID());
            newEntity.setPsrPsrId(pSubRole);
        }

        if (dto.getTypeId() != null) {
            newEntity.setConditionTypeCode(codesDao.lookup(PrsCtConditionTypes.class, dto.getTypeId()));
        } else if (dto.getTypeCode() != null) {
            newEntity.setConditionTypeCode(codesDao.lookup(PrsCtConditionTypes.class, dto.getTypeCode()));
        }

        GrsCtBooleanTypes restrictedFlag = EntityUtils.toGrsCtBooleanType(dto.isRestrictionFlag(), codesDao);
        newEntity.setRestrictionFlag(restrictedFlag);

        newEntity.setRestrictionExplanationTxt(dto.getRestrictionExplanationText());

        if (dto.getDataOwnerCode() != null) {
            PrsCtDataOwnerCodes dataOwnerCode = codesDao.lookup(PrsCtDataOwnerCodes.class, dto.getDataOwnerCode());
            newEntity.setDataOwnerCode(dataOwnerCode);
        }

        dtoConverter.copyCommonProperties(dto, newEntity);
        
        return newEntity;
    }
}
