package ca.bc.gov.health.plr.rule.provider;

import ca.bc.gov.health.plr.ejb.entity.PrsDemographicDetails;
import ca.bc.gov.health.plr.ejb.entity.util.EntityUtils;
import ca.bc.gov.health.plr.rule.BusinessRule;
import ca.bc.gov.health.plr.rule.BusinessRuleMessage;
import ca.bc.gov.health.plr.rule.BusinessRuleResult;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;

/**
 * Business Rule to check that there is at least two active records
 * remaining before 'CEASING' an active record
 * 
 * @author adebiyi.kuseju
 */
public class ValidateActiveDemographicStillExists implements BusinessRule {

    /**
     * Runs validation to confirm there is at least two active records
     * 
     * @param items A list of PrsDemographicDetails entity
     * @param code
     * @param message
     * @return BusinessRuleResult
     */
    public BusinessRuleResult validate(List<PrsDemographicDetails> items, String code, String message) {
        
        final int THRESHOLD = 2;
        Iterator<PrsDemographicDetails> itr = items.iterator();
        int activeCount = 0;
        
        PrsDemographicDetails temp;
        while (itr.hasNext() && activeCount < THRESHOLD) {  
            temp = itr.next();

            if (temp.getEndReasonCode() == null && EntityUtils.booleanValue(temp.getActiveFlag())) {
                activeCount++;
            }
        }
        
        if (activeCount < THRESHOLD){
            BusinessRuleMessage businessRuleMessage = new BusinessRuleMessage(code, message, BusinessRuleMessage.Severity.ERROR);
            return new BusinessRuleResult(false, Arrays.asList(businessRuleMessage));
        } else {
            return new BusinessRuleResult();
            
        }
    }

}
