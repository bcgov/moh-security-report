/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.dto.converter;

import ca.bc.gov.health.plr.dto.DtoCommon;
import ca.bc.gov.health.plr.dto.provider.AddressDto;
import ca.bc.gov.health.plr.dto.provider.ElectronicAddressDto;
import ca.bc.gov.health.plr.dto.provider.OrgNameDto;
import ca.bc.gov.health.plr.dto.provider.PersonNameDto;
import ca.bc.gov.health.plr.dto.provider.TelecommunicationDto;
import ca.bc.gov.health.plr.ejb.entity.GrsAddresses;
import ca.bc.gov.health.plr.ejb.entity.GrsCtBooleanTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsCtEndReasonTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsCtRegUserType;
import ca.bc.gov.health.plr.ejb.entity.GrsElectronicAddresses;
import ca.bc.gov.health.plr.ejb.entity.GrsOrgNames;
import ca.bc.gov.health.plr.ejb.entity.GrsParties;
import ca.bc.gov.health.plr.ejb.entity.GrsPartyDetails;
import ca.bc.gov.health.plr.ejb.entity.GrsPersonNames;
import ca.bc.gov.health.plr.ejb.entity.GrsRegistryUsers;
import ca.bc.gov.health.plr.ejb.entity.GrsTelephones;
import ca.bc.gov.health.plr.ejb.entity.PrsCtJurisdictions;
import ca.bc.gov.health.plr.ejb.entity.util.EntityUtils;
import ca.bc.gov.health.plr.persistence.CodeTableCodes;
import ca.bc.gov.health.plr.persistence.CodesDao;
import ca.bc.gov.health.plr.ejb.entity.util.DatabaseConstants;
import ca.bc.gov.health.plr.service.validators.UserChidGenerator;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

/**
 *
 * @author adebiyi.kuseju
 */
@Stateless
public class RegistryUserDtoConverter {

    @PersistenceContext(unitName = "PLR-ejbPU")
    private EntityManager em;
    @EJB
    private CodesDao codesDao;
    @EJB
    private PartyDtoConverter partyDtoConverter;
    @EJB
    private PartyDetailsDtoConverter partyDetailsDtoConverter;
    @EJB
    private AddressDtoConverter addressDtoConverter;
    @EJB
    private PersonNameDtoConverter personNameDtoConverter;
    @EJB
    private OrgNameDtoConverter orgNameDtoConverter;
    @EJB
    private TelephoneDtoConverter telephoneDtoConverter;
    @EJB
    private ElectronicAddressDtoConverter eAddressDtoConverter;
    @EJB
    private UserChidGenerator userChidGenerator;
    
    @EJB
    private ProviderDtoConverter providerDtoConverter;
    

    public List<RegistryUserDto> toDTO(List<GrsRegistryUsers> users) {

        List<RegistryUserDto> converted = new ArrayList<>();
        Iterator<GrsRegistryUsers> itr = users.iterator();

        while (itr.hasNext()) {
            converted.add(toDTO(itr.next()));
        }

        return converted;

    }

    public RegistryUserDto toDTO(GrsRegistryUsers user) {
        RegistryUserDto dto = new RegistryUserDto();

        dto.setActive(EntityUtils.isActive(user.getActiveFlag()));
        dto.setId(user.getRuId());
        dto.setRegistryUserChid(user.getUserChid());
        dto.setEffectiveStartDate(user.getEffectiveStartDate());
        dto.setEffectiveEndDate(user.getEffectiveEndDate());
        dto.setCreatedDate(user.getCreatedDts());
        dto.setInvalidatedDate(user.getInvalidatedDts());
        if (user.getEndReasonCode() != null) {
            dto.setEndReasonCodeId(user.getEndReasonCode().getCtlId());
        }

        dto.setUserChid(user.getUserChid());
        dto.setJurisdictionId(user.getJurisdictionCode().getCtlId());

        if (user.getPartyPartyId() != null) {
            dto.setPartyId(user.getPartyPartyId().getPartyId());
            dto.setRegIdentifier(user.getPartyPartyId().getRegistryUserOrgChid());
        }

        if (user.getRuTypeCode() != null) {
            dto.setRegUserType(user.getRuTypeCode().getCtlNameCode());
            dto.setRegUserTypeId(user.getRuTypeCode().getCtlId());
        }

        
        dto.setPersonNameDtoList(providerDtoConverter.buildPersonNames(user.getGrsPersonNamesList()));
        dto.setOrgNameDtoList(providerDtoConverter.buildOrgNames(user.getGrsOrgNamesList()));
        dto.setTelecomDtoList(providerDtoConverter.buildTelephones(user.getGrsTelephonesList(), true));
        dto.setElectronicAddressDtoList(providerDtoConverter.buildElectronicAddresses(user.getGrsElectronicAddressesList(), true));
        dto.setAddressDtoList(providerDtoConverter.buildAddresses(user.getGrsAddressesList(), true));

        dto.setActivePartyDto(partyDtoConverter.toDto(user.getPartyPartyId()));
        dto.setActiveAddressDto((AddressDto) getActiveDto(dto.getAddressDtoList()));
        dto.setActivePersonNameDto((PersonNameDto) getActiveDto(dto.getPersonNameDtoList()));
        dto.setActiveOrgNameDto((OrgNameDto) getActiveDto(dto.getOrgNameDtoList()));
        dto.setActiveTelecomDto((TelecommunicationDto) getActiveDto(dto.getTelecomDtoList()));
        dto.setActiveElectronicAddressDto((ElectronicAddressDto) getActiveDto(dto.getElectronicAddressDtoList()));


        return dto;
    }

    public GrsRegistryUsers toEntity(RegistryUserDto dto) {
        GrsRegistryUsers entity;

        if (dto.isNew()) {
            entity = createNewEntity(dto);
        } else {
            entity = em.find(GrsRegistryUsers.class, dto.getId());
        }

        return entity;
    }

    private GrsRegistryUsers createNewEntity(RegistryUserDto dto) {
        GrsRegistryUsers entity = new GrsRegistryUsers();
        String userChid = userChidGenerator.find();


        if (dto.getRegUserTypeId() != null) {
            entity.setRuTypeCode(codesDao.lookup(GrsCtRegUserType.class, dto.getRegUserTypeId()));
        }

        if (dto.isActive()) {
            entity.setActiveFlag(codesDao.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.YES));
        } else {
            entity.setActiveFlag(codesDao.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.NO));
        }

        if (dto.getJurisdictionId() != null) {
            entity.setJurisdictionCode(codesDao.lookup(PrsCtJurisdictions.class, dto.getJurisdictionId()));
        }

        entity.setEffectiveStartDate(dto.getEffectiveStartDate());
        if(dto.getEffectiveEndDate() != null){
            entity.setEffectiveEndDate(dto.getEffectiveEndDate());
        } else {
            entity.setEffectiveEndDate(DatabaseConstants.SYSTEM_HIGH_DATE.toDate());
        }
        entity.setInvalidatedDts(dto.getInvalidatedDate());
        entity.setUserChid(userChid);
        entity.setCreatedDts(dto.getCreatedDate());
        
        if (dto.getEndReasonCodeId() != null) {
            entity.setEndReasonCode(codesDao.lookup(GrsCtEndReasonTypes.class, dto.getEndReasonCodeId()));
        }

        if (dto.getActiveAddressDto() != null && dto.getActiveAddressDto().getAddressLineOne() != null) {
            entity.setGrsAddressesList(new ArrayList<GrsAddresses>());
            GrsAddresses adress = addressDtoConverter.toEntity(dto.getActiveAddressDto());
            entity.getGrsAddressesList().add(adress);
            adress.setRuRuId(entity);
            adress.setUserChid(userChid);
        }

        if (dto.getActiveElectronicAddressDto() != null && dto.getActiveElectronicAddressDto().getAddress() != null) {
            entity.setGrsElectronicAddressesList(new ArrayList<GrsElectronicAddresses>());

            GrsElectronicAddresses eAddress = eAddressDtoConverter.toEntity(dto.getActiveElectronicAddressDto());
            entity.getGrsElectronicAddressesList().add(eAddress);
            eAddress.setRuRuId(entity);
            eAddress.setUserChid(userChid);
        }

        if (dto.getActivePersonNameDto() != null 
                && (dto.getActivePersonNameDto().getFirstName() != null || dto.getActivePersonNameDto().getLastName() != null)) {
            entity.setGrsPersonNamesList(new ArrayList<GrsPersonNames>());
            GrsPersonNames personName = personNameDtoConverter.toEntity(dto.getActivePersonNameDto());
            entity.getGrsPersonNamesList().add(personName);
            personName.setRuRuId(entity);
            personName.setUserChid(userChid);
        }

        if (dto.getActiveOrgNameDto() != null && dto.getActiveOrgNameDto().getName() != null) {

            entity.setGrsOrgNamesList(new ArrayList<GrsOrgNames>());

            GrsOrgNames orgName = orgNameDtoConverter.toEntity(dto.getActiveOrgNameDto());
            entity.getGrsOrgNamesList().add(orgName);
            orgName.setRuRuId(entity);
            orgName.setUserChid(userChid);
        }


        if (dto.getActiveTelecomDto() != null && dto.getActiveTelecomDto().getNumber() != null) {
            entity.setGrsTelephonesList(new ArrayList<GrsTelephones>());

            GrsTelephones telephone = telephoneDtoConverter.toEntity(dto.getActiveTelecomDto());
            entity.getGrsTelephonesList().add(telephone);
            telephone.setRuRuId(entity);
            telephone.setUserChid(userChid);
        }

        if (dto.getActivePartyDto() != null && (dto.getActivePartyDto().getPartyTypeCode() != null || dto.getActivePartyDto().getId() != null)) {

            GrsParties grsParty = partyDtoConverter.toEntity(dto.getActivePartyDto());
            grsParty.setUserChid(userChid);
            entity.setPartyPartyId(grsParty);

            if (dto.getPartyDetailsDto() != null) {
                GrsPartyDetails partyDetails = partyDetailsDtoConverter.toEntity(dto.getPartyDetailsDto());

                partyDetails.setPartyPartyId(grsParty);
                partyDetails.setUserChid(userChid);

                if (grsParty.getGrsPartyDetailsList() == null) {
                    grsParty.setGrsPartyDetailsList(new ArrayList<GrsPartyDetails>());
                }

                grsParty.getGrsPartyDetailsList().add(partyDetails);
            }

            entity.setPartyPartyId(grsParty);
        }

        return entity;
    }

    private DtoCommon getActiveDto(List<? extends DtoCommon> dtoList) {

        DtoCommon dto = null;
        if (dtoList != null && !dtoList.isEmpty()) {

            for (DtoCommon p : dtoList) {
                if (p.isActive()) {
                    dto = p;
                }
            }
        }

        return dto;
    }
    

}
