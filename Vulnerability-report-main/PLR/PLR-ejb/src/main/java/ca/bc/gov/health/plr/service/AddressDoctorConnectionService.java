/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.service;

import ca.bc.gov.health.plr.persistence.ConfigurationDao;
import ca.bc.gov.health.plr.soap.addressdoctor.generated.ArrayOfAddress;
import ca.bc.gov.health.plr.soap.addressdoctor.generated.Parameters;
import ca.bc.gov.health.plr.soap.addressdoctor.generated.Response;
import java.util.logging.Logger;
import javax.annotation.PostConstruct;
import javax.enterprise.context.ApplicationScoped;
import javax.inject.Inject;

/**
 *
 * @author tim.osse
 */
@ApplicationScoped
public class AddressDoctorConnectionService {

    private static final String CLASSNAME = AddressDoctorConnectionService.class.getSimpleName();
    private static final Logger LOG = Logger.getLogger(CLASSNAME);

    @Inject
    private AddressDoctorMonitorService adMonitorService;

    @Inject
    private JNDIResourceLoader prod;

    @Inject
    private AddressDoctorConnection addressDoctorConnection;

    @Inject
    private ConfigurationDao configurationDao;
    
    @PostConstruct
    public void init() {
        LOG.info("Address doctor connection service init is about to run");

        if(addressDoctorConnection.getConnection(true) == null) {
            adMonitorService.setAvailable(false);
        }
    }

    public Response callAddressDoctor(Parameters parameters, ArrayOfAddress inputAddresses) throws AddressDoctorUnavailableException {
        LOG.info("callAddressDoctor default checkAvailability FALSE");
        return callAddressDoctor(parameters, inputAddresses, false);
    }

    /**
     * Call address doctor
     * This method also changes the availability if things start to fail
     * ... which starts the monitor if necessary
     * 
     * @param parameters parameters
     * @param inputAddresses input address(es)
     * @param checkAvailability check if AD is available before calling
     * @return
     * @throws AddressDoctorUnavailableException
     */
    public Response callAddressDoctor(Parameters parameters, ArrayOfAddress inputAddresses, Boolean checkAvailability) throws AddressDoctorUnavailableException {
        Response response = null;
        if (!checkAvailability && !adMonitorService.isAvailable()) {
            LOG.info("Address Doctor is UN available.");
            response = null;
            throw new AddressDoctorUnavailableException();
        }
        try {
            response = addressDoctorConnection.getConnection(checkAvailability).getAddressValidationSoap().process(null, null, parameters, inputAddresses, null);
            LOG.info("AddressDoctor is available.");
            adMonitorService.setAvailable(true);
        } catch (Exception ex) {
            LOG.info("AddressDoctor is now UN available");
            LOG.info(ex.getLocalizedMessage());
            adMonitorService.setAvailable(false);
            response = null;
            throw new AddressDoctorUnavailableException();
        }
        return response;
    }
}
