/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.service.validators;

import ca.bc.gov.health.plr.dto.provider.OrgNameDto;
import ca.bc.gov.health.plr.ejb.entity.GrsCtBooleanTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsOrgNames;
import ca.bc.gov.health.plr.ejb.entity.GrsRegistryUsers;
import ca.bc.gov.health.plr.ejb.entity.PrsCtJurisdictions;
import ca.bc.gov.health.plr.ejb.entity.PrsCtNameTypes;
import ca.bc.gov.health.plr.persistence.BusinessRuleKeys;
import ca.bc.gov.health.plr.persistence.BusinessRuleMessageDao;
import ca.bc.gov.health.plr.persistence.CodeTableCodes;
import ca.bc.gov.health.plr.persistence.CodesDao;
import ca.bc.gov.health.plr.service.provider.DuplicateRecordException;
import java.util.List;
import javax.ejb.EJB;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;

/**
 * Throws a DuplicateRecordException if the the combination of reg user name, 
 jurisdiction code and name type is not unique
 * @author sumesh.kariyil
 */
@LocalBean
@Stateless
public class RegUserUniqueNameValidator implements EntityValidator<OrgNameDto>{
    
    @PersistenceContext(unitName = "PLR-ejbPU")
    private EntityManager em;
    
    @EJB
    private CodesDao codesDao;

    @Override
    public void validate(OrgNameDto nameDto) throws EntityValidationException {
        Long jurId;
        if(nameDto.getRuRuId() != null){
            GrsRegistryUsers regUser = em.find(GrsRegistryUsers.class, nameDto.getRuRuId());    
            jurId = regUser.getJurisdictionCode().getCtlId();
        } else {
            jurId = codesDao.lookup(PrsCtJurisdictions.class, CodeTableCodes.PrsCtJurisdictions.BRITISH_COLUMBIA.getValue()).getCtlId();
        }
        
        GrsCtBooleanTypes activeFlag = codesDao.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.YES);
        TypedQuery<GrsOrgNames> orgNamesQuery = em.createNamedQuery("GrsOrgNames.findByNameAndJurAndNameType", GrsOrgNames.class)
                .setParameter("orgName", nameDto.getName())
                .setParameter("jurId", jurId)
                .setParameter("nameTypeId", codesDao.lookup(PrsCtNameTypes.class, nameDto.getTypeId()).getCtlId())
                .setParameter("nmId", nameDto.getId()==null?0:nameDto.getId())
                .setParameter("activeId", activeFlag.getCtlId());
        List<GrsOrgNames> grsOrgNamesList = orgNamesQuery.getResultList();
        if(grsOrgNamesList != null && grsOrgNamesList.size() > 0){
            throw new EntityValidationException(BusinessRuleMessageDao.getMessageResource(BusinessRuleKeys.ERROR_REG_USER_UNIQUE));
        }
    }
}
