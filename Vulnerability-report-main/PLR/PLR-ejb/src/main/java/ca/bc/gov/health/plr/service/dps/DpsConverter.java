/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.service.dps;

import ca.bc.gov.health.plr.dto.dps.AccessProfileGroupDescDto;
import ca.bc.gov.health.plr.dto.dps.AccessProfileGroupDto;
import ca.bc.gov.health.plr.ejb.entity.GrsAccessProfGrpDescs;
import ca.bc.gov.health.plr.ejb.entity.GrsAccessProfileGroups;
import ca.bc.gov.health.plr.ejb.entity.GrsCtBooleanTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsParties;
import ca.bc.gov.health.plr.ejb.entity.GrsRegistryUsers;
import ca.bc.gov.health.plr.ejb.entity.PrsCtJurisdictions;
import ca.bc.gov.health.plr.ejb.session.GrsPartiesFacade;
import ca.bc.gov.health.plr.persistence.BusinessRuleKeys;
import ca.bc.gov.health.plr.persistence.BusinessRuleMessageDao;
import ca.bc.gov.health.plr.persistence.CodeTableCodes;
import ca.bc.gov.health.plr.persistence.CodesDao;
import ca.bc.gov.health.plr.ejb.entity.util.DatabaseConstants;
import ca.bc.gov.health.plr.rule.BusinessRuleException;
import ca.bc.gov.health.plr.service.validators.EntityValidationException;
import ca.bc.gov.health.plr.service.validators.UserChidGenerator;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

/**
 *
 * @author sumesh.kariyil
 */
@Stateless
public class DpsConverter {
    
    @PersistenceContext(unitName = "PLR-ejbPU")
    EntityManager em;
    
    @EJB
    CodesDao codesDao;
    
    @EJB
    private UserChidGenerator userChidGenerator;
    
    public GrsAccessProfileGroups toEntity(AccessProfileGroupDto dto) throws EntityValidationException{
        GrsAccessProfileGroups newEntity = new GrsAccessProfileGroups();
        GrsRegistryUsers regUser;
        if(dto.getRuRuId() != null){//update
            regUser = em.find(GrsRegistryUsers.class, dto.getRuRuId());
        } else {//create
            List<GrsRegistryUsers> users = em.createNamedQuery("GrsRegistryUsers.findByRUPartyName", GrsRegistryUsers.class).setParameter(1, dto.getRegUserChid()).getResultList();
            regUser = users != null && !users.isEmpty() ? users.get(0) : null;
            if(regUser == null){
                throw new EntityValidationException(BusinessRuleMessageDao.getMessageResource(BusinessRuleKeys.ERROR_INVALID_PARTY));
            }
        }
        newEntity.setRuRuId(regUser);
        GrsCtBooleanTypes active;
        if (dto.isActive()) {
            active = codesDao.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.YES);
        } else {
            active = codesDao.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.NO);
        }
        
        newEntity.setActiveFlag(active);
        newEntity.setApgId(dto.getId());
        newEntity.setAccessProfileGroupChid(dto.getGroupChid());        
        newEntity.setCreatedDts(dto.getCreatedDate());
        newEntity.setGrsAccessProfilesList(null);
        newEntity.setJurisdictionCode(codesDao.lookup(PrsCtJurisdictions.class, dto.getJurisdictionCodeId()));        
        newEntity.setGrsAccessProfGrpDescsList(buildAccessProfileGrpDesc(dto, newEntity));
        newEntity.setUserChid(userChidGenerator.find());
        return newEntity;
    }
    
    public List<GrsAccessProfGrpDescs> buildAccessProfileGrpDesc(AccessProfileGroupDto accessProfileGroupDto, GrsAccessProfileGroups accessProfileGroup) {
        AccessProfileGroupDescDto dto = accessProfileGroupDto.getActiveGroupDesc();
        List<GrsAccessProfGrpDescs> descs = new ArrayList<>();
        GrsAccessProfGrpDescs newEntity = new GrsAccessProfGrpDescs();
        newEntity.setApgdId(dto.getId());
        newEntity.setApgApgId(accessProfileGroup);
        newEntity.setCreatedDts(dto.getCreatedDate());
        newEntity.setEffectiveStartDate(dto.getEffectiveStartDate());
        newEntity.setEffectiveEndDate(dto.getEffectiveEndDate() != null ? dto.getEffectiveEndDate() : DatabaseConstants.SYSTEM_HIGH_DATE.toDate());
        newEntity.setProfileDescriptionTxt(dto.getDescription());
        GrsCtBooleanTypes active;
        if (dto.isActive()) {
            active = codesDao.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.YES);
        } else {
            active = codesDao.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.NO);
        }
        newEntity.setActiveFlag(active);
        newEntity.setUserChid(userChidGenerator.find());
        descs.add(newEntity);
        return descs;
    }
}
