/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.dto.converter;

import ca.bc.gov.health.plr.dto.provider.PersonNameDto;
import ca.bc.gov.health.plr.ejb.entity.GrsCtBooleanTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsCtEndReasonTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsPersonNames;
import ca.bc.gov.health.plr.ejb.entity.GrsRegistryUsers;
import ca.bc.gov.health.plr.ejb.entity.PrsCtDataOwnerCodes;
import ca.bc.gov.health.plr.ejb.entity.PrsCtNameTypes;
import ca.bc.gov.health.plr.ejb.entity.PrsProviders;
import ca.bc.gov.health.plr.persistence.CodeTableCodes;
import ca.bc.gov.health.plr.persistence.CodesDao;
import ca.bc.gov.health.plr.ejb.entity.util.DatabaseConstants;
import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

/**
 *
 * @author ian.scott
 */
@Stateless
public class PersonNameDtoConverter {

    @PersistenceContext(unitName = "PLR-ejbPU")
    private EntityManager em;
    @EJB
    private CodesDao codesDao;
    @EJB
    DtoConverter dtoConverter;
    /**
     * Assemble Entity from transfer object
     *
     * @param dto - the transfer object to convert
     * @return - the entity representation of the transfer object
     */
    public GrsPersonNames toEntity(PersonNameDto dto) {
        GrsPersonNames newEntity = new GrsPersonNames();
        if (dto.getDataOwnerCode() != null) {
            PrsCtDataOwnerCodes dataOwnerCode = codesDao.lookup(PrsCtDataOwnerCodes.class, dto.getDataOwnerCode());
            newEntity.setDataOwnerCode(dataOwnerCode);
        }
        if (dto.getTypeId() != null) {
            newEntity.setNameTypeCode(codesDao.lookup(PrsCtNameTypes.class, dto.getTypeId()));
        } else if(dto.getTypeCode() != null){
            newEntity.setNameTypeCode(codesDao.lookup(PrsCtNameTypes.class, dto.getTypeCode()));
        }
        if (dto.getId() != null) {
            newEntity.setNmId(dto.getId());
        }

        if (dto.getPauthId() != null) {
            newEntity.setPauthPauthId(em.find(PrsProviders.class, dto.getPauthId()));
        }
        GrsCtBooleanTypes preferredFlag;
        if (dto.isPreferred()) {
            preferredFlag = codesDao.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.YES);
        } else {
            preferredFlag = codesDao.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.NO);
        }
        newEntity.setPnamePreferredFlag(preferredFlag);
        if (dto.getFirstName() != null) {
            newEntity.setPrsnFirstGivenNameTxt(dto.getFirstName());
        }
        if (dto.getPrefix() != null) {
            newEntity.setPrsnPrefixTxt(dto.getPrefix());
        }
        if (dto.getSecondName() != null) {
            newEntity.setPrsnSecondGivenNameTxt(dto.getSecondName());
        }
        if (dto.getSuffix() != null) {
            newEntity.setPrsnSuffixTxt(dto.getSuffix());
        }
        if (dto.getLastName() != null) {
            newEntity.setPrsnSurnameTxt(dto.getLastName());
        }
        if (dto.getThirdName() != null) {
            newEntity.setPrsnThirdGivenNameTxt(dto.getThirdName());
        }
        if (dto.getRuRuID() != null) {
            GrsRegistryUsers ruRuId = em.find(GrsRegistryUsers.class, dto.getRuRuID());
            ruRuId.setRuId(dto.getRuRuID());
            newEntity.setRuRuId(ruRuId);
        }
        
        dtoConverter.copyCommonProperties(dto, newEntity);

        return newEntity;

    }
}
