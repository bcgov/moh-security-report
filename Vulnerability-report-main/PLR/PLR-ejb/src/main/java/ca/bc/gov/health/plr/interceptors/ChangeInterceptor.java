package ca.bc.gov.health.plr.interceptors;

import ca.bc.gov.health.plr.events.ChangeEvent;
import ca.bc.gov.health.plr.producer.type.Authenticated;
import ca.bc.gov.health.plr.producer.type.User;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.enterprise.event.Event;
import javax.enterprise.inject.Instance;
import javax.inject.Inject;
import javax.interceptor.AroundInvoke;
import javax.interceptor.InvocationContext;

/**
 * An interceptor that triggers auditing for changes to a provider
 *
 * @author adebiyi.kuseju
 */
public class ChangeInterceptor {

    private static final Logger logger = Logger.getLogger(ChangeInterceptor.class.getName());

    @Inject
    private Event<ChangeEvent> changeEventInitiator;

    @Inject
    @Authenticated
    private Instance<User> user;

    /**
     * An interceptor for creating the data required for recording a change to a
     * provider or a registry user.
     *
     * @param ivc
     * @return
     * @throws Exception
     */
    @AroundInvoke
    public Object recordChange(InvocationContext ivc) throws Exception {

        // invoke service
        Object[] args = ivc.getParameters();
        Object output = ivc.proceed();

        try {
            // fire change event to audit change
            changeEventInitiator.fire(new ChangeEvent(args, output, user.get().getUserEntity()));

        } catch (Exception ex) {
            logger.log(Level.SEVERE, null, ex);
        }

        return output;
    }

}
