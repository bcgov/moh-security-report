/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.service.validators;

import ca.bc.gov.health.plr.dto.PartyDto;
import ca.bc.gov.health.plr.ejb.entity.GrsCtBooleanTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsParties;
import ca.bc.gov.health.plr.ejb.entity.GrsRegistryUsers;
import ca.bc.gov.health.plr.persistence.BusinessRuleKeys;
import ca.bc.gov.health.plr.persistence.BusinessRuleMessageDao;
import ca.bc.gov.health.plr.persistence.CodeTableCodes;
import ca.bc.gov.health.plr.persistence.CodesDao;
import ca.bc.gov.health.plr.service.provider.DuplicateRecordException;
import java.util.List;
import javax.ejb.EJB;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;

/**
 * Throws a DuplicateRecordException if registry User org chid is duplicate
 * @author sumesh.kariyil
 */
@LocalBean
@Stateless
public class RegUserUniqueOrgChidValidator implements EntityValidator<PartyDto>{
    
    @PersistenceContext(unitName = "PLR-ejbPU")
    private EntityManager em;
    
    @EJB
    private CodesDao codesDao;

    @Override
    public void validate(PartyDto partyDto) throws EntityValidationException {
        GrsCtBooleanTypes activeFlag = codesDao.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.YES);
        
        TypedQuery<GrsParties> partiesQuery = em.createNamedQuery("GrsParties.findActiveByRUCharID", GrsParties.class)
                .setParameter(1, partyDto.getRegUserId())
                .setParameter(2, partyDto.getId() == null?0:partyDto.getId())
                .setParameter(3, activeFlag.getCtlId());
        List<GrsParties> parties = partiesQuery.getResultList();
        if(parties != null && parties.size() > 0){
            throw new EntityValidationException(BusinessRuleMessageDao.getMessageResource(BusinessRuleKeys.ERROR_REG_USER_ORG_CHID_UNIQUE));
        }
    }
}
