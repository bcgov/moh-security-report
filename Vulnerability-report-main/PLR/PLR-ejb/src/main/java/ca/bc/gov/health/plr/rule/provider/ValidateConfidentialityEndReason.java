package ca.bc.gov.health.plr.rule.provider;

import ca.bc.gov.health.plr.dto.provider.ConfidentialityIndicatorDto;
import ca.bc.gov.health.plr.ejb.entity.GrsCtEndReasonTypes;
import ca.bc.gov.health.plr.persistence.BusinessRuleKeys;
import ca.bc.gov.health.plr.persistence.BusinessRuleMessageDao;
import ca.bc.gov.health.plr.persistence.CodeTableCodes;
import ca.bc.gov.health.plr.persistence.CodesDao;
import ca.bc.gov.health.plr.rule.BusinessRule;
import ca.bc.gov.health.plr.rule.BusinessRuleMessage;
import ca.bc.gov.health.plr.rule.BusinessRuleResult;
import java.util.Arrays;
import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import org.apache.commons.lang3.StringUtils;

/**
 * Validate that a Confidentiality Indicator end reason code can only be CEASED.
 *
 * REQ-00770, Changing a Confidentiality
 *
 * @author David Sharpe <david.a.sharpe@cgi.com>
 */
@Stateless
@LocalBean
public class ValidateConfidentialityEndReason implements BusinessRule {

    @EJB
    private CodesDao codesDao;

    private BusinessRuleMessage businessRuleMessage;

    @PostConstruct
    public void postConstruct() {
        BusinessRuleKeys key = BusinessRuleKeys.ERROR_CONFIDENTIALITY_END_REASON;
        String message = BusinessRuleMessageDao.getMessageResource(key);
        businessRuleMessage = new BusinessRuleMessage(message, BusinessRuleMessage.Severity.ERROR);
    }

    /**
     * Validate that a Confidentiality Indicator end reason code can only be
     * CEASED.
     *
     * REQ-00770, Changing a Confidentiality.
     *
     * @param confInd a confidentiality indicator to validate.
     * @return a business rule result indicating the result of the validation.
     */
    public BusinessRuleResult validate(ConfidentialityIndicatorDto confInd) {
        if (confInd.getEndReasonCodeId() != null || !StringUtils.isEmpty(confInd.getEndReasonCode())) {
            GrsCtEndReasonTypes endReasonCode;
            if (confInd.getEndReasonCodeId() != null) {
                endReasonCode = codesDao.lookup(GrsCtEndReasonTypes.class, confInd.getEndReasonCodeId());
            } else {
                endReasonCode = codesDao.lookup(GrsCtEndReasonTypes.class, confInd.getEndReasonCode());
            }
            GrsCtEndReasonTypes ceaseCode = codesDao.lookup(GrsCtEndReasonTypes.class, CodeTableCodes.GrsCtEndReasonTypes.CEASE);
            if (!endReasonCode.getCtlId().equals(ceaseCode.getCtlId())) {
                return new BusinessRuleResult(false, Arrays.asList(businessRuleMessage));
            }
        }
        return new BusinessRuleResult();
    }

}
