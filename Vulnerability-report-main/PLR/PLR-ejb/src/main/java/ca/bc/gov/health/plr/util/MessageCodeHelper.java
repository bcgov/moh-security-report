/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.util;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * All this does is split the code/msg text.
 *
 * @author jonathan.wiebe
 */
public class MessageCodeHelper {

    public static final String COLON = ":";
    public static final Pattern ERROR_CODE_PATTERN = Pattern.compile("[A-Z]{3}.[A-Z]{3}.[A-Z]{3}.[A-Z]{3}.\\d{1}.\\d{1}.\\d{4}");
    public static final String NO_ERROR_MESSAGE = "No error message.";
    // Error code must pass HL7 schema validation (e.g. "[^\s]*")
    public static final String NO_ERROR_CODE = "UnknownError";

    /**
     * Takes an error message string and splits into two parts if there is a
     * colon; otherwise the first part is null, and the second part contains the
     * entire error string
     *
     * @param errorMessage String representation of an error e.g "GRS.0.0.UNK:
     * You are not paying attention"
     * @return An array with two items. The value in index 0 may be null if
     * there is no error code
     */
    public static String[] splitCodeAndMessage(String errorMessage) {
        String[] codeAndMessage = new String[2];
        
        // some default values ... when things go wrong there sometimes is no proper error message
        codeAndMessage[0] = NO_ERROR_CODE;
        codeAndMessage[1] = NO_ERROR_MESSAGE;
        
        if (errorMessage != null && !errorMessage.isEmpty()) {
            int colonIndex = errorMessage.indexOf(COLON);
            if (colonIndex > 0) {
                codeAndMessage[0] = errorMessage.substring(0, colonIndex);
                Matcher errorCodeMatcher = ERROR_CODE_PATTERN.matcher(codeAndMessage[0]);
                if (errorCodeMatcher.matches()) {
                    codeAndMessage[1] = errorMessage.substring(colonIndex + 1, errorMessage.length());
                } else {
                    codeAndMessage[1] = errorMessage;
                }
            } else {
                codeAndMessage[1] = errorMessage;
            }
            codeAndMessage[1] = codeAndMessage[1].trim();
        }
        return codeAndMessage;
    }

}
