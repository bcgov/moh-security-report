/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.service.provider;

import ca.bc.gov.health.plr.dto.provider.OrgNameDto;
import ca.bc.gov.health.plr.dto.provider.PersonNameDto;
import ca.bc.gov.health.plr.dto.provider.ProviderDto;
import ca.bc.gov.health.plr.dto.provider.ProviderType;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import org.apache.commons.lang3.StringUtils;

/**
 * Comparator to sort the provider dtos in search results
 * 
 * @author sumesh.kariyil
 */
public class ProviderDtoNameComparator implements Comparator<ProviderDto> {

    @Override
    public int compare(ProviderDto first, ProviderDto next) {        
        return getName(first).compareTo(getName(next));
    }

    /**
     * Return the name combined with Last Name, First Name for person dtos | Name, Long Name for Org dtos
     * 
     * @param dto
     * @return 
     */
    private String getName(ProviderDto dto){
        if (dto.getProviderType().equals(ProviderType.PRACTITIONER)) {
            return getRecentPersonName(dto.getIndNames());
        } else {
            return getRecentOrgName(dto.getOrgNames());
        }
    }
    
    /**
     * Gets the most recent person name and dto returns the name
     * 
     * @param names
     * @return 
     */
    private String getRecentPersonName(List<PersonNameDto> names) {
        String name = "";
        if (names != null && names.size() > 0) {
            Collections.sort(names);
            PersonNameDto dto = names.get(0);
            name =buildName(dto.getFirstName(), dto.getLastName());
        }
        return name;
    }

    /**
     * Gets the most recent org name and dto returns the name
     * @param names
     * @return 
     */
    private String getRecentOrgName(List<OrgNameDto> names) {
        String name = "";
        if (names != null && names.size() > 0) {
            Collections.sort(names);
            OrgNameDto dto = names.get(0);
            name =buildName(dto.getLongName(), dto.getName());
        }
        return name;
    }
    
    /**
     * Builds the name with first name and last name (For org it will be Name and long name)
     * 
     * @param first
     * @param last
     * @return 
     */
    private String buildName(String first, String last){
        StringBuilder builder = new StringBuilder();
        builder.append(last);
        if(StringUtils.isNotEmpty(first)){
            builder.append(",").append(first);
        }
        return builder.toString();
    }
}
