package ca.bc.gov.health.plr.service.provider;

import ca.bc.gov.health.plr.dto.converter.ProviderDtoConverter;
import ca.bc.gov.health.plr.dto.converter.StatusDtoConverter;
import ca.bc.gov.health.plr.dto.provider.StatusDto;
import ca.bc.gov.health.plr.ejb.entity.PrsProviders;
import ca.bc.gov.health.plr.ejb.entity.PrsStatuses;
import ca.bc.gov.health.plr.persistence.BusinessRuleKeys;
import ca.bc.gov.health.plr.persistence.BusinessRuleMessageDao;
import ca.bc.gov.health.plr.persistence.CodeTableCodes;
import ca.bc.gov.health.plr.persistence.CodesDao;
import ca.bc.gov.health.plr.rule.provider.AccessRestrictionService;
import ca.bc.gov.health.plr.service.EntityValidatorService;
import ca.bc.gov.health.plr.service.PlrUserRoleService;
import ca.bc.gov.health.plr.service.validators.ApplicableStatusReasonCodeValidator;
import ca.bc.gov.health.plr.service.validators.ConfidentialityValidator;
import ca.bc.gov.health.plr.service.validators.EntityChangeDetector;
import ca.bc.gov.health.plr.service.validators.EntityValidationException;
import java.util.List;
import javax.ejb.EJB;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.inject.Inject;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

/**
 * * Add or update a status.
 *
 * @author David Sharpe <david.a.sharpe@cgi.com>
 */
@Stateless
@LocalBean
public class MaintainStatusService implements MaintainService<StatusDto>{

    @PersistenceContext(unitName = "PLR-ejbPU")
    private EntityManager em;

    @EJB
    private StatusDtoConverter statusDtoConverter;
    @EJB
    private JournalService<PrsStatuses> journalService;

    @EJB
    private EntityValidatorService<PrsStatuses> validatorService;

    @EJB
    private ConfidentialityValidator<PrsStatuses> confidentialityValidator;
    
    @EJB
    private AccessRestrictionService accessRestrictionService;
    
    @EJB
    protected CodesDao codesDao;
    
    @EJB
    private ProviderDtoConverter providerDtoConverter;
    
    @EJB
    private ApplicableStatusReasonCodeValidator applicableStatusReasonCodeValidator;
    
    @EJB
    private EntityChangeDetector<StatusDto, PrsStatuses> entityChangeDetector;

    @Inject
    private PlrUserRoleService userRoleService;
    /**
     * Persists a DTO to the database
     *
     * @param dto dto to save
     * @return 
     * @throws ca.bc.gov.health.plr.service.provider.DuplicateRecordException
     * @throws ca.bc.gov.health.plr.service.validators.EntityValidationException
     */
    @Override
    public StatusDto save(StatusDto dto) throws DuplicateRecordException, EntityValidationException {
    
        //primary source is NOT allowed to cease a status
        //If the validation fails, there is no need to convert dto to entity
        if(this.userRoleService.isPrimarySource() && 
                dto.getEndReasonCode()!=null &&
                dto.getEndReasonCode().compareToIgnoreCase(CodeTableCodes.GrsCtEndReasonTypes.CEASE.getValue())==0) {
            String msg = BusinessRuleMessageDao.getMessageResource(BusinessRuleKeys.ERROR_CEASE_STATUS_PRIMARYSOURCE_NOTALLOWED);
            throw new EntityValidationException(msg);
        }
        
        PrsStatuses newRecord = statusDtoConverter.toEntity(dto);
        entityChangeDetector.checkForChanges(dto, newRecord);
	if(dto.isNoChangeOnUpdate()){
            return dto;
	}
        
        validatorService.validate(newRecord, confidentialityValidator, applicableStatusReasonCodeValidator);
        newRecord = journalService.journal(newRecord);

        return providerDtoConverter.buildStatus(newRecord);
    }
    
    public List<StatusDto> getStatuses(long pauthId) {
        PrsProviders provider = em.find(PrsProviders.class, pauthId);
        List<StatusDto> dtos = providerDtoConverter.buildStatuses(provider.getPrsStatusesList());
        accessRestrictionService.applyReadRestriction(dtos, provider.getHptCode(), PrsStatuses.class);
        accessRestrictionService.applyColumnRestriction(dtos, provider.getHptCode(), PrsStatuses.class, false);
        return dtos;
    }

    public void setUserRoleService(PlrUserRoleService userRoleService) {
        this.userRoleService = userRoleService;
    }

}
