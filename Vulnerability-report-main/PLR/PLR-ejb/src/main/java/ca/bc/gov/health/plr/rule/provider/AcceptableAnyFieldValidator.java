package ca.bc.gov.health.plr.rule.provider;

import java.util.regex.Pattern;
import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

/**
 * "Any field" validator for EA REQ-00320.
 * 
 * This validator validates fields not covered by more a specific validator, e.g. {@link AcceptableAddressValidator}.
 *
 * @author David Sharpe <david.a.sharpe@cgi.com>
 */
public class AcceptableAnyFieldValidator implements ConstraintValidator<AcceptableAnyField, String> {

    // Note that "\\\\" matches "\": one escape for Java, one escape for the regex.
    private static final Pattern illegalCharacters = Pattern.compile("[^ &',\\-./0-9:@A-Z\\(\\)\\[\\]\\\\^_`a-z]");

    @Override
    public void initialize(AcceptableAnyField constraintAnnotation) {
    }

    @Override
    public boolean isValid(String value, ConstraintValidatorContext context) {
        AcceptableCharacterValidator validator = new AcceptableCharacterValidator(illegalCharacters);
        return validator.valildate(value, context);
    }

}
