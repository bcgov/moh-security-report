package ca.bc.gov.health.plr.dto.provider;

import ca.bc.gov.health.plr.dto.DtoAccessRestrictionData;
import ca.bc.gov.health.plr.dto.MessageDataBlockDto;
import ca.bc.gov.health.plr.dto.converter.ProviderDtoConverter;
import ca.bc.gov.health.plr.ejb.entity.PrsCtStatusClassCodes;
import ca.bc.gov.health.plr.ejb.entity.PrsCtStatusCodes;
import ca.bc.gov.health.plr.ejb.entity.PrsCtStatusReasonCodes;
import ca.bc.gov.health.plr.ejb.entity.PrsStatuses;
import ca.bc.gov.health.plr.rule.provider.AcceptableCodeName;
import ca.bc.gov.health.plr.util.DateUtils;
import java.lang.reflect.Method;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.validation.constraints.NotNull;
import org.apache.commons.beanutils.PropertyUtils;

/**
 *
 * @author David Sharpe <david.a.sharpe@cgi.com>
 */
public class StatusDto extends AbstractProviderDetail implements MessageDataBlockDto, Comparable<StatusDto> {

    private Long classCodeId;
    @AcceptableCodeName(clazz = PrsCtStatusClassCodes.class, code = "Status Class")
    private String classCode;
    private String classTxt;
    private Long reasonCodeId;
    @AcceptableCodeName(clazz = PrsCtStatusReasonCodes.class, code = "Reason Class")
    private String reasonCode;
    private String reason;
    @AcceptableCodeName(clazz = PrsCtStatusCodes.class, code = "Status Code")
    private String typeCode;
    
    private DtoAccessRestrictionData accessRestrictionData = new DtoAccessRestrictionData();
    
    private static final String[] RECORD_TYPES = new String[]{"classCode"};
    @NotNull(message = "{error.notblank.part1of2} Status Effective Start Date {error.notblank.part2of2}")
    private Date effectiveStartDate;
    private Date effectiveEndDate;
    private Long typeId;
    
    @Override
    public String[] getRecordTypeFields(){
        return RECORD_TYPES;
    }

    public String getClassCode() {
        return classCode;
    }

    public void setClassCode(String classCode) {
        this.classCode = classCode;
    }

    public String getClassTxt() {
        return classTxt;
    }

    public void setClassTxt(String classTxt) {
        this.classTxt = classTxt;
    }

    public String getReasonCode() {
        return reasonCode;
    }

    public void setReasonCode(String reasonCode) {
        this.reasonCode = reasonCode;
    }

    public String getReason() {
        return reason;
    }

    public void setReason(String reason) {
        this.reason = reason;
    }

    public Long getClassCodeId() {
        return classCodeId;
    }

    public void setClassCodeId(Long classCodeId) {
        this.classCodeId = classCodeId;
    }

    public Long getReasonCodeId() {
        return reasonCodeId;
    }

    public void setReasonCodeId(Long reasonCodeId) {
        this.reasonCodeId = reasonCodeId;
    }

    public DtoAccessRestrictionData getAccessRestrictionData() {
        return accessRestrictionData;
    }

    public void setAccessRestrictionData(DtoAccessRestrictionData accessRestrictionData) {
        this.accessRestrictionData = accessRestrictionData;
    }

    @Override
    public String[] getMessageDataBlockFields() {
        return new String[]{"classCode"};
    }

    @Override
    public ca.bc.gov.health.plr.dto.provider.esb.AbstractProviderDetail toEsbVersion() throws Exception {  
        ca.bc.gov.health.plr.dto.provider.esb.StatusDto esbVersion = new ca.bc.gov.health.plr.dto.provider.esb.StatusDto();        
        
        PropertyUtils.copyProperties(esbVersion, this);
        
        return esbVersion;

    }

    @Override
    public String getTypeCode() {
        return typeCode;
    }

    @Override
    public void setTypeCode(String typeCode) {
        this.typeCode = typeCode;
    }
    @Override
    public String getBlockName() {
        return "Status";
    }

    /**
     * @return the effectiveStartDate
     */
    @Override
    public Date getEffectiveStartDate() {
        return effectiveStartDate;
    }

    /**
     * @param effectiveStartDate the effectiveStartDate to set
     */
    @Override
    public void setEffectiveStartDate(Date effectiveStartDate) {
        this.effectiveStartDate = effectiveStartDate;
    }

    @Override
    public Date getEffectiveEndDate() {
        return effectiveEndDate;
    }

    @Override
    public void setEffectiveEndDate(Date effectiveEndDate) {
        this.effectiveEndDate = effectiveEndDate;
    }

    public Long getTypeId() {
        return typeId;
    }

    public void setTypeId(Long typeId) {
        this.typeId = typeId;
    }

    @Override
    public void addToProviderDto(ProviderDto providerDto) {
        providerDto.getStatuses().add(this);
    }
    
    @Override
    public Class getEntityClass() {
        return PrsStatuses.class;
    }
    
    @Override
    public Method getDtoConverterMethod() {
        Method method = null;
        try {
            method = ProviderDtoConverter.class.getMethod("buildStatus", PrsStatuses.class);
        } catch (NoSuchMethodException | SecurityException ex) {
            Logger.getLogger(AddressDto.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // return null is OK
        return method;
    }

    /**
     * Compare by Display Active
     *
     * @param o - object to compare
     * @return
     */
    @Override
    public int compareTo(StatusDto o) {
        final int BEFORE = -1;
        final int EQUAL = 0;
        final int AFTER = 1;

        //compare active
        if (this.isDisplayActive() && !o.isDisplayActive()) {
            return BEFORE;
        }
        if (!this.isDisplayActive() && o.isDisplayActive()) {
            return AFTER;
        }
        return EQUAL;
    }
    
}
