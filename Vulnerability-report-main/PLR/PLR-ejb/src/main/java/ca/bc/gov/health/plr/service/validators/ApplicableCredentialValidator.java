/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.service.validators;

import ca.bc.gov.health.plr.ejb.entity.PrsCtProvCredentialTypes;
import ca.bc.gov.health.plr.ejb.entity.PrsProviderCredentials;
import static ca.bc.gov.health.plr.persistence.BusinessRuleKeys.ERROR_INVALID_CREDENTIAL;
import ca.bc.gov.health.plr.persistence.BusinessRuleMessageDao;
import ca.bc.gov.health.plr.persistence.CodesDao;
import java.util.List;
import javax.ejb.EJB;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import org.apache.commons.lang3.Validate;

/**
 * REQ-00919 : Validator class which checks if the provider role type have access to the credential type 
 * 
 * @author sumesh.kariyil
 */
@LocalBean
@Stateless
public class ApplicableCredentialValidator implements EntityValidator<PrsProviderCredentials>{
    
    @EJB
    private CodesDao codesDao;
    
    private static final String errorMessage = BusinessRuleMessageDao.getMessageResource(ERROR_INVALID_CREDENTIAL);

    @Override
    public void validate(PrsProviderCredentials entity) throws EntityValidationException {
        Validate.notNull(entity);
        Validate.notNull(entity.getPauthPauthId());
        Validate.notNull(entity.getPauthPauthId().getHptCode());
        List<PrsCtProvCredentialTypes> applicableCredentials = codesDao.getApplicableCredentials(entity.getPauthPauthId().getHptCode().getCtlId());
        if(applicableCredentials == null || applicableCredentials.isEmpty()){
            throw new EntityValidationException(errorMessage);
        }
        if(! applicableCredentials.contains(entity.getProviderCredentialTypeCode())){
            throw new EntityValidationException(errorMessage);
        }
    }
            
}
