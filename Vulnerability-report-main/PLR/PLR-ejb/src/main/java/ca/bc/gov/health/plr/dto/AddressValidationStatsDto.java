/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.dto;

import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author tim.osse
 */
public class AddressValidationStatsDto {

    private Integer numRecordsProcessed = new Integer(0);
    
    private Integer numStatusChanges = new Integer(0);
    
    private Integer numStatusToValid = new Integer(0);
    
    private Integer numStatusToInvalid = new Integer(0);
    
    private Integer numRecordsUnknown = new Integer(0);
    
    private Integer numRecordsInvalid = new Integer(0);
    
    private Integer numStatusToUnknown = new Integer(0);
    
    private String lastRunStartDateTime;
    
    private String lastRunCompleteDateTime;

    public AddressValidationStatsDto() {
        this.numRecordsProcessed = new Integer(0);
        this.numStatusChanges = new Integer(0);
        this.numStatusToValid = new Integer(0);
        this.numStatusToInvalid = new Integer(0);
        this.numRecordsUnknown = new Integer(0);
        this.numRecordsInvalid = new Integer(0);
        this.numStatusToUnknown = new Integer(0);
        
    }
    
    public AddressValidationStatsDto(Map<String, String> addrStatsMap){
        this.numRecordsProcessed = new Integer(0);
        this.numStatusChanges = new Integer(0);
        this.numStatusToValid = new Integer(0);
        this.numStatusToInvalid = new Integer(0);
        this.numRecordsUnknown = new Integer(0);
        this.numRecordsInvalid = new Integer(0);
        this.numStatusToUnknown = new Integer(0);
        
        if(addrStatsMap.get("plr.batch.address.process.number.records.processed") == null){
            setNumRecordsProcessed(Integer.parseInt("0"));
        } else {
            setNumRecordsProcessed(Integer.parseInt(addrStatsMap.get("plr.batch.address.process.number.records.processed")));
        }
        
        if(addrStatsMap.get("plr.batch.address.process.number.status.changes") == null){
            setNumStatusChanges(Integer.parseInt("0"));
        } else {
            setNumStatusChanges(Integer.parseInt(addrStatsMap.get("plr.batch.address.process.number.status.changes")));
        }
        
        if(addrStatsMap.get("plr.batch.address.process.number.status.changed.valid") == null){
            setNumStatusToValid(Integer.parseInt("0"));
        } else {
            setNumStatusToValid(Integer.parseInt(addrStatsMap.get("plr.batch.address.process.number.status.changed.valid")));
        }
        
        if(addrStatsMap.get("plr.batch.address.process.number.status.changed.invalid") == null){
            setNumStatusToInvalid(Integer.parseInt("0"));
        } else {
            setNumStatusToInvalid(Integer.parseInt(addrStatsMap.get("plr.batch.address.process.number.status.changed.invalid")));
        }
        
        if(addrStatsMap.get("plr.batch.address.process.last.run.start.datetime") == null){
            setLastRunStartDateTime("0000-00-00 00:00:00");
        } else {
            setLastRunStartDateTime(addrStatsMap.get("plr.batch.address.process.last.run.start.datetime"));
        }
        
        if(addrStatsMap.get("plr.batch.address.process.last.run.complete.datetime") == null){
            setLastRunCompleteDateTime("0000-00-00 00:00:00");
        } else {
            setLastRunCompleteDateTime(addrStatsMap.get("plr.batch.address.process.last.run.complete.datetime"));
        }
        
        if(addrStatsMap.get("plr.batch.address.process.number.records.unknown") == null){
            setNumRecordsUnknown(Integer.parseInt("0"));
        } else {
            setNumRecordsUnknown(Integer.parseInt(addrStatsMap.get("plr.batch.address.process.number.records.unknown")));
        }
                
        if(addrStatsMap.get("plr.batch.address.process.number.records.invalid") == null){
            setNumRecordsInvalid(Integer.parseInt("0"));
        } else {
            setNumRecordsInvalid(Integer.parseInt(addrStatsMap.get("plr.batch.address.process.number.records.invalid")));
        }
                        
        if(addrStatsMap.get("plr.batch.address.process.number.status.changed.unknown") == null){
            setNumStatusToUnknown(Integer.parseInt("0"));
        } else {
            setNumStatusToUnknown(Integer.parseInt(addrStatsMap.get("plr.batch.address.process.number.status.changed.unknown")));
        }
    }
    
    /**
     * @return the numRecordsProcessed
     */
    public Integer getNumRecordsProcessed() {
        return numRecordsProcessed;
    }

    /**
     * @param numRecordsProcessed the numRecordsProcessed to set
     */
    public void setNumRecordsProcessed(Integer numRecordsProcessed) {
        this.numRecordsProcessed = numRecordsProcessed;
    }

    /**
     * @return the numStatusChanges
     */
    public Integer getNumStatusChanges() {
        return numStatusChanges;
    }

    /**
     * @param numStatusChanges the numStatusChanges to set
     */
    public void setNumStatusChanges(Integer numStatusChanges) {
        this.numStatusChanges += numStatusChanges;
    }

    /**
     * @return the numStatusToValid
     */
    public Integer getNumStatusToValid() {
        return numStatusToValid;
    }

    /**
     * @param numStatusToValid the numStatusToValid to set
     */
    public void setNumStatusToValid(Integer numStatusToValid) {
        this.numStatusToValid += numStatusToValid;
    }

    /**
     * @return the numStatusToInvalid
     */
    public Integer getNumStatusToInvalid() {
        return numStatusToInvalid;
    }

    /**
     * @param numStatusToInvalid the numStatusToInvalid to set
     */
    public void setNumStatusToInvalid(Integer numStatusToInvalid) {
        this.numStatusToInvalid += numStatusToInvalid;
    }
    
    /**
     * @return the lastRunDateTime
     */
    public String getLastRunStartDateTime() {
        return lastRunStartDateTime;
    }

    /**
     * @param lastRunDateTime the lastRunDateTime to set
     */
    public void setLastRunStartDateTime(String lastRunStartDateTime) {
        this.lastRunStartDateTime = lastRunStartDateTime;
    }
    
    /**
     * @return the lastRunDateTime
     */
    public String getLastRunCompleteDateTime() {
        return lastRunCompleteDateTime;
    }

    /**
     * @param lastRunDateTime the lastRunDateTime to set
     */
    public void setLastRunCompleteDateTime(String lastRunCompleteDateTime) {
        this.lastRunCompleteDateTime = lastRunCompleteDateTime;
    }
    
        /**
     * @return the numRecordsUnknown
     */
    public Integer getNumRecordsUnknown() {
        return numRecordsUnknown;
    }

    /**
     * @param numRecordsUnknown the numRecordsUnknown to set
     */
    public void setNumRecordsUnknown(Integer numRecordsUnknown) {
        this.numRecordsUnknown += numRecordsUnknown;
    }

    /**
     * @return the numRecordsInvalid
     */
    public Integer getNumRecordsInvalid() {
        return numRecordsInvalid;
    }

    /**
     * @param numRecordsInvalid the numRecordsInvalid to set
     */
    public void setNumRecordsInvalid(Integer numRecordsInvalid) {
        this.numRecordsInvalid += numRecordsInvalid;
    }

    /**
     * @return the numStatusToUnknown
     */
    public Integer getNumStatusToUnknown() {
        return numStatusToUnknown;
    }

    /**
     * @param numStatusToUnknown the numStatusToUnknown to set
     */
    public void setNumStatusToUnknown(Integer numStatusToUnknown) {
        this.numStatusToUnknown += numStatusToUnknown;
    }
    
    public HashMap<String, String> getStatisticFieldValueList(){
        HashMap<String, String> addrStats = new HashMap<String, String>();
        addrStats.put("plr.batch.address.process.number.records.processed", Integer.toString(getNumRecordsProcessed()));
        addrStats.put("plr.batch.address.process.number.status.changes", Integer.toString(getNumStatusChanges()));
        addrStats.put("plr.batch.address.process.number.status.changed.valid", Integer.toString(getNumStatusToValid()));
        addrStats.put("plr.batch.address.process.number.status.changed.invalid", Integer.toString(getNumStatusToInvalid()));
        addrStats.put("plr.batch.address.process.last.run.start.datetime", getLastRunStartDateTime());
        addrStats.put("plr.batch.address.process.last.run.complete.datetime", getLastRunCompleteDateTime());
        addrStats.put("plr.batch.address.process.number.records.unknown", Integer.toString(getNumRecordsUnknown()));
        addrStats.put("plr.batch.address.process.number.records.invalid", Integer.toString(getNumRecordsInvalid()));
        addrStats.put("plr.batch.address.process.number.status.changed.unknown", Integer.toString(getNumStatusToUnknown()));
        
        return addrStats;
    }

}
