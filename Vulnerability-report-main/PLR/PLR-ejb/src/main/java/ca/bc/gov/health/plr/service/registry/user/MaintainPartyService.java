/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.service.registry.user;

import ca.bc.gov.health.plr.dto.converter.PartyDetailsDtoConverter;
import ca.bc.gov.health.plr.dto.converter.PartyDtoConverter;
import ca.bc.gov.health.plr.dto.reguser.PartyDto;
import ca.bc.gov.health.plr.dto.reguser.RegistryUserDetailsConverter;
import ca.bc.gov.health.plr.ejb.entity.GrsParties;
import ca.bc.gov.health.plr.ejb.entity.GrsPartyDetails;
import ca.bc.gov.health.plr.ejb.entity.GrsRegistryUsers;
import ca.bc.gov.health.plr.service.EntityValidatorService;
import ca.bc.gov.health.plr.service.provider.DuplicateRecordException;
import ca.bc.gov.health.plr.service.provider.JournalService;
import ca.bc.gov.health.plr.service.validators.EffectiveDatesValidator;
import ca.bc.gov.health.plr.service.validators.EntityValidationException;
import ca.bc.gov.health.plr.service.validators.RegUserUniqueOrgChidValidator;
import java.util.List;
import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

/**
 *
 * @author sumesh.kariyil
 */
@Stateless
public class MaintainPartyService {

    @PersistenceContext(unitName = "PLR-ejbPU")
    private EntityManager em;

    @EJB
    private PartyDtoConverter partyDtoConverter;
    @EJB
    private PartyDetailsDtoConverter partyDetailsDtoConverter;

    @EJB
    private JournalService<GrsPartyDetails> journalService;

    @EJB
    private EntityValidatorService<PartyDto> partiesValidator;
    
    @EJB
    private RegUserUniqueOrgChidValidator regUserUniqueOrgChidValidator;
    
    @EJB
    private RegistryUserDetailsConverter registryUserDetailsConverter;
  
    @EJB
    private EffectiveDatesValidator effectiveDatesValidator;
    
    /**
     * Add or update an Organization Name.
     *
     * @param toSave dto to save
     * @throws ca.bc.gov.health.plr.service.provider.DuplicateRecordException
     * @throws ca.bc.gov.health.plr.service.validators.EntityValidationException
     */
    public void save(PartyDto toSave) throws DuplicateRecordException, EntityValidationException {   
        GrsParties grsParty = partyDtoConverter.toEntity(toSave);
        
        partiesValidator.validate(toSave, regUserUniqueOrgChidValidator);
        em.merge(grsParty);
        em.flush();
        
        GrsPartyDetails partyDetails = partyDetailsDtoConverter.toEntity(toSave.getPartyDetailsDto());
        partyDetails.setPartyPartyId(grsParty);        
        
        effectiveDatesValidator.validate(partyDetails.getEffectiveStartDate(), partyDetails.getEffectiveEndDate());
        journalService.journal(partyDetails);        
    }

    /**
     * Get the Organization Names of the specified Provider.
     *
     * @param dto
     * @return the Party Details of the specified Provider.
     */
    public List<PartyDto> getParties(PartyDto dto) {
        GrsRegistryUsers regUser = em.find(GrsRegistryUsers.class, dto.getRuRuId());
        return registryUserDetailsConverter.getPartyDetails(regUser);
    }
}
