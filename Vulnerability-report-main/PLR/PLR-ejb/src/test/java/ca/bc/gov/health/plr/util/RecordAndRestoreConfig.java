/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.util;

import ca.bc.gov.health.plr.constants.Consts;
import ca.bc.gov.health.plr.ejb.entity.PlrConfigurationProperties;
import ca.bc.gov.health.plr.service.PLRConfigurationResourceLoader;
import static ca.bc.gov.health.plr.service.provider.IntegrationSetup.entityManagerProxy;

/**
 *
 * @author jonathan.wiebe
 */
public class RecordAndRestoreConfig {

    static String auditState = "false";
    static String processState = "false";
    static String sendState = "false";
    static String addrValState = "false";

    public static void record(int WAIT_TIME, PLRConfigurationResourceLoader plrConfigurationResourceLoader, String auditIn, String sendDIn, String processDIn, String addrValIn)  throws InterruptedException {
        auditState = plrConfigurationResourceLoader.getValue(Consts.ENABLE_AUDITING);
        addrValState = plrConfigurationResourceLoader.getValue(PLRConfigurationResourceLoader.VALIDATE_ADDRESSES_SWITCH);
        processState = plrConfigurationResourceLoader.getValue(Consts.PROCESS_DISTRIBUTION);
        auditState = plrConfigurationResourceLoader.getValue(Consts.SEND_DISTRIBUTION);
        
        PlrConfigurationProperties  audit = entityManagerProxy.find(PlrConfigurationProperties.class, "enable_auditing");
        audit.setValue(auditIn);
        entityManagerProxy.merge(audit);
        entityManagerProxy.flush();

        PlrConfigurationProperties  send = entityManagerProxy.find(PlrConfigurationProperties.class, Consts.SEND_DISTRIBUTION);
        send.setValue(sendDIn);
        entityManagerProxy.merge(send);
        entityManagerProxy.flush();

        PlrConfigurationProperties  process = entityManagerProxy.find(PlrConfigurationProperties.class, Consts.PROCESS_DISTRIBUTION);
        process.setValue(processDIn);
        entityManagerProxy.merge(process);
        entityManagerProxy.flush();

        PlrConfigurationProperties  addrVal = entityManagerProxy.find(PlrConfigurationProperties.class, PLRConfigurationResourceLoader.VALIDATE_ADDRESSES_SWITCH);
        addrVal.setValue(addrValIn);
        entityManagerProxy.merge(addrVal);
        entityManagerProxy.flush();
        
        Thread.sleep(WAIT_TIME); // Sleep for WAIT_TIME to ensure we have reloaded configuration to enable auditing processing
    }

    public static void restore(int WAIT_TIME) throws InterruptedException {
        PlrConfigurationProperties  audit = entityManagerProxy.find(PlrConfigurationProperties.class, "enable_auditing");
        audit.setValue(auditState);
        entityManagerProxy.merge(audit);
        entityManagerProxy.flush();
        
 
        PlrConfigurationProperties  send = entityManagerProxy.find(PlrConfigurationProperties.class, "send_distributions");
        send.setValue(sendState);
        entityManagerProxy.merge(send);
        entityManagerProxy.flush();

        PlrConfigurationProperties  process = entityManagerProxy.find(PlrConfigurationProperties.class, "process_distributions");
        process.setValue(processState);
        entityManagerProxy.merge(process);
        entityManagerProxy.flush();

        PlrConfigurationProperties  addrVal = entityManagerProxy.find(PlrConfigurationProperties.class, "validate.addresses");
        addrVal.setValue(addrValState);
        entityManagerProxy.merge(addrVal);
        entityManagerProxy.flush();
        
        Thread.sleep(WAIT_TIME); // Sleep for WAIT_TIME to ensure we have reloaded configuration to change auditing processing
    }
}
