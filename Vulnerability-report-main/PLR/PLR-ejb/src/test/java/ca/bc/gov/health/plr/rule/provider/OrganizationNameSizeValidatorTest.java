/*
 * *********************************************************************************************************************
 *  Copyright (c) 2018, Ministry of Health, BC.                                                                        *
 *                                                                                                                     *
 *  All rights reserved.                                                                                               *
 *    This information contained herein may not be used in whole                                                       *
 *    or in part without the express written consent of the                                                            *
 *    Government of British Columbia, Canada.                                                                          *
 *                                                                                                                     *
 *  Revision Control Information                                                                                       *
 *  File:                $Id::                                                                                       $ *
 *  Date of Last Commit: $Date::                                                                                     $ *
 *  Revision Number:     $Rev::                                                                                      $ *
 *  Last Commit by:      $Author::                                                                                   $ *
 *                                                                                                                     *
 * *********************************************************************************************************************
 */
package ca.bc.gov.health.plr.rule.provider;

import ca.bc.gov.health.plr.dto.provider.OrgNameDto;
import ca.bc.gov.health.plr.ejb.entity.util.DatabaseConstants;
import java.util.Date;
import java.util.Set;
import javax.validation.ConstraintViolation;
import javax.validation.Validation;
import javax.validation.Validator;
import javax.validation.ValidatorFactory;
import javax.validation.constraints.Size;
import org.junit.After;
import org.junit.AfterClass;
import static org.junit.Assert.assertEquals;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

/**
 *
 * Validator for testing the valid size for organization name/description in
 * OrgNameDto.
 *
 * @author CGI Information Management Consultants Inc.
 */
public class OrganizationNameSizeValidatorTest {
    
    public OrganizationNameSizeValidatorTest() {
    }

    @BeforeClass
    public static void setUpClass() {
    }

    @AfterClass
    public static void tearDownClass() {
    }

    @Before
    public void setUp() {
    }

    @After
    public void tearDown() {
    }

    /**
     * Test for valid size of an organization name with max. value of 100
     * characters.
     */
    @Test
    public void testValidSizeOrgName() {
        MockDto orgNameTxt = new MockDto();

        String orgName = "OrgnamewithonehundredcharactersOrgnamewithonehundredcharactersOrgnamewithonehundredcharactersOrgname";

        OrgNameDto dto = populateOrgNameDto();
        dto.setName(orgName);
        orgNameTxt.name = dto.getName();

        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();
        Set<ConstraintViolation<MockDto>> violations = validator.validate(orgNameTxt);
        assertEquals(0, violations.size());
    }

    /**
     * Test for invalid size of an organization name with value of more than 100
     * characters.
     */
    @Test
    public void testInvalidSizeOrgName() {
        MockDto orgNameTxt = new MockDto();

        String orgNameInvalidSize = "OrgnamewithonehundredcharactersOrgnamewithonehundredcharactersOrgnamewithonehundredcharactersOrgnameA";

        OrgNameDto dto = populateOrgNameDto();
        dto.setName(orgNameInvalidSize);
        orgNameTxt.name = dto.getName();

        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();
        Set<ConstraintViolation<MockDto>> violations = validator.validate(orgNameTxt);
        assertEquals(1, violations.size());
    }

    /**
     * Test for valid size of an organization long name with max. value of 200
     * characters.
     */
    @Test
    public void testValidSizeOrgLongName() {
        MockDto orgNameTxt = new MockDto();

        String orgLongName = "LongNameOrgwithtwohundredcharactersLongNameOrgwithtwohundredcharactersLongNameOrgwithtwohundredcharactersLongNameOrgwithtwohundredcharactersLongNameOrgwithtwohundredcharactersLongNameOrgwithtwohundred";

        OrgNameDto dto = populateOrgNameDto();
        dto.setLongName(orgLongName);
        orgNameTxt.longName = dto.getLongName();

        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();
        Set<ConstraintViolation<MockDto>> violations = validator.validate(orgNameTxt);
        assertEquals(0, violations.size());
    }

    /**
     * Test for invalid size of an organization long name with value of more
     * than 200 characters.
     */
    @Test
    public void testInvalidSizeOrgLongName() {
        MockDto orgNameTxt = new MockDto();

        String orgLongNameInvalid = "LongNameOrgwithtwohundredcharactersLongNameOrgwithtwohundredcharactersLongNameOrgwithtwohundredcharactersLongNameOrgwithtwohundredcharactersLongNameOrgwithtwohundredcharactersLongNameOrgwithtwohundredB";

        OrgNameDto dto = populateOrgNameDto();
        dto.setLongName(orgLongNameInvalid);
        orgNameTxt.longName = dto.getLongName();

        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();
        Set<ConstraintViolation<MockDto>> violations = validator.validate(orgNameTxt);
        assertEquals(1, violations.size());
    }

    private static class MockDto {

        @Size(max = 100, message = "{constraints.size.message.part1of2} 'Name' {constraints.size.message.part2of2}")
        String name;
        @Size(max = 200, message = "{constraints.size.message.part1of2} 'Long Name' {constraints.size.message.part2of2}")
        String longName;
    }

    /**
     * Populates an organization name DTO with sample test values for testing.
     *
     * @return orgNameDto object
     */
    private OrgNameDto populateOrgNameDto() {

        OrgNameDto orgNameDto = new OrgNameDto();
        orgNameDto.setActive(true);
        orgNameDto.setCreatedDate(new Date());
        orgNameDto.setDataOwnerCode("MOH");
        orgNameDto.setEffectiveEndDate(DatabaseConstants.SYSTEM_HIGH_DATE.toDate());
        orgNameDto.setEffectiveStartDate(DatabaseConstants.SYSTEM_LOW_DATE.toDate());
        orgNameDto.setTypeId(997l); //credential name 'CRED'
        orgNameDto.setUserChid("Test Org name size max");

        orgNameDto.setName("Organization Short Name");
        orgNameDto.setLongName("Organization Long Name");
        orgNameDto.setPreferred(true);

        return orgNameDto;
    }

}
