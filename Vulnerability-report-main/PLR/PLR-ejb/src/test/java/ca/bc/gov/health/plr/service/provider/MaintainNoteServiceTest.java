package ca.bc.gov.health.plr.service.provider;

import ca.bc.gov.health.plr.dto.provider.NoteDto;
import ca.bc.gov.health.plr.ejb.entity.PrsNotes;
import ca.bc.gov.health.plr.ejb.entity.PrsProviders;
import ca.bc.gov.health.plr.rule.BusinessRuleException;
import ca.bc.gov.health.plr.rule.provider.ProviderTestDataBuilder;
import static ca.bc.gov.health.plr.service.provider.IntegrationSetup.entityManagerProxy;
import ca.bc.gov.health.plr.service.validators.EntityValidationException;
import java.util.ArrayList;
import java.util.List;
import org.junit.After;
import static org.junit.Assert.*;
import org.junit.Test;

/**
 * 
 * @author David Sharpe <david.a.sharpe@cgi.com>
 */
public class MaintainNoteServiceTest extends IntegrationSetup {

    private static final long PAUTH_ID = 3206l;

    @After
    public void tearDown() {
        List<Exception> exceptions = new ArrayList<>();

        PrsProviders provider = entityManagerProxy.find(PrsProviders.class, PAUTH_ID);
        for (PrsNotes note : provider.getPrsNotesList()) {
            try {
                entityManagerProxy.remove(note);
            } catch (Exception e) {
                e.printStackTrace();
                exceptions.add(e);
            }
        }
        if (!exceptions.isEmpty()) {
            throw new IllegalStateException("Exceptions occurred while deleting entities. Check log for details.");
        }
    }

    @Test
    public void testAddNote() throws DuplicateRecordException, EntityValidationException, BusinessRuleException {
        NoteDto newNote = ProviderTestDataBuilder.getNote();
        newNote.setPauthId(PAUTH_ID);
        
        int originalSize = maintainNoteService.getNotes(PAUTH_ID).size();
        
        maintainNoteService.save(newNote);
        
        int newSize = maintainNoteService.getNotes(PAUTH_ID).size();
        
        assertEquals(originalSize + 1, newSize);
    }
    
    @Test
    public void testAddNote_generateId() throws DuplicateRecordException, EntityValidationException, BusinessRuleException {
        NoteDto newNote = ProviderTestDataBuilder.getNote();
        newNote.setPauthId(PAUTH_ID);
        newNote.setIdentifier(null);
        
        int originalSize = maintainNoteService.getNotes(PAUTH_ID).size();
        
        maintainNoteService.save(newNote);
        
        List<NoteDto> notes = maintainNoteService.getNotes(PAUTH_ID);
        assertEquals(originalSize + 1, notes.size());
        
        assertTrue(notes.get(0).getIdentifier().matches("NC\\.\\d+\\.PRS"));
    }

}
