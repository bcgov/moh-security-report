/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.util;

import ca.bc.gov.health.plr.persistence.BusinessRuleKeys;
import ca.bc.gov.health.plr.persistence.BusinessRuleMessageDao;
import ca.bc.gov.health.plr.rule.BusinessRuleMessage;
import ca.bc.gov.health.plr.rule.BusinessRuleResult;
import ca.bc.gov.health.plr.rule.provider.ValidateGender;
import java.util.ArrayList;
import java.util.List;
import static org.mockito.Matchers.eq;
import static org.mockito.Matchers.isNull;
import org.mockito.Mockito;

/**
 * Mock the ValidateGender class.
 * @author Kuan Fan 
 */
public class ValidateGenderMocks {

    static public void setupValidateGenderMocks(ValidateGender validateGender) {
        validateGenderCodes(validateGender);
    }

    private static void validateGenderCodes(ValidateGender validateGender) {
        Mockito.doReturn(new BusinessRuleResult()).when(validateGender).validateGenderCode(eq("M"), eq(true));
        Mockito.doReturn(new BusinessRuleResult()).when(validateGender).validateGenderCode(eq("M"), eq(false));
        Mockito.doReturn(new BusinessRuleResult()).when(validateGender).validateGenderCode(eq("F"), eq(true));
        Mockito.doReturn(new BusinessRuleResult()).when(validateGender).validateGenderCode(eq("F"), eq(false));
        Mockito.doReturn(new BusinessRuleResult()).when(validateGender).validateGenderCode(eq("U"), eq(true));
        Mockito.doReturn(new BusinessRuleResult()).when(validateGender).validateGenderCode(eq("U"), eq(false));
        
        BusinessRuleKeys genderBlankBRK = BusinessRuleKeys.ERROR_MANDATORY_PART1;
        String genderBlankErrorArray[] = MessageCodeHelper.splitCodeAndMessage(BusinessRuleMessageDao.getMessageResource(genderBlankBRK));
        genderBlankErrorArray[1] = genderBlankErrorArray[1] + "Gender" + BusinessRuleMessageDao.getMessageResource( BusinessRuleKeys.ERROR_MANDATORY_PART2);
        List<BusinessRuleMessage> genderBlankErrorList = new ArrayList<>();
        genderBlankErrorList.add(new BusinessRuleMessage(genderBlankErrorArray[0], genderBlankErrorArray[1], BusinessRuleMessage.Severity.ERROR));
        BusinessRuleResult genderBlankErrorBrr = new BusinessRuleResult(false, genderBlankErrorList);
        Mockito.doReturn(genderBlankErrorBrr).when(validateGender).validateGenderCode(isNull(String.class), eq(true));
        Mockito.doReturn(genderBlankErrorBrr).when(validateGender).validateGenderCode(eq(""), eq(true));
        Mockito.doReturn(genderBlankErrorBrr).when(validateGender).validateGenderCode(eq(" "), eq(true));
        
    }

}