/*
 * *********************************************************************************************************************
 *  Copyright (c) 2018, Ministry of Health, BC.                                                                        *
 *                                                                                                                     *
 *  All rights reserved.                                                                                               *
 *    This information contained herein may not be used in whole                                                       *
 *    or in part without the express written consent of the                                                            *
 *    Government of British Columbia, Canada.                                                                          *
 *                                                                                                                     *
 *  Revision Control Information                                                                                       *
 *  File:                $Id::                                                                                       $ *
 *  Date of Last Commit: $Date::                                                                                     $ *
 *  Revision Number:     $Rev::                                                                                      $ *
 *  Last Commit by:      $Author::                                                                                   $ *
 *                                                                                                                     *
 * *********************************************************************************************************************
 */
package ca.bc.gov.health.plr.rule.provider;

import java.util.Set;
import javax.validation.ConstraintViolation;
import javax.validation.Validation;
import javax.validation.Validator;
import javax.validation.ValidatorFactory;
import static org.junit.Assert.assertEquals;
import org.junit.Test;

/**
 * Validator for testing the rules and acceptable characters in electronic
 * address DTO.
 *
 * @author CGI Information Management Consultants Inc.
 */
public class AcceptableElectronicAddressValidatorTest {

    @Test
    public void test_validElectronicAddress() {
        MockDto electronicAddress = new MockDto();
        String emailAddress = " '_-./2:@A_a";
        electronicAddress.someField = emailAddress;

        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();
        Set<ConstraintViolation<MockDto>> violations = validator.validate(electronicAddress);
        assertEquals(0, violations.size());
    }

    @Test
    public void test_invalidElectronicAddress() {
        MockDto electronicAddress = new MockDto();
        String emailAddress = "Invalid email > #*!~";
        electronicAddress.someField = emailAddress;

        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();
        Set<ConstraintViolation<MockDto>> violations = validator.validate(electronicAddress);
        assertEquals(1, violations.size());
    }
    
    @Test
    public void test_invalidCharElectronicAddress() {
        MockDto electronicAddress = new MockDto();
        String emailAddress = "jim_lessthan<_test@hotmail.com";
        electronicAddress.someField = emailAddress;

        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();
        Set<ConstraintViolation<MockDto>> violations = validator.validate(electronicAddress);
        assertEquals(1, violations.size());
    }
    
    @Test
    public void test_validElectronicAddressSpecial() {
        MockDto electronicAddress = new MockDto();
        String emailAddress = "s&noglow@telus.net"; //s&noglow@telus.net;Dentist.name@mail.mcgill.ca
        electronicAddress.someField = emailAddress;

        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();
        Set<ConstraintViolation<MockDto>> violations = validator.validate(electronicAddress);
        assertEquals(0, violations.size());
    }
    
    @Test
    public void test_validElectronicAddress_w_specialChars() {
        MockDto electronicAddress = new MockDto();
        String emailAddress = "b^!#$%*+=?{|}~chars@hours.too";
        electronicAddress.someField = emailAddress;

        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();
        Set<ConstraintViolation<MockDto>> violations = validator.validate(electronicAddress);
        assertEquals(0, violations.size());
    }
    
    @Test
    public void test_validElectronicAddress_w_AllSpecialChars() {
        MockDto electronicAddress = new MockDto();
        String emailAddress = "all_`&^!#$%*+=?{|}~'char@home.test";
        electronicAddress.someField = emailAddress;

        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();
        Set<ConstraintViolation<MockDto>> violations = validator.validate(electronicAddress);
        assertEquals(0, violations.size());
    }

    private static class MockDto {

        @AcceptableElectronicAddress
        String someField;
    }

}
