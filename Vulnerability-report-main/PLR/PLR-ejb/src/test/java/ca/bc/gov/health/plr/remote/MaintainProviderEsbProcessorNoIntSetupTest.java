/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.remote;

import ca.bc.gov.health.plr.dto.provider.AddressDto;
import ca.bc.gov.health.plr.dto.provider.InformationRouteDto;
import ca.bc.gov.health.plr.rule.provider.ProviderTestDataBuilder;
import ca.bc.gov.health.plr.service.remote.MaintainProviderEsbProcessor;
import ca.bc.gov.health.plr.service.validators.EntityValidationException;
import java.util.logging.Level;
import java.util.logging.Logger;
import static org.junit.Assert.assertTrue;
import org.junit.Test;

/**
 * @author jonathan.wiebe
 * 
 */
public class MaintainProviderEsbProcessorNoIntSetupTest {

    @Test
    public void testValidateMessageDataBlockFields() {
        MaintainProviderEsbProcessor<ca.bc.gov.health.plr.dto.provider.esb.InformationRouteDto, ca.bc.gov.health.plr.dto.provider.InformationRouteDto> processor = new MaintainProviderEsbProcessor<ca.bc.gov.health.plr.dto.provider.esb.InformationRouteDto, ca.bc.gov.health.plr.dto.provider.InformationRouteDto>();
        InformationRouteDto irDto = ProviderTestDataBuilder.getInformationRoute();
        
        // all mandatory fields are not null
        boolean noException = true;
        try {
            processor.validateMessageDataBlockFields(irDto);
        } catch (EntityValidationException ex) {
            noException= false;
        }
        assertTrue(noException);
        
        // all mandatory fields are still not null
        irDto.setWorkLocationDataOwnerCode(null);
        noException = true;
        try {
            processor.validateMessageDataBlockFields(irDto);
        } catch (EntityValidationException ex) {
            noException = false;
        }
        assertTrue(noException);

        // not all mandatory fields are not null
        irDto.setDocumentTypeCode(null);
        noException = true;
        try {
            processor.validateMessageDataBlockFields(irDto);
        } catch (EntityValidationException ex) {
            noException = false;
        }
        assertTrue(!noException);
    }
}
