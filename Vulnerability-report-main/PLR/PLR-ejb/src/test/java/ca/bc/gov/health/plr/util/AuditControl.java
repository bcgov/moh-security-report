/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.util;

import ca.bc.gov.health.plr.constants.Consts;
import ca.bc.gov.health.plr.ejb.entity.PlrConfigurationProperties;
import static ca.bc.gov.health.plr.service.provider.IntegrationSetup.entityManagerProxy;
import static ca.bc.gov.health.plr.service.provider.IntegrationSetup.plrConfigurationResourceLoader;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author jonathan.wiebe
 */
public class AuditControl {
    static String auditState = "false";

    public static void turnOffAudit() {
        auditState = plrConfigurationResourceLoader.getValue(Consts.ENABLE_AUDITING);
        PlrConfigurationProperties audit = entityManagerProxy.find(PlrConfigurationProperties.class, Consts.ENABLE_AUDITING);
        audit.setValue("false");
        entityManagerProxy.merge(audit);
        entityManagerProxy.flush();

        waitABit();
    }

    public static void turnOnAudit() {
        auditState = plrConfigurationResourceLoader.getValue(Consts.ENABLE_AUDITING);
        PlrConfigurationProperties audit = entityManagerProxy.find(PlrConfigurationProperties.class, Consts.ENABLE_AUDITING);
        audit.setValue("true");
        entityManagerProxy.merge(audit);
        entityManagerProxy.flush();

        waitABit();
    }

    public static void waitABit() {
        try {
            // let the change happen
            Thread.sleep(60000l);
        } catch (InterruptedException ex) {
            Logger.getLogger(DistributionControl.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void restoreAudit() {
        String auditCurrent = plrConfigurationResourceLoader.getValue(Consts.ENABLE_AUDITING);
        if (auditCurrent != null && !auditCurrent.equals(auditState)) {
            PlrConfigurationProperties audit = entityManagerProxy.find(PlrConfigurationProperties.class, Consts.ENABLE_AUDITING);
            audit.setValue(auditState);
            entityManagerProxy.merge(audit);
            entityManagerProxy.flush();
            waitABit();
        }

    }
}
