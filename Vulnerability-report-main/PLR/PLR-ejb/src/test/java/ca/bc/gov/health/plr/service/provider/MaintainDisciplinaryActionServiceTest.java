/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.service.provider;

import ca.bc.gov.health.plr.dto.provider.DisciplinaryActionDto;
import ca.bc.gov.health.plr.ejb.entity.PrsDisciplinaryActions;
import ca.bc.gov.health.plr.ejb.entity.PrsProviders;
import ca.bc.gov.health.plr.rule.BusinessRuleException;
import ca.bc.gov.health.plr.rule.provider.ProviderTestDataBuilder;
import static ca.bc.gov.health.plr.service.provider.IntegrationSetup.entityManagerProxy;
import ca.bc.gov.health.plr.service.validators.EntityValidationException;
import java.util.ArrayList;
import java.util.List;
import org.junit.After;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;
import org.junit.Before;
import org.junit.Test;

/**
 * Test cases for Disciplinary Actions
 * @author ian.scott
 */
public class MaintainDisciplinaryActionServiceTest extends IntegrationSetup {

    private static Long idToRemove;

    @Before
    public void init() {
        idToRemove = null;
    }

    @After
    public void cleanup() {
        if (idToRemove != null) {
            entityManagerProxy.remove(entityManagerProxy.find(PrsDisciplinaryActions.class, idToRemove));
        }
    }

    /**
     * Test of save method .
     */
    @Test
    public void testAddDisciplinaryAction() throws EntityValidationException {

        DisciplinaryActionDto newEntity = ProviderTestDataBuilder.getDisciplinaryAction();
        newEntity.setPauthId(276l);

        PrsProviders provider = entityManagerProxy.find(PrsProviders.class, newEntity.getPauthId());
        List<PrsDisciplinaryActions> originalEntityList = provider.getPrsDisciplinaryActionsList();
        int originalEntityListSize = originalEntityList.size();
        List<Long> originalIds = new ArrayList<>();
        for (PrsDisciplinaryActions originalEntity : originalEntityList) {
            originalIds.add(originalEntity.getDiscaId());
        }
        DisciplinaryActionDto result = null;
        try {
            result = maintainDisciplinaryActionService.save(newEntity);
        } catch (DuplicateRecordException dre) {
            assertTrue(dre.getMessage().equals(""));
        }

        assertNotNull(result);

        provider = entityManagerProxy.find(PrsProviders.class, newEntity.getPauthId());
        assertEquals(originalEntityListSize + 1, provider.getPrsDisciplinaryActionsList().size());

        entityManagerProxy.remove(entityManagerProxy.find(PrsDisciplinaryActions.class, result.getId()));
    }

    /**
     * Test to ensure adding a record without an identifier populates it with a generated one.
     * REQ-00882
     *
     * @throws ca.bc.gov.health.plr.service.provider.DuplicateRecordException
     * @throws BusinessRuleException
     */
    @Test
    public void testGenerateIdentifier() throws BusinessRuleException, DuplicateRecordException, EntityValidationException {
        DisciplinaryActionDto newEntity = ProviderTestDataBuilder.getDisciplinaryAction();
        newEntity.setPauthId(276l);
        newEntity.setIdentifier(null);
        DisciplinaryActionDto result;
        result = maintainDisciplinaryActionService.save(newEntity);
        idToRemove = result.getId();
        assertTrue(result.getIdentifier()!=null && !"".equals(result.getIdentifier()));
    }
}
