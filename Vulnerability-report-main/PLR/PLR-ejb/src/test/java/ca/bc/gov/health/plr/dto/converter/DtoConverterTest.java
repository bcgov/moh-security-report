/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.dto.converter;

import ca.bc.gov.health.plr.dto.provider.AbstractProviderDetail;
import ca.bc.gov.health.plr.dto.provider.AddressDto;
import ca.bc.gov.health.plr.dto.provider.ProviderDto;
import ca.bc.gov.health.plr.ejb.entity.EntityCommon;
import ca.bc.gov.health.plr.ejb.entity.GrsAddresses;
import ca.bc.gov.health.plr.ejb.entity.GrsCtBooleanTypes;
import ca.bc.gov.health.plr.ejb.entity.GrsCtEndReasonTypes;
import ca.bc.gov.health.plr.persistence.CodeTableCodes;
import ca.bc.gov.health.plr.persistence.CodesDao;
import java.lang.reflect.Method;
import java.util.Calendar;
import java.util.Date;
import javax.persistence.EntityManager;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Before;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

/**
 *
 * @author jonathan.wiebe
 */
public class DtoConverterTest {

    public DtoConverterTest() {
    }

    CodesDao codesDaoMock = mock(CodesDao.class);
    Date now = Calendar.getInstance().getTime();

    @Before
    public void setUp() {
        GrsCtBooleanTypes yes = mock(GrsCtBooleanTypes.class);
        GrsCtBooleanTypes no = mock(GrsCtBooleanTypes.class);
        when(yes.getCtlNameCode()).thenReturn("Yes");
        when(no.getCtlNameCode()).thenReturn("No");
        when(codesDaoMock.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.YES)).thenReturn(yes);
        when(codesDaoMock.lookup(GrsCtBooleanTypes.class, CodeTableCodes.GrsCtBooleanTypes.NO)).thenReturn(no);

        GrsCtEndReasonTypes change = mock(GrsCtEndReasonTypes.class);
        when(change.getCtlNameCode()).thenReturn(END_REASON_TYPE);
        when(codesDaoMock.lookup(GrsCtEndReasonTypes.class, END_REASON_TYPE)).thenReturn(change);
        
        
    }
    private static final String END_REASON_TYPE = "CHG";

    @Test
    public void testCopyCommonProperties() throws Exception {
        DtoConverter dtoConverter = new DtoConverter();
        dtoConverter.codesDao = codesDaoMock;
        AbstractProviderDetail abs = new AddressDto();
        EntityCommon entity = new GrsAddresses();
        abs.setActive(true);
        abs.setCreatedDate(now);
        abs.setEffectiveEndDate(now);
        abs.setEffectiveStartDate(now);
        abs.setEndReasonCode(END_REASON_TYPE);
        abs.setGenerationNum(Long.MIN_VALUE);
        abs.setInvalidatedDate(now);
        abs.setUserChid("user chid");
        
        dtoConverter.copyCommonProperties(abs, entity);
        
        assertEquals(entity.getActiveFlag().getCtlNameCode(),"Yes");
        assertEquals(entity.getEndReasonCode().getCtlNameCode(),END_REASON_TYPE);
        assertEquals(entity.getCreatedDts(), abs.getCreatedDate());
        assertEquals(entity.getEffectiveEndDate(), abs.getEffectiveEndDate());
        assertEquals(entity.getEffectiveStartDate(), abs.getEffectiveStartDate());
        assertTrue(entity.getGenerationNum()==abs.getGenerationNum());
        assertEquals(entity.getUserChid(), abs.getUserChid());
        assertEquals(entity.getInvalidatedDts(), abs.getInvalidatedDate());
        

    }

}
