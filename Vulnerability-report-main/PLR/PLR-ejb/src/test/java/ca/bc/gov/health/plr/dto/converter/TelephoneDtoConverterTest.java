package ca.bc.gov.health.plr.dto.converter;

import ca.bc.gov.health.plr.dto.provider.TelecommunicationDto;
import ca.bc.gov.health.plr.ejb.entity.GrsTelephones;
import ca.bc.gov.health.plr.ejb.entity.PrsCtTelecomNumberTypes;
import ca.bc.gov.health.plr.ejb.entity.PrsProviders;
import ca.bc.gov.health.plr.persistence.CodeTableCodes;
import ca.bc.gov.health.plr.ejb.entity.util.DatabaseConstants;
import ca.bc.gov.health.plr.service.provider.IntegrationSetup;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import org.junit.After;
import org.junit.AfterClass;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotSame;
import static org.junit.Assert.assertTrue;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

/**
 *
 * @author ian.scott
 */
public class TelephoneDtoConverterTest extends IntegrationSetup {

    public TelephoneDtoConverterTest() {
    }

    @BeforeClass
    public static void setUpClass() {
    }

    @AfterClass
    public static void tearDownClass() {
    }

    @Before
    public void setUp() {
    }

    @After
    public void tearDown() {
    }

    /**
     * Test of toEntity method
     */
    @Test
    public void testToEntity_ProfitFlag() throws Exception {
        TelecommunicationDto dto = populateDTO();

        GrsTelephones result = telephoneConverter.toEntity(dto);
        assertEquals(result.getTlcmnctnNmbrTypCd().getCtlNameCode(), "T");
        assertEquals(result.getTlcmnctnNmbrTypCd().getCtlDescTxt(), "Telephone");
    }

    @Test
    public void testToEntity_defaultEffectiveEndDate() throws Exception {
        TelecommunicationDto dto = populateDTO();

        GrsTelephones result = telephoneConverter.toEntity(dto);
        assertEquals(result.getEffectiveEndDate(), DatabaseConstants.SYSTEM_HIGH_DATE.toDate());
    }

    @Test
    public void testToEntity_effectiveEndDate() throws Exception {
        TelecommunicationDto dto = populateDTO();
        Date currDate = new Date();
        dto.setEffectiveEndDate(currDate);

        GrsTelephones result = telephoneConverter.toEntity(dto);
        assertNotSame(result.getEffectiveEndDate(), DatabaseConstants.SYSTEM_HIGH_DATE.toDate());
        assertEquals(result.getEffectiveEndDate(), currDate);
    }

    @Test
    public void testToEntity_phoneAreaCode() {
        TelecommunicationDto dto = populateDTO();
        PrsCtTelecomNumberTypes prsCtTelecomeNumberType = codesDao.lookup(PrsCtTelecomNumberTypes.class, CodeTableCodes.PrsCtTelecomNumberTypes.TELEPHONE);

        String phoneAreaCode = "someCode";
        dto.setAreaCode(phoneAreaCode);
        dto.setTypeId(prsCtTelecomeNumberType.getCtlId());
        GrsTelephones result = telephoneConverter.toEntity(dto);

        assertEquals(phoneAreaCode.substring(8), result.getAreaCodeNum());
        assertEquals(prsCtTelecomeNumberType, result.getTlcmnctnNmbrTypCd());
    }

    @Test
    public void testToEntity_phoneNumber() {
        TelecommunicationDto dto = populateDTO();
        PrsCtTelecomNumberTypes prsCtTelecomeNumberType = codesDao.lookup(PrsCtTelecomNumberTypes.class, CodeTableCodes.PrsCtTelecomNumberTypes.TELEPHONE);

        String phoneNumber = "555 - 5555";

        dto.setNumber(phoneNumber);
        GrsTelephones result = telephoneConverter.toEntity(dto);

        assertEquals(phoneNumber, result.getTelecommunicationNmbrNum());
        assertEquals(prsCtTelecomeNumberType, result.getTlcmnctnNmbrTypCd());
    }

    @Test
    public void testToEntity_extensionNumber() {
        TelecommunicationDto dto = populateDTO();
        PrsCtTelecomNumberTypes prsCtTelecomeNumberType = codesDao.lookup(PrsCtTelecomNumberTypes.class, CodeTableCodes.PrsCtTelecomNumberTypes.TELEPHONE);

        String extensionNumber = "555 - 5555";

        dto.setExtension(extensionNumber);
        GrsTelephones result = telephoneConverter.toEntity(dto);

        assertEquals(extensionNumber, result.getExtensionNum());
        assertEquals(prsCtTelecomeNumberType, result.getTlcmnctnNmbrTypCd());
    }
    
    
    @Test
    public void testToEntity_faxAreaCode() {
        TelecommunicationDto dto = populateDTO();
        PrsCtTelecomNumberTypes prsCtTelecomeNumberType = codesDao.lookup(PrsCtTelecomNumberTypes.class, CodeTableCodes.PrsCtTelecomNumberTypes.FAX);

        String faxAreaCode = "someCode";
        dto.setTypeId(prsCtTelecomeNumberType.getCtlId());
        dto.setAreaCode(faxAreaCode);
        GrsTelephones result = telephoneConverter.toEntity(dto);

        assertEquals(faxAreaCode.substring(8), result.getAreaCodeNum());
        assertEquals(prsCtTelecomeNumberType, result.getTlcmnctnNmbrTypCd());
    }

    @Test
    public void testToEntity_faxNumber() {
        TelecommunicationDto dto = populateDTO();
        PrsCtTelecomNumberTypes prsCtTelecomeNumberType = codesDao.lookup(PrsCtTelecomNumberTypes.class, CodeTableCodes.PrsCtTelecomNumberTypes.FAX);

        String faxNumber = "555 - 5555";
        dto.setTypeId(prsCtTelecomeNumberType.getCtlId());
        dto.setNumber(faxNumber);
        GrsTelephones result = telephoneConverter.toEntity(dto);

        assertEquals(faxNumber, result.getTelecommunicationNmbrNum());
        assertEquals(prsCtTelecomeNumberType, result.getTlcmnctnNmbrTypCd());
    }

   

    private TelecommunicationDto populateDTO() {
        TelecommunicationDto dto = new TelecommunicationDto();

        dto.setPauthId(67l);
        dto.setTypeId(1161l); // T Telephone

        return dto;
    }
}
