package ca.bc.gov.health.plr.rule.provider;

import ca.bc.gov.health.plr.dto.provider.ProviderDto;
import ca.bc.gov.health.plr.dto.provider.RegistryIdentifierDto;
import java.util.Date;
import java.util.Set;
import javax.validation.ConstraintViolation;
import javax.validation.Validation;
import javax.validation.Validator;
import javax.validation.ValidatorFactory;
import org.junit.Test;
import static org.junit.Assert.*;

/**
 *
 * @author David Sharpe <david.a.sharpe@cgi.com>
 */
public class RegistryIdentifierValidatorTest {

    @Test
    public void test_validRegIdentifier() {
        RegistryIdentifierDto regID = new RegistryIdentifierDto();
        regID.setEffectiveStartDate(new Date());
        regID.setIdentifier("valid12.34");
        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();
        Set<ConstraintViolation<RegistryIdentifierDto>> violations = validator.validate(regID);
        assertEquals(0, violations.size());
    }

    @Test
    public void test_stripAccents_validRegIdentifier() {
        RegistryIdentifierDto regID = new RegistryIdentifierDto();
        regID.setEffectiveStartDate(new Date());
        regID.setIdentifier("ÁÉÍÓÚÝÀÈÌÒÚÂÊÔÛÄËÏÖÜÇ");
        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();
        Set<ConstraintViolation<RegistryIdentifierDto>> violations = validator.validate(regID);
        assertEquals(0, violations.size());
    }

    @Test
    public void test_invalidRegIdentifier() {
        RegistryIdentifierDto regID = new RegistryIdentifierDto();
        regID.setEffectiveStartDate(new Date());
        regID.setIdentifier("va#lid1234");
        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();
        Set<ConstraintViolation<RegistryIdentifierDto>> violations = validator.validate(regID);
        assertEquals(1, violations.size());
    }

    @Test
    public void test_invalidRegIdentifier_wildcard() {
        RegistryIdentifierDto regID = new RegistryIdentifierDto();
        regID.setEffectiveStartDate(new Date());
        regID.setIdentifier("valid1234*");
        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();
        Set<ConstraintViolation<RegistryIdentifierDto>> violations = validator.validate(regID);
        assertEquals(1, violations.size());
    }
}
