package ca.bc.gov.health.plr.service.provider;

import ca.bc.gov.health.plr.dto.provider.RegistryIdentifierDto;
import ca.bc.gov.health.plr.ejb.entity.GrsRegistryIdentifiers;
import ca.bc.gov.health.plr.ejb.entity.PrsProviders;
import ca.bc.gov.health.plr.rule.provider.ProviderTestDataBuilder;
import static ca.bc.gov.health.plr.service.provider.IntegrationSetup.entityManagerProxy;
import ca.bc.gov.health.plr.service.validators.EntityValidationException;
import java.util.ArrayList;
import java.util.List;
import org.junit.After;

import org.junit.Test;
import static org.junit.Assert.*;

/**
 * 
 * @author David Sharpe <david.a.sharpe@cgi.com>
 */
public class MaintainRegistryIdentifierServiceTest extends IntegrationSetup {

    private static final long PAUTH_ID = 3206l;

    @After
    public void tearDown() {
        List<Exception> exceptions = new ArrayList<>();

        PrsProviders provider = entityManagerProxy.find(PrsProviders.class, PAUTH_ID);
        for (GrsRegistryIdentifiers regId : provider.getGrsRegistryIdentifiersList()) {
            try {
                entityManagerProxy.remove(regId);
            } catch (Exception e) {
                e.printStackTrace();
                exceptions.add(e);
            }
        }
        if (!exceptions.isEmpty()) {
            throw new IllegalStateException("Exceptions occurred while deleting entities. Check log for details.");
        }
    }

    @Test
    public void testSaveRegistryIdentifier_add() throws DuplicateRecordException, EntityValidationException {

        RegistryIdentifierDto newRegId = ProviderTestDataBuilder.getRegistryIdentifier();
        newRegId.setPauthId(PAUTH_ID);
        
        int originalSize = entityManagerProxy.find(PrsProviders.class, PAUTH_ID).getGrsRegistryIdentifiersList().size();
        
        maintainRegistryIdentifierService.save(newRegId);

        int newSize = entityManagerProxy.find(PrsProviders.class, PAUTH_ID).getGrsRegistryIdentifiersList().size();
        
        assertEquals(originalSize + 1, newSize);
    }
}
