/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.dto.provider.comparator;

import ca.bc.gov.health.plr.constants.Consts;
import ca.bc.gov.health.plr.dto.provider.StatusDto;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.junit.Assert.*;

/**
 *
 * @author jonathan.wiebe
 */
public class StatusDisplaySortingComparatorTest {

    public StatusDisplaySortingComparatorTest() {
    }

    @BeforeClass
    public static void setUpClass() {
    }

    @AfterClass
    public static void tearDownClass() {
    }

    @Before
    public void setUp() {
    }

    @After
    public void tearDown() {
    }

    /**
     * Test of compare method, of class StatusDisplaySortingComparator.
     */
    @Test
    public void testCompare() {
        StatusDto x = null;
        StatusDto y = null;
        StatusDisplaySortingComparator nc = new StatusDisplaySortingComparator();

        x = new StatusDto();
        y = new StatusDto();

        Date date = Calendar.getInstance().getTime();
        
        x.setDataOwnerCode("FOO");
        y.setDataOwnerCode("FOO");
        x.setEffectiveStartDate(date);
        y.setEffectiveStartDate(date);
        x.setCreatedDate(date);
        y.setCreatedDate(date);
        x.setGenerationNum(1l);
        y.setGenerationNum(1l);
        assertEquals(nc.compare(x, y), Consts.EQUAL);

        x.setDataOwnerCode("AOO");
        y.setDataOwnerCode("FOO");
        assertTrue(nc.compare(x, y) < 0);

        x.setDataOwnerCode("BOO");
        y.setDataOwnerCode("AOO");
        assertTrue(nc.compare(x, y) > 0);

        x.setDataOwnerCode("FOO");
        y.setDataOwnerCode("FOO");
        x.setGenerationNum(2l);
        y.setGenerationNum(1l);
        assertTrue(nc.compare(x, y) < 0);

        x.setDataOwnerCode("FOO");
        y.setDataOwnerCode("FOO");
        x.setGenerationNum(1l);
        y.setGenerationNum(2l);
        assertTrue(nc.compare(x, y) > 0);

        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.DAY_OF_YEAR, -3);
        
        x.setDataOwnerCode("FOO");
        y.setDataOwnerCode("FOO");
        x.setGenerationNum(1l);
        y.setGenerationNum(1l);
        x.setEffectiveStartDate(cal.getTime());
        y.setEffectiveStartDate(date);
        x.setCreatedDate(date);
        y.setCreatedDate(date);
        assertTrue(nc.compare(x, y) > 0);
        
        x.setEffectiveStartDate(date);
        y.setEffectiveStartDate(cal.getTime());
        x.setCreatedDate(date);
        y.setCreatedDate(date);
        assertTrue(nc.compare(x, y) < 0);

    }

    @Test
    public void orderTest() {
        final StatusDto x = new StatusDto();
        final StatusDto y = new StatusDto();
        StatusDisplaySortingComparator nc = new StatusDisplaySortingComparator();

        x.setDataOwnerCode("FOO");
        y.setDataOwnerCode("FOO");
        x.setGenerationNum(2l);
        y.setGenerationNum(1l);

        {
            ArrayList<StatusDto> list = new ArrayList<StatusDto>() {
                {
                    add(x);
                    add(y);
                }
            };

            Collections.sort(list, nc);

            assertTrue(list.get(0).getGenerationNum() == 2);
        }
        {
            ArrayList<StatusDto> list = new ArrayList<StatusDto>() {
                {
                    add(y);
                    add(x);
                }
            };

            Collections.sort(list, nc);

            assertTrue(list.get(0).getGenerationNum() == 2);
        }
    }
}
