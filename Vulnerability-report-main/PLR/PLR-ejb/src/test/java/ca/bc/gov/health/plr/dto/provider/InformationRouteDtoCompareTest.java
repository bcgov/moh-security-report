/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.dto.provider;

import java.text.SimpleDateFormat;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.BeforeClass;

/**
 *
 * @author jonathan.wiebe
 */
public class InformationRouteDtoCompareTest {
    
    public SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

    public InformationRouteDtoCompareTest() {
    }

    @BeforeClass
    public static void setUpClass() {
    }

    @AfterClass
    public static void tearDownClass() {
    }

    @Before
    public void setUp() {
    }

    @After
    public void tearDown() {
    }

    @Test
    public void testCompare() throws Exception {
        
        InformationRouteDto x = new InformationRouteDto();
        InformationRouteDto y = new InformationRouteDto();
        AddressDto xAddressDto = new AddressDto();
        AddressDto yAddressDto = new AddressDto();
        TelecommunicationDto yTelecommunicationDto = new TelecommunicationDto();
        
        x.setDocumentTypeCode("AAA");
        y.setDocumentTypeCode("BBB");
        assertTrue(x.compareTo(y) < 0);
        
        x = new InformationRouteDto();
        y = new InformationRouteDto();
        x.setDocumentTypeCode("AAA");
        xAddressDto = new AddressDto();
        xAddressDto.setTypeCode("Mailing");
        x.setAddressDto(xAddressDto);
        y.setDocumentTypeCode("AAA");
        yTelecommunicationDto = new TelecommunicationDto();
        yTelecommunicationDto.setTypeCode("Telphone");
        y.setTelecommunicationDto(yTelecommunicationDto);
        assertTrue(x.compareTo(y) < 0);

        x = new InformationRouteDto();
        y = new InformationRouteDto();        
        x.setDocumentTypeCode("AAA");
        xAddressDto = new AddressDto();
        xAddressDto.setTypeCode("Mailing");
        x.setAddressDto(xAddressDto);
        x.setCommunicationPurposeCode("AAA");
        x.setDataOwnerCode("RNA");
        y.setDocumentTypeCode("AAA");
        yAddressDto = new AddressDto();
        yAddressDto.setTypeCode("Mailing");
        y.setCommunicationPurposeCode("AAA");
        y.setDataOwnerCode("MOH");
        assertTrue(x.compareTo(y) > 0);

        x = new InformationRouteDto();
        y = new InformationRouteDto();        
        x.setDocumentTypeCode("AAA");
        xAddressDto = new AddressDto();
        xAddressDto.setTypeCode("Mailing");
        x.setAddressDto(xAddressDto);
        x.setCommunicationPurposeCode("AAA");
        x.setDataOwnerCode("RNA");
        x.setWorkLocationDataOwnerCode("MOH");
        y.setDocumentTypeCode("AAA");
        yAddressDto = new AddressDto();
        yAddressDto.setTypeCode("Mailing");
        y.setAddressDto(yAddressDto);
        y.setCommunicationPurposeCode("AAA");
        y.setDataOwnerCode("RNA");
        y.setWorkLocationDataOwnerCode("RNA");
        assertTrue(x.compareTo(y) < 0);
        
        x = new InformationRouteDto();
        y = new InformationRouteDto();        
        x.setDocumentTypeCode("AAA");
        xAddressDto = new AddressDto();
        xAddressDto.setTypeCode("Mailing");
        x.setAddressDto(xAddressDto);
        x.setCommunicationPurposeCode("AAA");
        x.setDataOwnerCode("RNA");
        x.setWorkLocationDataOwnerCode("MOH");
        x.setWorkLocationIdentifier(100l);
        y.setDocumentTypeCode("AAA");
        yAddressDto = new AddressDto();
        yAddressDto.setTypeCode("Mailing");
        y.setAddressDto(yAddressDto);
        y.setCommunicationPurposeCode("AAA");
        y.setDataOwnerCode("RNA");
        y.setWorkLocationDataOwnerCode("MOH");
        y.setWorkLocationIdentifier(102l);
        assertTrue(x.compareTo(y) < 0);

        x = new InformationRouteDto();
        y = new InformationRouteDto();        
        x.setDocumentTypeCode("AAA");
        xAddressDto = new AddressDto();
        xAddressDto.setTypeCode("Mailing");
        x.setAddressDto(xAddressDto);
        x.setCommunicationPurposeCode("AAA");
        x.setDataOwnerCode("RNA");
        x.setWorkLocationDataOwnerCode("MOH");
        x.setWorkLocationIdentifier(100l);
        x.setEffectiveStartDate(sdf.parse("2017-01-10"));
        y.setDocumentTypeCode("AAA");
        yAddressDto = new AddressDto();
        yAddressDto.setTypeCode("Mailing");
        y.setAddressDto(yAddressDto);
        y.setCommunicationPurposeCode("AAA");
        y.setDataOwnerCode("RNA");
        y.setWorkLocationDataOwnerCode("MOH");
        y.setWorkLocationIdentifier(100l);
        x.setEffectiveStartDate(sdf.parse("2017-01-20"));
        assertTrue(x.compareTo(y) < 0);

        x = new InformationRouteDto();
        y = new InformationRouteDto();        
        x.setDocumentTypeCode("AAA");
        xAddressDto = new AddressDto();
        xAddressDto.setTypeCode("Mailing");
        x.setAddressDto(xAddressDto);
        x.setCommunicationPurposeCode("AAA");
        x.setDataOwnerCode("RNA");
        x.setWorkLocationDataOwnerCode("MOH");
        x.setWorkLocationIdentifier(100l);
        x.setEffectiveStartDate(sdf.parse("2017-01-10"));
        x.setCreatedDate(sdf.parse("2017-01-10"));
        y.setDocumentTypeCode("AAA");
        yAddressDto = new AddressDto();
        yAddressDto.setTypeCode("Mailing");
        y.setAddressDto(yAddressDto);
        y.setCommunicationPurposeCode("AAA");
        y.setDataOwnerCode("RNA");
        y.setWorkLocationDataOwnerCode("MOH");
        y.setWorkLocationIdentifier(100l);
        x.setEffectiveStartDate(sdf.parse("2017-01-10"));
        x.setCreatedDate(sdf.parse("2017-01-20"));
        assertTrue(x.compareTo(y) < 0);

    }
}
