/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.ejb.entity;

import javax.persistence.EntityListeners;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import java.io.Serializable;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 *
 * @author david.sharpe
 */
@Entity
@EntityListeners({AuditListener.class})

@Table(name = "GRS_ACCESS_PROFILES")
@SequenceGenerator(name="GRS_ACCESS_PROFILES_SEQ", sequenceName="GRS_ACCESS_PROFILES_SEQ", allocationSize=1)
@NamedQueries({
    @NamedQuery(name = "GrsAccessProfiles.findAll", query = "SELECT g FROM GrsAccessProfiles g"),
    @NamedQuery(name = "GrsAccessProfiles.findByCriteria", query = "SELECT g FROM GrsAccessProfiles g where g.ruRuId = :regUser AND g.hptCode.ctlNameCode = :providerType AND g.dataOwnerCode.ctlNameCode = :dataOwner AND g.activeFlag = :active and g.endReasonCode is null"),
    @NamedQuery(name = "GrsAccessProfiles.findByRegistryUserProviderRoleType", query = "SELECT g FROM GrsAccessProfiles g where g.ruRuId = :regUser AND g.hptCode.ctlId = :providerType AND g.activeFlag = :active and g.endReasonCode is null")
})
public class GrsAccessProfiles implements UniqueDataBlock, EntityCommon, Serializable {
    
    /**
     * List of columns that make up the data block for this type. Will be used
     * for calculating generation numbers and checking for duplicates.
     */
    private static final String[] DATA_BLOCK_COLUMNS = new String[]{"ruRuId", "categoryCode", "apg1ApgId", "hptCode", "dataOwnerCode"};
    
    @JoinColumn(name = "UPDATE_METHOD_TXT", referencedColumnName = "CTL_ID")
    @ManyToOne
    private GrsCtUpdateMethods updateMethodTxt;
    @JoinColumn(name = "UPDATE_FREQUENCY_TXT", referencedColumnName = "CTL_ID")
    @ManyToOne
    private GrsCtUpdateFreqs updateFrequencyTxt;
    @JoinColumn(name = "END_REASON_CODE", referencedColumnName = "CTL_ID")
    @ManyToOne
    private GrsCtEndReasonTypes endReasonCode;
    @JoinColumn(name = "ACTIVE_FLAG", referencedColumnName = "CTL_ID")
    @ManyToOne
    private GrsCtBooleanTypes activeFlag;
    
    @JoinColumn(name = "HPT_CODE", referencedColumnName = "CTL_ID")
    @ManyToOne(optional = false)
    private PrsCtProviderRoleTypes hptCode;
//    
    @JoinColumn(name = "DATA_OWNER_CODE", referencedColumnName = "CTL_ID")
    @ManyToOne
    private PrsCtDataOwnerCodes dataOwnerCode;
    
    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "GRS_ACCESS_PROFILES_SEQ")

    @NotNull
    @Column(name = "ACP1_ID")
    private Long acp1Id;
    @Size(max = 240)
    @Column(name = "CATEGORY_CODE")
    private String categoryCode;
    @Column(name = "DISTRIBUTE_AFTER_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    private Date distributeAfterDate;
    @Basic(optional = false)
    @NotNull
    @Column(name = "EFFECTIVE_START_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveStartDate;
    @Column(name = "EFFECTIVE_END_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveEndDate;
    @Size(max = 240)
    @Column(name = "USER_CHID")
    private String userChid;
    @Column(name = "CREATED_DTS")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdDts;
    @Column(name = "INVALIDATED_DTS")
    @Temporal(TemporalType.TIMESTAMP)
    private Date invalidatedDts;
    @Basic(optional = false)
    @NotNull
    @Column(name = "GENERATION_NUM")
    private long generationNum = 1l;
    @JoinColumn(name = "RU_RU_ID", referencedColumnName = "RU_ID")
    @ManyToOne(optional = false)
    private GrsRegistryUsers ruRuId;
    @JoinColumn(name = "APG_1_APG_ID", referencedColumnName = "APG_ID")
    @ManyToOne(optional = false)
    private GrsAccessProfileGroups apg1ApgId;

    public GrsAccessProfiles() {
    }

    public GrsAccessProfiles(Long acp1Id) {
        this.acp1Id = acp1Id;
    }

    public Long getAcp1Id() {
        return acp1Id;
    }

    public void setAcp1Id(Long acp1Id) {
        this.acp1Id = acp1Id;
    }

    public String getCategoryCode() {
        return categoryCode;
    }

    public void setCategoryCode(String categoryCode) {
        this.categoryCode = categoryCode;
    }

    
    public Date getDistributeAfterDate() {
        return distributeAfterDate;
    }

    public void setDistributeAfterDate(Date distributeAfterDate) {
        this.distributeAfterDate = distributeAfterDate;
    }

    @Override
    public Date getEffectiveStartDate() {
        return effectiveStartDate;
    }

    @Override
    public void setEffectiveStartDate(Date effectiveStartDate) {
        this.effectiveStartDate = effectiveStartDate;
    }

    @Override
    public Date getEffectiveEndDate() {
        return effectiveEndDate;
    }

    @Override
    public void setEffectiveEndDate(Date effectiveEndDate) {
        this.effectiveEndDate = effectiveEndDate;
    }

    @Override
    public String getUserChid() {
        return userChid;
    }

    @Override
    public void setUserChid(String userChid) {
        this.userChid = userChid;
    }

    @Override
    public Date getCreatedDts() {
        return createdDts;
    }

    @Override
    public void setCreatedDts(Date createdDts) {
        this.createdDts = createdDts;
    }

    @Override
    public Date getInvalidatedDts() {
        return invalidatedDts;
    }

    @Override
    public void setInvalidatedDts(Date invalidatedDts) {
        this.invalidatedDts = invalidatedDts;
    }

    @Override
    public long getGenerationNum() {
        return generationNum;
    }

    @Override
    public void setGenerationNum(long generationNum) {
        this.generationNum = generationNum;
    }

    public GrsRegistryUsers getRuRuId() {
        return ruRuId;
    }

    public void setRuRuId(GrsRegistryUsers ruRuId) {
        this.ruRuId = ruRuId;
    }

    public GrsAccessProfileGroups getApg1ApgId() {
        return apg1ApgId;
    }

    public void setApg1ApgId(GrsAccessProfileGroups apg1ApgId) {
        this.apg1ApgId = apg1ApgId;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (acp1Id != null ? acp1Id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof GrsAccessProfiles)) {
            return false;
        }
        GrsAccessProfiles other = (GrsAccessProfiles) object;
        if ((this.acp1Id == null && other.acp1Id != null) || (this.acp1Id != null && !this.acp1Id.equals(other.acp1Id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.plr.ejb.entity.GrsAccessProfiles[ acp1Id=" + acp1Id + " ]";
    }

    public GrsCtUpdateMethods getUpdateMethodTxt() {
        return updateMethodTxt;
    }

    public void setUpdateMethodTxt(GrsCtUpdateMethods updateMethodTxt) {
        this.updateMethodTxt = updateMethodTxt;
    }

    public GrsCtUpdateFreqs getUpdateFrequencyTxt() {
        return updateFrequencyTxt;
    }

    public void setUpdateFrequencyTxt(GrsCtUpdateFreqs updateFrequencyTxt) {
        this.updateFrequencyTxt = updateFrequencyTxt;
    }

    @Override
    public GrsCtEndReasonTypes getEndReasonCode() {
        return endReasonCode;
    }

    @Override
    public void setEndReasonCode(GrsCtEndReasonTypes endReasonCode) {
        this.endReasonCode = endReasonCode;
    }

    @Override
    public GrsCtBooleanTypes getActiveFlag() {
        return activeFlag;
    }

    @Override
    public void setActiveFlag(GrsCtBooleanTypes activeFlag) {
        this.activeFlag = activeFlag;
    }
  
    public PrsCtProviderRoleTypes getHptCode() {
        return hptCode;
    }

    public void setHptCode(PrsCtProviderRoleTypes hptCode) {
        this.hptCode = hptCode;
    }

    public PrsCtDataOwnerCodes getDataOwnerCode() {
        return dataOwnerCode;
    }

    public void setDataOwnerCode(PrsCtDataOwnerCodes dataOwnerCode) {
        this.dataOwnerCode = dataOwnerCode;
    }

    @Override
    public String getFieldName() {
        return "access profile";
    }

    @Override
    public String[] getDataBlockColumns() {
        return DATA_BLOCK_COLUMNS;
    }
}
