package ca.bc.gov.health.dsr.web;
import ca.bc.gov.health.plr.ejb.entity.*;
import ca.bc.gov.health.dsr.ejb.session.*;
import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.bean.ViewScoped;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.context.Flash;

/**
 * Backing bean for editing DsrWorkLocationsStagings
 * @author JSF Code Generator
 */
@ManagedBean(name="MaintainDsrWorkLocationsStaging")
@ViewScoped
public class MaintainDsrWorkLocationsStaging implements java.io.Serializable{
    /* EJB to handle persistence */
    @EJB
    private DsrWorkLocationStagingFacadeLocal dsrWorkLocationsStagingFacade;


    /* EJB for dealing with PrsWorkLocationDetails instances */
    @EJB
    private PrsWorkLocationDetailFacadeLocal prsWorkLocationDetailsFacade;

    /* EJB for dealing with PrsWorkLocations instances */
    @EJB
    private PrsWorkLocationFacadeLocal prsWorkLocationsFacade;

    /* EJB for dealing with PrsProviders instances */
    @EJB
    private PrsProviderFacadeLocal prsProvidersFacade;

    /* EJB for dealing with GrsCtLeaf instances */
    @EJB
    private DsrCtStatusFacadeLocal dsrCtStatusFacade;
    
    @EJB
    private PrsCtProvStateFacadeLocal prsCtProvStateFacade;
    
    @EJB
    private PrsCtCountriesFacadeLocal prsCtCountriesFacade;
    
    @EJB
    private DsrCtOwnerOperatorTypesFacadeLocal dsrCtOwnerOperatorTypesFacade;
    
    @EJB
    private PrsCtWorkLocationPurpsFacadeLocal PrsCtWorkLocationPurpsFacade;
    /* Instace we're currently editing */
    private DsrWorkLocationsStaging dsrWorkLocationsStaging;

    /* Flash scope to handle passing parameters from other views */
    @ManagedProperty("#{flash}")
    private Flash flash;

    /**
     * Default Constructor
     */
    public MaintainDsrWorkLocationsStaging(){}

    /**
     * Initializes this bean
     */
    @PostConstruct
    public void init(){
        dsrWorkLocationsStaging = new DsrWorkLocationsStaging();
        if (flash.get("selectedKey")!=null){
            dsrWorkLocationsStaging = dsrWorkLocationsStagingFacade.find(flash.get("selectedKey"));
        }
        if (flash.get("wldId")!=null){
            dsrWorkLocationsStaging.setWldId(prsWorkLocationDetailsFacade.find(flash.get("wldId")));
        }
        if(dsrWorkLocationsStaging.getWldId()==null){
            dsrWorkLocationsStaging.setWldId(new PrsWorkLocationDetails());
        }
        if (flash.get("wlId")!=null){
            dsrWorkLocationsStaging.setWlId(prsWorkLocationsFacade.find(flash.get("wlId")));
        }
        if(dsrWorkLocationsStaging.getWlId()==null){
            dsrWorkLocationsStaging.setWlId(new PrsWorkLocations());
        }
        if (flash.get("healthAuthorityId")!=null){
            dsrWorkLocationsStaging.setHealthAuthorityId(prsProvidersFacade.find(flash.get("healthAuthorityId")));
        }
        if(dsrWorkLocationsStaging.getHealthAuthorityId()==null){
            dsrWorkLocationsStaging.setHealthAuthorityId(new PrsProviders());
        }
        if (flash.get("provinceId")!=null){
            dsrWorkLocationsStaging.setProvinceId(prsCtProvStateFacade.find(flash.get("provinceId")));
        }
        if(dsrWorkLocationsStaging.getProvinceId()==null){
            dsrWorkLocationsStaging.setProvinceId(new PrsCtProvState());
        }
        if (flash.get("countryId")!=null){
            dsrWorkLocationsStaging.setCountryId(prsCtCountriesFacade.find(flash.get("countryId")));
        }
        if(dsrWorkLocationsStaging.getCountryId()==null){
            dsrWorkLocationsStaging.setCountryId(new PrsCtCountries());
        }
        if (flash.get("operatorTypeId")!=null){
            dsrWorkLocationsStaging.setOperatorTypeId(dsrCtOwnerOperatorTypesFacade.find(flash.get("operatorTypeId")));
        }
        if(dsrWorkLocationsStaging.getOperatorTypeId()==null){
            dsrWorkLocationsStaging.setOperatorTypeId(new DsrCtOwnerOperatorTypes());
        }
        if (flash.get("ownerTypeId")!=null){
            dsrWorkLocationsStaging.setOwnerTypeId(dsrCtOwnerOperatorTypesFacade.find(flash.get("ownerTypeId")));
        }
        if(dsrWorkLocationsStaging.getOwnerTypeId()==null){
            dsrWorkLocationsStaging.setOwnerTypeId(new DsrCtOwnerOperatorTypes());
        }
        if (flash.get("workLocationTypeId")!=null){
            dsrWorkLocationsStaging.setWorkLocationTypeId(PrsCtWorkLocationPurpsFacade.find(flash.get("workLocationTypeId")));
        }
        if(dsrWorkLocationsStaging.getWorkLocationTypeId()==null){
            dsrWorkLocationsStaging.setWorkLocationTypeId(new PrsCtWorkLocationPurps());
        }
        if (flash.get("statusId")!=null){
            dsrWorkLocationsStaging.setStatusId(dsrCtStatusFacade.find(flash.get("statusId")));
        }
        if(dsrWorkLocationsStaging.getStatusId()==null){
            dsrWorkLocationsStaging.setStatusId(new DsrCtStatus());
        }
    }

    /**
     * Selects a record to update
     */
    public String select(){
         flash.keep("selectedKey");
        return "MaintainDsrWorkLocationsStaging.xhtml";
    }
    /**
     * Adds a new record
     */
    public String add(){
        nullify();
        dsrWorkLocationsStagingFacade.create(dsrWorkLocationsStaging);
        addPlaceholders();
        FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Add Successful", "Add Successful"));
        return null;
    }

    /**
     * Updates an existing record
     */
    public String update(){
        nullify();
        dsrWorkLocationsStagingFacade.edit(dsrWorkLocationsStaging);
        addPlaceholders();
        FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Update Successful", "Update Successful"));
        return null;
    }

    /**
     * Deletes a record
     */
    public String delete(){
        nullify();
        dsrWorkLocationsStagingFacade.remove(dsrWorkLocationsStaging);
        return clear();
    }

    /**
     * Clears the form
     */
    public String clear(){
        dsrWorkLocationsStaging = new DsrWorkLocationsStaging();
        addPlaceholders();
        return "MaintainDsrWorkLocationsStaging.xhtml";
    }
    /**
     * Nullifys any child objects which don't have valid PKs set
     */
    private void nullify(){
        if (dsrWorkLocationsStaging.getWldId()!=null && dsrWorkLocationsStaging.getWldId().getWldId()==null){
            dsrWorkLocationsStaging.setWldId(null);
        }
        if (dsrWorkLocationsStaging.getWlId()!=null && dsrWorkLocationsStaging.getWlId().getWlId()==null){
            dsrWorkLocationsStaging.setWlId(null);
        }
        if (dsrWorkLocationsStaging.getHealthAuthorityId()!=null && dsrWorkLocationsStaging.getHealthAuthorityId().getPauthId()==null){
            dsrWorkLocationsStaging.setHealthAuthorityId(null);
        }
        if (dsrWorkLocationsStaging.getProvinceId()!=null && dsrWorkLocationsStaging.getProvinceId().getCtlId()==null){
            dsrWorkLocationsStaging.setProvinceId(null);
        }
        if (dsrWorkLocationsStaging.getCountryId()!=null && dsrWorkLocationsStaging.getCountryId().getCtlId()==null){
            dsrWorkLocationsStaging.setCountryId(null);
        }
        if (dsrWorkLocationsStaging.getOperatorTypeId()!=null && dsrWorkLocationsStaging.getOperatorTypeId().getCtlId()==null){
            dsrWorkLocationsStaging.setOperatorTypeId(null);
        }
        if (dsrWorkLocationsStaging.getOwnerTypeId()!=null && dsrWorkLocationsStaging.getOwnerTypeId().getCtlId()==null){
            dsrWorkLocationsStaging.setOwnerTypeId(null);
        }
        if (dsrWorkLocationsStaging.getWorkLocationTypeId()!=null && dsrWorkLocationsStaging.getWorkLocationTypeId().getCtlId()==null){
            dsrWorkLocationsStaging.setWorkLocationTypeId(null);
        }
        if (dsrWorkLocationsStaging.getStatusId()!=null && dsrWorkLocationsStaging.getStatusId().getCtlId()==null){
            dsrWorkLocationsStaging.setStatusId(null);
        }
    }
    /**
     * Defaults parent objects which don't have valid PKs set
     */
    private void addPlaceholders(){
        if (dsrWorkLocationsStaging.getWldId()==null){
            dsrWorkLocationsStaging.setWldId(new PrsWorkLocationDetails());
        }
        if (dsrWorkLocationsStaging.getWlId()==null){
            dsrWorkLocationsStaging.setWlId(new PrsWorkLocations());
        }
        if (dsrWorkLocationsStaging.getHealthAuthorityId()==null){
            dsrWorkLocationsStaging.setHealthAuthorityId(new PrsProviders());
        }
        if (dsrWorkLocationsStaging.getProvinceId()==null){
            dsrWorkLocationsStaging.setProvinceId(new PrsCtProvState());
        }
        if (dsrWorkLocationsStaging.getCountryId()==null){
            dsrWorkLocationsStaging.setCountryId(new PrsCtCountries());
        }
        if (dsrWorkLocationsStaging.getOperatorTypeId()==null){
            dsrWorkLocationsStaging.setOperatorTypeId(new DsrCtOwnerOperatorTypes());
        }
        if (dsrWorkLocationsStaging.getOwnerTypeId()==null){
            dsrWorkLocationsStaging.setOwnerTypeId(new DsrCtOwnerOperatorTypes());
        }
        if (dsrWorkLocationsStaging.getWorkLocationTypeId()==null){
            dsrWorkLocationsStaging.setWorkLocationTypeId(new PrsCtWorkLocationPurps());
        }
        if (dsrWorkLocationsStaging.getStatusId()==null){
            dsrWorkLocationsStaging.setStatusId(new DsrCtStatus());
        }
    }
    /* Getters and Setters */
    public DsrWorkLocationsStaging getDsrWorkLocationsStaging(){
        return dsrWorkLocationsStaging;
    }
    public void setDsrWorkLocationsStaging(DsrWorkLocationsStaging dsrWorkLocationsStaging){
        this.dsrWorkLocationsStaging = dsrWorkLocationsStaging;
    }
    public Flash getFlash(){
        return flash;
    }
    public void setFlash(Flash flash){
        this.flash = flash;
    }
}