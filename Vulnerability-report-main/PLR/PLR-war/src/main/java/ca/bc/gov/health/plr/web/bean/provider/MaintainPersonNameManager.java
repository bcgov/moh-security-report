package ca.bc.gov.health.plr.web.bean.provider;

import ca.bc.gov.health.plr.dto.provider.PersonNameDto;
import ca.bc.gov.health.plr.dto.provider.ProviderDto;
import ca.bc.gov.health.plr.service.provider.DuplicateRecordException;
import ca.bc.gov.health.plr.service.provider.MaintainPersonNameService;
import ca.bc.gov.health.plr.service.provider.MaintainProviderService;
import ca.bc.gov.health.plr.service.validators.EntityValidationException;
import ca.bc.gov.health.plr.web.bean.PlrManagedBean;
import ca.bc.gov.health.plr.web.util.JSFUtils;
import java.io.Serializable;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;
import javax.faces.context.FacesContext;

/**
 * MaintainPersonName.xhtml backing bean.
 *
 * @author ian.scott
 */
@ManagedBean
@ViewScoped
public class MaintainPersonNameManager implements Serializable {

    @EJB
    private MaintainPersonNameService maintainPersonNameService;
    @EJB
    protected MaintainProviderService maintainProviderService;
    private PersonNameDto dto = new PersonNameDto();
    private ProviderDto providerDetails;

    /**
     * Initialize the backing transfer objects.
     */
    @PostConstruct
    public void init() {
        resetDto();
    }
    
    /**
     * Resets the DTO so that the backing-bean can be re-used in the same view.
     */
    public void resetDto() {
        dto = new PersonNameDto();
    }

    /**
     * Adds or Updates a Person Name.
     */
    public void save() {
        if (this.dto.isNew()) {
            dto.setPauthId(providerDetails.getPauthId());            
        }
        try {
            maintainProviderService.save(getDto());
            
            List<PersonNameDto> names = maintainPersonNameService.getNames(providerDetails.getPauthId());
            providerDetails.setIndNames(names);
            
            String message = JSFUtils.prepareSuccessMessage("name" , dto);
            FacesContext.getCurrentInstance().addMessage(PlrManagedBean.PROVIDER_DETAILS_GROWL, new FacesMessage(FacesMessage.SEVERITY_INFO, message, ""));
        } catch (DuplicateRecordException | EntityValidationException dre) {
            FacesContext.getCurrentInstance().validationFailed();
            FacesContext.getCurrentInstance().addMessage(PlrManagedBean.PROVIDER_DETAILS_GROWL, new FacesMessage(FacesMessage.SEVERITY_ERROR, dre.getMessage(), ""));
        }
    }

    public PersonNameDto getDto() {
        return dto;
    }

    public void setDto(PersonNameDto dto) {
        this.dto = dto;
    }
    
    public ProviderDto getProviderDetails() {
        return providerDetails;
    }

    public void setProviderDetails(ProviderDto providerDetails) {
        this.providerDetails = providerDetails;
    }

}
