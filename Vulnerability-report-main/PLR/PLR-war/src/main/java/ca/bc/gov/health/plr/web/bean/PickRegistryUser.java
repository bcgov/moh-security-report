/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.web.bean;

import ca.bc.gov.health.plr.constants.Consts;
import ca.bc.gov.health.plr.ejb.entity.GrsParties;
import ca.bc.gov.health.plr.ejb.entity.GrsRegistryUsers;
import ca.bc.gov.health.plr.ejb.session.GrsPartiesFacade;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.annotation.PostConstruct;
import javax.enterprise.context.SessionScoped;
import javax.faces.context.FacesContext;
import javax.faces.model.SelectItem;
import javax.inject.Inject;
import javax.inject.Named;
import javax.servlet.http.HttpSession;

/**
 * Temporary bean to set the registry user ... skipping all the comments and Java Docs because this class should
 * eventually be removed.
 *
 * @author jonathan.wiebe
 */
@Named
@SessionScoped
public class PickRegistryUser implements Serializable {

    private GrsRegistryUsers regUser;

    private long partyId;
    private final List<SelectItem> partySelectItems = new ArrayList<>();
    
    @Inject
    private GrsPartiesFacade grsPartiesFacade;
   

    @PostConstruct
    public void init() {
        List<GrsParties> parties = grsPartiesFacade.findAll();
        for (GrsParties party : parties) {
            partySelectItems.add(new SelectItem(party.getPartyId(), party.getRegistryUserOrgChid() + " - " + party.getGrsRegistryUsersList().get(0).getRuTypeCode()));
        }
        partyId = (long) partySelectItems.get(0).getValue();
        partyChanged();
    }

    public Long getUserOrg() {
        return partyId;
    }

    public void setUserOrg(Long partyId) {
        this.partyId = partyId;
    }

    public List<SelectItem> getPartySelectItems() {
        return partySelectItems;
    }

    public void partyChanged() {
        regUser = grsPartiesFacade.find(partyId).getGrsRegistryUsersList().get(0);
        ((HttpSession) FacesContext.getCurrentInstance().getExternalContext().getSession(false)).setAttribute(Consts.USER_ID, regUser);
        Logger.getLogger(PickRegistryUser.class.getName()).log(Level.INFO, regUser.toString());
    }
    
    public GrsRegistryUsers getRegistryUser() {
        return regUser;
    }
}
