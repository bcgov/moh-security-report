package ca.bc.gov.health.dsr.web;

import ca.bc.gov.health.plr.ejb.entity.*;
import ca.bc.gov.health.dsr.ejb.session.*;
import ca.bc.gov.health.jsf.BaseBean;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.bean.ViewScoped;
import javax.faces.bean.ManagedBean;
import javax.faces.component.UIInput;
import javax.faces.component.UIViewRoot;

@ManagedBean(name = "MaintainDsrHealthDeliveryServicesArea")
@ViewScoped
/**
 * Backing bean for DsrProgramAreas code table maintenance
 *
 * @author JSF Code Generator
 */
public class MaintainDsrHeathDeliveryServicesArea extends BaseBean implements java.io.Serializable {

    /* Facade for persistence */
    @EJB
    private PrsProviderFacadeLocal prsProviderFacade;
    @EJB
    private DsrHealthDeliveryServicesAreaFacadeLocal dsrServiceDeliveryAreaFacade;

    /* List of all values in the code table */
    private List<DsrHlthServsDeliveryAreas> dsrHealthDeliveryServicesAreas;

    /* The instance we're currently editing */
    private DsrHlthServsDeliveryAreas dsrHealthDeliveryServicesArea;

    /* PK of the selected instance */
    private Object selectedKey;
    
    private boolean active = true;

    /**
     * Default Constructor
     */
    public MaintainDsrHeathDeliveryServicesArea() {
    }

    /**
     * Initializes this bean after injection
     */
    @PostConstruct
    public void init() {
        dsrHealthDeliveryServicesAreas = dsrServiceDeliveryAreaFacade.findAll();
        clear();
    }

    /**
     * Adds a new record
     */
    public String add() {
        nullify();

        DsrHlthServsDeliveryAreas existing = null;

        for (DsrHlthServsDeliveryAreas temp : dsrHealthDeliveryServicesAreas) {

            if (temp.getServiceDeliveryAreaCd().equalsIgnoreCase(dsrHealthDeliveryServicesArea.getServiceDeliveryAreaCd())) {
                existing = temp;
                break;
            }
        }

        if (existing != null) {
            String msgStr = "'" + getResourceValue("DsrHlthServsDeliveryAreas.serviceDeliveryAreaCd.desc") + "'" + dsrHealthDeliveryServicesArea.getServiceDeliveryAreaCd() + "' exists already";
            FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_ERROR, msgStr, msgStr);
            FacesContext.getCurrentInstance().addMessage(null, msg);

            return null;
        }

        preUpdate();

        dsrServiceDeliveryAreaFacade.create(dsrHealthDeliveryServicesArea);
        FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Add Successful", "Add Successful"));
        init();
        ((Droplists) findBean("DsrDroplists")).init();
        return null;
    }

    /**
     * Updates an existing record
     */
    public String update() {
        nullify();

        PrsProviders prsProvider = prsProviderFacade.find(dsrHealthDeliveryServicesArea.getPauthId().getPauthId());

        preUpdate();

        if (!prsProvider.getGrsOrgNamesList().get(0).getOrgnztnLongNameTxt().equals(dsrHealthDeliveryServicesArea.getPauthId().getGrsOrgNamesList().get(0).getOrgnztnLongNameTxt())) {
            prsProvider.getDsrHlthServsDeliveryAreasList().add(dsrHealthDeliveryServicesArea);
            dsrHealthDeliveryServicesArea.setPauthId(prsProvider);
            prsProviderFacade.edit(prsProvider);
        } else {
            dsrServiceDeliveryAreaFacade.edit(dsrHealthDeliveryServicesArea);
        }

        FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Update Successful", "Update Successful"));
        init();
        ((Droplists) findBean("DsrDroplists")).init();
        return null;
    }

    /**
     * Deletes a record
     */
    public String delete() {
        nullify();
        dsrServiceDeliveryAreaFacade.remove(dsrHealthDeliveryServicesArea);
        init();
        ((Droplists) findBean("DsrDroplists")).init();
        return null;
    }

    /**
     * Clears the form
     */
    public String clear() {
        selectedKey = null;
        active = true;
        dsrHealthDeliveryServicesArea = new DsrHlthServsDeliveryAreas();
        dsrHealthDeliveryServicesArea.setPauthId(new PrsProviders());

        UIViewRoot viewRoot = FacesContext.getCurrentInstance().getViewRoot();

        String[] compIds = {"form1:provider", "form1:active", "form1:hsdaCd", "form1:hsdaDesc"};

        UIInput comp;
        for (String id : compIds) {
            comp = (UIInput) viewRoot.findComponent(id);
            if (comp != null) {
                comp.resetValue();
            }
        }

        return null;
    }

    /**
     * Selects a record for editing
     */
    public String select() {
        for (int i = 0; i < dsrHealthDeliveryServicesAreas.size(); i++) {
            if (dsrHealthDeliveryServicesAreas.get(i).getServiceDeliveryAreaCd().equals(selectedKey)) {
                dsrHealthDeliveryServicesArea = dsrHealthDeliveryServicesAreas.get(i);
                preDisplay();
                break;
            }
        }
        return null;
    }

    /**
     * Nullifys any parent records where proper PKs aren't set
     */
    private void nullify() {
    }
    /* Getters and Setters */

    public List<DsrHlthServsDeliveryAreas> getAllDsrHealthDeliveryServicesAreas() {
        return dsrHealthDeliveryServicesAreas;
    }

    public void setAllDsrHealthDeliveryServicesAreas(List<DsrHlthServsDeliveryAreas> allDsrProgramAreass) {
        this.dsrHealthDeliveryServicesAreas = allDsrProgramAreass;
    }

    public DsrHlthServsDeliveryAreas getDsrHealthDeliveryServicesArea() {
        return dsrHealthDeliveryServicesArea;
    }

    public void setDsrHealthDeliveryServicesArea(DsrHlthServsDeliveryAreas dsrHealthDeliveryServicesArea) {
        this.dsrHealthDeliveryServicesArea = dsrHealthDeliveryServicesArea;
    }

    public Object getSelectedKey() {
        return selectedKey;
    }

    public void setSelectedKey(Object selectedKey) {
        this.selectedKey = selectedKey;
    }

//    private boolean isValid() {
//        
//        boolean isValid = true;
//        
//        if (dsrHealthDeliveryServicesArea.getPrsProvider().getPauthId() == null) {
//            String msgStr = getResourceValue("PrsProvider.desc") + " is required";
//            
//            FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_ERROR, msgStr, msgStr);
//            FacesContext.getCurrentInstance().addMessage(null, msg);
//            isValid = false;
//        }
//        
//        if (dsrHealthDeliveryServicesArea.getServiceDeliveryAreaCd() == null) {
//            String msgStr = getResourceValue("DsrHealthDeliveryServicesArea.serviceDeliveryAreaCd.desc") + " is required";
//            
//            FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_ERROR, msgStr, msgStr);
//            FacesContext.getCurrentInstance().addMessage(null, msg);
//            isValid = false;
//        }
//        
//        if (dsrHealthDeliveryServicesArea.getServiceDeliveryAreaDsc() == null) {
//            String msgStr = getResourceValue("DsrHealthDeliveryServicesArea.serviceDeliveryAreaDsc.desc") + " is required";
//            FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_ERROR, msgStr, msgStr);
//            FacesContext.getCurrentInstance().addMessage(null, msg);
//            isValid = false;
//        }
//        
//        return isValid;
//    }
    public boolean isActive() {
        return active;
    }

    public void setActive(boolean active) {
        this.active = active;
    }

    private void preUpdate() {

        if (active) {
            dsrHealthDeliveryServicesArea.setActiveYn("Y");
        } else {
            dsrHealthDeliveryServicesArea.setActiveYn("N");
        }
    }

    private void preDisplay() {

        if (dsrHealthDeliveryServicesArea.getActiveYn().equals("Y")) {
            active = true;
        } else {
            active = false;
        }
    }
}