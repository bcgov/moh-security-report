package ca.bc.gov.health.plr.web.bean;

import ca.bc.gov.health.plr.dto.converter.RegistryUserDtoConverter;
import ca.bc.gov.health.plr.dto.converter.RegistryUserDto;
import ca.bc.gov.health.plr.service.registry.user.RegistryUserSearchParam;
import ca.bc.gov.health.plr.service.registry.user.RegistryUserService;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;

/**
 *
 * @author Adebiyi Kuseju
 */
@ManagedBean
@ViewScoped
public class SearchRegUserManager implements Serializable {
    
    private static final String CLASSNAME = SearchRegUserManager.class.getSimpleName();
    private static final Logger LOG = Logger.getLogger(CLASSNAME);

    @EJB
    private RegistryUserService searchRegistryUserService;
    @EJB
    private RegistryUserDtoConverter registryUserDtoConverter;
    private List<RegistryUserDto> searchResult = new ArrayList<>();
    private RegistryUserSearchParam searchParam = new RegistryUserSearchParam();
    private RegistryUserDtoComparator comparator = new RegistryUserDtoComparator();
    
    /**
     * Initialize the backing transfer objects.
     */
    @PostConstruct
    public void init() {
        LOG.log(Level.INFO, "SearchRegUserManager init verifying resources");
        searchResult.clear();
    }

    public RegistryUserSearchParam getSearchParam() {
        return searchParam;
    }

    public void setSearchParam(RegistryUserSearchParam searchParam) {
        this.searchParam = searchParam;
    }

    public void search() {

        searchResult.clear();
        searchResult.addAll(registryUserDtoConverter.toDTO(searchRegistryUserService.search(searchParam)));

        //REQ-00904 - Sort registry user search results
        Collections.sort(searchResult, comparator);

    }

    /**
     * Find the search result for a query.
     *
     * @return the search result for a query
     */
    public List<RegistryUserDto> getSearchResult() {
        return searchResult;
    }

    private class RegistryUserDtoComparator implements Comparator<RegistryUserDto> {

        @Override
        public int compare(RegistryUserDto first, RegistryUserDto second) {
            return first.getNames().compareTo(second.getNames());
        }
    }
}
