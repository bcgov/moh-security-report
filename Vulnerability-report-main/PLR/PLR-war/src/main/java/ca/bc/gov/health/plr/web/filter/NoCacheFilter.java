/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.plr.web.filter;

import static ca.bc.gov.health.plr.constants.Consts.HEADER_NAME_CACHE_CONTROL;
import static ca.bc.gov.health.plr.constants.Consts.HEADER_NAME_PRAGMA;
import static ca.bc.gov.health.plr.constants.Consts.HEADER_NO_CACHE_DIRECTIVE;
import static ca.bc.gov.health.plr.constants.Consts.HEADER_NO_CACHE_STORE_REVALIDATE;
import java.io.IOException;
import java.util.logging.Logger;
import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebFilter;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Filter to detect when session is valid and to add response headers
 * to disable browser cache.
 *
 * @author dan.stepanov
 */
@WebFilter(filterName = "NoCacheFilter", urlPatterns = {"/*"})
public class NoCacheFilter implements Filter {

    private static final String CLASSNAME = NoCacheFilter.class.getName();
    private static final Logger LOG = Logger.getLogger(CLASSNAME);

    @Override
    public void init(FilterConfig config) throws ServletException {
    }

    @Override
    public void doFilter(ServletRequest request, ServletResponse response,
            FilterChain chain) throws IOException, ServletException {

        HttpServletRequest req = (HttpServletRequest) request;
        HttpServletResponse res = (HttpServletResponse) response;

        // check if the session has an id and is valid
        if (req.getRequestedSessionId() != null || req.isRequestedSessionIdValid()) {
            
            res.setHeader(HEADER_NAME_CACHE_CONTROL, HEADER_NO_CACHE_STORE_REVALIDATE); // HTTP 1.1
            res.setHeader(HEADER_NAME_PRAGMA, HEADER_NO_CACHE_DIRECTIVE); // HTTP 1.0
        }

        chain.doFilter(request, response);
    }

    @Override
    public void destroy() {
    }

}
