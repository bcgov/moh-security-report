package ca.bc.gov.health.dsr.web;
import ca.bc.gov.health.plr.ejb.entity.*;
import ca.bc.gov.health.dsr.ejb.session.*;
import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.bean.ViewScoped;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.context.Flash;

/**
 * Backing bean for editing GrsTelephoness
 * @author JSF Code Generator
 */
@ManagedBean(name="MaintainGrsTelephones")
@ViewScoped
public class MaintainGrsTelephones implements java.io.Serializable{
    /* EJB to handle persistence */
    @EJB
    private GrsTelephoneFacadeLocal grsTelephonesFacade;


    /* EJB for dealing with PrsWorkLocations instances */
    @EJB
    private PrsWorkLocationFacadeLocal prsWorkLocationsFacade;

    /* EJB for dealing with PrsProviders instances */
    @EJB
    private PrsProviderFacadeLocal prsProvidersFacade;

    /* EJB for dealing with GrsRegistryUsers instances */
    @EJB
    private GrsRegistryUserFacadeLocal grsRegistryUsersFacade;
    /* Instace we're currently editing */
    private GrsTelephones grsTelephones;

    /* Flash scope to handle passing parameters from other views */
    @ManagedProperty("#{flash}")
    private Flash flash;

    /**
     * Default Constructor
     */
    public MaintainGrsTelephones(){}

    /**
     * Initializes this bean
     */
    @PostConstruct
    public void init(){
        grsTelephones = new GrsTelephones();
        if (flash.get("selectedKey")!=null){
            grsTelephones = grsTelephonesFacade.find(flash.get("selectedKey"));
        }
        if (flash.get("wlWlId")!=null){
            grsTelephones.setWlWlId(prsWorkLocationsFacade.find(flash.get("wlWlId")));
        }
        if(grsTelephones.getWlWlId()==null){
            grsTelephones.setWlWlId(new PrsWorkLocations());
        }
        if (flash.get("pauthPauthId")!=null){
            grsTelephones.setPauthPauthId(prsProvidersFacade.find(flash.get("pauthPauthId")));
        }
        if(grsTelephones.getPauthPauthId()==null){
            grsTelephones.setPauthPauthId(new PrsProviders());
        }
        if (flash.get("ruRuId")!=null){
            grsTelephones.setRuRuId(grsRegistryUsersFacade.find(flash.get("ruRuId")));
        }
        if(grsTelephones.getRuRuId()==null){
            grsTelephones.setRuRuId(new GrsRegistryUsers());
        }
    }

    /**
     * Selects a record to update
     */
    public String select(){
         flash.keep("selectedKey");
        return "MaintainGrsTelephones.xhtml";
    }
    /**
     * Adds a new record
     */
    public String add(){
        nullify();
        grsTelephonesFacade.create(grsTelephones);
        addPlaceholders();
        FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Add Successful", "Add Successful"));
        return null;
    }

    /**
     * Updates an existing record
     */
    public String update(){
        nullify();
        grsTelephonesFacade.edit(grsTelephones);
        addPlaceholders();
        FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Update Successful", "Update Successful"));
        return null;
    }

    /**
     * Deletes a record
     */
    public String delete(){
        nullify();
        grsTelephonesFacade.remove(grsTelephones);
        return clear();
    }

    /**
     * Clears the form
     */
    public String clear(){
        grsTelephones = new GrsTelephones();
        addPlaceholders();
        return "MaintainGrsTelephones.xhtml";
    }
    /**
     * Nullifys any child objects which don't have valid PKs set
     */
    private void nullify(){
        if (grsTelephones.getWlWlId()!=null && grsTelephones.getWlWlId().getWlId()==null){
            grsTelephones.setWlWlId(null);
        }
        if (grsTelephones.getPauthPauthId()!=null && grsTelephones.getPauthPauthId().getPauthId()==null){
            grsTelephones.setPauthPauthId(null);
        }
        if (grsTelephones.getRuRuId()!=null && grsTelephones.getRuRuId().getRuId()==null){
            grsTelephones.setRuRuId(null);
        }
    }
    /**
     * Defaults parent objects which don't have valid PKs set
     */
    private void addPlaceholders(){
        if (grsTelephones.getWlWlId()==null){
            grsTelephones.setWlWlId(new PrsWorkLocations());
        }
        if (grsTelephones.getPauthPauthId()==null){
            grsTelephones.setPauthPauthId(new PrsProviders());
        }
        if (grsTelephones.getRuRuId()==null){
            grsTelephones.setRuRuId(new GrsRegistryUsers());
        }
    }
    /* Getters and Setters */
    public GrsTelephones getGrsTelephones(){
        return grsTelephones;
    }
    public void setGrsTelephones(GrsTelephones grsTelephones){
        this.grsTelephones = grsTelephones;
    }
    public Flash getFlash(){
        return flash;
    }
    public void setFlash(Flash flash){
        this.flash = flash;
    }
}