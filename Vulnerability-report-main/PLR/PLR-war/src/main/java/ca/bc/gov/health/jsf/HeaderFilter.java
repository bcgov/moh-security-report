/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.jsf;

import static ca.bc.gov.health.plr.constants.Consts.HEADER_HSTS_FILTER_FLAG_TRUE;
import static ca.bc.gov.health.plr.constants.Consts.HEADER_HSTS_MAX_AGE_DIRECTIVE;
import static ca.bc.gov.health.plr.constants.Consts.HEADER_NAME_ETAG;
import static ca.bc.gov.health.plr.constants.Consts.HEADER_NAME_EXPIRES;
import static ca.bc.gov.health.plr.constants.Consts.HEADER_NAME_HSTS;
import static ca.bc.gov.health.plr.constants.Consts.HEADER_NAME_LAST_MODIFIED;
import ca.bc.gov.health.plr.persistence.ConfigurationDao;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.inject.Inject;
import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletResponse;

/**
 * Filter to add HTTP response headers for caching static resources
 *
 * @author greg.perkins
 */
public class HeaderFilter implements Filter {
    
    private static final String CLASSNAME = HeaderFilter.class.getName();
    private static final Logger LOG = Logger.getLogger(CLASSNAME);
    
    @Inject
    private ConfigurationDao configurationDao;

    /**
     * Date Format for HTTP Dates: example: Thu, 01 Dec 1994 16:00:00 GMT
     */
    private static SimpleDateFormat httpDateFormat = new SimpleDateFormat("E, dd MMM yyyy HH:mm:ss z");

    @Override
    public void init(FilterConfig filterConfig) throws ServletException {
        //nothing to setup
    }

    /**
     * Adds/Overrides HTTP response headers to allow for caching of static
     * resources
     *
     * @param request ServletRequest
     * @param response ServletRequest
     * @param chain FilterChain
     * @throws IOException
     * @throws ServletException
     */
    @Override
    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
        chain.doFilter(request, response);
        HttpServletResponse resp = (HttpServletResponse) response;
        Date expires = new Date();
        expires.setMonth(expires.getMonth() + 1);
        resp.setHeader(HEADER_NAME_EXPIRES, httpDateFormat.format(expires));
        resp.setHeader(HEADER_NAME_ETAG, "");
        resp.setHeader(HEADER_NAME_LAST_MODIFIED, "");
        
        // security fix to enable HTTP Strict Transport Security (HSTS) 
        // by adding a response header with the name 'Strict-Transport-Security' 
        // and the value 'max-age=expireTime' where expireTime is session-timeout value from web.xml

        // Note that the HSTS header must not be included in HTTP responses
        // conveyed over non-secure transport
        if (request.isSecure() && resp instanceof HttpServletResponse) {
            LOG.log(Level.INFO, "HeaderFilter doFilter request isSecure and resp "
                    + "an instance of HttpServletResponse and getHSTSFilterSwitch is: {0}.", 
                    new Object[]{configurationDao.getHSTSFilterSwitch()});
            // verify if getHSTSFilterSwitch is enabled (returns true)
            if (configurationDao.getHSTSFilterSwitch().equalsIgnoreCase(HEADER_HSTS_FILTER_FLAG_TRUE)) {
                resp.setHeader(HEADER_NAME_HSTS, HEADER_HSTS_MAX_AGE_DIRECTIVE);
                LOG.log(Level.INFO, "HeaderFilter doFilter after set response header HSTS Filter");
            }
        }
    }

    @Override
    public void destroy() {
        //nothing to destroy
    }

}
