package ca.bc.gov.health.dsr.web;
import ca.bc.gov.health.plr.ejb.entity.*;
import ca.bc.gov.health.dsr.ejb.session.*;
import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.bean.ViewScoped;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.context.Flash;

/**
 * Backing bean for editing DsrSiteProgramCategoriess
 * @author JSF Code Generator
 */
@ManagedBean(name="MaintainDsrSiteProgramCategories")
@ViewScoped
public class MaintainDsrSiteProgramCategories implements java.io.Serializable{
    /* EJB to handle persistence */
    @EJB
    private DsrSiteProgramCategoryFacadeLocal dsrSiteProgramCategoriesFacade;


    /* EJB for dealing with PrsWorkLocationDetails instances */
    @EJB
    private PrsWorkLocationDetailFacadeLocal prsWorkLocationDetailsFacade;

    /* EJB for dealing with DsrProgramCategories instances */
    @EJB
    private DsrProgramCategoryFacadeLocal dsrProgramCategoriesFacade;
    /* Instace we're currently editing */
    private DsrSiteProgramCategories dsrSiteProgramCategories;

    /* Flash scope to handle passing parameters from other views */
    @ManagedProperty("#{flash}")
    private Flash flash;

    /**
     * Default Constructor
     */
    public MaintainDsrSiteProgramCategories(){}

    /**
     * Initializes this bean
     */
    @PostConstruct
    public void init(){
        dsrSiteProgramCategories = new DsrSiteProgramCategories();
        if (flash.get("selectedKey")!=null){
            dsrSiteProgramCategories = dsrSiteProgramCategoriesFacade.find(flash.get("selectedKey"));
        }
        if (flash.get("wldId")!=null){
            dsrSiteProgramCategories.setWldId(prsWorkLocationDetailsFacade.find(flash.get("wldId")));
        }
        if(dsrSiteProgramCategories.getWldId()==null){
            dsrSiteProgramCategories.setWldId(new PrsWorkLocationDetails());
        }
        if (flash.get("programCategoryCd")!=null){
            dsrSiteProgramCategories.setProgramCategoryCd(dsrProgramCategoriesFacade.find(flash.get("programCategoryCd")));
        }
        if(dsrSiteProgramCategories.getProgramCategoryCd()==null){
            dsrSiteProgramCategories.setProgramCategoryCd(new DsrProgramCategories());
        }
    }

    /**
     * Selects a record to update
     */
    public String select(){
         flash.keep("selectedKey");
        return "MaintainDsrSiteProgramCategories.xhtml";
    }
    /**
     * Adds a new record
     */
    public String add(){
        nullify();
        dsrSiteProgramCategoriesFacade.create(dsrSiteProgramCategories);
        addPlaceholders();
        FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Add Successful", "Add Successful"));
        return null;
    }

    /**
     * Updates an existing record
     */
    public String update(){
        nullify();
        dsrSiteProgramCategoriesFacade.edit(dsrSiteProgramCategories);
        addPlaceholders();
        FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Update Successful", "Update Successful"));
        return null;
    }

    /**
     * Deletes a record
     */
    public String delete(){
        nullify();
        dsrSiteProgramCategoriesFacade.remove(dsrSiteProgramCategories);
        return clear();
    }

    /**
     * Clears the form
     */
    public String clear(){
        dsrSiteProgramCategories = new DsrSiteProgramCategories();
        addPlaceholders();
        return "MaintainDsrSiteProgramCategories.xhtml";
    }
    /**
     * Nullifys any child objects which don't have valid PKs set
     */
    private void nullify(){
        if (dsrSiteProgramCategories.getWldId()!=null && dsrSiteProgramCategories.getWldId().getWldId()==null){
            dsrSiteProgramCategories.setWldId(null);
        }
        if (dsrSiteProgramCategories.getProgramCategoryCd()!=null && dsrSiteProgramCategories.getProgramCategoryCd().getProgramCategoryCd()==null){
            dsrSiteProgramCategories.setProgramCategoryCd(null);
        }
    }
    /**
     * Defaults parent objects which don't have valid PKs set
     */
    private void addPlaceholders(){
        if (dsrSiteProgramCategories.getWldId()==null){
            dsrSiteProgramCategories.setWldId(new PrsWorkLocationDetails());
        }
        if (dsrSiteProgramCategories.getProgramCategoryCd()==null){
            dsrSiteProgramCategories.setProgramCategoryCd(new DsrProgramCategories());
        }
    }
    /* Getters and Setters */
    public DsrSiteProgramCategories getDsrSiteProgramCategories(){
        return dsrSiteProgramCategories;
    }
    public void setDsrSiteProgramCategories(DsrSiteProgramCategories dsrSiteProgramCategories){
        this.dsrSiteProgramCategories = dsrSiteProgramCategories;
    }
    public Flash getFlash(){
        return flash;
    }
    public void setFlash(Flash flash){
        this.flash = flash;
    }
}