package ca.bc.gov.health.hscis.validators;

import jakarta.faces.application.FacesMessage;
import jakarta.faces.component.UIComponent;
import jakarta.faces.component.UIInput;
import jakarta.faces.context.FacesContext;
import jakarta.faces.validator.FacesValidator;
import jakarta.faces.validator.Validator;
import jakarta.faces.validator.ValidatorException;
import java.time.LocalDate;

/**
 * FacesValidator for validating Termination Date/Termination Code values
 *
 * @author CGI Information Management Consultants Inc.
 */
@FacesValidator("TerminationValidator")
public class TerminationValidator implements Validator {

  private static final String TERIMINATION_DATE_COMPONENT = "terminationDateComponent";
  private static final String TERIMINATION_DATE = "terminationDate";

  /**
   * Validate the termination date/termination code. The following rules are validated:
   * <li>If Termination Date is entered, Termination Code must be entered
   * <li>If Termination Code is entered, Termination Date must be entered
   *
   * @see jakarta.faces.validator.Validator#validate(jakarta.faces.context.FacesContext,
   *     jakarta.faces.component.UIComponent, java.lang.Object)
   * @param context
   * @param component
   * @param value
   */
  @Override
  public void validate(FacesContext context, UIComponent component, Object value) {

    String errorMsg = null;
    // Both component/value are passed as attributes as UIInput.getSubmittedValue() is always null
    UIInput terminationDateComponent =
        (UIInput) component.getAttributes().get(TERIMINATION_DATE_COMPONENT);
    LocalDate terminationDate = (LocalDate) component.getAttributes().get(TERIMINATION_DATE);

    if (terminationDate != null && value == null) {
      errorMsg = "Termination Code: Value is required if Date set.";
      throw new ValidatorException(
          new FacesMessage(FacesMessage.SEVERITY_ERROR, errorMsg, errorMsg));
    } else if (terminationDate == null && value != null) {
      errorMsg = "Termination Date: Value is required if Code set.";
      terminationDateComponent.setValid(false);
      context.addMessage(
          terminationDateComponent.getClientId(),
          new FacesMessage(FacesMessage.SEVERITY_ERROR, errorMsg, errorMsg));
    }
  }
}
