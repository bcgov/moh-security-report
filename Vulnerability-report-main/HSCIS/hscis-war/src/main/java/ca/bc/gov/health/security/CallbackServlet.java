package ca.bc.gov.health.security;

import fish.payara.security.openid.api.OpenIdContext;
import jakarta.inject.Inject;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;

/**
 * Callback servlet for Keycloak integration
 *
 * @author CGI Information Management Consultants Inc.
 */
@WebServlet("/callback")
public class CallbackServlet extends HttpServlet {

  /* Keycloak claim keys */
  private static final int MAX_NUMBER_OF_CLAIM_KEYS = 5; // Maximum number of sfds_auth_* attributes
  private static final String USES_CLAIM_KEY = "sfds_auth";

  @Inject private OpenIdContext context;
  @Inject private UserPrincipal user;

  @Override
  protected void doGet(HttpServletRequest request, HttpServletResponse response)
      throws ServletException, IOException {

    if (user == null) {
      user = new UserPrincipal();
    }

    if (request.getUserPrincipal() != null) {
      user.setName(request.getUserPrincipal().getName());
    }

    if (context.getCallerGroups() != null && !context.getCallerGroups().isEmpty()) {
      user.setRoles(context.getCallerGroups());
    }

    if (context.getAccessToken() != null) {
      StringBuilder uses = new StringBuilder();
      String key;
      for (int k = 1; k <= MAX_NUMBER_OF_CLAIM_KEYS; k++) {
        key = USES_CLAIM_KEY + "_" + k;
        uses.append(context.getAccessToken().getJwtClaims().getStringClaim(key).orElse(""));
      }
      user.setRawMailboxes(uses.toString());
    }

    response.sendRedirect(request.getContextPath() + "/home.xhtml");
  }
}
