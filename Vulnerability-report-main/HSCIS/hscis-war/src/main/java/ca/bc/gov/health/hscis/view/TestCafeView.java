package ca.bc.gov.health.hscis.view;

import ca.bc.gov.health.hscis.entity.HcdClassification;
import ca.bc.gov.health.hscis.entity.HcdDesignatedGroup;
import ca.bc.gov.health.hscis.entity.HcdFundingSources;
import ca.bc.gov.health.hscis.entity.HcdGender;
import ca.bc.gov.health.hscis.entity.HcdHealthAuthority;
import ca.bc.gov.health.hscis.entity.HcdJobStatus;
import ca.bc.gov.health.hscis.entity.HcdMembershipType;
import ca.bc.gov.health.hscis.entity.HcdMisFuncCentAccnts;
import ca.bc.gov.health.hscis.entity.HcdMisSecStatAccnts;
import ca.bc.gov.health.hscis.entity.HcdOrganizationStatus;
import ca.bc.gov.health.hscis.entity.HcdServiceType;
import ca.bc.gov.health.hscis.entity.HcdTerminationCode;
import ca.bc.gov.health.hscis.entity.HcdUnion;
import ca.bc.gov.health.hscis.entity.HcdUploads;
import ca.bc.gov.health.hscis.service.HscisTestCafeService;
import jakarta.ejb.EJB;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.view.ViewScoped;
import jakarta.inject.Named;
import java.time.LocalDate;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@ViewScoped
@Named("TestCafeView")
public class TestCafeView extends BaseView {

  private static final long serialVersionUID = 1L;

  private static Logger logger = LoggerFactory.getLogger(TestCafeView.class);

  @EJB private HscisTestCafeService tcService;

  private HcdUploads newHcdUploads;
  private HcdClassification oldHcdClassification;
  private HcdMembershipType oldHcdMembershipType;
  private HcdHealthAuthority oldHcdHealthAuthority;
  private HcdOrganizationStatus oldHcdOrganizationStatus;
  private HcdDesignatedGroup oldHcdDesignatedGroup;
  private HcdGender oldHcdGender;
  private HcdJobStatus oldHcdJobStatus;
  private HcdUnion oldHcdUnion;
  private HcdTerminationCode oldHcdTerminationCode;
  private HcdFundingSources oldHcdFundingSources;
  private HcdMisFuncCentAccnts oldHcdMisFuncCentAccnts;
  private HcdMisSecStatAccnts oldHcdMisSecStatAccnts;
  private HcdServiceType oldHcdServiceType;

  public boolean isUserTC() {
    return tcService.isTCUser();
  }

  public void createNewHcdUpload() {
    newHcdUploads = new HcdUploads();
    newHcdUploads.setPayfilId(999999731l);
    newHcdUploads.setDateCreated(LocalDate.now());
    newHcdUploads.setDateUpdated(LocalDate.now());
    newHcdUploads.setFileName("tastyTestFile");
    FacesMessage message = tcService.createnHcdUploadsRow(newHcdUploads);
    addMessage(message);
  }

  public void deleteHcdClassification() {
    oldHcdClassification = new HcdClassification();
    oldHcdClassification.setClassificationCode(99998);
    FacesMessage message = tcService.deleteHcdClassification(oldHcdClassification);
    addMessage(message);
  }

  public void deleteHcdMembershipType() {
    oldHcdMembershipType = new HcdMembershipType();
    oldHcdMembershipType.setMemberTypeCode("1T");
    FacesMessage message = tcService.deleteHcdMembershipType(oldHcdMembershipType);
    addMessage(message);
  }

  public void deleteHcdHealthAuthority() {
    oldHcdHealthAuthority = new HcdHealthAuthority();
    oldHcdHealthAuthority.setHealthAuthorityNumber(99998);
    FacesMessage message = tcService.deleteHcdHealthAuthority(oldHcdHealthAuthority);
    addMessage(message);
  }

  public void deleteHcdOrganizationStatus() {
    oldHcdOrganizationStatus = new HcdOrganizationStatus();
    oldHcdOrganizationStatus.setOrganizationStatusCode("9");
    FacesMessage message = tcService.deleteHcdOrganizationStatus(oldHcdOrganizationStatus);
    addMessage(message);
  }

  public void deleteHcdDesignatedGroup() {
    oldHcdDesignatedGroup = new HcdDesignatedGroup();
    oldHcdDesignatedGroup.setDesignatedGroupCode("9");
    FacesMessage message = tcService.deleteHcdDesignatedGroup(oldHcdDesignatedGroup);
    addMessage(message);
  }

  public void deleteHcdGender() {
    oldHcdGender = new HcdGender();
    oldHcdGender.setGenderCode("9");
    FacesMessage message = tcService.deleteHcdGender(oldHcdGender);
    addMessage(message);
  }

  public void deleteHcdJobStatus() {
    oldHcdJobStatus = new HcdJobStatus();
    oldHcdJobStatus.setJobStatusCode("9");
    FacesMessage message = tcService.deleteHcdJobStatus(oldHcdJobStatus);
    addMessage(message);
  }

  public void deleteHcdUnion() {
    oldHcdUnion = new HcdUnion();
    oldHcdUnion.setUnionCode("99");
    FacesMessage message = tcService.deleteHcdUnion(oldHcdUnion);
    addMessage(message);
  }

  public void deleteHcdTerminationCode() {
    oldHcdTerminationCode = new HcdTerminationCode();
    oldHcdTerminationCode.setTerminationCode("Z");
    FacesMessage message = tcService.deleteHcdTerminationCode(oldHcdTerminationCode);
    addMessage(message);
  }

  public void deleteHcdFundingSources() {
    oldHcdFundingSources = new HcdFundingSources();
    oldHcdFundingSources.setFundingSourceCode("99");
    FacesMessage message = tcService.deleteHcdFundingSources(oldHcdFundingSources);
    addMessage(message);
  }

  public void deleteHcdMisFuncCentAccnts() {
    oldHcdMisFuncCentAccnts = new HcdMisFuncCentAccnts();
    oldHcdMisFuncCentAccnts.setAccount("999999999999");
    FacesMessage message = tcService.deleteHcdMisFuncCentAccnts(oldHcdMisFuncCentAccnts);
    addMessage(message);
  }

  public void deleteHcdMisSecStatAccnts() {
    oldHcdMisSecStatAccnts = new HcdMisSecStatAccnts();
    oldHcdMisSecStatAccnts.setAccount("999999999999");
    FacesMessage message = tcService.deleteHcdMisSecStatAccnts(oldHcdMisSecStatAccnts);
    addMessage(message);
  }

  public void deleteHcdServiceType() {
    oldHcdServiceType = new HcdServiceType();
    oldHcdServiceType.setCode("9999");
    FacesMessage message = tcService.deleteHcdServiceType(oldHcdServiceType);
    addMessage(message);
  }
}
