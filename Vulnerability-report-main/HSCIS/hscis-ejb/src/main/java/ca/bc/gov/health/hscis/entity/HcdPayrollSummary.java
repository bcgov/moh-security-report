package ca.bc.gov.health.hscis.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinColumns;
import jakarta.persistence.NamedAttributeNode;
import jakarta.persistence.NamedEntityGraph;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

/** The persistent class for the HCD_PAYROLL_SUMMARY_VIEW database table. */
@Entity
@Table(name = "HCD_PAYROLL_SUMMARY_VIEW")
@NamedQuery(name = "HcdPayrollSummary.findAll", query = "SELECT h FROM HcdPayrollSummary h")
@NamedQuery(
    name = "HcdPayrollSummary.findByUser",
    query =
        "SELECT h FROM HcdPayrollSummary h "
            + "WHERE UPPER(h.membership.ldapId1) = UPPER(:userId) "
            + "   OR UPPER(h.membership.ldapId2) = UPPER(:userId)")
@NamedQuery(
    name = "HcdPayrollSummary.findByMember",
    query = "SELECT h FROM HcdPayrollSummary h WHERE h.membership.hscisId = :hscisId")
@NamedQuery(
    name = "HcdPayrollSummary.findByKey",
    query =
        "SELECT h FROM HcdPayrollSummary h "
            + "WHERE h.id.corporateEmployerNumber = :corporateEmployerNumber "
            + "   AND h.id.siteEmployerNumber = :siteEmployerNumber "
            + "   AND h.id.reportingFrom = :reportingFrom "
            + "   AND h.id.reportingTo = :reportingTo")
@NamedEntityGraph(
    name = "fullsummary",
    attributeNodes = {
      @NamedAttributeNode("payrollSummaryGroupComp"),
      @NamedAttributeNode("payrollSummaryEmployee")
    })
public class HcdPayrollSummary implements Serializable {
  private static final long serialVersionUID = 1L;
  private PayrollSummaryPK id;
  private LocalDate completeDate;
  private LocalDateTime lastModified;
  private HcdMembership membership;
  private List<HcdPayrollSummaryGroupComp> payrollSummaryGroupComp = new ArrayList<>();
  private List<HcdPayrollSummaryEmployee> payrollSummaryEmployee = new ArrayList<>();

  public HcdPayrollSummary() {}

  @EmbeddedId
  public PayrollSummaryPK getId() {
    return id;
  }

  public void setId(PayrollSummaryPK id) {
    this.id = id;
  }

  @Column(name = "COMPLETE_DATE")
  public LocalDate getCompleteDate() {
    return this.completeDate;
  }

  public void setCompleteDate(LocalDate completeDate) {
    this.completeDate = completeDate;
  }

  @Column(name = "LAST_MODIFIED")
  public LocalDateTime getLastModified() {
    return this.lastModified;
  }

  public void setLastModified(LocalDateTime lastModified) {
    this.lastModified = lastModified;
  }

  @OneToOne(optional = false)
  @JoinColumn(
      name = "HSCIS_ID",
      referencedColumnName = "HSCIS_ID",
      nullable = false,
      insertable = false,
      updatable = false)
  public HcdMembership getMembership() {
    return membership;
  }

  public void setMembership(HcdMembership membership) {
    this.membership = membership;
  }

  @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.LAZY)
  @JoinColumns({
    @JoinColumn(
        name = "CORPORATE_EMPLOYER_NUMBER",
        referencedColumnName = "CORPORATE_EMPLOYER_NUMBER"),
    @JoinColumn(name = "SITE_EMPLOYER_NUMBER", referencedColumnName = "SITE_EMPLOYER_NUMBER"),
    @JoinColumn(name = "REPORTING_FROM", referencedColumnName = "REPORTING_FROM"),
    @JoinColumn(name = "REPORTING_TO", referencedColumnName = "REPORTING_TO")
  })
  public List<HcdPayrollSummaryGroupComp> getPayrollSummaryGroupComp() {
    return payrollSummaryGroupComp;
  }

  public void setPayrollSummaryGroupComp(List<HcdPayrollSummaryGroupComp> payrollSummaryGroupComp) {
    this.payrollSummaryGroupComp = payrollSummaryGroupComp;
  }

  @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.LAZY)
  @JoinColumns({
    @JoinColumn(
        name = "CORPORATE_EMPLOYER_NUMBER",
        referencedColumnName = "CORPORATE_EMPLOYER_NUMBER"),
    @JoinColumn(name = "SITE_EMPLOYER_NUMBER", referencedColumnName = "SITE_EMPLOYER_NUMBER"),
    @JoinColumn(name = "REPORTING_FROM", referencedColumnName = "REPORTING_FROM"),
    @JoinColumn(name = "REPORTING_TO", referencedColumnName = "REPORTING_TO")
  })
  public List<HcdPayrollSummaryEmployee> getPayrollSummaryEmployee() {
    return payrollSummaryEmployee;
  }

  public void setPayrollSummaryEmployee(List<HcdPayrollSummaryEmployee> payrollSummaryEmployee) {
    this.payrollSummaryEmployee = payrollSummaryEmployee;
  }
}
