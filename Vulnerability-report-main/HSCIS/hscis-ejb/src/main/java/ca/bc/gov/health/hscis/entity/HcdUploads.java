package ca.bc.gov.health.hscis.entity;

import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.time.LocalDate;
import java.util.List;

/** The persistent class for the HCD_UPLOADS database table. */
@Entity
@Table(name = "HCD_UPLOADS")
@NamedQueries({
  @NamedQuery(name = "HcdUploads.findAll", query = "SELECT h FROM HcdUploads h"),
  @NamedQuery(
      name = "HcdUploads.findById",
      query = "SELECT h FROM HcdUploads h WHERE h.payfilId = :id"),
  @NamedQuery(
      name = "HcdUploads.findAllSearch",
      query =
          "SELECT h FROM HcdUploads h "
              + "WHERE CONCAT(h.payfilId, '') LIKE :searchValue "
              + "   OR UPPER(h.corporateEmployerNumber) LIKE :searchValue "
              + "   OR UPPER(h.legalName) LIKE :searchValue "
              + "   OR h.reportingFromDate = :searchValue "
              + "   OR h.reportingToDate = :searchValue "
              + "   OR FUNCTION('TRUNC', h.dateCreated) = :searchDate")
})
public class HcdUploads implements Serializable {

  @Id
  @Basic(optional = false)
  @NotNull
  @Column(name = "PAYFIL_ID")
  private Long payfilId;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 30)
  @Column(name = "FILE_NAME")
  private String fileName;

  @Basic(optional = false)
  @NotNull
  @Column(name = "DATE_CREATED")
  private LocalDate dateCreated;

  @Column(name = "DATE_UPDATED")
  private LocalDate dateUpdated;

  @Size(max = 5)
  @Column(name = "CORPORATE_EMPLOYER_NUMBER")
  private String corporateEmployerNumber;

  @Size(max = 100)
  @Column(name = "LEGAL_NAME")
  private String legalName;

  @Size(max = 8)
  @Column(name = "REPORTING_TO_DATE")
  private String reportingToDate;

  @Size(max = 8)
  @Column(name = "EXTRACT_DATE")
  private String extractDate;

  @Size(max = 1)
  @Column(name = "VALIDATE_HEADER")
  private String validateHeader;

  @Size(max = 1)
  @Column(name = "VALIDATE_DETAIL")
  private String validateDetail;

  @Size(max = 1)
  @Column(name = "VALIDATE_TRAILER")
  private String validateTrailer;

  @Size(max = 1)
  @Column(name = "COPY_TEMP_TO_BAD")
  private String copyTempToBad;

  @Size(max = 1)
  @Column(name = "COPY_TEMP_TO_LOAD")
  private String copyTempToLoad;

  @Size(max = 1)
  @Column(name = "COPY_LOAD_TO_PAYROLL")
  private String copyLoadToPayroll;

  @Size(max = 1)
  @Column(name = "CREATE_REPORT")
  private String createReport;

  @Size(max = 1)
  @Column(name = "SEND_REPORT")
  private String sendReport;

  @Size(max = 1)
  @Column(name = "CLEAR_TEMP_TABLES")
  private String clearTempTables;

  @Size(max = 1)
  @Column(name = "CLEAR_LOAD_TABLES")
  private String clearLoadTables;

  @Size(max = 1)
  @Column(name = "CLEAR_BAD_TABLES")
  private String clearBadTables;

  @Size(max = 1)
  @Column(name = "CLEAR_VALIDATION_RESULTS")
  private String clearValidationResults;

  @Size(max = 8)
  @Column(name = "REPORTING_FROM_DATE")
  private String reportingFromDate;

  @Size(max = 1)
  @Column(name = "LOADED_TEMP")
  private String loadedTemp;

  @OneToMany(cascade = CascadeType.ALL, mappedBy = "hcdUploads")
  private List<HcdValidationResults> hcdValidationResultsCollection;

  @OneToOne(optional = false, mappedBy = "hcdUploads", fetch = FetchType.LAZY)
  private HcdPayrollFiles hcdPayrollFiles;

  @OneToMany(cascade = CascadeType.ALL, mappedBy = "payfilId")
  private List<HcdPayrollDetails> hcdPayrollDetailsList;

  private static final long serialVersionUID = 1L;

  public HcdUploads() {}

  public HcdUploads(Long payfilId) {
    this.payfilId = payfilId;
  }

  public HcdUploads(Long payfilId, String fileName, LocalDate dateCreated) {
    this.payfilId = payfilId;
    this.fileName = fileName;
    this.dateCreated = dateCreated;
  }

  public Long getPayfilId() {
    return payfilId;
  }

  public void setPayfilId(Long payfilId) {
    this.payfilId = payfilId;
  }

  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public LocalDate getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(LocalDate dateCreated) {
    this.dateCreated = dateCreated;
  }

  public LocalDate getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(LocalDate dateUpdated) {
    this.dateUpdated = dateUpdated;
  }

  public String getCorporateEmployerNumber() {
    return corporateEmployerNumber;
  }

  public void setCorporateEmployerNumber(String corporateEmployerNumber) {
    this.corporateEmployerNumber = corporateEmployerNumber;
  }

  public String getLegalName() {
    return legalName;
  }

  public void setLegalName(String legalName) {
    this.legalName = legalName;
  }

  public String getReportingToDate() {
    return reportingToDate;
  }

  public void setReportingToDate(String reportingToDate) {
    this.reportingToDate = reportingToDate;
  }

  public String getExtractDate() {
    return extractDate;
  }

  public void setExtractDate(String extractDate) {
    this.extractDate = extractDate;
  }

  public String getValidateHeader() {
    return validateHeader;
  }

  public void setValidateHeader(String validateHeader) {
    this.validateHeader = validateHeader;
  }

  public String getValidateDetail() {
    return validateDetail;
  }

  public void setValidateDetail(String validateDetail) {
    this.validateDetail = validateDetail;
  }

  public String getValidateTrailer() {
    return validateTrailer;
  }

  public void setValidateTrailer(String validateTrailer) {
    this.validateTrailer = validateTrailer;
  }

  public String getCopyTempToBad() {
    return copyTempToBad;
  }

  public void setCopyTempToBad(String copyTempToBad) {
    this.copyTempToBad = copyTempToBad;
  }

  public String getCopyTempToLoad() {
    return copyTempToLoad;
  }

  public void setCopyTempToLoad(String copyTempToLoad) {
    this.copyTempToLoad = copyTempToLoad;
  }

  public String getCopyLoadToPayroll() {
    return copyLoadToPayroll;
  }

  public void setCopyLoadToPayroll(String copyLoadToPayroll) {
    this.copyLoadToPayroll = copyLoadToPayroll;
  }

  public String getCreateReport() {
    return createReport;
  }

  public void setCreateReport(String createReport) {
    this.createReport = createReport;
  }

  public String getSendReport() {
    return sendReport;
  }

  public void setSendReport(String sendReport) {
    this.sendReport = sendReport;
  }

  public String getClearTempTables() {
    return clearTempTables;
  }

  public void setClearTempTables(String clearTempTables) {
    this.clearTempTables = clearTempTables;
  }

  public String getClearLoadTables() {
    return clearLoadTables;
  }

  public void setClearLoadTables(String clearLoadTables) {
    this.clearLoadTables = clearLoadTables;
  }

  public String getClearBadTables() {
    return clearBadTables;
  }

  public void setClearBadTables(String clearBadTables) {
    this.clearBadTables = clearBadTables;
  }

  public String getClearValidationResults() {
    return clearValidationResults;
  }

  public void setClearValidationResults(String clearValidationResults) {
    this.clearValidationResults = clearValidationResults;
  }

  public String getReportingFromDate() {
    return reportingFromDate;
  }

  public void setReportingFromDate(String reportingFromDate) {
    this.reportingFromDate = reportingFromDate;
  }

  public String getLoadedTemp() {
    return loadedTemp;
  }

  public void setLoadedTemp(String loadedTemp) {
    this.loadedTemp = loadedTemp;
  }

  public HcdPayrollFiles getHcdPayrollFiles() {
    return hcdPayrollFiles;
  }

  public void setHcdPayrollFiles(HcdPayrollFiles hcdPayrollFiles) {
    this.hcdPayrollFiles = hcdPayrollFiles;
  }

  public List<HcdPayrollDetails> getHcdPayrollDetailsList() {
    return hcdPayrollDetailsList;
  }

  public void setHcdPayrollDetailsList(List<HcdPayrollDetails> hcdPayrollDetailsList) {
    this.hcdPayrollDetailsList = hcdPayrollDetailsList;
  }

  public List<HcdValidationResults> getHcdValidationResultsCollection() {
    return hcdValidationResultsCollection;
  }

  public void setHcdValidationResultsCollection(
      List<HcdValidationResults> hcdValidationResultsCollection) {
    this.hcdValidationResultsCollection = hcdValidationResultsCollection;
  }

  @Override
  public int hashCode() {
    int hash = 0;
    hash += (payfilId != null ? payfilId.hashCode() : 0);
    return hash;
  }

  @Override
  public boolean equals(Object object) {
    // TODO: Warning - this method won't work in the case the id fields are not set
    if (!(object instanceof HcdUploads)) {
      return false;
    }
    HcdUploads other = (HcdUploads) object;
    if ((this.payfilId == null && other.payfilId != null)
        || (this.payfilId != null && !this.payfilId.equals(other.payfilId))) {
      return false;
    }
    return true;
  }

  @Override
  public String toString() {
    return "ca.bc.gov.health.hscis.entity.HcdUploads[ payfilId=" + payfilId + " ]";
  }
}
