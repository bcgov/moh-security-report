package ca.bc.gov.health.hscis.entity;

import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.time.LocalDate;

/** The persistent class for the HCD_PAYROLL_FILES database table. */
@Entity
@Table(name = "HCD_PAYROLL_FILES")
@NamedQueries({
  @NamedQuery(name = "HcdPayrollFiles.findAll", query = "SELECT h FROM HcdPayrollFiles h"),
  @NamedQuery(
      name = "HcdPayrollFiles.findByPayfilId",
      query = "SELECT h FROM HcdPayrollFiles h WHERE h.payfilId = :payfilId")
})
public class HcdPayrollFiles implements Serializable {

  private static final long serialVersionUID = 1L;

  @Id
  @Basic(optional = false)
  @NotNull
  @Column(name = "PAYFIL_ID")
  private Long payfilId;

  @Basic(optional = false)
  @NotNull
  @Column(name = "YEAR")
  private short year;

  @Basic(optional = false)
  @NotNull
  @Column(name = "QUARTER")
  private short quarter;

  @Basic(optional = false)
  @NotNull
  @Column(name = "CORPORATE_EMPLOYER_NUMBER")
  private int corporateEmployerNumber;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 100)
  @Column(name = "LEGAL_NAME")
  private String legalName;

  @Basic(optional = false)
  @NotNull
  @Column(name = "REPORTING_TO_DATE")
  private LocalDate reportingToDate;

  @Basic(optional = false)
  @NotNull
  @Column(name = "EXTRACT_DATE")
  private LocalDate extractDate;

  @Basic(optional = false)
  @NotNull
  @Column(name = "DETAIL_COUNT")
  private int detailCount;

  @Column(name = "REPORTING_FROM_DATE")
  private LocalDate reportingFromDate;

  @JoinColumn(
      name = "PAYFIL_ID",
      referencedColumnName = "PAYFIL_ID",
      insertable = false,
      updatable = false)
  @OneToOne(cascade = CascadeType.REFRESH, optional = false, fetch = FetchType.LAZY)
  private HcdUploads hcdUploads;

  public HcdPayrollFiles() {}

  public HcdPayrollFiles(Long payfilId) {
    this.payfilId = payfilId;
  }

  public HcdPayrollFiles(
      Long payfilId,
      short year,
      short quarter,
      int corporateEmployerNumber,
      String legalName,
      LocalDate reportingToDate,
      LocalDate extractDate,
      int detailCount) {
    this.payfilId = payfilId;
    this.year = year;
    this.quarter = quarter;
    this.corporateEmployerNumber = corporateEmployerNumber;
    this.legalName = legalName;
    this.reportingToDate = reportingToDate;
    this.extractDate = extractDate;
    this.detailCount = detailCount;
  }

  public Long getPayfilId() {
    return payfilId;
  }

  public void setPayfilId(Long payfilId) {
    this.payfilId = payfilId;
  }

  public short getYear() {
    return year;
  }

  public void setYear(short year) {
    this.year = year;
  }

  public short getQuarter() {
    return quarter;
  }

  public void setQuarter(short quarter) {
    this.quarter = quarter;
  }

  public int getCorporateEmployerNumber() {
    return corporateEmployerNumber;
  }

  public void setCorporateEmployerNumber(int corporateEmployerNumber) {
    this.corporateEmployerNumber = corporateEmployerNumber;
  }

  public String getLegalName() {
    return legalName;
  }

  public void setLegalName(String legalName) {
    this.legalName = legalName;
  }

  public LocalDate getReportingToDate() {
    return reportingToDate;
  }

  public void setReportingToDate(LocalDate reportingToDate) {
    this.reportingToDate = reportingToDate;
  }

  public LocalDate getExtractDate() {
    return extractDate;
  }

  public void setExtractDate(LocalDate extractDate) {
    this.extractDate = extractDate;
  }

  public int getDetailCount() {
    return detailCount;
  }

  public void setDetailCount(int detailCount) {
    this.detailCount = detailCount;
  }

  public LocalDate getReportingFromDate() {
    return reportingFromDate;
  }

  public void setReportingFromDate(LocalDate reportingFromDate) {
    this.reportingFromDate = reportingFromDate;
  }

  public HcdUploads getHcdUploads() {
    return hcdUploads;
  }

  public void setHcdUploads(HcdUploads hcdUploads) {
    this.hcdUploads = hcdUploads;
  }

  @Override
  public int hashCode() {
    int hash = 0;
    hash += (payfilId != null ? payfilId.hashCode() : 0);
    return hash;
  }

  @Override
  public boolean equals(Object object) {
    // TODO: Warning - this method won't work in the case the id fields are not set
    if (!(object instanceof HcdPayrollFiles)) {
      return false;
    }
    HcdPayrollFiles other = (HcdPayrollFiles) object;
    if ((this.payfilId == null && other.payfilId != null)
        || (this.payfilId != null && !this.payfilId.equals(other.payfilId))) {
      return false;
    }
    return true;
  }

  @Override
  public String toString() {
    return "ca.bc.gov.health.hscis.entity.HcdPayrollFiles[ payfilId=" + payfilId + " ]";
  }
}
