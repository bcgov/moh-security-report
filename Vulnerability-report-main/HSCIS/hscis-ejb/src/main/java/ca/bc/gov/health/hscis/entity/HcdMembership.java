package ca.bc.gov.health.hscis.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Convert;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToOne;
import jakarta.persistence.PrePersist;
import jakarta.persistence.PreUpdate;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import java.io.Serializable;
import java.time.LocalDate;

/** The persistent class for the HCD_MEMBERSHIP database table. */
@Entity
@Table(name = "HCD_MEMBERSHIP")
@NamedQuery(name = "HcdMembership.findAll", query = "SELECT h FROM HcdMembership h")
@NamedQuery(
    name = "HcdMembership.findAllSearch",
    query =
        "SELECT h FROM HcdMembership h "
            + "WHERE CAST(h.corporateEmployerNumber AS varchar(5)) LIKE :searchValue "
            + "   OR CAST(h.siteEmployerNumber AS varchar(5)) LIKE :searchValue "
            + "   OR UPPER(h.legalName) LIKE :searchValue "
            + "   OR UPPER(h.operatingName) LIKE :searchValue "
            + "   OR UPPER(h.email1) LIKE :searchValue "
            + "   OR ((h.activeFlag = true) AND ('YES' LIKE :searchValue)) "
            + "   OR ((h.activeFlag = false) AND ('NO' LIKE :searchValue)) "
            + "   OR ((h.commentsNotes IS NOT NULL) AND ('VIEW' LIKE :searchValue))")
@NamedQuery(
    name = "HcdMembership.findByUserAndSummary",
    query =
        "SELECT h FROM HcdMembership h "
            + "WHERE (UPPER(h.ldapId1) = UPPER(:userId) OR UPPER(h.ldapId2) = UPPER(:userId)) "
            + "  AND h.activeFlag = true "
            + "  AND h.summaryFlag = true")
@NamedQuery(
    name = "HcdMembership.findByUser",
    query =
        "SELECT h FROM HcdMembership h "
            + "WHERE (UPPER(h.ldapId1) = UPPER(:userId) OR UPPER(h.ldapId2) = UPPER(:userId)) "
            + "  AND h.activeFlag = true")
@NamedQuery(
    name = "HcdMembership.findCorpByUser",
    query =
        "SELECT DISTINCT h.corporateEmployerNumber FROM HcdMembership h "
            + "WHERE (UPPER(h.ldapId1) = UPPER(:userId) OR UPPER(h.ldapId2) = UPPER(:userId)) "
            + "  AND h.activeFlag = true "
            + "ORDER BY h.siteEmployerNumber ASC")
@NamedQuery(
    name = "HcdMembership.findByHscisId",
    query = "SELECT h FROM HcdMembership h WHERE h.hscisId = :id")
@NamedQuery(
    name = "HcdMembership.findByCorp",
    query = "SELECT h FROM HcdMembership h WHERE h.corporateEmployerNumber = :corpId")
@NamedQuery(
    name = "HcdMembership.findBySite",
    query = "SELECT h FROM HcdMembership h WHERE h.siteEmployerNumber = :siteId")
@NamedQuery(
    name = "HcdMembership.findSiteByCorp",
    query =
        "SELECT h.siteEmployerNumber FROM HcdMembership h "
            + "WHERE h.corporateEmployerNumber = :corpId "
            + "ORDER BY h.siteEmployerNumber ASC")
@NamedQuery(
    name = "HcdMembership.findHscisIdByCorpAndSite",
    query =
        "SELECT h.hscisId FROM HcdMembership h "
            + "WHERE h.corporateEmployerNumber = :corpId "
            + "  AND h.siteEmployerNumber = :siteId")
public class HcdMembership implements Serializable {
  private static final long serialVersionUID = 1L;
  private Long hscisId;
  private Boolean activeFlag;
  private String address1;
  private String address2;
  private String areaCode1;
  private String areaCode2;
  private String city;
  private String commentsNotes;
  private String contactName1;
  private String contactName2;
  private Long corporateEmployerNumber;
  private String createdBy;
  private LocalDate createdOnDate;
  private String email1;
  private String email2;
  private String faxAreaCode;
  private String faxNumber;
  private HcdHealthAuthority healthAuthorityNumber;
  private String hnftpAccount;
  private String lastModifiedBy;
  private LocalDate lastModifiedOn;
  private String ldapId1;
  private String ldapId2;
  private String legalName;
  private HcdMembershipType memberType;
  private LocalDate membershipDate;
  private String operatingName;
  private HcdOrganizationStatus organizationStatus;
  private String phone1;
  private String phone2;
  private String phoneAreaCode;
  private String phoneNumber;
  private String postalCode;
  private String provinceCode;
  private String reportedWithin;
  private HcdServiceType serviceTypeCd;
  private Long siteEmployerNumber;
  private Boolean summaryFlag;

  public HcdMembership() {}

  @Id
  @SequenceGenerator(
      name = "HCD_MEMBERSHIP_HSCISID_GENERATOR",
      sequenceName = "HCD_MEMBERSHIP_SEQ",
      allocationSize = 1)
  @GeneratedValue(
      strategy = GenerationType.SEQUENCE,
      generator = "HCD_MEMBERSHIP_HSCISID_GENERATOR")
  @Column(name = "HSCIS_ID")
  public Long getHscisId() {
    return this.hscisId;
  }

  public void setHscisId(Long hscisId) {
    this.hscisId = hscisId;
  }

  @Column(name = "ACTIVE_FLAG")
  @Convert(converter = BooleanYNConverter.class)
  public Boolean getActiveFlag() {
    return this.activeFlag;
  }

  public void setActiveFlag(Boolean activeFlag) {
    this.activeFlag = activeFlag;
  }

  public String getAddress1() {
    return this.address1;
  }

  public void setAddress1(String address1) {
    this.address1 = address1;
  }

  public String getAddress2() {
    return this.address2;
  }

  public void setAddress2(String address2) {
    this.address2 = address2;
  }

  @Column(name = "AREA_CODE_1")
  public String getAreaCode1() {
    return this.areaCode1;
  }

  public void setAreaCode1(String areaCode1) {
    this.areaCode1 = areaCode1;
  }

  @Column(name = "AREA_CODE_2")
  public String getAreaCode2() {
    return this.areaCode2;
  }

  public void setAreaCode2(String areaCode2) {
    this.areaCode2 = areaCode2;
  }

  public String getCity() {
    return this.city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  @Column(name = "COMMENTS_NOTES")
  public String getCommentsNotes() {
    return this.commentsNotes;
  }

  public void setCommentsNotes(String commentsNotes) {
    this.commentsNotes = commentsNotes;
  }

  @Column(name = "CONTACT_NAME_1")
  public String getContactName1() {
    return this.contactName1;
  }

  public void setContactName1(String contactName1) {
    this.contactName1 = contactName1;
  }

  @Column(name = "CONTACT_NAME_2")
  public String getContactName2() {
    return this.contactName2;
  }

  public void setContactName2(String contactName2) {
    this.contactName2 = contactName2;
  }

  @Column(name = "CORPORATE_EMPLOYER_NUMBER")
  public Long getCorporateEmployerNumber() {
    return this.corporateEmployerNumber;
  }

  public void setCorporateEmployerNumber(Long corporateEmployerNumber) {
    this.corporateEmployerNumber = corporateEmployerNumber;
  }

  @Column(name = "CREATED_BY")
  public String getCreatedBy() {
    return this.createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  @Column(name = "CREATED_ON_DATE")
  public LocalDate getCreatedOnDate() {
    return this.createdOnDate;
  }

  public void setCreatedOnDate(LocalDate createdOnDate) {
    this.createdOnDate = createdOnDate;
  }

  @Column(name = "EMAIL_1")
  public String getEmail1() {
    return this.email1;
  }

  public void setEmail1(String email1) {
    this.email1 = email1;
  }

  @Column(name = "EMAIL_2")
  public String getEmail2() {
    return this.email2;
  }

  public void setEmail2(String email2) {
    this.email2 = email2;
  }

  @Column(name = "FAX_AREA_CODE")
  public String getFaxAreaCode() {
    return this.faxAreaCode;
  }

  public void setFaxAreaCode(String faxAreaCode) {
    this.faxAreaCode = faxAreaCode;
  }

  @Column(name = "FAX_NUMBER")
  public String getFaxNumber() {
    return this.faxNumber;
  }

  public void setFaxNumber(String faxNumber) {
    this.faxNumber = faxNumber;
  }

  @OneToOne(optional = false, fetch = FetchType.EAGER)
  @JoinColumn(name = "HEALTH_AUTHORITY_NUMBER")
  public HcdHealthAuthority getHealthAuthorityNumber() {
    return this.healthAuthorityNumber;
  }

  public void setHealthAuthorityNumber(HcdHealthAuthority healthAuthorityNumber) {
    this.healthAuthorityNumber = healthAuthorityNumber;
  }

  @Column(name = "HNFTP_ACCOUNT")
  public String getHnftpAccount() {
    return this.hnftpAccount;
  }

  public void setHnftpAccount(String hnftpAccount) {
    this.hnftpAccount = hnftpAccount;
  }

  @Column(name = "LAST_MODIFIED_BY")
  public String getLastModifiedBy() {
    return this.lastModifiedBy;
  }

  public void setLastModifiedBy(String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }

  @Column(name = "LAST_MODIFIED_ON")
  public LocalDate getLastModifiedOn() {
    return this.lastModifiedOn;
  }

  public void setLastModifiedOn(LocalDate lastModifiedOn) {
    this.lastModifiedOn = lastModifiedOn;
  }

  @Column(name = "LDAP_ID_1")
  public String getLdapId1() {
    return this.ldapId1;
  }

  public void setLdapId1(String ldapId1) {
    this.ldapId1 = ldapId1;
  }

  @Column(name = "LDAP_ID_2")
  public String getLdapId2() {
    return this.ldapId2;
  }

  public void setLdapId2(String ldapId2) {
    this.ldapId2 = ldapId2;
  }

  @Column(name = "LEGAL_NAME")
  public String getLegalName() {
    return this.legalName;
  }

  public void setLegalName(String legalName) {
    this.legalName = legalName;
  }

  @OneToOne(optional = false, fetch = FetchType.EAGER)
  @JoinColumn(name = "MEMBER_TYPE")
  public HcdMembershipType getMemberType() {
    return this.memberType;
  }

  public void setMemberType(HcdMembershipType memberType) {
    this.memberType = memberType;
  }

  @Column(name = "MEMBERSHIP_DATE")
  public LocalDate getMembershipDate() {
    return this.membershipDate;
  }

  public void setMembershipDate(LocalDate membershipDate) {
    this.membershipDate = membershipDate;
  }

  @Column(name = "OPERATING_NAME")
  public String getOperatingName() {
    return this.operatingName;
  }

  public void setOperatingName(String operatingName) {
    this.operatingName = operatingName;
  }

  @OneToOne(optional = true, fetch = FetchType.EAGER)
  @JoinColumn(name = "ORGANIZATION_STATUS_CODE")
  public HcdOrganizationStatus getOrganizationStatus() {
    return this.organizationStatus;
  }

  public void setOrganizationStatus(HcdOrganizationStatus OrganizationStatus) {
    this.organizationStatus = OrganizationStatus;
  }

  @Column(name = "PHONE_1")
  public String getPhone1() {
    return this.phone1;
  }

  public void setPhone1(String phone1) {
    this.phone1 = phone1;
  }

  @Column(name = "PHONE_2")
  public String getPhone2() {
    return this.phone2;
  }

  public void setPhone2(String phone2) {
    this.phone2 = phone2;
  }

  @Column(name = "PHONE_AREA_CODE")
  public String getPhoneAreaCode() {
    return this.phoneAreaCode;
  }

  public void setPhoneAreaCode(String phoneAreaCode) {
    this.phoneAreaCode = phoneAreaCode;
  }

  @Column(name = "PHONE_NUMBER")
  public String getPhoneNumber() {
    return this.phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  @Column(name = "POSTAL_CODE")
  public String getPostalCode() {
    return this.postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  @Column(name = "PROVINCE_CODE")
  public String getProvinceCode() {
    return this.provinceCode;
  }

  public void setProvinceCode(String provinceCode) {
    this.provinceCode = provinceCode;
  }

  @Column(name = "REPORTED_WITHIN")
  public String getReportedWithin() {
    return this.reportedWithin;
  }

  public void setReportedWithin(String reportedWithin) {
    this.reportedWithin = reportedWithin;
  }

  @OneToOne(optional = true, fetch = FetchType.EAGER)
  @JoinColumn(name = "SERVICE_TYPE_CD")
  public HcdServiceType getServiceTypeCd() {
    return this.serviceTypeCd;
  }

  public void setServiceTypeCd(HcdServiceType serviceTypeCd) {
    this.serviceTypeCd = serviceTypeCd;
  }

  @Column(name = "SITE_EMPLOYER_NUMBER")
  public Long getSiteEmployerNumber() {
    return this.siteEmployerNumber;
  }

  public void setSiteEmployerNumber(Long siteEmployerNumber) {
    this.siteEmployerNumber = siteEmployerNumber;
  }

  @Column(name = "SUMMARY_FLAG")
  @Convert(converter = BooleanYNConverter.class)
  public Boolean getSummaryFlag() {
    return this.summaryFlag;
  }

  public void setSummaryFlag(Boolean summaryFlag) {
    this.summaryFlag = summaryFlag;
  }

  @PrePersist
  protected void onCreate() {
    createdOnDate = LocalDate.now();
    createdBy = "HCD";
  }

  @PreUpdate
  protected void onUpdate() {
    lastModifiedOn = LocalDate.now();
  }

  @Override
  public int hashCode() {
    int hash = 0;
    hash += (hscisId != null ? hscisId.hashCode() : 0);
    return hash;
  }

  @Override
  public boolean equals(Object object) {
    // TODO: Warning - this method won't work in the case the id fields are not set
    if (!(object instanceof HcdMembership)) {
      return false;
    }
    HcdMembership other = (HcdMembership) object;
    if ((this.hscisId == null && other.hscisId != null)
        || (this.hscisId != null && !this.hscisId.equals(other.hscisId))) {
      return false;
    }
    return true;
  }

  @Override
  public String toString() {
    return "ca.bc.gov.health.hscis.entity.HcdMembership[ hscisId=" + hscisId + " ]";
  }
}
