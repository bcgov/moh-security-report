import { Selector, t } from 'testcafe';
import { selectorById, selectorByAria } from '../helpers/selector.helper';

export default class adminCTMembershipType {
    constructor () {
        this.accordionMenu = selectorById("codetablesPagesID");
        this.dataForm = selectorById("membershipTypesForm");
        this.createButton = selectorById("membershipTypesCreateButton");
        this.dataTable = selectorById("membershipTypesTable");
        this.dataTableData = selectorById("membershipTypesTable_data");
        this.dialogHeaderText = 'Update Membership Type';
        this.createDialogHeaderText = 'Create Membership Type';

        this.descriptionInput = selectorById("membershipTypesUpdateDescriptionText");
        this.typeInputCreate = selectorById("membershipTypesCreateTypeText");
        this.descriptionInputCreate = selectorById("membershipTypesCreateDescriptionText");
        this.errorMessage = selectorById("membershipTypesMessages");
    }
    
    membershipTypeMenuOpen() {
        return this.accordionMenu.find(".ui-accordion-header.ui-helper-reset.ui-state-default.ui-state-active.ui-corner-top");
    }
    
    membershipTypesMenuClosed() {
        return this.accordionMenu.find(".ui-accordion-header.ui-helper-reset.ui-state-default.ui-corner-all");
    }
    
    getDatas() {
        return this.dataTableData.find(".ui-datatable-selectable");
    }
    
    getDatasTestRow() {
        return Selector('td').withExactText('1T').parent('tr');
    }
    
    dataDialog() {
        return Selector("span").withText(this.dialogHeaderText).parent(".ui-confirm-dialog");
    }

    dataDialogYesButton() {
        return this.dataDialog().find(".ui-button.ui-widget.ui-state-default.ui-corner-all.ui-button-text-only");
    }
    
    dataDialogNoButton() {
        return this.dataDialog().find(".ui-confirmdialog-no");
    }

    async confirmDataDialog() {
        await t.
            click(this.dataDialogYesButton());
    }
    
    async cancelDataDialog() {
        await t.
            click(this.dataDialogNoButton());
    }

    createDataDialog() {
        return Selector("span").withText(this.createDialogHeaderText).parent(".ui-confirm-dialog");
    }

    createDataDialogYesButton() {
        return this.createDataDialog().find(".ui-button.ui-widget.ui-state-default.ui-corner-all.ui-button-text-only");
    }
    
    createDataDialogNoButton() {
        return this.createDataDialog().find(".ui-confirmdialog-no");
    }

    async confirmCreateDataDialog() {
        await t.
            click(this.createDataDialogYesButton());
    }
    
    async cancelCreateDataDialog() {
        await t.
            click(this.createDataDialogNoButton());
    }
}