import { Selector, t } from 'testcafe';
import { selectorById, selectorByAria } from '../helpers/selector.helper';

export default class SubmitPayrollFilePage {
    constructor () {
        this.submitPayrollLink    = selectorById("submit-payroll-link");
        this.selectAccount        = selectorById("selectAccount");
        this.selectAccountOptions = selectorById("selectAccount_items").find("li");
        this.selectYear           = selectorById("selectYear");
        this.selectYearOptions    = selectorById("selectYear_items").find("li");
        this.selectQuarter        = selectorById("selectQuarter");
        this.selectQuarterOptions = selectorById("selectQuarter_items").find("li");
        this.fileUploadComponent  = selectorById("fileUpload");
        this.fileUploadButton     = selectorByAria("fileUpload_label");
        this.fileUploadInput      = selectorById("fileUpload_input");
        this.fileUploadMessages   = selectorById("fileUpload").child(".ui-fileupload-content.ui-widget-content.ui-corner-bottom");
        this.submissionTable      = selectorById("submissionTable");
        this.reportsPanel         = selectorById("reportsPanel");
        this.reportTableData      = selectorById("reportTable_data");
        this.downloadButton       = selectorById("download");
        this.deleteButton         = selectorById("delete");
    }
    
    async clickSubmitPayrollLink() {
        await t.
            click(this.submitPayrollLink);
    }
    
    async clickDownloadButton() {
        await t.
            click(this.downloadButton);
    }
    
    async clickDeleteButton() {
        await t.
            click(this.deleteButton);
    }
    
    fileUploadMessageComponent() {
        return this.fileUploadMessages.find('.ui-messages-error-summary');
    }
    
    fileUploadMessageDetailComponent() {
        return this.fileUploadMessages.find('.ui-messages-error-detail');
    }
    
    payrollExtractReports() {
        return this.reportTableData.find(".ui-chkbox-box.ui-widget.ui-corner-all.ui-state-default");
    }
    
    deleteReportsConfirmDialog() {
        return Selector("span").withText("Delete Payroll Extract Reports").parent(".ui-confirm-dialog");
    }
    
    deleteReportsConfirmDialogYesButton() {
        return this.deleteReportsConfirmDialog().find(".danger");
    }
    
    deleteReportsConfirmDialogNoButton() {
        return this.deleteReportsConfirmDialog().find(".ui-confirmdialog-no");
    }
    
    async confirmDeleteExtractReport() {
        await t.
            click(this.deleteReportsConfirmDialogYesButton());
    }
    
    async cancelDeleteExtractReport() {
        await t.
            click(this.deleteReportsConfirmDialogNoButton());
    }
}