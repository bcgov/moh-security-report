import { t } from 'testcafe';
import { selectorById, queryById } from '../helpers/selector.helper';
import { isDisabled } from '../helpers/field.helper';

export default class EnterPayrollSummaryDesGroupsPagePopUp {
    constructor () {
        this.popUpPanel                          = selectorById("desGroupDialog");
        this.panelovertime                       = this.popUpPanel.find(queryById("panelovertime"));
        this.panelovertimeContent                = this.panelovertime.find(queryById("panelovertime_content"));
        this.panelleave                          = this.popUpPanel.find(queryById("panelleave"));
        this.panelleaveContent                   = this.panelleave.find(queryById("panelleave_content"));
        this.panelallowance                      = this.popUpPanel.find(queryById("panelallowance"));
        this.panelallowanceContent               = this.panelallowance.find(queryById("panelallowance_content"));
        this.panelpay                            = this.popUpPanel.find(queryById("panelpay"));
        this.panelpayContent                     = this.panelpay.find(queryById("panelpay_content"));
        this.designatedGroup                     = this.popUpPanel.find(queryById("desgroup"));
        this.designatedGroupValue                = this.popUpPanel.find(queryById("desgroup_label"));
        this.designatedGroupOptions              = selectorById("desgroup_items").find("li");
        this.paidStatutoryHolidays               = this.popUpPanel.find(queryById("paidStatutoryHolidays_input"));
        this.paidStatutoryHolidaysValueName      = queryById("paidStatutoryHolidays_hinput");
        this.paidStatutoryHolidaysValue          = this.popUpPanel.find(this.paidStatutoryHolidaysValueName);
        this.payRelievingHigherPosition          = this.popUpPanel.find(queryById("payRelievingHigherPosition_input"));
        this.payRelievingHigherPositionValueName = queryById("payRelievingHigherPosition_hinput");
        this.payRelievingHigherPositionValue     = this.popUpPanel.find(this.payRelievingHigherPositionValueName);
        this.premPayHrsWorkedStat15              = this.popUpPanel.find(queryById("premPayHrsWorkedStat15_input"));
        this.premPayHrsWorkedStat15ValueName     = queryById("premPayHrsWorkedStat15_hinput");
        this.premPayHrsWorkedStat15Value         = this.popUpPanel.find(this.premPayHrsWorkedStat15ValueName);
        this.regWorkDayOvertime15                = this.popUpPanel.find(queryById("regWorkDayOvertime15_input"));
        this.regWorkDayOvertime15ValueName       = queryById("regWorkDayOvertime15_hinput");
        this.regWorkDayOvertime15Value           = this.popUpPanel.find(this.regWorkDayOvertime15ValueName);
        this.regdayoffot15                       = this.popUpPanel.find(queryById("regdayoffot15_input"));
        this.regdayoffot15ValueName              = queryById("regdayoffot15_hinput");
        this.regdayoffot15Value                  = this.popUpPanel.find(this.regdayoffot15ValueName);
        this.overtimeInsuffNotice15              = this.popUpPanel.find(queryById("overtimeInsuffNotice15_input"));
        this.overtimeInsuffNotice15ValueName     = queryById("overtimeInsuffNotice15_hinput");
        this.overtimeInsuffNotice15Value         = this.popUpPanel.find(this.overtimeInsuffNotice15ValueName);
        this.callBack15                          = this.popUpPanel.find(queryById("callBack15_input"));
        this.callBack15ValueName                 = queryById("callBack15_hinput");
        this.callBack15Value                     = this.popUpPanel.find(this.callBack15ValueName);
        this.otherOvertime15                     = this.popUpPanel.find(queryById("otherOvertime15_input"));
        this.otherOvertime15ValueName            = queryById("otherOvertime15_hinput");
        this.otherOvertime15Value                = this.popUpPanel.find(this.otherOvertime15ValueName);
        this.totalOvertime15                     = this.popUpPanel.find(queryById("totalOvertime15_input"));
        this.totalOvertime15ValueName            = queryById("totalOvertime15_hinput");
        this.totalOvertime15Value                = this.popUpPanel.find(this.totalOvertime15ValueName);
        this.premPayHrsWorkedStat2               = this.popUpPanel.find(queryById("premPayHrsWorkedStat2_input"));
        this.premPayHrsWorkedStat2ValueName      = queryById("premPayHrsWorkedStat2_hinput");
        this.premPayHrsWorkedStat2Value          = this.popUpPanel.find(this.premPayHrsWorkedStat2ValueName);
        this.regWorkDayOvertime2                 = this.popUpPanel.find(queryById("regWorkDayOvertime2_input"));
        this.regWorkDayOvertime2ValueName        = queryById("regWorkDayOvertime2_hinput");
        this.regWorkDayOvertime2Value            = this.popUpPanel.find(this.regWorkDayOvertime2ValueName);
        this.regdayoffot2                        = this.popUpPanel.find(queryById("regdayoffot2_input"));
        this.regdayoffot2ValueName               = queryById("regdayoffot2_hinput");
        this.regdayoffot2Value                   = this.popUpPanel.find(this.regdayoffot2ValueName);
        this.overtimeInsuffNotice2               = this.popUpPanel.find(queryById("overtimeInsuffNotice2_input"));
        this.overtimeInsuffNotice2ValueName      = queryById("overtimeInsuffNotice2_hinput");
        this.overtimeInsuffNotice2Value          = this.popUpPanel.find(this.overtimeInsuffNotice2ValueName);
        this.callBack2                           = this.popUpPanel.find(queryById("callBack2_input"));
        this.callBack2ValueName                  = queryById("callBack2_hinput");
        this.callBack2Value                      = this.popUpPanel.find(this.callBack2ValueName);
        this.otherOvertime2                      = this.popUpPanel.find(queryById("otherOvertime2_input"));
        this.otherOvertime2ValueName             = queryById("otherOvertime2_hinput");
        this.otherOvertime2Value                 = this.popUpPanel.find(this.otherOvertime2ValueName);
        this.totalOvertime2                      = this.popUpPanel.find(queryById("totalOvertime2_input"));
        this.totalOvertime2ValueName             = queryById("totalOvertime2_hinput");
        this.totalOvertime2Value                 = this.popUpPanel.find(this.totalOvertime2ValueName);
        this.premPayHrsWorkedStat25              = this.popUpPanel.find(queryById("premPayHrsWorkedStat25_input"));
        this.premPayHrsWorkedStat25ValueName     = queryById("premPayHrsWorkedStat25_hinput");
        this.premPayHrsWorkedStat25Value         = this.popUpPanel.find(this.premPayHrsWorkedStat25ValueName);
        this.sickleavebank                       = this.popUpPanel.find(queryById("sickleavebank_input"));
        this.sickleavebankValueName              = queryById("sickleavebank_hinput");
        this.sickleavebankValue                  = this.popUpPanel.find(this.sickleavebankValueName);
        this.specialLeave                        = this.popUpPanel.find(queryById("specialLeave_input"));
        this.specialLeaveValueName               = queryById("specialLeave_hinput");
        this.specialLeaveValue                   = this.popUpPanel.find(this.specialLeaveValueName);
        this.employerPaidUnionBusiness           = this.popUpPanel.find(queryById("employerPaidUnionBusiness_input"));
        this.employerPaidUnionBusinessValueName  = queryById("employerPaidUnionBusiness_hinput");
        this.employerPaidUnionBusinessValue      = this.popUpPanel.find(this.employerPaidUnionBusinessValueName);
        this.allOtherPaidLeaves                  = this.popUpPanel.find(queryById("allOtherPaidLeaves_input"));
        this.allOtherPaidLeavesValueName         = queryById("allOtherPaidLeaves_hinput");
        this.allOtherPaidLeavesValue             = this.popUpPanel.find(this.allOtherPaidLeavesValueName);
        this.sickLeavePaid                       = this.popUpPanel.find(queryById("sickLeavePaid_input"));
        this.sickLeavePaidValueName              = queryById("sickLeavePaid_hinput");
        this.sickLeavePaidValue                  = this.popUpPanel.find(this.sickLeavePaidValueName);
        this.compassionateLeave                  = this.popUpPanel.find(queryById("compassionateLeave_input"));
        this.compassionateLeaveValueName         = queryById("compassionateLeave_hinput");
        this.compassionateLeaveValue             = this.popUpPanel.find(this.compassionateLeaveValueName);
        this.educationLeave                      = this.popUpPanel.find(queryById("educationLeave_input"));
        this.educationLeaveValueName             = queryById("educationLeave_hinput");
        this.educationLeaveValue                 = this.popUpPanel.find(this.educationLeaveValueName);
        this.paidLeaveWhileOnWcb                 = this.popUpPanel.find(queryById("paidLeaveWhileOnWcb_input"));
        this.paidLeaveWhileOnWcbValueName        = queryById("paidLeaveWhileOnWcb_hinput");
        this.paidLeaveWhileOnWcbValue            = this.popUpPanel.find(this.paidLeaveWhileOnWcbValueName);
        this.sickLeaveCashPayout                 = this.popUpPanel.find(queryById("sickLeaveCashPayout_input"));
        this.sickLeaveCashPayoutValueName        = queryById("sickLeaveCashPayout_hinput");
        this.sickLeaveCashPayoutValue            = this.popUpPanel.find(this.sickLeaveCashPayoutValueName);
        this.juryDuty                            = this.popUpPanel.find(queryById("juryDuty_input"));
        this.juryDutyValueName                   = queryById("juryDuty_hinput");
        this.juryDutyValue                       = this.popUpPanel.find(this.juryDutyValueName);
        this.timeOffInLieuCto                    = this.popUpPanel.find(queryById("timeOffInLieuCto_input"));
        this.timeOffInLieuCtoValueName           = queryById("timeOffInLieuCto_hinput");
        this.timeOffInLieuCtoValue               = this.popUpPanel.find(this.timeOffInLieuCtoValueName);
        this.onCallMealPeriods                   = this.popUpPanel.find(queryById("onCallMealPeriods_input"));
        this.onCallMealPeriodsValueName          = queryById("onCallMealPeriods_hinput");
        this.onCallMealPeriodsValue              = this.popUpPanel.find(this.onCallMealPeriodsValueName);
        this.shiftPremiumsWeekends               = this.popUpPanel.find(queryById("shiftPremiumsWeekends_input"));
        this.shiftPremiumsWeekendsValueName      = queryById("shiftPremiumsWeekends_hinput");
        this.shiftPremiumsWeekendsValue          = this.popUpPanel.find(this.shiftPremiumsWeekendsValueName);
        this.respPaySpecialAllowances            = this.popUpPanel.find(queryById("respPaySpecialAllowances_input"));
        this.respPaySpecialAllowancesValueName   = queryById("respPaySpecialAllowances_hinput");
        this.respPaySpecialAllowancesValue       = this.popUpPanel.find(this.respPaySpecialAllowancesValueName);
        this.isolationAllowance                  = this.popUpPanel.find(queryById("isolationAllowance_input"));
        this.isolationAllowanceValueName         = queryById("isolationAllowance_hinput");
        this.isolationAllowanceValue             = this.popUpPanel.find(this.isolationAllowanceValueName);
        this.maternityLeaveSebPlan               = this.popUpPanel.find(queryById("maternityLeaveSebPlan_input"));
        this.maternityLeaveSebPlanValueName      = queryById("maternityLeaveSebPlan_hinput");
        this.maternityLeaveSebPlanValue          = this.popUpPanel.find(this.maternityLeaveSebPlanValueName);
        this.shiftPremiumsEvenings               = this.popUpPanel.find(queryById("shiftPremiumsEvenings_input"));
        this.shiftPremiumsEveningsValueName      = queryById("shiftPremiumsEvenings_hinput");
        this.shiftPremiumsEveningsValue          = this.popUpPanel.find(this.shiftPremiumsEveningsValueName);
        this.primaryRate                         = this.popUpPanel.find(queryById("primaryRate_input"));
        this.primaryRateValueName                = queryById("primaryRate_hinput");
        this.primaryRateValue                    = this.popUpPanel.find(this.primaryRateValueName);
        this.travelAllowance                     = this.popUpPanel.find(queryById("travelAllowance_input"));
        this.travelAllowanceValueName            = queryById("travelAllowance_hinput");
        this.travelAllowanceValue                = this.popUpPanel.find(this.travelAllowanceValueName);
        this.mealAllowance                       = this.popUpPanel.find(queryById("mealAllowance_input"));
        this.mealAllowanceValueName              = queryById("mealAllowance_hinput");
        this.mealAllowanceValue                  = this.popUpPanel.find(this.mealAllowanceValueName);
        this.otherPremiumsAllowances             = this.popUpPanel.find(queryById("otherPremiumsAllowances_input"));
        this.otherPremiumsAllowancesValueName    = queryById("otherPremiumsAllowances_hinput");
        this.otherPremiumsAllowancesValue        = this.popUpPanel.find(this.otherPremiumsAllowancesValueName);
        this.shiftPremiumsNights                 = this.popUpPanel.find(queryById("shiftPremiumsNights_input"));
        this.shiftPremiumsNightsValueName        = queryById("shiftPremiumsNights_hinput");
        this.shiftPremiumsNightsValue            = this.popUpPanel.find(this.shiftPremiumsNightsValueName);
        this.qualificationDifferentials          = this.popUpPanel.find(queryById("qualificationDifferentials_input"));
        this.qualificationDifferentialsValueName = queryById("qualificationDifferentials_hinput");
        this.qualificationDifferentialsValue     = this.popUpPanel.find(this.qualificationDifferentialsValueName);
        this.uniformAllowance                    = this.popUpPanel.find(queryById("uniformAllowance_input"));
        this.uniformAllowanceValueName           = queryById("uniformAllowance_hinput");
        this.uniformAllowanceValue               = this.popUpPanel.find(this.uniformAllowanceValueName);
        this.severanceAllowancePaid              = this.popUpPanel.find(queryById("severanceAllowancePaid_input"));
        this.severanceAllowancePaidValueName     = queryById("severanceAllowancePaid_hinput");
        this.severanceAllowancePaidValue         = this.popUpPanel.find(this.severanceAllowancePaidValueName);
        this.superannuation                      = this.popUpPanel.find(queryById("superannuation_input"));
        this.superannuationValueName             = queryById("superannuation_hinput");
        this.superannuationValue                 = this.popUpPanel.find(this.superannuationValueName);
        this.dental                              = this.popUpPanel.find(queryById("dental_input"));
        this.dentalValueName                     = queryById("dental_hinput");
        this.dentalValue                         = this.popUpPanel.find(this.dentalValueName);
        this.ei                                  = this.popUpPanel.find(queryById("ei_input"));
        this.eiValueName                         = queryById("ei_hinput");
        this.eiValue                             = this.popUpPanel.find(this.eiValueName);
        this.longTermDisability                  = this.popUpPanel.find(queryById("longTermDisability_input"));
        this.longTermDisabilityValueName         = queryById("longTermDisability_hinput");
        this.longTermDisabilityValue             = this.popUpPanel.find(this.longTermDisabilityValueName);
        this.homeSupportHolLieuPay               = this.popUpPanel.find(queryById("homeSupportHolLieuPay_input"));
        this.homeSupportHolLieuPayValueName      = queryById("homeSupportHolLieuPay_hinput");
        this.homeSupportHolLieuPayValue          = this.popUpPanel.find(this.homeSupportHolLieuPayValueName);
        this.liveInPay                           = this.popUpPanel.find(queryById("liveInPay_input"));
        this.liveInPayValueName                  = queryById("liveInPay_hinput");
        this.liveInPayValue                      = this.popUpPanel.find(this.liveInPayValueName);
        this.telephoneConsultationPay            = this.popUpPanel.find(queryById("telephoneConsultationPay_input"));
        this.telephoneConsultationPayValueName   = queryById("telephoneConsultationPay_hinput");
        this.telephoneConsultationPayValue       = this.popUpPanel.find(this.telephoneConsultationPayValueName);
        this.msp                                 = this.popUpPanel.find(queryById("msp_input"));
        this.mspValueName                        = queryById("msp_hinput");
        this.mspValue                            = this.popUpPanel.find(this.mspValueName);
        this.cpp                                 = this.popUpPanel.find(queryById("cpp_input"));
        this.cppValueName                        = queryById("cpp_hinput");
        this.cppValue                            = this.popUpPanel.find(this.cppValueName);
        this.groupLifeAdd                        = this.popUpPanel.find(queryById("groupLifeAdd_input"));
        this.groupLifeAddValueName               = queryById("groupLifeAdd_hinput");
        this.groupLifeAddValue                   = this.popUpPanel.find(this.groupLifeAddValueName);
        this.casualStatHolVacationPay            = this.popUpPanel.find(queryById("casualStatHolVacationPay_input"));
        this.casualStatHolVacationPayValueName   = queryById("casualStatHolVacationPay_hinput");
        this.casualStatHolVacationPayValue       = this.popUpPanel.find(this.casualStatHolVacationPayValueName);
        this.superShiftPremium                   = this.popUpPanel.find(queryById("superShiftPremium_input"));
        this.superShiftPremiumValueName          = queryById("superShiftPremium_hinput");
        this.superShiftPremiumValue              = this.popUpPanel.find(this.superShiftPremiumValueName);
        this.onCallDifferentials                 = this.popUpPanel.find(queryById("onCallDifferentials_input"));
        this.onCallDifferentialsValueName        = queryById("onCallDifferentials_hinput");
        this.onCallDifferentialsValue            = this.popUpPanel.find(this.onCallDifferentialsValueName);
        this.pensionPlanRrsp                     = this.popUpPanel.find(queryById("pensionPlanRrsp_input"));
        this.pensionPlanRrspValueName            = queryById("pensionPlanRrsp_hinput");
        this.pensionPlanRrspValue                = this.popUpPanel.find(this.pensionPlanRrspValueName);
        this.extendedHealth                      = this.popUpPanel.find(queryById("extendedHealth_input"));
        this.extendedHealthValueName             = queryById("extendedHealth_hinput");
        this.extendedHealthValue                 = this.popUpPanel.find(this.extendedHealthValueName);
        this.wcb                                 = this.popUpPanel.find(queryById("wcb_input"));
        this.wcbValueName                        = queryById("wcb_hinput");
        this.wcbValue                            = this.popUpPanel.find(this.wcbValueName);
        this.retroAndLumpSumPayout               = this.popUpPanel.find(queryById("retroAndLumpSumPayout_input"));
        this.retroAndLumpSumPayoutValueName      = queryById("retroAndLumpSumPayout_hinput");
        this.retroAndLumpSumPayoutValue          = this.popUpPanel.find(this.retroAndLumpSumPayoutValueName);
        this.difficultToFillUnitPremium          = this.popUpPanel.find(queryById("difficultToFillUnitPremium_input"));
        this.difficultToFillUnitPremiumValueName = queryById("difficultToFillUnitPremium_hinput");
        this.difficultToFillUnitPremiumValue     = this.popUpPanel.find(this.difficultToFillUnitPremiumValueName);
        this.overnightPay                        = this.popUpPanel.find(queryById("overnightPay_input"));
        this.overnightPayValueName               = queryById("overnightPay_hinput");
        this.overnightPayValue                   = this.popUpPanel.find(this.overnightPayValueName);
        this.createButton                        = this.popUpPanel.find(queryById("createdesgroup"));
        this.updateButton                        = this.popUpPanel.find(queryById("updatedesgroup"));
        this.updateNextButton                    = this.popUpPanel.find(queryById("updatenextdesgroup"));
        this.deleteButton                        = this.popUpPanel.find(queryById("deletedesgroup"));
        this.cancelButton                        = this.popUpPanel.find(queryById("canceldesgroup"));
        this.messagesComponent                   = selectorById("groupMessages");
		this.confirmDeleteDialog		 		 = selectorById("desGroupDelConfirmForm:deleteConfirm");
    }
    
    async clickCreateButton() {
        await t.
            click(this.createButton);
    }
    
    async clickUpdateButton() {
        await t.
            click(this.updateButton);
    }
    
    async clickUpdateNextButton() {
        await t.
            click(this.updateNextButton);
    }
    
    async clickDeleteButton() {
        await t.
            click(this.deleteButton);
    }
    
    async clickCancelButton() {
        await t.
            click(this.cancelButton);
    }
    
    deleteDesGroupsPagePopUpConfirmDialogYesButton() {
        return this.confirmDeleteDialog.find(".danger");
    }
    
    deleteDesGroupsPagePopUpConfirmDialogNoButton() {
        return this.confirmDeleteDialog.find(".ui-confirmdialog-no");
    }
    
    async confirmDeleteDesGroupsP() {
        await t.
            click(this.deleteDesGroupsPagePopUpConfirmDialogYesButton());
    }
    
    async cancelDeleteDesGroupsP() {
        await t.
            click(this.deleteDesGroupsPagePopUpConfirmDialogNoButton());
    }

    async expandPanelovertime() {
        await t.
            click(this.panelovertime);
    }
    
    async expandPanelleave() {
        await t.
            click(this.panelleave);
    }
    
    async expandPanelallowance() {
        await t.
            click(this.panelallowance);
    }
    
    async expandPanelpay() {
        await t.
            click(this.panelpay);
    }
    
    async verifyCreateMode() {
        //Verify that all fields exist
        await t
            .expect(this.designatedGroup.exists).ok()
            .expect(this.paidStatutoryHolidays.exists).ok()
            .expect(this.payRelievingHigherPosition.exists).ok()
            .expect(this.premPayHrsWorkedStat15.exists).ok()
            .expect(this.regWorkDayOvertime15.exists).ok()
            .expect(this.regdayoffot15.exists).ok()
            .expect(this.overtimeInsuffNotice15.exists).ok()
            .expect(this.callBack15.exists).ok()
            .expect(this.otherOvertime15.exists).ok()
            .expect(this.totalOvertime15.exists).ok()
            .expect(this.premPayHrsWorkedStat2.exists).ok()
            .expect(this.regWorkDayOvertime2.exists).ok()
            .expect(this.regdayoffot2.exists).ok()
            .expect(this.overtimeInsuffNotice2.exists).ok()
            .expect(this.callBack2.exists).ok()
            .expect(this.totalOvertime2.exists).ok()
            .expect(this.premPayHrsWorkedStat25.exists).ok()
            .expect(this.sickleavebank.exists).ok()
            .expect(this.specialLeave.exists).ok()
            .expect(this.employerPaidUnionBusiness .exists).ok()
            .expect(this.allOtherPaidLeaves.exists).ok()
            .expect(this.sickLeavePaid.exists).ok()
            .expect(this.compassionateLeave.exists).ok()
            .expect(this.educationLeave.exists).ok()
            .expect(this.paidLeaveWhileOnWcb.exists).ok()
            .expect(this.sickLeaveCashPayout.exists).ok()
            .expect(this.juryDuty.exists).ok()
            .expect(this.timeOffInLieuCto.exists).ok()
            .expect(this.onCallMealPeriods.exists).ok()
            .expect(this.shiftPremiumsWeekends.exists).ok()
            .expect(this.respPaySpecialAllowances.exists).ok()
            .expect(this.isolationAllowance.exists).ok()
            .expect(this.maternityLeaveSebPlan.exists).ok()
            .expect(this.shiftPremiumsEvenings.exists).ok()
            .expect(this.primaryRate.exists).ok()
            .expect(this.travelAllowance.exists).ok()
            .expect(this.mealAllowance.exists).ok()
            .expect(this.otherPremiumsAllowances.exists).ok()
            .expect(this.shiftPremiumsNights.exists).ok()
            .expect(this.qualificationDifferentials.exists).ok()
            .expect(this.uniformAllowance.exists).ok()
            .expect(this.severanceAllowancePaid.exists).ok()
            .expect(this.superannuation.exists).ok()
            .expect(this.dental.exists).ok()
            .expect(this.ei.exists).ok()
            .expect(this.longTermDisability.exists).ok()
            .expect(this.homeSupportHolLieuPay.exists).ok()
            .expect(this.liveInPay.exists).ok()
            .expect(this.telephoneConsultationPay.exists).ok()
            .expect(this.msp.exists).ok()
            .expect(this.cpp.exists).ok()
            .expect(this.groupLifeAdd .exists).ok()
            .expect(this.casualStatHolVacationPay.exists).ok()
            .expect(this.superShiftPremium.exists).ok()
            .expect(this.onCallDifferentials.exists).ok()
            .expect(this.pensionPlanRrsp.exists).ok()
            .expect(this.extendedHealth.exists).ok()
            .expect(this.wcb.exists).ok()
            .expect(this.retroAndLumpSumPayout.exists).ok()
            .expect(this.difficultToFillUnitPremium.exists).ok()
            .expect(this.overnightPay.exists).ok();
        
        //Verify all buttons exist
        await t
            .expect(this.createButton.exists).ok()
            .expect(this.cancelButton.exists).ok();
        
        //Verify delete button does not exist
        await t
            .expect(this.deleteButton.exists).notOk();
        
        //Verify that all fields are empty
        await t
            .expect(this.designatedGroupValue.textContent).eql('Select', 'Input is not empty')
            .expect(this.paidStatutoryHolidaysValue.value).eql('0.00', 'Input is not empty')
            .expect(this.payRelievingHigherPositionValue.value).eql('0.00', 'Input is not empty')
            .expect(this.premPayHrsWorkedStat15Value.value).eql('0.00', 'Input is not empty')
            .expect(this.regWorkDayOvertime15Value.value).eql('0.00', 'Input is not empty')
            .expect(this.regdayoffot15Value.value).eql('0.00', 'Input is not empty')
            .expect(this.overtimeInsuffNotice15Value.value).eql('0.00', 'Input is not empty')
            .expect(this.callBack15Value.value).eql('0.00', 'Input is not empty')
            .expect(this.otherOvertime15Value.value).eql('0.00', 'Input is not empty')
            .expect(this.totalOvertime15Value.value).eql('0.00', 'Input is not empty')
            .expect(this.premPayHrsWorkedStat2Value.value).eql('0.00', 'Input is not empty')
            .expect(this.regWorkDayOvertime2Value.value).eql('0.00', 'Input is not empty')
            .expect(this.regdayoffot2Value.value).eql('0.00', 'Input is not empty')
            .expect(this.overtimeInsuffNotice2Value.value).eql('0.00', 'Input is not empty')
            .expect(this.callBack2Value.value).eql('0.00', 'Input is not empty')
            .expect(this.otherOvertime2Value.value).eql('0.00', 'Input is not empty')
            .expect(this.totalOvertime2Value.value).eql('0.00', 'Input is not empty')
            .expect(this.premPayHrsWorkedStat25Value.value).eql('0.00', 'Input is not empty')
            .expect(this.sickleavebankValue.value).eql('0.00', 'Input is not empty')
            .expect(this.specialLeaveValue.value).eql('0.00', 'Input is not empty')
            .expect(this.employerPaidUnionBusinessValue.value).eql('0.00', 'Input is not empty')
            .expect(this.allOtherPaidLeavesValue.value).eql('0.00', 'Input is not empty')
            .expect(this.sickLeavePaidValue.value).eql('0.00', 'Input is not empty')
            .expect(this.compassionateLeaveValue.value).eql('0.00', 'Input is not empty')
            .expect(this.educationLeaveValue.value).eql('0.00', 'Input is not empty')
            .expect(this.paidLeaveWhileOnWcbValue.value).eql('0.00', 'Input is not empty')
            .expect(this.sickLeaveCashPayoutValue.value).eql('0.00', 'Input is not empty')
            .expect(this.juryDutyValue.value).eql('0.00', 'Input is not empty')
            .expect(this.timeOffInLieuCtoValue.value).eql('0.00', 'Input is not empty')
            .expect(this.onCallMealPeriodsValue.value).eql('0.00', 'Input is not empty')
            .expect(this.shiftPremiumsWeekendsValue.value).eql('0.00', 'Input is not empty')
            .expect(this.respPaySpecialAllowancesValue.value).eql('0.00', 'Input is not empty')
            .expect(this.isolationAllowanceValue.value).eql('0.00', 'Input is not empty')
            .expect(this.maternityLeaveSebPlanValue.value).eql('0.00', 'Input is not empty')
            .expect(this.shiftPremiumsEveningsValue.value).eql('0.00', 'Input is not empty')
            .expect(this.primaryRateValue.value).eql('0.00', 'Input is not empty')
            .expect(this.travelAllowanceValue.value).eql('0.00', 'Input is not empty')
            .expect(this.mealAllowanceValue.value).eql('0.00', 'Input is not empty')
            .expect(this.otherPremiumsAllowancesValue.value).eql('0.00', 'Input is not empty')
            .expect(this.shiftPremiumsNightsValue.value).eql('0.00', 'Input is not empty')
            .expect(this.qualificationDifferentialsValue.value).eql('0.00', 'Input is not empty')
            .expect(this.uniformAllowanceValue.value).eql('0.00', 'Input is not empty')
            .expect(this.severanceAllowancePaidValue.value).eql('0.00', 'Input is not empty')
            .expect(this.superannuationValue.value).eql('0.00', 'Input is not empty')
            .expect(this.dentalValue.value).eql('0.00', 'Input is not empty')
            .expect(this.eiValue.value).eql('0.00', 'Input is not empty')
            .expect(this.longTermDisabilityValue.value).eql('0.00', 'Input is not empty')
            .expect(this.homeSupportHolLieuPayValue .value).eql('0.00', 'Input is not empty')
            .expect(this.liveInPayValue.value).eql('', 'Input is not empty')
            .expect(this.telephoneConsultationPayValue.value).eql('', 'Input is not empty')
            .expect(this.mspValue.value).eql('0.00', 'Input is not empty')
            .expect(this.cppValue.value).eql('0.00', 'Input is not empty')
            .expect(this.groupLifeAddValue.value).eql('0.00', 'Input is not empty')
            .expect(this.casualStatHolVacationPayValue.value).eql('0.00', 'Input is not empty')
            .expect(this.superShiftPremiumValue.value).eql('0.00', 'Input is not empty')
            .expect(this.onCallDifferentialsValue.value).eql('', 'Input is not empty')
            .expect(this.pensionPlanRrspValue.value).eql('0.00', 'Input is not empty')
            .expect(this.extendedHealthValue.value).eql('0.00', 'Input is not empty')
            .expect(this.wcbValue.value).eql('0.00', 'Input is not empty')
            .expect(this.retroAndLumpSumPayoutValue.value).eql('0.00', 'Input is not empty')
            .expect(this.difficultToFillUnitPremiumValue.value).eql('', 'Input is not empty')
            .expect(this.overnightPayValue.value).eql('', 'Input is not empty');
        
        //Verify enabled fields
        await t
            .expect(isDisabled(this.designatedGroup)).notOk();
        
        //Verify enabled buttons
        await t
            .expect(isDisabled(this.createButton)).notOk()
            .expect(isDisabled(this.cancelButton)).notOk();
            
        //Panels are collapsed
        await t
            .expect(this.panelovertimeContent.filterVisible().exists).notOk()
            .expect(this.panelleaveContent.filterVisible().exists).notOk()
            .expect(this.panelallowanceContent.filterVisible().exists).notOk()
            .expect(this.panelpayContent.filterVisible().exists).notOk();
    }
    
    errorMessages() {
        return this.messagesComponent.find('.ui-messages-error-summary');
    }
}