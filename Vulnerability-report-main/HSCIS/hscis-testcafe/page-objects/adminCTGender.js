import { Selector, t } from 'testcafe';
import { selectorById, selectorByAria } from '../helpers/selector.helper';

export default class adminCTGender {
    constructor () {
		this.accordionMenu = selectorById("codetablesPagesID");
        this.dataForm = selectorById("genderForm");
		this.createButton = selectorById("genderCreateButton");
        this.dataTable = selectorById("genderTable");
        this.dataTableData = selectorById("genderTable_data");
		this.dialogHeaderText = 'Update Gender';
		this.createDialogHeaderText = 'Create Gender';

		this.descriptionInput = selectorById("genderUpdateDescriptionText");
		this.codeInputCreate = selectorById("genderCreateCodeText");
		this.descriptionInputCreate = selectorById("genderCreateDescriptionText");
		this.errorMessage = selectorById("genderMessages");
	}
	
    codeTablesMenuOpen() {
        return this.accordionMenu.find(".ui-accordion-header.ui-helper-reset.ui-state-default.ui-state-active.ui-corner-top");
    }
	
    codeTablesMenuClosed() {
        return this.accordionMenu.find(".ui-accordion-header.ui-helper-reset.ui-state-default.ui-corner-all");
    }
	
	getDatas() {
        return this.dataTableData.find(".ui-datatable-selectable");
    }
	
	getColumnHead() {
		return selectorById("codetablesPagesID:genderForm:genderTable_head").child().child(0);
	}
	
	async changeOrder() {
        await t.
            click(this.getColumnHead());
    }
	
	getDatasTestRow() {
		return Selector('td').withExactText('9').parent('tr');
	}
    
	dataDialog() {
        return Selector("span").withText(this.dialogHeaderText).parent(".ui-confirm-dialog");
    }

    dataDialogYesButton() {
        return this.dataDialog().find(".ui-button.ui-widget.ui-state-default.ui-corner-all.ui-button-text-only");
    }
    
    dataDialogNoButton() {
        return this.dataDialog().find(".ui-confirmdialog-no");
    }

	async confirmDataDialog() {
        await t.
            click(this.dataDialogYesButton());
    }
    
    async cancelDataDialog() {
        await t.
            click(this.dataDialogNoButton());
    }

	createDataDialog() {
        return Selector("span").withText(this.createDialogHeaderText).parent(".ui-confirm-dialog");
    }

    createDataDialogYesButton() {
        return this.createDataDialog().find(".ui-button.ui-widget.ui-state-default.ui-corner-all.ui-button-text-only");
    }
    
    createDataDialogNoButton() {
        return this.createDataDialog().find(".ui-confirmdialog-no");
    }

	async confirmCreateDataDialog() {
        await t.
            click(this.createDataDialogYesButton());
    }
    
    async cancelCreateDataDialog() {
        await t.
            click(this.createDataDialogNoButton());
    }
}