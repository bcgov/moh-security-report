import { Selector, t } from 'testcafe';
import { selectorById, selectorByAria } from '../helpers/selector.helper';

export default class adminCTClassificationCodes {
    constructor () {
		this.accordionMenu = selectorById("codetablesPagesID");
        this.dataForm = selectorById("classificationCodesForm");
        this.inputSearchString = selectorById("inputSearchString");
        this.searchButton = selectorById("searchButtonGo");
		this.createButton = selectorById("classificationCodesFormCreateButton");
        this.dataTable = selectorById("classificationCodesTable");
        this.dataTableData = selectorById("classificationCodesTable_data");
		this.dialogHeaderText = 'Update Classification Code';
		this.createDialogHeaderText = 'Create Classification Code';
		this.dialogMessageText = 'Record was successfully deleted';
		this.searchString = 'Medical';
		this.codeInput = selectorById("classificationCodesCreateClassificationCodeText");
		this.rateGrid = selectorById("classificationCodesRateGridText");
		this.messageInput = selectorById("selectedClassificationCodeDescriptionText");
		this.messageInputCreate = selectorById("descriptionTextCreate");
		this.rateGridInput = selectorById("classificationCodesCreateRateGridText");
		this.activeInput = selectorById("activeFlagMenuCreate");
        this.activeInputOption = selectorById("codetablesPagesID:classificationCodesCreateForm:activeFlagMenuCreate_items").find("li");
		this.groupInput = selectorById("designatedGroupMenuCreate");
        this.groupInputOption = selectorById("codetablesPagesID:classificationCodesCreateForm:designatedGroupMenuCreate_items").find("li");
		this.errorMessage = selectorById("classificationCodesMessages");
		this.classificationCodesActiveFlagText = selectorById("classificationCodesActiveFlagText");
		this.classificationCodesDesignatedGroupText = selectorById("classificationCodesDesignatedGroupText");
	}
	
    classificationCodesMenuOpen() {
        return this.accordionMenu.find(".ui-accordion-header.ui-helper-reset.ui-state-default.ui-state-active.ui-corner-top");
    }
	
    classificationCodesMenuClosed() {
        return this.accordionMenu.find(".ui-accordion-header.ui-helper-reset.ui-state-default.ui-corner-all");
    }
	
	getDatas() {
        return this.dataTableData.find(".ui-datatable-selectable");
    }
    
	dataDialog() {
        return Selector("span").withText(this.dialogHeaderText).parent(".ui-confirm-dialog");
    }

    dataDialogYesButton() {
        return this.dataDialog().find(".ui-button.ui-widget.ui-state-default.ui-corner-all.ui-button-text-only");
    }
    
    dataDialogNoButton() {
        return this.dataDialog().find(".ui-confirmdialog-no");
    }

	async confirmDataDialog() {
        await t.
            click(this.dataDialogYesButton());
    }
    
    async cancelDataDialog() {
        await t.
            click(this.dataDialogNoButton());
    }

	createDataDialog() {
        return Selector("span").withText(this.createDialogHeaderText).parent(".ui-confirm-dialog");
    }

    createDataDialogYesButton() {
        return this.createDataDialog().find(".ui-button.ui-widget.ui-state-default.ui-corner-all.ui-button-text-only");
    }
    
    createDataDialogNoButton() {
        return this.createDataDialog().find(".ui-confirmdialog-no");
    }

	async confirmCreateDataDialog() {
        await t.
            click(this.createDataDialogYesButton());
    }
    
    async cancelCreateDataDialog() {
        await t.
            click(this.createDataDialogNoButton());
    }

	dialogMessage() {
        return Selector("span").withText(this.dialogMessageText);
    }
}