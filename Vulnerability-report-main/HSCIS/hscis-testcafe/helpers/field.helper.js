import { Selector, t } from 'testcafe';
import { ClientFunction } from 'testcafe';
import { getShortDateString } from '../helpers/date.helper';

function isDisabled(component) {
    return component.hasClass("ui-state-disabled") || component.hasClass("prime-datePicker-disabled");
}

function hasErrorState(component) {
    return component.hasClass("ui-state-error");
}

async function clearInput(component) {
    await t
        .click(component)
        .pressKey('ctrl+a delete');
}

async function closeDatePicker(component) {
    let datepickerButton = component.parent(".p-datepicker").find(".ui-datepicker-trigger");
    
    //Close date selector panel
    await t.
        click(datepickerButton);
}

async function clearDatePickerInput(component) {
    await clearInput(component);
    await closeDatePicker(component);
}

async function selectInDropdownList(component, componentOptions, valueToSelect) {
    await t
        .click(component);
        
    //Wait for the list to open
    await t
        .wait(500);
    
    await t
        .click(componentOptions.withText(valueToSelect));
    
    //Wait for the list to close
    await t
        .wait(500);
}

async function selectDateInDatePicker(component, date) {
    if (typeof date !== "string") {
        date = getShortDateString(date);
    }
    let dateArr = date.split(" ");
    await t
        .typeText(component, dateArr[0]);
    await t
        .typeText(component, " ");
    await t
        .typeText(component, dateArr[1]);
    await t
        .typeText(component, " ");
    
    await closeDatePicker(component);
    await t
        .typeText(component, dateArr[2]);
        
    await closeDatePicker(component);
}

async function setValueInHiddenInput(componentName, value) {
    const setInputValue = ClientFunction(() => document.querySelector(componentName).value = value, {
        dependencies: { componentName, value }
    });
    await setInputValue();
}

export { isDisabled, hasErrorState, clearInput, clearDatePickerInput, selectInDropdownList, selectDateInDatePicker, setValueInHiddenInput, closeDatePicker };