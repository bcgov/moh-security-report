/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.pacl.web;

import jakarta.inject.Inject;
import jakarta.servlet.Filter;
import jakarta.servlet.FilterChain;
import jakarta.servlet.FilterConfig;
import jakarta.servlet.ServletException;
import jakarta.servlet.ServletRequest;
import jakarta.servlet.ServletResponse;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;


/**
 *  A user is not allowed to access other screens without successfully logging into HI DB 
 * @author grant.shan
 */
public class HealthideasLoginFilter implements Filter {

    private FilterConfig filterConfig = null;
    
    @Inject
    private HealthIdeasLogin hiLogin;

    /**
     * Default constructor.
     */
    public HealthideasLoginFilter() {
    }

    /**
     * Make sure all users login Health Ideas first
     * @param request The servlet request we are processing
     * @param response The servlet response we are creating
     * @param chain The filter chain we are processing
     *
     * @exception IOException if an input/output error occurs
     * @exception ServletException if a servlet error occurs
     */
    @Override
    public void doFilter(ServletRequest request, ServletResponse response,
            FilterChain chain)
            throws IOException, ServletException {

        HttpServletRequest req = (HttpServletRequest) request;
        request.setCharacterEncoding("UTF-8");
        if (req.getRequestURL().toString().endsWith("/healthideasLogin.xhtml")
                || req.getRequestURL().toString().endsWith("/accessDenied.xhtml")
                // Bypass filtering on resources after removal of "/faces/" from Faces Servlet <url-pattern>
                || req.getRequestURL().toString().contains("/jakarta.faces.resource")
                || req.getRequestURL().toString().contains("/resources")
                || (hiLogin != null && hiLogin.getUserHasLoggedIn())) {
            // User is logged in, continue the request.
            chain.doFilter(request, response);
        } else {
            // User is not logged in, so redirect to Health Ideas Login.
            HttpServletResponse res = (HttpServletResponse) response;
            res.sendRedirect(req.getContextPath() + "/healthideasLogin.xhtml");
        }
    }

    /**
     * Return the filter configuration object for this filter.
     * @return 
     */
    public FilterConfig getFilterConfig() {
        return (this.filterConfig);
    }

    /**
     * Set the filter configuration object for this filter.
     *
     * @param filterConfig The filter configuration object
     */
    public void setFilterConfig(FilterConfig filterConfig) {
        this.filterConfig = filterConfig;
    }

    /**
     * Destroy method for this filter
     */
    @Override
    public void destroy() {
    }

    /**
     * Init method for this filter
     * @param filterConfig 
     */
    @Override
    public void init(FilterConfig filterConfig) {
        this.filterConfig = filterConfig;

    }

    /**
     * Return a String representation of this object.
     */
    @Override
    public String toString() {
        if (filterConfig == null) {
            return ("HealthideasLoginFilter()");
        }
        StringBuilder sb = new StringBuilder("HealthideasLoginFilter(");
        sb.append(filterConfig);
        sb.append(")");
        return (sb.toString());
    }

    /**
     *
     * @param msg log information.
     */
    public void log(String msg) {
        filterConfig.getServletContext().log(msg);
    }
}
