/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.pacl.web;

import ca.bc.gov.health.jsf.BaseBean;
import ca.bc.gov.health.pacl.ejb.entity.ApplicationAuditDtlLog;
import ca.bc.gov.health.pacl.ejb.entity.ApplicationAuditLog;
import ca.bc.gov.health.pacl.ejb.session.ApplicationAuditLogFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.HealthideasFacadeLocal;
import jakarta.ejb.EJB;
import jakarta.enterprise.context.SessionScoped;
import jakarta.faces.context.FacesContext;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import jakarta.persistence.EntityManager;
import java.io.IOException;
import java.security.Principal;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;
import java.util.logging.Logger;

/**
 * Health Ideas DB login bean. Validate and audit user actions.
 *
 * @author grant.shan
 */
@Named("HealthIdeasLogin")
@SessionScoped
public class HealthIdeasLogin extends BaseBean {

    private static ResourceBundle bundle = ResourceBundle.getBundle("MessageResources", FacesContext.getCurrentInstance().getViewRoot().getLocale());
    private static Logger logger = Logger.getLogger(HealthIdeasLogin.class.getName());
    
    @EJB
    private transient HealthideasFacadeLocal healthideasFacade;
    
    @EJB
    private transient ApplicationAuditLogFacadeLocal applicationAuditLogFacade;
    
    @Inject
    private ApplicationSelectionBean app;
    
    private String userID;
    private String password;
    private static String userChannel;
    private boolean isLoggedIn;

    /**
     * Default constructor.
     */
    public HealthIdeasLogin() {
    }

    public HealthideasFacadeLocal getHealthideasFacade() {
        return healthideasFacade;
    }

    /**
     * Validate user login.
     *
     * @return next screen
     */
    public String authenticate() {

        // return screen
        String result = null;
        //Create Audit log
        ApplicationAuditLog applicationAuditLog = new ApplicationAuditLog("HealthIdeasAuthenticate");
        List<ApplicationAuditDtlLog> logDetailList = new ArrayList<>();
        logDetailList.add(new ApplicationAuditDtlLog(applicationAuditLog, "HiUsername", userID));
        FacesContext facesContext = FacesContext.getCurrentInstance();
        Principal principal = facesContext.getExternalContext().getUserPrincipal();
        logDetailList.add(new ApplicationAuditDtlLog(applicationAuditLog, "IdirID", principal.getName()));

        //HI Login validation
        try {
            EntityManager entityManager = healthideasFacade.createEntityManagerInstance(userID, password);

            if (entityManager != null) {
                if ("PharmaCare_Auditor".equals(getUserRole())
                        || "SYSADMIN".equals(getUserRole())) {
                    result = "welcome.xhtml?faces-redirect=true";
                    app.setApp("pacl");
                } else if ("EACL_Auditor".equals(getUserRole())
                        || "EACL_Sysadmin".equals(getUserRole())) {
                    result = "WelcomeEACL.xhtml?faces-redirect=true";
                    app.setApp("sva");
                } else if ("Super_Auditor".equals(getUserRole())
                        || "Super_Sysadmin".equals(getUserRole())) {
                    result = "applicationSelection.xhtml?faces-redirect=true";
                }

                //Sets userchannel for push messages to the HI login
                userChannel = "/" + userID;
                logDetailList.add(new ApplicationAuditDtlLog(applicationAuditLog, "Result", "Success"));
                isLoggedIn = true;

            } else {
                logDetailList.add(new ApplicationAuditDtlLog(applicationAuditLog, "Result", "Fail"));
                addErrorMessage(bundle.getString("hi.Login.Invalid"));
                isLoggedIn = false;
            }

            applicationAuditLog.setApplicationAuditDtlLogList(logDetailList);
            applicationAuditLogFacade.create(applicationAuditLog);
        } catch (Exception ex) {
            ex.getMessage();
            logDetailList.add(new ApplicationAuditDtlLog(applicationAuditLog, "Result", "Fail"));
            addErrorMessage(bundle.getString("hi.Login.Invalid"));
            isLoggedIn = false;
        }
        
        return result;
    }

    /**
     * This function is use to redirect the user to the home page if it is already logged on
     *
     * @throws IOException
     */
    public void onPageLoad() throws IOException {
        if (isLoggedIn == true) {
            switch (app.getApp()) {
                case "pacl":
                    FacesContext.getCurrentInstance().getExternalContext().redirect("welcome.xhtml");
                    break;
                case "sva":
                    FacesContext.getCurrentInstance().getExternalContext().redirect("WelcomeEACL.xhtml");
                    break;
                case "":
                    FacesContext.getCurrentInstance().getExternalContext().redirect("applicationSelection.xhtml");
                    break;
                default:
                    break;
            }
        }
    }

    /**
     * Check if a user is logged in Health Ideas DB successfully
     *
     * @return true if logged in
     */
    public boolean getUserHasLoggedIn() {
        return isLoggedIn;

    }

    /**
     *
     * @return UserID
     */
    public String getUserID() {
        return userID;
    }

    /**
     *
     * @param userID
     */
    public void setUserID(String userID) {
        this.userID = userID;
    }

    /**
     *
     * @return user password
     */
    public String getPassword() {
        return password;
    }

    /**
     * set user password
     *
     * @param password
     */
    public void setPassword(String password) {
        this.password = password;
    }

    public EntityManager getEntityManager() {
        return healthideasFacade.createEntityManagerInstance(userID, password);
    }

    public static String getUserChannel() {
        return userChannel;
    }
}
