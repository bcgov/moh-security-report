package ca.bc.gov.health.pacl.web;

import ca.bc.gov.health.jsf.SelectItemHelper;
import ca.bc.gov.health.pacl.ejb.session.AdminOptionsFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.CodesFeeItemLongExclFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.CodesLetterStatusFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.CodesLetterTemplateTypeFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.CodesMaintCntrlFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.CodesPcarePlanFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.CodesProjectStatusFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.CodesProjectTypeFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.EmailReminderFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.LetterFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.LetterTemplateFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.PharmacyProviderFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.PlansMFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.PrescriptionsFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.ProjectFacadeLocal;
import ca.bc.gov.health.pacl.ejb.session.ProstheticsAndOrthoticsFacadeLocal;
import jakarta.annotation.PostConstruct;
import jakarta.ejb.EJB;
import jakarta.enterprise.context.ApplicationScoped;
import jakarta.faces.model.SelectItem;
import jakarta.inject.Named;
import java.util.ArrayList;
import java.util.List;

@ApplicationScoped
@Named("Droplists")
public class Droplists {

    @EJB
    private AdminOptionsFacadeLocal adminOptionsFacade;
    @EJB
    private CodesLetterStatusFacadeLocal codesLetterStatusFacade;
    @EJB
    private CodesPcarePlanFacadeLocal codesPcarePlanFacade;
    @EJB
    private CodesProjectStatusFacadeLocal codesProjectStatusFacade;
    @EJB
    private CodesProjectTypeFacadeLocal codesProjectTypeFacade;
    @EJB
    private EmailReminderFacadeLocal emailReminderFacade;
    @EJB
    private LetterFacadeLocal letterFacade;
    @EJB
    private LetterTemplateFacadeLocal letterTemplateFacade;
    @EJB
    private PharmacyProviderFacadeLocal pharmacyProviderFacade;
    @EJB
    private PlansMFacadeLocal plansMFacade;
    @EJB
    private PrescriptionsFacadeLocal prescriptionsFacade;
    @EJB
    private ProjectFacadeLocal projectFacade;
    @EJB
    private ProstheticsAndOrthoticsFacadeLocal prostheticsAndOrthoticsFacade;
    @EJB
    private CodesLetterTemplateTypeFacadeLocal codesLetterTemplateTypeFacade;
    @EJB
    private CodesMaintCntrlFacadeLocal codesMaintCntrlFacade;
    @EJB
    private CodesFeeItemLongExclFacadeLocal codesFeeItemLongFacade;
    private List<SelectItem> codesDrugRestrictionss;
    private List<SelectItem> codesLetterStatuss;
    private List<SelectItem> filteredLetterStatuses;
    private List<SelectItem> codesPcarePlans;
    private List<SelectItem> codesPcarePlansPharm;
    private List<SelectItem> codesPcarePlanM;
    private List<SelectItem> codesPcareDefaultSelect;
    private List<SelectItem> codesProjectStatuss;
    private List<SelectItem> codesProjectSvaStatuss;
    private List<SelectItem> codesProjectTypes;
    private List<SelectItem> codesLetterTemplateTypes;
    private List<SelectItem> codesSVAProjectTypes;
    private List<SelectItem> codesSVALetterTemplateTypes;
    private List<SelectItem> exclusionTables;
    private List<SelectItem> codesFeeItemLongList;
  
    @PostConstruct
    public void init() {
        codesDrugRestrictionss = new ArrayList<>();
        codesLetterStatuss = SelectItemHelper.buildSelectItemList(codesLetterStatusFacade.findAll(), "name", "id");
        filteredLetterStatuses = SelectItemHelper.buildSelectItemListWithoutSort(codesLetterStatusFacade.findFilteredLetterStatuses(), "name", "id");
        codesPcarePlans = SelectItemHelper.buildSelectItemList(codesPcarePlanFacade.findAll(), "name", "id");
        codesPcarePlansPharm = SelectItemHelper.buildSelectItemList(codesPcarePlanFacade.findPcareCodesForPharm(), "name", "id");
        codesPcarePlanM = SelectItemHelper.buildSelectItemList(codesPcarePlanFacade.findByDefaultSelectedPlanM(), "name", "id");
        codesPcareDefaultSelect = SelectItemHelper.buildSelectItemList(codesPcarePlanFacade.findByDefaultSelected(), "name", "id");
        codesProjectStatuss = SelectItemHelper.buildSelectItemList(codesProjectStatusFacade.findAll(), "name", "id");
        codesProjectTypes = SelectItemHelper.buildSelectItemList(codesProjectTypeFacade.findPharmaProjectType(), "name", "id");
        codesLetterTemplateTypes = SelectItemHelper.buildSelectItemList(codesLetterTemplateTypeFacade.findPharmaLetterTemplateType(), "name", "id");
        codesSVAProjectTypes = SelectItemHelper.buildSelectItemList(codesProjectTypeFacade.findSVAProjectType(), "name", "id");
        codesSVALetterTemplateTypes = SelectItemHelper.buildSelectItemList(codesLetterTemplateTypeFacade.findSVALetterTemplateType(), "name", "id");
        codesProjectSvaStatuss = SelectItemHelper.buildSelectItemList(codesProjectStatusFacade.findSvaProjectStatus(), "name", "id");
        exclusionTables = SelectItemHelper.buildSelectItemList(codesMaintCntrlFacade.findAll(), "tblNameExclusion", "id");
        codesFeeItemLongList = SelectItemHelper.buildSelectItemList(codesFeeItemLongFacade.findAll(), "fitmDscrCd", "id");
    }

    public List<SelectItem> getAdminOptionss() {
        return SelectItemHelper.buildSelectItemList(adminOptionsFacade.findAll(), "defaultPatientLimit", "id");
    }

    public List<SelectItem> getCodesDrugRestrictionss() {
        return codesDrugRestrictionss;
    }

    public List<SelectItem> getCodesLetterStatuss() {
        return codesLetterStatuss;
    }

    public List<SelectItem> getFilteredLetterStatuses() {
        return filteredLetterStatuses;
    }

    public List<SelectItem> getCodesPcarePlans() {
        return codesPcarePlans;
    }

    public List<SelectItem> getCodesPcarePlansPharm() {
        return codesPcarePlansPharm;
    }

    public List<SelectItem> getCodesPcarePlanM() {
        return codesPcarePlanM;
    }

    public final List<SelectItem> getCodesPcareDefaultSelect() {
        return codesPcareDefaultSelect;
    }

    public List<SelectItem> getCodesProjectStatuss() {
        return codesProjectStatuss;
    }

    public List<SelectItem> getCodesProjectTypes() {
        return codesProjectTypes;
    }

    public List<SelectItem> getCodesLetterTemplateTypes() {
        return codesLetterTemplateTypes;
    }

    public List<SelectItem> getEmailReminders() {
        return SelectItemHelper.buildSelectItemList(emailReminderFacade.findAll(), "userNotified", "id");
    }

    public List<SelectItem> getLetters() {
        return SelectItemHelper.buildSelectItemList(letterFacade.findAll(), "barcode", "id");
    }

    public List<SelectItem> getLetterTemplates() {
        return SelectItemHelper.buildSelectItemList(letterTemplateFacade.findAll(), "name", "id");
    }

    public List<SelectItem> getPharmacyProviders() {
        return SelectItemHelper.buildSelectItemList(pharmacyProviderFacade.findAll(), "name", "id");
    }

    public List<SelectItem> getPlansMs() {
        return SelectItemHelper.buildSelectItemList(plansMFacade.findAll(), "planMDate", "id");
    }

    public List<SelectItem> getPrescriptionss() {
        return SelectItemHelper.buildSelectItemList(prescriptionsFacade.findAll(), "prescriptionDate", "id");
    }

    public List<SelectItem> getProjects() {
        return SelectItemHelper.buildSelectItemList(projectFacade.findAll(), "name", "id");
    }

    public List<SelectItem> getProstheticsAndOrthoticss() {
        return SelectItemHelper.buildSelectItemList(prostheticsAndOrthoticsFacade.findAll(), "pAndODate", "id");
    }

    public List<SelectItem> getCodesSVAProjectTypes() {
        return codesSVAProjectTypes;
    }

    public List<SelectItem> getCodesSVALetterTemplateTypes() {
        return codesSVALetterTemplateTypes;
    }

    public List<SelectItem> getCodesProjectSvaStatuss() {
        return codesProjectSvaStatuss;
    }

    public void setCodesProjectSvaStatuss(List<SelectItem> codesProjectSvaStatuss) {
        this.codesProjectSvaStatuss = codesProjectSvaStatuss;
    }

    public List<SelectItem> getExclusionTables() {
        return exclusionTables;
    }

    public void setExclusionTables(List<SelectItem> tableMaintenance) {
        this.exclusionTables = tableMaintenance;
    }

    public List<SelectItem> getCodesFeeItemLongList() {
        return codesFeeItemLongList;
    }

    public void setCodesFeeItemLongList(List<SelectItem> codesFeeItemLongList) {
        this.codesFeeItemLongList = codesFeeItemLongList;
    }
    
    
}