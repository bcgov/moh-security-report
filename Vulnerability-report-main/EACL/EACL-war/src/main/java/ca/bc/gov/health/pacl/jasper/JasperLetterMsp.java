/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.pacl.jasper;

import ca.bc.gov.health.pacl.ejb.entity.CodesLetterStatus;
import ca.bc.gov.health.pacl.ejb.entity.Letter;
import ca.bc.gov.health.pacl.ejb.entity.LetterMspDetail;
import ca.bc.gov.health.pacl.ejb.entity.LetterTemplate;
import ca.bc.gov.health.pacl.ejb.entity.PracSvaProject;
import ca.bc.gov.health.pacl.ejb.entity.ServiceMsp;
import com.lowagie.text.pdf.Barcode128;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.joda.time.DateTime;
import org.joda.time.Years;

/**
 *
 * @author Michael.Tremblay
 */
public class JasperLetterMsp extends JasperLetter{
    
    private static final long serialVersionUID = 1L;

    /**
     * Indicates whether this letter is selected on the page
     */
    private boolean selected = false;
    /**
     * Instance of the entity class
     */
    private LetterMspDetail instance2;
    
    private List<String> pdFitmDscrList;

    public JasperLetterMsp(Letter instance, LetterMspDetail instance2 ) {
        super(instance);
        this.instance2=instance2;
        pdFitmDscrList = new ArrayList<>();
        getSortedServiceMspList().forEach((ServiceMsp service) -> {
            pdFitmDscrList.add(service.getPdFitmDscr());
        });
        java.util.Collections.sort(pdFitmDscrList);
    }
    
    /**
     * Generates a graphical presentation of barcode in Code128 format
     *
     * @return Barcode image to be rendered by Jasper report
     */
    @Override
    public java.awt.Image getBarCode() {
        Barcode128 barcode = new Barcode128();
        barcode.setCode(Long.toString(this.instance2.getBarcode()));
        return barcode.createAwtImage(Color.BLACK, Color.WHITE);
    }

    /*
     * Getters from the letter entity
     */
    @Override
    public Long getPhn() {
        return instance2.getPhn();
    }
    @Override
    public String getCaseCode() {
        return instance2.getCaseCode();
    }
    
    @Override
    public Date getLetterDate() {
        return instance2.getLetterDate();
    }

    @Override
    public String getRecipientLastName() {
        return instance2.getRecipientLastName();
    }

    @Override
    public String getRecipientFirstName() {
        return instance2.getRecipientFirstName();
    }

    @Override
    public String getRecipientAddress() {
        return instance2.getRecipientAddress();
    }
    
    public List<ServiceMsp> getServiceMspList() {
        return instance2.getServiceMspList();
    }
    
    public List<ServiceMsp> getSortedServiceMspList() {
        return instance2.getSortedServiceMspList();
    }

    @Override
    public String getRecipientCountry() {
        return instance2.getRecipientCountry();
    }
    
    @Override
    public String getRecipientCity() {
        return instance2.getRecipientCity();
    }
    
    @Override
    public String getRecipientProvince() {
        return instance2.getRecipientProvince();
    }
    
    @Override
    public String getRecipientPostalCode() {
        return instance2.getRecipientPostalCode();
    }
    
    @Override
    public Date getRecipientBirthday() {
        return instance2.getRecipientBirthday();
    }
   
    @Override
    public Long getBarcode() {
        return instance2.getBarcode();
    }

    /**
     * Calculates the patient's age in years
     *
     * @return the number of complete years between the patient's birthday and
     * the current date
     */
    
    @Override
    public int getAge() {
        Years y = Years.yearsBetween(new DateTime(instance2.getRecipientBirthday().getTime()), new DateTime(new Date().getTime()));
        return y.getYears();
    }

    public LetterMspDetail getLetterMsp() {
        return this.instance2;
    }

    public void setLetterMsp(LetterMspDetail letter) {
        this.instance2 = letter;
    }
    
    @Override
    public char getLetterPrintedFlag() {
        return instance2.getLetterPrintedFlag();
    }
    
    @Override
    public void setLetterPrintedFlag(char letterPrintedFlag) {
        instance2.setLetterPrintedFlag(letterPrintedFlag);
    }

    public PracSvaProject getPracSvaProjectId() {
        return instance2.getPracSvaProjectId();
    }
    
    @Override
    public CodesLetterStatus getStatusId() {
        return instance2.getStatusId();
    }
    
    @Override
    public void setLetterDate(Date date) {
        instance2.setLetterDate(date);
    }

    public String getPracLastName() {
        return instance2.getPracSvaProjectId().getPracSurname();
    }
    
    public String getPracFirstName() {
        return instance2.getPracSvaProjectId().getPracFirstGvnNm();
    }

    public String getPracCode() {
        return instance2.getPracSvaProjectId().getPracBllgNum();
    }
    
    @Override
    public LetterTemplate getLetterTemplateId() {
        return instance2.getLetterTemplateId();
    }
    
    public String getSvaProjectDesc() {
        return instance2.getPracSvaProjectId().getSvaProjectDesc();
    }

    public String getSvaProjectCode() {
        return instance2.getPracSvaProjectId().getSvaProjectCode();
    }
    
    public List<String> getPdFitmDscrList(){
        return pdFitmDscrList;
    }
}

