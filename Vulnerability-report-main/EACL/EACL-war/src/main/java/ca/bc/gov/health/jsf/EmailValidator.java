/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.jsf;

import jakarta.faces.application.FacesMessage;
import jakarta.faces.component.UIComponent;
import jakarta.faces.context.FacesContext;
import jakarta.faces.validator.FacesValidator;
import jakarta.faces.validator.Validator;
import jakarta.faces.validator.ValidatorException;

/**
 * Email validator utility for admin options screen.
 *
 * @author dan.stepanov
 */
@FacesValidator("validator.emailFormat")
public class EmailValidator implements Validator {

    /**
     * Validates email addresses, removes chars and formats email addresses.
     *
     * @param context FacesContext - FacesContext object
     * @param component UIComponent - UIComponent object
     * @param value Object - Object email address input value from the screen
     * @throws ValidatorException
     *
     */
    @Override
    public void validate(FacesContext context, UIComponent component, Object value) throws ValidatorException {

        String emailAddresses = ((String) value).toLowerCase();
        String emailAddress;
        int fromInt = 0;
        int toInt;
        int len;

        if (emailAddresses.contains(",") || emailAddresses.contains(";") || emailAddresses.contains(" ")) {
            // format the string for efficient parsing
            emailAddresses = emailAddresses.replaceAll("[;\\s]+", ",");
            while (emailAddresses.contains(",,")) {
                emailAddresses = emailAddresses.replaceAll(",,", ",");
            }

        }

        // the length of the string is used to determine when to stop parsing
        len = emailAddresses.length();

        // parse the string in a loop, and add each email address to the array
        while (fromInt < len) {
            toInt = emailAddresses.indexOf(",", fromInt) > 0 ? emailAddresses.indexOf(",", fromInt) : len;
            emailAddress = emailAddresses.substring(fromInt, toInt);

            if(!emailAddress.matches("^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,4})$")) {
                FacesMessage message = new FacesMessage("This email address"
                        + " was not properly formatted: "  + emailAddress);
                message.setSeverity(FacesMessage.SEVERITY_ERROR);
                throw new ValidatorException(message);
            }

            fromInt = toInt + 1;
        }

    }

}