/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.pacl.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlTransient;
import java.io.Serializable;
import java.util.Date;
import java.util.List;

/**
 *
 * @author Dan.Stepanov
 */
@Entity
@EntityListeners({AuditListener.class})

@Table(name = "PHARMACY_PROVIDER")
@SequenceGenerator(name="PharmacyProviderSeq", sequenceName="PHARMACY_PROVIDER_SEQ", allocationSize=1, initialValue=1)

@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "PharmacyProvider.findAll", query = "SELECT p FROM PharmacyProvider p"),
    @NamedQuery(name = "PharmacyProvider.findById", query = "SELECT p FROM PharmacyProvider p WHERE p.id = :id"),
    @NamedQuery(name = "PharmacyProvider.findByName", query = "SELECT p FROM PharmacyProvider p WHERE p.name = :name"),
    @NamedQuery(name = "PharmacyProvider.findByCode", query = "SELECT p FROM PharmacyProvider p WHERE p.code = :code"),
    @NamedQuery(name = "PharmacyProvider.findProvidersByProjectId", query = "SELECT p FROM PharmacyProvider p WHERE p.projectId = :projectId"),
    @NamedQuery(name = "PharmacyProvider.findByCreatedByNm", query = "SELECT p FROM PharmacyProvider p WHERE p.createdByNm = :createdByNm"),
    @NamedQuery(name = "PharmacyProvider.findByCreatedOnDtm", query = "SELECT p FROM PharmacyProvider p WHERE p.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "PharmacyProvider.findByLastModifiedByNm", query = "SELECT p FROM PharmacyProvider p WHERE p.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "PharmacyProvider.findByLastModifiedOnDtm", query = "SELECT p FROM PharmacyProvider p WHERE p.lastModifiedOnDtm = :lastModifiedOnDtm")})
public class PharmacyProvider implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="PharmacyProviderSeq")
    
    @NotNull
    @Column(name = "ID")
    private Long id;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 240)
    @Column(name = "NAME")
    private String name;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 240)
    @Column(name = "CODE")
    private String code;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Size(max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
    @Version
    private Long statelessTransactionNbr;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "pharmacyProviderId")
    private List<Letter> letterList;
    @JoinColumn(name = "PROJECT_ID", referencedColumnName = "ID")
    @ManyToOne(optional = false)
    private Project projectId;

    /**
     * new value for letters mailed on statistical report.
     */
    private transient int letterMailed;
    /**
     * new value for letters Non-Delivered on statistical report.
     */
    private transient int letterNonDelivered;
    /**
     * new value for letters delivered on statistical report.
     */
    private transient int letterDelivered;
    /**
     * new value for total letters returned on statistical report.
     */
    private transient int letterTotalReturns;
    /**
     * new value for total percentage of letters returned out of the
     * number delivered on statistical report.
     */
    private transient int letterTotalPercentReturns;
    /**
     * new value for total letters with anomaly on statistical report.
     */
    private transient int letterTotalAnomaly;
    /**
     * new value for total percentage of anomaly letters returned out of the
     * number delivered on statistical report.
     */
    private transient int letterTotalPercentAnomaly;

    public PharmacyProvider() {
    }

    public PharmacyProvider(Long id) {
        this.id = id;
    }

    public PharmacyProvider(Long id, String name, String code, String createdByNm, Date createdOnDtm) {
        this.id = id;
        this.name = name;
        this.code = code;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    @XmlTransient
    public List<Letter> getLetterList() {
        return letterList;
    }

    public void setLetterList(List<Letter> letterList) {
        this.letterList = letterList;
    }

    public Project getProjectId() {
        return projectId;
    }

    public void setProjectId(Project projectId) {
        this.projectId = projectId;
    }

    public int getLetterMailed() {
        return letterMailed;
    }

    public void setLetterMailed(int letterMailed) {
        this.letterMailed = letterMailed;
    }

    public int getLetterNonDelivered() {
        return letterNonDelivered;
    }

    public void setLetterNonDelivered(int letterNonDelivered) {
        this.letterNonDelivered = letterNonDelivered;
    }

    public int getLetterDelivered() {
        return letterDelivered;
    }

    public void setLetterDelivered(int letterDelivered) {
        this.letterDelivered = letterDelivered;
    }

    public int getLetterTotalReturns() {
        return letterTotalReturns;
    }

    public void setLetterTotalReturns(int letterTotalReturns) {
        this.letterTotalReturns = letterTotalReturns;
    }

    public int getLetterTotalPercentReturns() {
        return letterTotalPercentReturns;
    }

    public void setLetterTotalPercentReturns(int letterTotalPercentReturns) {
        this.letterTotalPercentReturns = letterTotalPercentReturns;
    }

    public int getLetterTotalAnomaly() {
        return letterTotalAnomaly;
    }

    public void setLetterTotalAnomaly(int letterTotalAnomaly) {
        this.letterTotalAnomaly = letterTotalAnomaly;
    }

    public int getLetterTotalPercentAnomaly() {
        return letterTotalPercentAnomaly;
    }

    public void setLetterTotalPercentAnomaly(int letterTotalPercentAnomaly) {
        this.letterTotalPercentAnomaly = letterTotalPercentAnomaly;
    }


    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof PharmacyProvider)) {
            return false;
        }
        PharmacyProvider other = (PharmacyProvider) object;
        return !((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id)));
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.pacl.ejb.entity.PharmacyProvider[ id=" + id + " ]";
    }
    
}
