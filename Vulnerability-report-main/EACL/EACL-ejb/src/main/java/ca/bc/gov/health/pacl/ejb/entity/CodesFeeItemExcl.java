/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.pacl.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import jakarta.xml.bind.annotation.XmlRootElement;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author Michael.Tremblay
 */
@Entity
@EntityListeners({AuditListener.class})

@Table(name = "CODES_FEE_ITEM_EXCL")
@SequenceGenerator(name="CodesFeeItemExclSeq", sequenceName="CODES_FEE_ITEM_EXCL_SEQ", allocationSize=1, initialValue=1)

@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "CodesFeeItemExcl.findAll", query = "SELECT c FROM CodesFeeItemExcl c"),
    @NamedQuery(name = "CodesFeeItemExcl.findById", query = "SELECT c FROM CodesFeeItemExcl c WHERE c.id = :id"),
    @NamedQuery(name = "CodesFeeItemExcl.findByCodesMaintCntrlId", query = "SELECT c FROM CodesFeeItemExcl c WHERE c.codesMaintCntrlId = :codesMaintCntrlId"),
    @NamedQuery(name = "CodesFeeItemExcl.findByFitmCd", query = "SELECT c FROM CodesFeeItemExcl c WHERE c.fitmCd = :fitmCd"),
    @NamedQuery(name = "CodesFeeItemExcl.findByFitmCdLike", query = "SELECT c FROM CodesFeeItemExcl c WHERE c.fitmCd LIKE :fitmCd"),
    @NamedQuery(name = "CodesFeeItemExcl.findByFitmCdClass", query = "SELECT c FROM CodesFeeItemExcl c WHERE c.fitmCdClass = :fitmCdClass"),
    @NamedQuery(name = "CodesFeeItemExcl.findByExclusionFlag", query = "SELECT c FROM CodesFeeItemExcl c WHERE c.exclusionFlag = :exclusionFlag"),
    @NamedQuery(name = "CodesFeeItemExcl.findByFitmDscrCd", query = "SELECT c FROM CodesFeeItemExcl c WHERE c.fitmDscrCd = :fitmDscrCd"),
    @NamedQuery(name = "CodesFeeItemExcl.findByFitmShortDscr", query = "SELECT c FROM CodesFeeItemExcl c WHERE c.fitmShortDscr = :fitmShortDscr"),
    @NamedQuery(name = "CodesFeeItemExcl.findByCreatedByNm", query = "SELECT c FROM CodesFeeItemExcl c WHERE c.createdByNm = :createdByNm"),
    @NamedQuery(name = "CodesFeeItemExcl.findByCreatedOnDtm", query = "SELECT c FROM CodesFeeItemExcl c WHERE c.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "CodesFeeItemExcl.findByLastModifiedByNm", query = "SELECT c FROM CodesFeeItemExcl c WHERE c.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "CodesFeeItemExcl.findByLastModifiedOnDtm", query = "SELECT c FROM CodesFeeItemExcl c WHERE c.lastModifiedOnDtm = :lastModifiedOnDtm")})
    
public class CodesFeeItemExcl implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy=GenerationType.SEQUENCE, generator="CodesFeeItemExclSeq")
    @NotNull
    @Column(name = "ID")
    private Long id;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CODES_MAINT_CNTRL_ID")
    private Long codesMaintCntrlId;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 240)
    @Column(name = "FITM_CD")
    private String fitmCd;
    @Size(max = 240)
    @Column(name = "FITM_CD_CLASS")
    private String fitmCdClass;
    @Column(name = "EXCLUSION_FLAG")
    private Character exclusionFlag;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 240)
    @Column(name = "FITM_DSCR_CD")
    private String fitmDscrCd;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 4000)
    @Column(name = "FITM_SHORT_DSCR")
    private String fitmShortDscr;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Size(max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
    private Long statelessTransactionNbr;

    public CodesFeeItemExcl() {
    }

    public CodesFeeItemExcl(Long id) {
        this.id = id;
    }

    public CodesFeeItemExcl(Long id, Long codesMaintCntrlId, String fitmCd, 
            String fitmDscrCd, String fitmShortDscr, String createdByNm, 
            Date createdOnDtm) {
        this.id = id;
        this.codesMaintCntrlId = codesMaintCntrlId;
        this.fitmCd = fitmCd;
        this.fitmDscrCd = fitmDscrCd;
        this.fitmShortDscr = fitmShortDscr;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getCodesMaintCntrlId() {
        return codesMaintCntrlId;
    }

    public void setCodesMaintCntrlId(Long codesMaintCntrlId) {
        this.codesMaintCntrlId = codesMaintCntrlId;
    }

    public String getFitmCd() {
        return fitmCd;
    }

    public void setFitmCd(String fitmCd) {
        this.fitmCd = fitmCd;
    }

    public String getFitmCdClass() {
        return fitmCdClass;
    }

    public void setFitmCdClass(String fitmCdClass) {
        this.fitmCdClass = fitmCdClass;
    }

    public Character getExclusionFlag() {
        return exclusionFlag;
    }

    public void setExclusionFlag(Character exclusionFlag) {
        this.exclusionFlag = exclusionFlag;
    }

    public String getFitmDscrCd() {
        return fitmDscrCd;
    }

    public void setFitmDscrCd(String fitmDscrCd) {
        this.fitmDscrCd = fitmDscrCd;
    }

    public String getFitmShortDscr() {
        return fitmShortDscr;
    }

    public void setFitmShortDscr(String fitmShortDscr) {
        this.fitmShortDscr = fitmShortDscr;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof CodesFeeItemExcl)) {
            return false;
        }
        CodesFeeItemExcl other = (CodesFeeItemExcl) object;
        return !((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id)));
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.pacl.ejb.entity.CodesFeeItemExcl[ id=" + id + " ]";
    }

}
