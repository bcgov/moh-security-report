/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.pacl.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Lob;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import jakarta.xml.bind.annotation.XmlRootElement;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author Michael.Tremblay
 */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "LETTER_BATCH_PRINT_STG")
@SequenceGenerator(name = "LetterBatchPrintStgSeq", sequenceName = "LETTER_BATCH_PRINT_STG_SEQ", allocationSize = 1, initialValue = 1)
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "LetterBatchPrintStg.findAll", query = "SELECT l FROM LetterBatchPrintStg l"),
    @NamedQuery(name = "LetterBatchPrintStg.findById", query = "SELECT l FROM LetterBatchPrintStg l WHERE l.id = :id"),
    @NamedQuery(name = "LetterBatchPrintStg.findByProjectId", query = "SELECT l FROM LetterBatchPrintStg l WHERE l.projectId = :projectId"),
    @NamedQuery(name = "LetterBatchPrintStg.findByPracSvaProjectId", query = "SELECT l FROM LetterBatchPrintStg l WHERE l.pracSvaProjectId = :pracSvaProjectId"),
    @NamedQuery(name = "LetterBatchPrintStg.findByLetterId", query = "SELECT l FROM LetterBatchPrintStg l WHERE l.letterId = :letterId"),
    @NamedQuery(name = "LetterBatchPrintStg.findByLetterTypeCode", query = "SELECT l FROM LetterBatchPrintStg l WHERE l.letterTypeCode = :letterTypeCode"),
    @NamedQuery(name = "LetterBatchPrintStg.findByCreatedByNm", query = "SELECT l FROM LetterBatchPrintStg l WHERE l.createdByNm = :createdByNm"),
    @NamedQuery(name = "LetterBatchPrintStg.findByCreatedOnDtm", query = "SELECT l FROM LetterBatchPrintStg l WHERE l.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "LetterBatchPrintStg.findByLastModifiedByNm", query = "SELECT l FROM LetterBatchPrintStg l WHERE l.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "LetterBatchPrintStg.findByLastModifiedOnDtm", query = "SELECT l FROM LetterBatchPrintStg l WHERE l.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "LetterBatchPrintStg.findByStatelessTransactionNbr", query = "SELECT l FROM LetterBatchPrintStg l WHERE l.statelessTransactionNbr = :statelessTransactionNbr"),
    @NamedQuery(name = "LetterBatchPrintStg.removeAll", query = "DELETE FROM LetterBatchPrintStg")})
public class LetterBatchPrintStg implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "LetterBatchPrintStgSeq")
    @Basic(optional = false)
    @NotNull
    @Column(name = "ID")
    private Long id;
    @Basic(optional = false)
    @NotNull
    @Column(name = "PROJECT_ID")
    private long projectId;
    @Basic(optional = false)
    @NotNull
    @Column(name = "PRAC_SVA_PROJECT_ID")
    private long pracSvaProjectId;
    @Basic(optional = false)
    @NotNull
    @Column(name = "LETTER_ID")
    private long letterId;
    @Basic(optional = false)
    @NotNull
    @Column(name = "LETTER_TYPE_CODE")
    private long letterTypeCode;
    @Basic(optional = false)
    @NotNull
    @Lob
    @Column(name = "LETTER_CONT_DESC")
    private Serializable letterContDesc;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Size(max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
    private Long statelessTransactionNbr;

    public LetterBatchPrintStg() {
    }

    public LetterBatchPrintStg(Long id) {
        this.id = id;
    }

    public LetterBatchPrintStg(Long id, long projectId, long pracSvaProjectId, long letterId, long letterTypeCode, Serializable letterContDesc, String createdByNm, Date createdOnDtm) {
        this.id = id;
        this.projectId = projectId;
        this.pracSvaProjectId = pracSvaProjectId;
        this.letterId = letterId;
        this.letterTypeCode = letterTypeCode;
        this.letterContDesc = letterContDesc;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public long getProjectId() {
        return projectId;
    }

    public void setProjectId(long projectId) {
        this.projectId = projectId;
    }

    public long getPracSvaProjectId() {
        return pracSvaProjectId;
    }

    public void setPracSvaProjectId(long pracSvaProjectId) {
        this.pracSvaProjectId = pracSvaProjectId;
    }

    public long getLetterId() {
        return letterId;
    }

    public void setLetterId(long letterId) {
        this.letterId = letterId;
    }

    public long getLetterTypeCode() {
        return letterTypeCode;
    }

    public void setLetterTypeCode(long letterTypeCode) {
        this.letterTypeCode = letterTypeCode;
    }

    public Serializable getLetterContDesc() {
        return letterContDesc;
    }

    public void setLetterContDesc(Serializable letterContDesc) {
        this.letterContDesc = letterContDesc;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof LetterBatchPrintStg)) {
            return false;
        }
        LetterBatchPrintStg other = (LetterBatchPrintStg) object;
        return !((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id)));
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.pacl.ejb.entity.LetterBatchPrintStg[ id=" + id + " ]";
    }

}
