/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.pacl.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import jakarta.xml.bind.annotation.XmlRootElement;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author Dan.Stepanov
 */
@Entity
@EntityListeners({AuditListener.class})

@Table(name = "APPLICATION_AUDIT_DTL_LOG")
@SequenceGenerator(name="AplicationAuditDtlLogSeq", sequenceName="APPLICATION_AUDIT_DTL_LOG_SEQ", allocationSize=1, initialValue=1)

@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "ApplicationAuditDtlLog.findAll", query = "SELECT a FROM ApplicationAuditDtlLog a"),
    @NamedQuery(name = "ApplicationAuditDtlLog.findById", query = "SELECT a FROM ApplicationAuditDtlLog a WHERE a.id = :id"),
    @NamedQuery(name = "ApplicationAuditDtlLog.findByAuditTypeDef", query = "SELECT a FROM ApplicationAuditDtlLog a WHERE a.auditTypeDef = :auditTypeDef"),
    @NamedQuery(name = "ApplicationAuditDtlLog.findByAuditValue", query = "SELECT a FROM ApplicationAuditDtlLog a WHERE a.auditValue = :auditValue"),
    @NamedQuery(name = "ApplicationAuditDtlLog.findByCreatedByNm", query = "SELECT a FROM ApplicationAuditDtlLog a WHERE a.createdByNm = :createdByNm"),
    @NamedQuery(name = "ApplicationAuditDtlLog.findByCreatedOnDtm", query = "SELECT a FROM ApplicationAuditDtlLog a WHERE a.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "ApplicationAuditDtlLog.findByLastModifiedByNm", query = "SELECT a FROM ApplicationAuditDtlLog a WHERE a.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "ApplicationAuditDtlLog.findByLastModifiedOnDtm", query = "SELECT a FROM ApplicationAuditDtlLog a WHERE a.lastModifiedOnDtm = :lastModifiedOnDtm")})
public class ApplicationAuditDtlLog implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="AplicationAuditDtlLogSeq")
    
    @Basic(optional = false)
    @NotNull
    @Column(name = "ID")
    private Long id;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 32)
    @Column(name = "AUDIT_TYPE_DEF")
    private String auditTypeDef;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 1000)
    @Column(name = "AUDIT_VALUE")
    private String auditValue;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Size(max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
    @Version
    private Long statelessTransactionNbr;
    @JoinColumn(name = "AUDIT_ID", referencedColumnName = "ID")
    @ManyToOne(optional = false)
    private ApplicationAuditLog auditId;

    public ApplicationAuditDtlLog() {
    }

    public ApplicationAuditDtlLog(Long id) {
        this.id = id;
    }

     public ApplicationAuditDtlLog(ApplicationAuditLog applicationAuditLog, String auditTypeDef, String auditValue) {
        this.auditId = applicationAuditLog;
        this.auditTypeDef = auditTypeDef;
        this.auditValue = auditValue;
     }
    
    public ApplicationAuditDtlLog(Long id, String auditTypeDef, String auditValue, String createdByNm, Date createdOnDtm) {
        this.id = id;
        this.auditTypeDef = auditTypeDef;
        this.auditValue = auditValue;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getAuditTypeDef() {
        return auditTypeDef;
    }

    public void setAuditTypeDef(String auditTypeDef) {
        this.auditTypeDef = auditTypeDef;
    }

    public String getAuditValue() {
        return auditValue;
    }

    public void setAuditValue(String auditValue) {
        this.auditValue = auditValue;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public ApplicationAuditLog getAuditId() {
        return auditId;
    }

    public void setAuditId(ApplicationAuditLog auditId) {
        this.auditId = auditId;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof ApplicationAuditDtlLog)) {
            return false;
        }
        ApplicationAuditDtlLog other = (ApplicationAuditDtlLog) object;
        return !((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id)));
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.pacl.ejb.entity.ApplicationAuditDtlLog[ id=" + id + " ]";
    }
    
}
