/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.pacl.ejb.session;

import ca.bc.gov.health.pacl.ejb.entity.CodesProjectType;
import ca.bc.gov.health.pacl.util.PaclConstants;
import jakarta.ejb.Stateless;
import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import jakarta.persistence.Query;
import java.util.List;

/**
 *
 * @author Dan.Stepanov
 */
@Stateless
public class CodesProjectTypeFacade extends AbstractFacade<CodesProjectType> implements CodesProjectTypeFacadeLocal {
    @PersistenceContext(unitName = "PACLPU")
    private EntityManager em;

    @Override
    protected EntityManager getEntityManager() {
        return em;
    }

    public CodesProjectTypeFacade() {
        super(CodesProjectType.class);
    }

    /**
     * Retrieve the project type record by name.
     * @param name String - name of project type
     * @return CodesProjectType
     */
    @Override
    public CodesProjectType findByName(String name) {       
        List<CodesProjectType> result =  em.createNamedQuery("CodesProjectType.findByName").setParameter("name", name).getResultList();

        return result != null && !result.isEmpty() ? result.get(0) : null;
    }

    /**
     * Retrieve Pharmacare project type records by name.
     * @return List<CodesProjectType>
     */
    @Override
    public List<CodesProjectType> findPharmaProjectType() {

        String projTypes = "'" + PaclConstants.PHARMACY_PROJECT_TYPE + "', '" +
                PaclConstants.PO_PROJECT_TYPE + "', '" +
                PaclConstants.PLAN_M_PROJECT_TYPE + "'";
        String queryProjType = "select * from CODES_PROJECT_TYPE cpt where "
                + "cpt.name in (" + projTypes + ") order by cpt.ID asc";
        Query query = em.createNativeQuery(queryProjType, CodesProjectType.class);

        return query.getResultList();
    }

    /**
     * Retrieve SVA project type records by name.
     * @return List<CodesProjectType>
     */
    @Override
    public List<CodesProjectType> findSVAProjectType() {

        String projTypesSVA = "'" + PaclConstants.RANDOM_MONTHLY_TYPE + "', '" +
                PaclConstants.SELECT_SRV_TYPE + "', '" +
                PaclConstants.SELECT_SRV_QUEST_TYPE + "'";
        String queryProjTypeSVA = "select * from CODES_PROJECT_TYPE cpt where "
                + "cpt.name in (" + projTypesSVA + ") order by cpt.ID asc";
        Query query = em.createNativeQuery(queryProjTypeSVA, CodesProjectType.class);

        return query.getResultList();
    }

}