/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.pacl.ejb.session;

import ca.bc.gov.health.pacl.ejb.entity.CodesPayeeExcl;
import ca.bc.gov.health.pacl.ejb.entity.Project;
import jakarta.ejb.Stateless;
import jakarta.persistence.EntityManager;
import jakarta.persistence.NoResultException;
import jakarta.persistence.PersistenceContext;
import jakarta.persistence.Query;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Dan.Stepanov
 */
@Stateless
public class CodesPayeeExclFacade extends AbstractFacade<CodesPayeeExcl> implements CodesPayeeExclFacadeLocal {

    @PersistenceContext(unitName = "PACLPU")
    private EntityManager em;

    @Override
    protected EntityManager getEntityManager() {
        return em;
    }

    public CodesPayeeExclFacade() {
        super(CodesPayeeExcl.class);
    }

    /**
     * Finds excluded payee organizations by auditing start/end dates.
     * @param project Project - new letter run that has auditing start/end dates
     *
     * @return List<CodesPayeeExcl>
     */
    @Override
    public List<CodesPayeeExcl> findExcludedPayeeByAuditDate(Project project) {

        Query query = em.createNativeQuery("SELECT * FROM CODES_PAYEE_EXCL cpe"
                + " WHERE cpe.START_DATE <= ?1 AND cpe.END_DATE >= ?2", CodesPayeeExcl.class);
        query.setParameter(1, project.getProjectFromDate());
        query.setParameter(2, project.getProjectToDate());

        return query.getResultList();
    }
    
    /**
     * Finds Payee by his identity number
     * @param payeeCode
     * @return 
     */
    @Override
    public CodesPayeeExcl findPayeeByCode(String payeeCode) throws Exception {

        CodesPayeeExcl codesPayeeExcl = new CodesPayeeExcl();
        Query q = em.createNamedQuery("CodesPayeeExcl.findByPayeeIdnt");
        q.setParameter("payeeIdnt", payeeCode);

        try {  //if part
            if ((CodesPayeeExcl) q.getSingleResult() != null) {
                return codesPayeeExcl = (CodesPayeeExcl) q.getSingleResult();
            } 
        } catch(NoResultException e) {
            //create a new CodesFeeItemExcl record.
            return codesPayeeExcl = new CodesPayeeExcl();
        }

        return codesPayeeExcl;
    }
    
    /**
     * Used to return a list of searched payees
     * @param code
     * @return 
     */
    @Override
    public List<CodesPayeeExcl> findByPayeeCode(String code){
        
        List<CodesPayeeExcl> codesPayeeExclList = new ArrayList<>();
        Query q = em.createNamedQuery("CodesPayeeExcl.findByPayeeIdntLike");
        q.setParameter("payeeIdnt", code );

        try {  
            return codesPayeeExclList = q.getResultList();
        } catch(NoResultException e) {
            //create a new CodesFeeItemExcl record.
            return codesPayeeExclList = new ArrayList<>();
        }
    }

}
