/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.pacl.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import jakarta.xml.bind.annotation.XmlRootElement;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author Michael.Tremblay
 */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "ADMIN_OPTIONS_MSP")
@SequenceGenerator(name="AdminOptionsMspSeq", sequenceName="ADMIN_OPTIONS_MSP_SEQ", allocationSize=1, initialValue=1)
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "AdminOptionsMsp.findAll", query = "SELECT a FROM AdminOptionsMsp a"),
    @NamedQuery(name = "AdminOptionsMsp.findById", query = "SELECT a FROM AdminOptionsMsp a WHERE a.id = :id"),
    @NamedQuery(name = "AdminOptionsMsp.findByDefaultPatientMaxLimit", query = "SELECT a FROM AdminOptionsMsp a WHERE a.defaultPatientMaxLimit = :defaultPatientMaxLimit"),
    @NamedQuery(name = "AdminOptionsMsp.findByDefaultPatientMinLimit", query = "SELECT a FROM AdminOptionsMsp a WHERE a.defaultPatientMinLimit = :defaultPatientMinLimit"),
    @NamedQuery(name = "AdminOptionsMsp.findByDefaultClaimMaxLimit", query = "SELECT a FROM AdminOptionsMsp a WHERE a.defaultClaimMaxLimit = :defaultClaimMaxLimit"),
    @NamedQuery(name = "AdminOptionsMsp.findByDefaultClaimMinLimit", query = "SELECT a FROM AdminOptionsMsp a WHERE a.defaultClaimMinLimit = :defaultClaimMinLimit"),
    @NamedQuery(name = "AdminOptionsMsp.findByDaysBeforeArchive", query = "SELECT a FROM AdminOptionsMsp a WHERE a.daysBeforeArchive = :daysBeforeArchive"),
    @NamedQuery(name = "AdminOptionsMsp.findByFirstReminderEmail", query = "SELECT a FROM AdminOptionsMsp a WHERE a.firstReminderEmail = :firstReminderEmail"),
    @NamedQuery(name = "AdminOptionsMsp.findBySecondReminderEmail", query = "SELECT a FROM AdminOptionsMsp a WHERE a.secondReminderEmail = :secondReminderEmail"),
    @NamedQuery(name = "AdminOptionsMsp.findByServerAdminEmail", query = "SELECT a FROM AdminOptionsMsp a WHERE a.serverAdminEmail = :serverAdminEmail"),
    @NamedQuery(name = "AdminOptionsMsp.findByCreatedByNm", query = "SELECT a FROM AdminOptionsMsp a WHERE a.createdByNm = :createdByNm"),
    @NamedQuery(name = "AdminOptionsMsp.findByCreatedOnDtm", query = "SELECT a FROM AdminOptionsMsp a WHERE a.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "AdminOptionsMsp.findByLastModifiedByNm", query = "SELECT a FROM AdminOptionsMsp a WHERE a.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "AdminOptionsMsp.findByLastModifiedOnDtm", query = "SELECT a FROM AdminOptionsMsp a WHERE a.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "AdminOptionsMsp.findByStatelessTransactionNbr", query = "SELECT a FROM AdminOptionsMsp a WHERE a.statelessTransactionNbr = :statelessTransactionNbr")})
public class AdminOptionsMsp implements Serializable{

    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy=GenerationType.SEQUENCE,generator="AdminOptionsMspSeq")
    @NotNull
    @Column(name = "ID")
    private Long id;
    @Basic(optional = false)
    @NotNull
    @Column(name = "DEFAULT_PATIENT_MAX_LIMIT")
    private long defaultPatientMaxLimit;
    @Basic(optional = false)
    @NotNull
    @Column(name = "DEFAULT_PATIENT_MIN_LIMIT")
    private long defaultPatientMinLimit;
    @Basic(optional = false)
    @NotNull
    @Column(name = "DEFAULT_CLAIM_MAX_LIMIT")
    private long defaultClaimMaxLimit;
    @Basic(optional = false)
    @NotNull
    @Column(name = "DEFAULT_CLAIM_MIN_LIMIT")
    private long defaultClaimMinLimit;
    @Basic(optional = false)
    @NotNull
    @Column(name = "DAYS_BEFORE_ARCHIVE")
    private long daysBeforeArchive;
    @Basic(optional = false)
    @NotNull
    @Column(name = "FIRST_REMINDER_EMAIL")
    private long firstReminderEmail;
    @Basic(optional = false)
    @NotNull
    @Column(name = "SECOND_REMINDER_EMAIL")
    private long secondReminderEmail;
    @Size(max = 200)
    @Column(name = "SERVER_ADMIN_EMAIL")
    private String serverAdminEmail;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Size(max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
    private Long statelessTransactionNbr;

    public AdminOptionsMsp() {
    }

    public AdminOptionsMsp(Long id) {
        this.id = id;
    }

    public AdminOptionsMsp(Long id, long defaultPatientMaxLimit, long defaultPatientMinLimit, long defaultClaimMaxLimit, long defaultClaimMinLimit, long daysBeforeArchive, long firstReminderEmail, long secondReminderEmail, String createdByNm, Date createdOnDtm) {
        this.id = id;
        this.defaultPatientMaxLimit = defaultPatientMaxLimit;
        this.defaultPatientMinLimit = defaultPatientMinLimit;
        this.defaultClaimMaxLimit = defaultClaimMaxLimit;
        this.defaultClaimMinLimit = defaultClaimMinLimit;
        this.daysBeforeArchive = daysBeforeArchive;
        this.firstReminderEmail = firstReminderEmail;
        this.secondReminderEmail = secondReminderEmail;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public long getDefaultPatientMaxLimit() {
        return defaultPatientMaxLimit;
    }

    public void setDefaultPatientMaxLimit(long defaultPatientMaxLimit) {
        this.defaultPatientMaxLimit = defaultPatientMaxLimit;
    }

    public long getDefaultPatientMinLimit() {
        return defaultPatientMinLimit;
    }

    public void setDefaultPatientMinLimit(long defaultPatientMinLimit) {
        this.defaultPatientMinLimit = defaultPatientMinLimit;
    }

    public long getDefaultClaimMaxLimit() {
        return defaultClaimMaxLimit;
    }

    public void setDefaultClaimMaxLimit(long defaultClaimMaxLimit) {
        this.defaultClaimMaxLimit = defaultClaimMaxLimit;
    }

    public long getDefaultClaimMinLimit() {
        return defaultClaimMinLimit;
    }

    public void setDefaultClaimMinLimit(long defaultClaimMinLimit) {
        this.defaultClaimMinLimit = defaultClaimMinLimit;
    }

    public long getDaysBeforeArchive() {
        return daysBeforeArchive;
    }

    public void setDaysBeforeArchive(long daysBeforeArchive) {
        this.daysBeforeArchive = daysBeforeArchive;
    }

    public long getFirstReminderEmail() {
        return firstReminderEmail;
    }

    public void setFirstReminderEmail(long firstReminderEmail) {
        this.firstReminderEmail = firstReminderEmail;
    }

    public long getSecondReminderEmail() {
        return secondReminderEmail;
    }

    public void setSecondReminderEmail(long secondReminderEmail) {
        this.secondReminderEmail = secondReminderEmail;
    }

    public String getServerAdminEmail() {
        return serverAdminEmail;
    }

    public void setServerAdminEmail(String serverAdminEmail) {
        this.serverAdminEmail = serverAdminEmail;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof AdminOptionsMsp)) {
            return false;
        }
        AdminOptionsMsp other = (AdminOptionsMsp) object;
        return !((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id)));
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.pacl.ejb.entity.AdminOptionsMsp[ id=" + id + " ]";
    }
}
