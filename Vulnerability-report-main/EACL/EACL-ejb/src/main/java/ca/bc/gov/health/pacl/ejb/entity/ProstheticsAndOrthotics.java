/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.pacl.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import jakarta.xml.bind.annotation.XmlRootElement;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

/**
 *
 * @author Dan.Stepanov
 */
@Entity
@EntityListeners({AuditListener.class})

@Table(name = "PROSTHETICS_AND_ORTHOTICS")
@SequenceGenerator(name="ProstheticsAndOrthoticsSeq", sequenceName="PROSTHETICS_AND_ORTHOTICS_SEQ", allocationSize=1, initialValue=1)

@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "ProstheticsAndOrthotics.findAll", query = "SELECT p FROM ProstheticsAndOrthotics p"),
    @NamedQuery(name = "ProstheticsAndOrthotics.findById", query = "SELECT p FROM ProstheticsAndOrthotics p WHERE p.id = :id"),
    @NamedQuery(name = "ProstheticsAndOrthotics.findByPAndODate", query = "SELECT p FROM ProstheticsAndOrthotics p WHERE p.pAndODate = :pAndODate"),
    @NamedQuery(name = "ProstheticsAndOrthotics.findByPractitionerId", query = "SELECT p FROM ProstheticsAndOrthotics p WHERE p.practitionerId = :practitionerId"),
    @NamedQuery(name = "ProstheticsAndOrthotics.findByMedicalDeviceBenefit", query = "SELECT p FROM ProstheticsAndOrthotics p WHERE p.medicalDeviceBenefit = :medicalDeviceBenefit"),
    @NamedQuery(name = "ProstheticsAndOrthotics.findByTotalPhCarePay", query = "SELECT p FROM ProstheticsAndOrthotics p WHERE p.totalPhCarePay = :totalPhCarePay"),
    @NamedQuery(name = "ProstheticsAndOrthotics.findByTotalCoCarePay", query = "SELECT p FROM ProstheticsAndOrthotics p WHERE p.totalCoCarePay = :totalCoCarePay"),
    @NamedQuery(name = "ProstheticsAndOrthotics.findByDinPin", query = "SELECT p FROM ProstheticsAndOrthotics p WHERE p.dinPin = :dinPin"),
    @NamedQuery(name = "ProstheticsAndOrthotics.findByCreatedByNm", query = "SELECT p FROM ProstheticsAndOrthotics p WHERE p.createdByNm = :createdByNm"),
    @NamedQuery(name = "ProstheticsAndOrthotics.findByCreatedOnDtm", query = "SELECT p FROM ProstheticsAndOrthotics p WHERE p.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "ProstheticsAndOrthotics.findByLastModifiedByNm", query = "SELECT p FROM ProstheticsAndOrthotics p WHERE p.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "ProstheticsAndOrthotics.findByLastModifiedOnDtm", query = "SELECT p FROM ProstheticsAndOrthotics p WHERE p.lastModifiedOnDtm = :lastModifiedOnDtm")})
public class ProstheticsAndOrthotics implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="ProstheticsAndOrthoticsSeq")

    @Basic(optional = false)
    @NotNull
    @Column(name = "ID")
    private Long id;
    @Basic(optional = false)
    @NotNull
    @Column(name = "P_AND_O_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    private Date pAndODate;
    @Size(max = 480)
    @Column(name = "PRACTITIONER_ID")
    private String practitionerId;
    @Size(max = 240)
    @Column(name = "MEDICAL_DEVICE_BENEFIT")
    private String medicalDeviceBenefit;
    @Column(name = "TOTAL_PH_CARE_PAY")
    private BigDecimal totalPhCarePay;
    @Column(name = "TOTAL_CO_CARE_PAY")
    private BigDecimal totalCoCarePay;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 240)
    @Column(name = "DIN_PIN")
    private String dinPin;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Size(max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
    @Version
    private Long statelessTransactionNbr;
    @JoinColumn(name = "LETTER_ID", referencedColumnName = "ID")
    @ManyToOne(optional = false)
    private Letter letterId;
    @JoinColumn(name = "STATUS", referencedColumnName = "ID")
    @ManyToOne(optional = true)
    private CodesLetterStatus statusId;

    public ProstheticsAndOrthotics() {
    }

    public ProstheticsAndOrthotics(Long id) {
        this.id = id;
    }

    public ProstheticsAndOrthotics(Long id, Date pAndODate, String dinPin, String createdByNm, Date createdOnDtm) {
        this.id = id;
        this.pAndODate = pAndODate;
        this.dinPin = dinPin;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Date getProstheticAndOrthoticDate() {
        return pAndODate;
    }
    
    public Date getPAndODate() {
        return pAndODate;
    }

    public void setPAndODate(Date pAndODate) {
        this.pAndODate = pAndODate;
    }

    public String getPractitionerId() {
        return practitionerId;
    }

    public void setPractitionerId(String practitionerId) {
        this.practitionerId = practitionerId;
    }

    public String getMedicalDeviceBenefit() {
        return medicalDeviceBenefit;
    }

    public void setMedicalDeviceBenefit(String medicalDeviceBenefit) {
        this.medicalDeviceBenefit = medicalDeviceBenefit;
    }

    public BigDecimal getTotalPhCarePay() {
        return totalPhCarePay;
    }

    public void setTotalPhCarePay(BigDecimal totalPhCarePay) {
        this.totalPhCarePay = totalPhCarePay;
    }

    public BigDecimal getTotalCoCarePay() {
        return totalCoCarePay;
    }

    public void setTotalCoCarePay(BigDecimal totalCoCarePay) {
        this.totalCoCarePay = totalCoCarePay;
    }

    public String getDinPin() {
        return dinPin;
    }

    public void setDinPin(String dinPin) {
        this.dinPin = dinPin;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Letter getLetterId() {
        return letterId;
    }

    public void setLetterId(Letter letterId) {
        this.letterId = letterId;
    }
    
    public CodesLetterStatus getStatusId() {
        return statusId;
    }

    public void setStatusId(CodesLetterStatus statusId) {
        this.statusId = statusId;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof ProstheticsAndOrthotics)) {
            return false;
        }
        ProstheticsAndOrthotics other = (ProstheticsAndOrthotics) object;
        return !((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id)));
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.pacl.ejb.entity.ProstheticsAndOrthotics[ id=" + id + " ]";
    }
    
}