/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.pacl.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlTransient;
import java.io.Serializable;
import java.util.Date;
import java.util.List;
import org.apache.commons.lang3.RandomStringUtils;

/**
 *
 * @author Dan.Stepanov
 */
@Entity
@EntityListeners({AuditListener.class})

@Table(name = "LETTER")
@SequenceGenerator(name="LetterSeq", sequenceName="LETTER_SEQ", allocationSize=1, initialValue=1)
//@SequenceGenerator(name="BarcodeSeq", sequenceName="LETTER_BARCODE_SEQ", allocationSize=1, initialValue=1)

@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "Letter.findAll", query = "SELECT l FROM Letter l"),
    @NamedQuery(name = "Letter.findById", query = "SELECT l FROM Letter l WHERE l.id = :id"),
    @NamedQuery(name = "Letter.findByBarcode", query = "SELECT l FROM Letter l WHERE l.barcode = :barcode"),
    @NamedQuery(name = "Letter.findByPhn", query = "SELECT l FROM Letter l WHERE l.phn = :phn"),
    @NamedQuery(name = "Letter.findByCaseCode", query = "SELECT l FROM Letter l WHERE l.caseCode = :caseCode ORDER BY l.createdOnDtm DESC"),
    @NamedQuery(name = "Letter.findByRecipientLastName", query = "SELECT l FROM Letter l WHERE l.recipientLastName = :recipientLastName"),
    @NamedQuery(name = "Letter.findByRecipientFirstName", query = "SELECT l FROM Letter l WHERE l.recipientFirstName = :recipientFirstName"),
    @NamedQuery(name = "Letter.findByRecipientAddress", query = "SELECT l FROM Letter l WHERE l.recipientAddress = :recipientAddress"),
    @NamedQuery(name = "Letter.findByRecipientCountry", query = "SELECT l FROM Letter l WHERE l.recipientCountry = :recipientCountry"),
    @NamedQuery(name = "Letter.findByRecipientCity", query = "SELECT l FROM Letter l WHERE l.recipientCity = :recipientCity"),
    @NamedQuery(name = "Letter.findByRecipientProvince", query = "SELECT l FROM Letter l WHERE l.recipientProvince = :recipientProvince"),
    @NamedQuery(name = "Letter.findByRecipientPostalCode", query = "SELECT l FROM Letter l WHERE l.recipientPostalCode = :recipientPostalCode"),
    @NamedQuery(name = "Letter.findByLetterPrintedFlag", query = "SELECT l FROM Letter l WHERE l.letterPrintedFlag = :letterPrintedFlag"),
    @NamedQuery(name = "Letter.findByLetterDate", query = "SELECT l FROM Letter l WHERE l.letterDate = :letterDate"),
    @NamedQuery(name = "Letter.findLettersByProviderId", query = "SELECT l FROM Letter l WHERE l.pharmacyProviderId = :pharmacyProviderId"),
    @NamedQuery(name = "Letter.findByCreatedByNm", query = "SELECT l FROM Letter l WHERE l.createdByNm = :createdByNm"),
    @NamedQuery(name = "Letter.findByCreatedOnDtm", query = "SELECT l FROM Letter l WHERE l.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "Letter.findByLastModifiedByNm", query = "SELECT l FROM Letter l WHERE l.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "Letter.findByLastModifiedOnDtm", query = "SELECT l FROM Letter l WHERE l.lastModifiedOnDtm = :lastModifiedOnDtm")})
public class Letter implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy=GenerationType.SEQUENCE,generator="LetterSeq")
    @NotNull
    @Column(name = "ID")
    private Long id;
    @Basic(optional = false)
//    @SequenceGenerator(name="BarcodeSeq", sequenceName="LETTER_BARCODE_SEQ", allocationSize=1, initialValue=1)
//    @GeneratedValue(strategy=GenerationType.SEQUENCE,generator="BarcodeSeq")
    @NotNull
    @Column(name = "BARCODE", insertable = false)
    private long barcode;
    @Basic(optional = false)
    @NotNull
    @Column(name = "PHN")
    private Long phn;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 200)
    @Column(name = "RECIPIENT_LAST_NAME")
    private String recipientLastName;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 200)
    @Column(name = "RECIPIENT_FIRST_NAME")
    private String recipientFirstName;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 200)
    @Column(name = "RECIPIENT_ADDRESS")
    private String recipientAddress;
    @Size(max = 240)
    @Column(name = "RECIPIENT_COUNTRY")
    private String recipientCountry;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 50)
    @Column(name = "RECIPIENT_CITY")
    private String recipientCity;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 240)
    @Column(name = "RECIPIENT_PROVINCE")
    private String recipientProvince;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 240)
    @Column(name = "RECIPIENT_POSTAL_CODE")
    private String recipientPostalCode;
    @Basic(optional = false)
    @NotNull
    @Column(name = "LETTER_PRINTED_FLAG", insertable = false)
    private char letterPrintedFlag;
    @Column(name = "LETTER_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    private Date letterDate;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Size(max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
    @Version
    private Long statelessTransactionNbr;
    @Column(name = "RECIPIENT_BIRTHDAY")
    @Temporal(TemporalType.TIMESTAMP)
    private Date recipientBirthday;
    @JoinColumn(name = "PROJECT_ID", referencedColumnName = "ID")
    @ManyToOne(optional = false)
    private Project projectId;
    @JoinColumn(name = "PHARMACY_PROVIDER_ID", referencedColumnName = "ID")
    @ManyToOne(optional = false)
    private PharmacyProvider pharmacyProviderId;
    @JoinColumn(name = "LETTER_TEMPLATE_ID", referencedColumnName = "ID")
    @ManyToOne(optional = false)
    private LetterTemplate letterTemplateId;
    @JoinColumn(name = "STATUS_ID", referencedColumnName = "ID")
    @ManyToOne(optional = false)
    private CodesLetterStatus statusId;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "letterId")
    private List<Prescriptions> prescriptionsList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "letterId")
    private List<PlansM> plansMList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "letterId")
    private List<ProstheticsAndOrthotics> prosthOrthList;
    @Column(name = "CASE_CODE")
    private String caseCode;
    @Column(name = "PHONE_NUMBER")
    private String phoneNumber;
    @Column(name = "NOTES")
    @Size(max = 4000)
    private String notes;
    @Column(name = "ADMIN_NOTES")
    @Size(max = 4000)
    private String adminNotes;

    public Letter() {
        this.caseCode = newCaseCode();
    }

    public Letter(Long id) {
        this.id = id;
    }

    public Letter(Long id, long barcode, Long phn, String recipientLastName, String recipientFirstName, String recipientAddress, String recipientCity, String recipientProvince, String recipientPostalCode, char letterPrintedFlag, Date letterDate, String createdByNm, Date createdOnDtm, Date recipientBirthday, String caseCode) {
        this.id = id;
        this.barcode = barcode;
        this.phn = phn;
        this.recipientLastName = recipientLastName;
        this.recipientFirstName = recipientFirstName;
        this.recipientAddress = recipientAddress;
        this.recipientCity = recipientCity;
        this.recipientProvince = recipientProvince;
        this.recipientPostalCode = recipientPostalCode;
        this.letterPrintedFlag = letterPrintedFlag;
        this.letterDate = letterDate;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.recipientBirthday = recipientBirthday;
        this.caseCode = caseCode;
    }
    
    private String newCaseCode() {
        return RandomStringUtils.randomAlphabetic(6).toUpperCase();
    }
    
    public boolean getHasPrescriptions() {
        return prescriptionsList != null && prescriptionsList.size() > 0;
    }
    
    public boolean getHasPlans() {
        return plansMList != null && plansMList.size() > 0;
    }
    
    public boolean getHasProsthetics() {
        return prosthOrthList != null && prosthOrthList.size() > 0;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public long getBarcode() {
        return barcode;
    }

    public void setBarcode(long barcode) {
        this.barcode = barcode;
    }

    public Long getPhn() {
        return phn;
    }

    public void setPhn(Long phn) {
        this.phn = phn;
    }

    public String getRecipientLastName() {
        return recipientLastName;
    }

    public void setRecipientLastName(String recipientLastName) {
        this.recipientLastName = recipientLastName;
    }

    public String getRecipientFirstName() {
        return recipientFirstName;
    }

    public void setRecipientFirstName(String recipientFirstName) {
        this.recipientFirstName = recipientFirstName;
    }

    public String getRecipientAddress() {
        return recipientAddress;
    }

    public void setRecipientAddress(String recipientAddress) {
        this.recipientAddress = recipientAddress;
    }

    public String getRecipientCountry() {
        return recipientCountry;
    }

    public void setRecipientCountry(String recipientCountry) {
        this.recipientCountry = recipientCountry;
    }

    public String getRecipientCity() {
        return recipientCity;
    }

    public void setRecipientCity(String recipientCity) {
        this.recipientCity = recipientCity;
    }

    public String getRecipientProvince() {
        return recipientProvince;
    }

    public void setRecipientProvince(String recipientProvince) {
        this.recipientProvince = recipientProvince;
    }

    public String getRecipientPostalCode() {
        return recipientPostalCode;
    }

    public void setRecipientPostalCode(String recipientPostalCode) {
        this.recipientPostalCode = recipientPostalCode;
    }

    public char getLetterPrintedFlag() {
        return letterPrintedFlag;
    }

    public void setLetterPrintedFlag(char letterPrintedFlag) {
        this.letterPrintedFlag = letterPrintedFlag;
    }

    public Date getLetterDate() {
        return letterDate;
    }

    public void setLetterDate(Date letterDate) {
        this.letterDate = letterDate;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Date getRecipientBirthday() {
        return recipientBirthday;
    }

    public void setRecipientBirthday(Date recipientBirthday) {
        this.recipientBirthday = recipientBirthday;
    }

    public Project getProjectId() {
        return projectId;
    }

    public void setProjectId(Project projectId) {
        this.projectId = projectId;
    }

    public PharmacyProvider getPharmacyProviderId() {
        return pharmacyProviderId;
    }

    public void setPharmacyProviderId(PharmacyProvider pharmacyProviderId) {
        this.pharmacyProviderId = pharmacyProviderId;
    }

    public LetterTemplate getLetterTemplateId() {
        return letterTemplateId;
    }

    public void setLetterTemplateId(LetterTemplate letterTemplateId) {
        this.letterTemplateId = letterTemplateId;
    }

    public CodesLetterStatus getStatusId() {
        return statusId;
    }

    public void setStatusId(CodesLetterStatus statusId) {
        this.statusId = statusId;
    }

    @XmlTransient
    public List<Prescriptions> getPrescriptionsList() {
        return prescriptionsList;
    }

    public void setPrescriptionsList(List<Prescriptions> prescriptionsList) {
        this.prescriptionsList = prescriptionsList;
    }

    @XmlTransient
    public List<PlansM> getPlansMList() {
        return plansMList;
    }

    public void setPlansMList(List<PlansM> plansMList) {
        this.plansMList = plansMList;
    }

    @XmlTransient
    public List<ProstheticsAndOrthotics> getProsthOrthList() {
        return prosthOrthList;
    }

    public void setProsthOrthList(List<ProstheticsAndOrthotics> prosthOrthList) {
        this.prosthOrthList = prosthOrthList;
    }

    public String getCaseCode() {
        return caseCode;
    }

    public void setCaseCode(String caseCode) {
        this.caseCode = caseCode;
    }

    public String getPhoneNumber() {
        return phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    public String getNotes() {
        return notes;
    }

    public void setNotes(String notes) {
        this.notes = notes;
    }
    
    public String getAdminNotes() {
        return adminNotes;
    }

    public void setAdminNotes(String adminNotes) {
        this.adminNotes = adminNotes;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Letter)) {
            return false;
        }
        Letter other = (Letter) object;
        return this.id.equals(other.id);
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.pacl.ejb.entity.Letter[ id=" + id + " ]";
    }

}