/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.pacl.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.Lob;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlTransient;
import java.io.Serializable;
import java.util.Date;
import java.util.List;

/**
 *
 * @author Dan.Stepanov
 */
@Entity
@EntityListeners({AuditListener.class})

@Table(name = "LETTER_TEMPLATE")
@SequenceGenerator(name="LetterTemplateSeq", sequenceName="LETTER_TEMPLATE_SEQ", allocationSize=1, initialValue=1)

@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "LetterTemplate.findAll", query = "SELECT l FROM LetterTemplate l"),
    @NamedQuery(name = "LetterTemplate.findById", query = "SELECT l FROM LetterTemplate l WHERE l.id = :id"),
    @NamedQuery(name = "LetterTemplate.findByTemplateTypeId", query = "SELECT l FROM LetterTemplate l WHERE l.letterTemplateTypeId = :letterTemplateTypeId"),
    @NamedQuery(name = "LetterTemplate.findByName", query = "SELECT l FROM LetterTemplate l WHERE l.name = :name"),
    @NamedQuery(name = "LetterTemplate.findByHeaderSection", query = "SELECT l FROM LetterTemplate l WHERE l.headerSection = :headerSection"),
    @NamedQuery(name = "LetterTemplate.findByFooterSection", query = "SELECT l FROM LetterTemplate l WHERE l.footerSection = :footerSection"),
    @NamedQuery(name = "LetterTemplate.findByMainBodySection", query = "SELECT l FROM LetterTemplate l WHERE l.mainBodySection = :mainBodySection"),
    @NamedQuery(name = "LetterTemplate.findByClosingRemarkSection", query = "SELECT l FROM LetterTemplate l WHERE l.closingRemarkSection = :closingRemarkSection"),
    @NamedQuery(name = "LetterTemplate.findBySenderName", query = "SELECT l FROM LetterTemplate l WHERE l.senderName = :senderName"),
    @NamedQuery(name = "LetterTemplate.findBySenderPosition", query = "SELECT l FROM LetterTemplate l WHERE l.senderPosition = :senderPosition"),
    @NamedQuery(name = "LetterTemplate.findByContactPhoneNumber", query = "SELECT l FROM LetterTemplate l WHERE l.contactPhoneNumber = :contactPhoneNumber"),
    @NamedQuery(name = "LetterTemplate.findByMinistryName", query = "SELECT l FROM LetterTemplate l WHERE l.ministryName = :ministryName"),
    @NamedQuery(name = "LetterTemplate.findByDepartmentName", query = "SELECT l FROM LetterTemplate l WHERE l.departmentName = :departmentName"),
    @NamedQuery(name = "LetterTemplate.findByBranchName", query = "SELECT l FROM LetterTemplate l WHERE l.branchName = :branchName"),
    @NamedQuery(name = "LetterTemplate.findByMinistryAddress", query = "SELECT l FROM LetterTemplate l WHERE l.ministryAddress = :ministryAddress"),
    @NamedQuery(name = "LetterTemplate.findBySurveyOnly", query = "SELECT l FROM LetterTemplate l WHERE l.surveyOnly = :surveyOnly"),
    @NamedQuery(name = "LetterTemplate.findByRecipientSignatureText", query = "SELECT l FROM LetterTemplate l WHERE l.recipientSignatureText = :recipientSignatureText"),
    @NamedQuery(name = "LetterTemplate.findByGuardianSignatureText", query = "SELECT l FROM LetterTemplate l WHERE l.guardianSignatureText = :guardianSignatureText"),
    @NamedQuery(name = "LetterTemplate.findByCreatedByNm", query = "SELECT l FROM LetterTemplate l WHERE l.createdByNm = :createdByNm"),
    @NamedQuery(name = "LetterTemplate.findByCreatedOnDtm", query = "SELECT l FROM LetterTemplate l WHERE l.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "LetterTemplate.findByLastModifiedByNm", query = "SELECT l FROM LetterTemplate l WHERE l.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "LetterTemplate.findByLastModifiedOnDtm", query = "SELECT l FROM LetterTemplate l WHERE l.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "LetterTemplate.findByAddDetail", query = "SELECT l FROM LetterTemplate l WHERE l.addDetail = :addDetail")})
public class LetterTemplate implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy=GenerationType.SEQUENCE,generator="LetterTemplateSeq")
    @NotNull
    @Column(name = "ID")
    private Long id;
    @JoinColumn(name = "LETTER_TEMPLATE_TYPE_ID", referencedColumnName = "ID")
    @ManyToOne(optional = false)
    private CodesLetterTemplateType letterTemplateTypeId;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "NAME")
    private String name;
    @Size(max = 4000)
    @Column(name = "HEADER_SECTION")
    private String headerSection;
    @Size(max = 4000)
    @Column(name = "FOOTER_SECTION")
    private String footerSection;
    @Size(max = 4000)
    @Column(name = "MAIN_BODY_SECTION")
    private String mainBodySection;
    @Size(max = 4000)
    @Column(name = "CLOSING_REMARK_SECTION")
    private String closingRemarkSection;
    @Size(max = 200)
    @Column(name = "SENDER_NAME")
    private String senderName;
    @Size(max = 200)
    @Column(name = "SENDER_POSITION")
    private String senderPosition;
    @Size(max = 400)
    @Column(name = "CONTACT_PHONE_NUMBER")
    private String contactPhoneNumber;
    @Lob
    @Column(name = "SENDER_SIGNATURE_GRAPHIC")
    private byte[] senderSignatureGraphic;
    @Lob
    @Column(name = "MINISTRY_LOGO")
    private byte[] ministryLogo;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 200)
    @Column(name = "MINISTRY_NAME")
    private String ministryName;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 200)
    @Column(name = "DEPARTMENT_NAME")
    private String departmentName;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 200)
    @Column(name = "BRANCH_NAME")
    private String branchName;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 300)
    @Column(name = "MINISTRY_ADDRESS")
    private String ministryAddress;
    @Size(max = 4000)
    @Column(name = "SURVEY_ONLY")
    private String surveyOnly;
    @Size(max = 200)
    @Column(name = "RECIPIENT_SIGNATURE_TEXT")
    private String recipientSignatureText;
    @Size(max = 200)
    @Column(name = "GUARDIAN_SIGNATURE_TEXT")
    private String guardianSignatureText;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Size(max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
    @Version
    private Long statelessTransactionNbr;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "letterTemplateId")
    private List<Letter> letterList;
    @Size(max = 4000)
    @Column(name = "ADD_DETAIL")
    private String addDetail;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "letterTemplateId")
    private List<LetterMspDetail> letterMspDetailList;

    public LetterTemplate() {
    }

    public LetterTemplate(Long id) {
        this.id = id;
    }

    public LetterTemplate(Long id, String name, String ministryName, 
            String departmentName, String branchName, String ministryAddress, 
            String createdByNm, Date createdOnDtm) {
        this.id = id;
        this.name = name;
        this.ministryName = ministryName;
        this.departmentName = departmentName;
        this.branchName = branchName;
        this.ministryAddress = ministryAddress;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
    }
    
    public LetterTemplate(Long id, String name, String ministryName, 
            String departmentName, String branchName, String ministryAddress, 
            String createdByNm, Date createdOnDtm, String addDetail) {
        this.id = id;
        this.name = name;
        this.ministryName = ministryName;
        this.departmentName = departmentName;
        this.branchName = branchName;
        this.ministryAddress = ministryAddress;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.addDetail = addDetail;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getHeaderSection() {
        return headerSection;
    }

    public void setHeaderSection(String headerSection) {
        this.headerSection = headerSection;
    }

    public String getFooterSection() {
        return footerSection;
    }

    public void setFooterSection(String footerSection) {
        this.footerSection = footerSection;
    }

    public String getMainBodySection() {
        return mainBodySection;
    }

    public void setMainBodySection(String mainBodySection) {
        this.mainBodySection = mainBodySection;
    }

    public String getClosingRemarkSection() {
        return closingRemarkSection;
    }

    public void setClosingRemarkSection(String closingRemarkSection) {
        this.closingRemarkSection = closingRemarkSection;
    }

    public String getSenderName() {
        return senderName;
    }

    public void setSenderName(String senderName) {
        this.senderName = senderName;
    }

    public String getSenderPosition() {
        return senderPosition;
    }

    public void setSenderPosition(String senderPosition) {
        this.senderPosition = senderPosition;
    }

    public byte[] getSenderSignatureGraphic() {
        return senderSignatureGraphic;
    }

    public void setSenderSignatureGraphic(byte[] senderSignatureGraphic) {
        this.senderSignatureGraphic = senderSignatureGraphic;
    }

    public String getContactPhoneNumber() {
        return contactPhoneNumber;
    }

    public void setContactPhoneNumber(String contactPhoneNumber) {
        this.contactPhoneNumber = contactPhoneNumber;
    }

    public byte[] getMinistryLogo() {
        return ministryLogo;
    }

    public void setMinistryLogo(byte[] ministryLogo) {
        this.ministryLogo = ministryLogo;
    }

    public String getMinistryName() {
        return ministryName;
    }

    public void setMinistryName(String ministryName) {
        this.ministryName = ministryName;
    }

    public String getDepartmentName() {
        return departmentName;
    }

    public void setDepartmentName(String departmentName) {
        this.departmentName = departmentName;
    }

    public String getBranchName() {
        return branchName;
    }

    public void setBranchName(String branchName) {
        this.branchName = branchName;
    }

    public String getMinistryAddress() {
        return ministryAddress;
    }

    public void setMinistryAddress(String ministryAddress) {
        this.ministryAddress = ministryAddress;
    }

    public String getSurveyOnly() {
        return surveyOnly;
    }

    public void setSurveyOnly(String surveyOnly) {
        this.surveyOnly = surveyOnly;
    }

    public String getRecipientSignatureText() {
        return recipientSignatureText;
    }

    public void setRecipientSignatureText(String recipientSignatureText) {
        this.recipientSignatureText = recipientSignatureText;
    }

    public String getGuardianSignatureText() {
        return guardianSignatureText;
    }

    public void setGuardianSignatureText(String guardianSignatureText) {
        this.guardianSignatureText = guardianSignatureText;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public CodesLetterTemplateType getLetterTemplateTypeId() {
        return letterTemplateTypeId;
    }

    public void setLetterTemplateTypeId(CodesLetterTemplateType letterTemplateTypeId) {
        this.letterTemplateTypeId = letterTemplateTypeId;
    }

    @XmlTransient
    public List<Letter> getLetterList() {
        return letterList;
    }

    public void setLetterList(List<Letter> letterList) {
        this.letterList = letterList;
    }

    @XmlTransient
    public List<LetterMspDetail> getLetterMspDetailList() {
        return letterMspDetailList;
    }

    public void setLetterMspDetailList(List<LetterMspDetail> letterMspDetailList) {
        this.letterMspDetailList = letterMspDetailList;
    }
    
    public String getAddDetail() {
        return addDetail;
    }

    public void setAddDetail(String addDetail) {
        this.addDetail = addDetail;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof LetterTemplate)) {
            return false;
        }
        LetterTemplate other = (LetterTemplate) object;
        return !((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id)));
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.pacl.ejb.entity.LetterTemplate[ id=" + id + " ]";
    }

}
