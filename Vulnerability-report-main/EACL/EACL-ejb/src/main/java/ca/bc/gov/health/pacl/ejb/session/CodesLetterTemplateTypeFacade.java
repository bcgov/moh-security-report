/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.pacl.ejb.session;

import ca.bc.gov.health.pacl.ejb.entity.CodesLetterTemplateType;
import ca.bc.gov.health.pacl.util.PaclConstants;
import jakarta.ejb.Stateless;
import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import jakarta.persistence.Query;
import java.util.List;

/**
 *
 * @author Dan.Stepanov
 */
@Stateless
public class CodesLetterTemplateTypeFacade extends AbstractFacade<CodesLetterTemplateType> implements CodesLetterTemplateTypeFacadeLocal {

    /**
     * New instance for EntityManager class.
     */
    @PersistenceContext(unitName = "PACLPU")
    private EntityManager em;

    /**
     * Gets the local instance of the {@link EntityManager} class.
     * @return entity Manager
     */
    @Override
    protected EntityManager getEntityManager() {
        return em;
    }

    /**
     * Default constructor.
     */
    public CodesLetterTemplateTypeFacade() {
        super(CodesLetterTemplateType.class);
    }

    /**
     * Retrieve the Letter Template Type record by name.
     */
    @Override
    public CodesLetterTemplateType findByName(String name) {       
        List<CodesLetterTemplateType> result =  em.createNamedQuery("CodesLetterTemplateType.findByName").setParameter("name", name).getResultList();
        
        return result != null && !result.isEmpty() ? result.get(0) : null;
    }

    /**
     * Retrieve Pharmacare letter template type records by name.
     * @return List<CodesLetterTemplateType>
     */
    @Override
    public List<CodesLetterTemplateType> findPharmaLetterTemplateType() {

        String templateTypes = "'" + PaclConstants.PHARMACY_LETTER_TYPE + "', '" +
                PaclConstants.PO_LETTER_TYPE + "', '" +
                PaclConstants.PLAN_M_LETTER_TYPE + "'";
        String queryLetterTemplateType = "select * from CODES_LETTER_TEMPLATE_TYPE lt where "
                + "lt.name in (" + templateTypes + ") order by lt.ID asc";
        Query query = em.createNativeQuery(queryLetterTemplateType, CodesLetterTemplateType.class);

        return query.getResultList();
    }

    /**
     * Retrieve SVA letter template type records by name.
     * @return List<CodesLetterTemplateType>
     */
    @Override
    public List<CodesLetterTemplateType> findSVALetterTemplateType() {

        String templateTypesSVA = "'" + PaclConstants.RANDOM_LTR_TEMPLATE_TYPE + "', '" +
                PaclConstants.SELECT_SRV_TEMPLATE_TYPE + "', '" +
                PaclConstants.SELECT_SRV_QUEST_TEMPLATE_TYPE + "'";
        String queryLetterTemplateTypeSVA = "select * from CODES_LETTER_TEMPLATE_TYPE lt where "
                + "lt.name in (" + templateTypesSVA + ") order by lt.ID asc";
        Query query = em.createNativeQuery(queryLetterTemplateTypeSVA, CodesLetterTemplateType.class);

        return query.getResultList();
    }

}