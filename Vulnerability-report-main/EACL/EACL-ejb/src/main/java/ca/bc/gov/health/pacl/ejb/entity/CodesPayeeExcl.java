/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.pacl.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import jakarta.xml.bind.annotation.XmlRootElement;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author Michael.Tremblay
 */
@Entity
@EntityListeners({AuditListener.class})

@Table(name = "CODES_PAYEE_EXCL")
@SequenceGenerator(name="CodesPayeeExclSeq", sequenceName="CODES_PAYEE_EXCL_SEQ", allocationSize=1, initialValue=1)

@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "CodesPayeeExcl.findAll", query = "SELECT c FROM CodesPayeeExcl c"),
    @NamedQuery(name = "CodesPayeeExcl.findById", query = "SELECT c FROM CodesPayeeExcl c WHERE c.id = :id"),
    @NamedQuery(name = "CodesPayeeExcl.findByCodesMaintCntrlId", query = "SELECT c FROM CodesPayeeExcl c WHERE c.codesMaintCntrlId = :codesMaintCntrlId"),
    @NamedQuery(name = "CodesPayeeExcl.findByPayeeIdnt", query = "SELECT c FROM CodesPayeeExcl c WHERE c.payeeIdnt = :payeeIdnt"),
    @NamedQuery(name = "CodesPayeeExcl.findByPayeeIdntLike", query = "SELECT c FROM CodesPayeeExcl c WHERE c.payeeIdnt LIKE :payeeIdnt"),
    @NamedQuery(name = "CodesPayeeExcl.findByStartDate", query = "SELECT c FROM CodesPayeeExcl c WHERE c.startDate = :startDate"),
    @NamedQuery(name = "CodesPayeeExcl.findByEndDate", query = "SELECT c FROM CodesPayeeExcl c WHERE c.endDate = :endDate"),
    @NamedQuery(name = "CodesPayeeExcl.findByExclDesc", query = "SELECT c FROM CodesPayeeExcl c WHERE c.exclDesc = :exclDesc"),
    @NamedQuery(name = "CodesPayeeExcl.findByCreatedByNm", query = "SELECT c FROM CodesPayeeExcl c WHERE c.createdByNm = :createdByNm"),
    @NamedQuery(name = "CodesPayeeExcl.findByCreatedOnDtm", query = "SELECT c FROM CodesPayeeExcl c WHERE c.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "CodesPayeeExcl.findByLastModifiedByNm", query = "SELECT c FROM CodesPayeeExcl c WHERE c.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "CodesPayeeExcl.findByLastModifiedOnDtm", query = "SELECT c FROM CodesPayeeExcl c WHERE c.lastModifiedOnDtm = :lastModifiedOnDtm")})
public class CodesPayeeExcl implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy=GenerationType.SEQUENCE, generator="CodesPayeeExclSeq")
    @Basic(optional = false)
    @NotNull
    @Column(name = "ID")
    private Long id;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CODES_MAINT_CNTRL_ID")
    private Long codesMaintCntrlId;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 240)
    @Column(name = "PAYEE_IDNT")
    private String payeeIdnt;
    @Column(name = "START_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    private Date startDate;
    @Column(name = "END_DATE")
    @Temporal(TemporalType.TIMESTAMP)
    private Date endDate;
    @Size(max = 240)
    @Column(name = "EXCL_DESC")
    private String exclDesc;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Size(max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
    private Long statelessTransactionNbr;

    public CodesPayeeExcl() {
    }

    public CodesPayeeExcl(Long id) {
        this.id = id;
    }

    public CodesPayeeExcl(Long id, Long codesMaintCntrlId, String payeeIdnt,
            String createdByNm, Date createdOnDtm) {
        this.id = id;
        this.codesMaintCntrlId = codesMaintCntrlId;
        this.payeeIdnt = payeeIdnt;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getCodesMaintCntrlId() {
        return codesMaintCntrlId;
    }

    public void setCodesMaintCntrlId(Long codesMaintCntrlId) {
        this.codesMaintCntrlId = codesMaintCntrlId;
    }

    public String getPayeeIdnt() {
        return payeeIdnt;
    }

    public void setPayeeIdnt(String payeeIdnt) {
        this.payeeIdnt = payeeIdnt;
    }

    public Date getStartDate() {
        return startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    public Date getEndDate() {
        return endDate;
    }

    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    public String getExclDesc() {
        return exclDesc;
    }

    public void setExclDesc(String exclDesc) {
        this.exclDesc = exclDesc;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public Long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(Long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof CodesPayeeExcl)) {
            return false;
        }
        CodesPayeeExcl other = (CodesPayeeExcl) object;
        return !((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id)));
    }

    @Override
    public String toString() {
        return "ca.bc.gov.health.pacl.ejb.entity.CodesPayeeExcl[ id=" + id + " ]";
    }

}
