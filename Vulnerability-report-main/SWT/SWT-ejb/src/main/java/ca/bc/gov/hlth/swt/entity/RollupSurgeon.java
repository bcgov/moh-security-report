/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_ROLLUP_SURGEON")
@NamedQueries({
    @NamedQuery(name = "RollupSurgeon.findByRollupSurgeonId", query = "SELECT r FROM RollupSurgeon r WHERE r.rollupSurgeonId = :rollupSurgeonId"),
    @NamedQuery(name = "RollupSurgeon.findBySurgeonCollegeId", query = "SELECT r FROM RollupSurgeon r WHERE r.surgeonCollegeId = :surgeonCollegeId"),
    @NamedQuery(name = "RollupSurgeon.findBySurgeonFirstNm", query = "SELECT r FROM RollupSurgeon r WHERE r.surgeonFirstNm = :surgeonFirstNm"),
    @NamedQuery(name = "RollupSurgeon.findBySurgeonLastNm", query = "SELECT r FROM RollupSurgeon r WHERE r.surgeonLastNm = :surgeonLastNm"),
    @NamedQuery(name = "RollupSurgeon.findByEffectiveDtm", query = "SELECT r FROM RollupSurgeon r WHERE r.effectiveDtm = :effectiveDtm"),
    @NamedQuery(name = "RollupSurgeon.findByExpiryDtm", query = "SELECT r FROM RollupSurgeon r WHERE r.expiryDtm = :expiryDtm"),
    @NamedQuery(name = "RollupSurgeon.findByCreatedByNm", query = "SELECT r FROM RollupSurgeon r WHERE r.createdByNm = :createdByNm"),
    @NamedQuery(name = "RollupSurgeon.findByCreatedOnDtm", query = "SELECT r FROM RollupSurgeon r WHERE r.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "RollupSurgeon.findByLastModifiedByNm", query = "SELECT r FROM RollupSurgeon r WHERE r.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "RollupSurgeon.findByLastModifiedOnDtm", query = "SELECT r FROM RollupSurgeon r WHERE r.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "RollupSurgeon.findByStatelessTransactionNbr", query = "SELECT r FROM RollupSurgeon r WHERE r.statelessTransactionNbr = :statelessTransactionNbr"),
    @NamedQuery(name = "RollupSurgeon.findByRollupSpecialtyGroupId", query = "SELECT r FROM RollupSurgeon r WHERE r.rollupSpecialtyGroupId = :rollupSpecialtyGroupId"),
    @NamedQuery(name = "RollupSurgeon.findBySpecialtyDsc", query = "SELECT r FROM RollupSurgeon r WHERE r.specialtyDsc = :specialtyDsc")})
public class RollupSurgeon implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @Column(name = "ROLLUP_SURGEON_ID", nullable = false)
    private Long rollupSurgeonId;
    @Size(max = 10)
    @Column(name = "SURGEON_COLLEGE_ID", nullable = false)
    private String surgeonCollegeId;
    @Column(name = "SURGEON_FIRST_NM", nullable = false)
    private String surgeonFirstNm;
    @Column(name = "SURGEON_LAST_NM", nullable = false)
    private String surgeonLastNm;
    @Column(name = "EFFECTIVE_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveDtm;
    @Column(name = "EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date expiryDtm;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    private long statelessTransactionNbr;
    @Column(name = "ROLLUP_SPECIALTY_GROUP_ID")
    private Long rollupSpecialtyGroupId;
    @Column(name = "SPECIALTY_DSC")
    private String specialtyDsc;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "rollupSurgeon")
    private Collection<SiteSurgeon> siteSurgeonCollection;

    public RollupSurgeon() {
    }

    public RollupSurgeon(Long rollupSurgeonId) {
        this.rollupSurgeonId = rollupSurgeonId;
    }

    public RollupSurgeon(Long rollupSurgeonId, String surgeonCollegeId, String surgeonFirstNm, String surgeonLastNm, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.rollupSurgeonId = rollupSurgeonId;
        this.surgeonCollegeId = surgeonCollegeId;
        this.surgeonFirstNm = surgeonFirstNm;
        this.surgeonLastNm = surgeonLastNm;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Long getRollupSurgeonId() {
        return rollupSurgeonId;
    }

    public void setRollupSurgeonId(Long rollupSurgeonId) {
        this.rollupSurgeonId = rollupSurgeonId;
    }

    public String getSurgeonCollegeId() {
        return surgeonCollegeId;
    }

    public void setSurgeonCollegeId(String surgeonCollegeId) {
        this.surgeonCollegeId = surgeonCollegeId;
    }

    public String getSurgeonFirstNm() {
        return surgeonFirstNm;
    }

    public void setSurgeonFirstNm(String surgeonFirstNm) {
        this.surgeonFirstNm = surgeonFirstNm;
    }

    public String getSurgeonLastNm() {
        return surgeonLastNm;
    }

    public void setSurgeonLastNm(String surgeonLastNm) {
        this.surgeonLastNm = surgeonLastNm;
    }

    public Date getEffectiveDtm() {
        return effectiveDtm;
    }

    public void setEffectiveDtm(Date effectiveDtm) {
        this.effectiveDtm = effectiveDtm;
    }

    public Date getExpiryDtm() {
        return expiryDtm;
    }

    public void setExpiryDtm(Date expiryDtm) {
        this.expiryDtm = expiryDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Long getRollupSpecialtyGroupId() {
        return rollupSpecialtyGroupId;
    }

    public void setRollupSpecialtyGroupId(Long rollupSpecialtyGroupId) {
        this.rollupSpecialtyGroupId = rollupSpecialtyGroupId;
    }

    public String getSpecialtyDsc() {
        return specialtyDsc;
    }

    public void setSpecialtyDsc(String specialtyDsc) {
        this.specialtyDsc = specialtyDsc;
    }

    public Collection<SiteSurgeon> getSiteSurgeonCollection() {
        return siteSurgeonCollection;
    }

    public void setSiteSurgeonCollection(Collection<SiteSurgeon> siteSurgeonCollection) {
        this.siteSurgeonCollection = siteSurgeonCollection;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (rollupSurgeonId != null ? rollupSurgeonId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof RollupSurgeon)) {
            return false;
        }
        RollupSurgeon other = (RollupSurgeon) object;
        if ((this.rollupSurgeonId == null && other.rollupSurgeonId != null) || (this.rollupSurgeonId != null && !this.rollupSurgeonId.equals(other.rollupSurgeonId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.RollupSurgeon[rollupSurgeonId=" + rollupSurgeonId + "]";
    }

    public String getDisplayTxt() {
        return this.surgeonLastNm + ", " + this.surgeonFirstNm;
    }

}
