/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.xml.bind.annotation.XmlTransient;
import java.io.Serializable;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_SITE")
@NamedQueries({
    @NamedQuery(name = "Site.findBySiteId", query = "SELECT s FROM Site s WHERE s.siteId = :siteId"),
    @NamedQuery(name = "Site.findBySiteYearNbr", query = "SELECT s FROM Site s WHERE s.siteYearNbr = :siteYearNbr"),
    @NamedQuery(name = "Site.findBySiteMonthNbr", query = "SELECT s FROM Site s WHERE s.siteMonthNbr = :siteMonthNbr"),
    @NamedQuery(name = "Site.findByLoadProcessStartDtm", query = "SELECT s FROM Site s WHERE s.loadProcessStartDtm = :loadProcessStartDtm"),
    @NamedQuery(name = "Site.findByLoadProcessEndDtm", query = "SELECT s FROM Site s WHERE s.loadProcessEndDtm = :loadProcessEndDtm"),
    @NamedQuery(name = "Site.findByNonSprDataReviewedYn", query = "SELECT s FROM Site s WHERE s.nonSprDataReviewedYn = :nonSprDataReviewedYn"),
    @NamedQuery(name = "Site.findBySiteCertifiedYn", query = "SELECT s FROM Site s WHERE s.siteCertifiedYn = :siteCertifiedYn"),
    @NamedQuery(name = "Site.findByPublishedYn", query = "SELECT s FROM Site s WHERE s.publishedYn = :publishedYn"),
    @NamedQuery(name = "Site.findByPublishedByNm", query = "SELECT s FROM Site s WHERE s.publishedByNm = :publishedByNm"),
    @NamedQuery(name = "Site.findByPublishedOnDtm", query = "SELECT s FROM Site s WHERE s.publishedOnDtm = :publishedOnDtm"),
    @NamedQuery(name = "Site.findByReportingPeriodStartDt", query = "SELECT s FROM Site s WHERE s.reportingPeriodStartDt = :reportingPeriodStartDt"),
    @NamedQuery(name = "Site.findByReportingPeriodEndDt", query = "SELECT s FROM Site s WHERE s.reportingPeriodEndDt = :reportingPeriodEndDt"),
    @NamedQuery(name = "Site.findByCreatedByNm", query = "SELECT s FROM Site s WHERE s.createdByNm = :createdByNm"),
    @NamedQuery(name = "Site.findByCreatedOnDtm", query = "SELECT s FROM Site s WHERE s.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "Site.findByLastModifiedByNm", query = "SELECT s FROM Site s WHERE s.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "Site.findByLastModifiedOnDtm", query = "SELECT s FROM Site s WHERE s.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "Site.findByStatelessTransactionNbr", query = "SELECT s FROM Site s WHERE s.statelessTransactionNbr = :statelessTransactionNbr"),
    @NamedQuery(name = "Site.findByNonSprDataReviewedByNm", query = "SELECT s FROM Site s WHERE s.nonSprDataReviewedByNm = :nonSprDataReviewedByNm"),
    @NamedQuery(name = "Site.findByNonSprDataReviewedOnDtm", query = "SELECT s FROM Site s WHERE s.nonSprDataReviewedOnDtm = :nonSprDataReviewedOnDtm"),
    @NamedQuery(name = "Site.findByDataReviewCompleteYn", query = "SELECT s FROM Site s WHERE s.dataReviewCompleteYn = :dataReviewCompleteYn"),
    @NamedQuery(name = "Site.findByDataReviewCmpltByNm", query = "SELECT s FROM Site s WHERE s.dataReviewCmpltByNm = :dataReviewCmpltByNm"),
    @NamedQuery(name = "Site.findByDataReviewCompltOnDtm", query = "SELECT s FROM Site s WHERE s.dataReviewCompltOnDtm = :dataReviewCompltOnDtm"),
    @NamedQuery(name = "Site.findByBusinessReviewCompleteYn", query = "SELECT s FROM Site s WHERE s.businessReviewCompleteYn = :businessReviewCompleteYn"),
    @NamedQuery(name = "Site.findByBusinessReviewCmpltByNm", query = "SELECT s FROM Site s WHERE s.businessReviewCmpltByNm = :businessReviewCmpltByNm"),
    @NamedQuery(name = "Site.findByBusinessReviewCompltOnDtm", query = "SELECT s FROM Site s WHERE s.businessReviewCompltOnDtm = :businessReviewCompltOnDtm"),
    @NamedQuery(name = "Site.findByPabReviewCompleteYn", query = "SELECT s FROM Site s WHERE s.pabReviewCompleteYn = :pabReviewCompleteYn"),
    @NamedQuery(name = "Site.findByPabReviewCompleteByNm", query = "SELECT s FROM Site s WHERE s.pabReviewCompleteByNm = :pabReviewCompleteByNm"),
    @NamedQuery(name = "Site.findByPabReviewCompleteOnDtm", query = "SELECT s FROM Site s WHERE s.pabReviewCompleteOnDtm = :pabReviewCompleteOnDtm"),
    @NamedQuery(name = "Site.findByCommentTxt", query = "SELECT s FROM Site s WHERE s.commentTxt = :commentTxt")})
public class Site implements Serializable {

    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<SwtSiteProvProcedure> swtSiteProvProcedureCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<SwtSiteProvProcedureGroup> swtSiteProvProcedureGroupCollection;
    private static final long serialVersionUID = 1L;
    @Id
    @Column(name = "SITE_ID", nullable = false)
    private Long siteId;
    @Column(name = "SITE_YEAR_NBR", nullable = false)
    private short siteYearNbr;
    @Column(name = "SITE_MONTH_NBR", nullable = false)
    private short siteMonthNbr;
    @Column(name = "LOAD_PROCESS_START_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date loadProcessStartDtm;
    @Column(name = "LOAD_PROCESS_END_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date loadProcessEndDtm;
    @Column(name = "NON_SPR_DATA_REVIEWED_YN", nullable = false)
    private String nonSprDataReviewedYn;
    @Column(name = "SITE_CERTIFIED_YN", nullable = false)
    private String siteCertifiedYn;
    @Column(name = "PUBLISHED_YN", nullable = false)
    private String publishedYn;
    @Column(name = "PUBLISHED_BY_NM")
    private String publishedByNm;
    @Column(name = "PUBLISHED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date publishedOnDtm;
    @Column(name = "REPORTING_PERIOD_START_DT", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date reportingPeriodStartDt;
    @Column(name = "REPORTING_PERIOD_END_DT", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date reportingPeriodEndDt;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    private long statelessTransactionNbr;
    @Column(name = "NON_SPR_DATA_REVIEWED_BY_NM")
    private String nonSprDataReviewedByNm;
    @Column(name = "NON_SPR_DATA_REVIEWED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date nonSprDataReviewedOnDtm;
    @Column(name = "DATA_REVIEW_COMPLETE_YN", nullable = false)
    private String dataReviewCompleteYn;
    @Column(name = "DATA_REVIEW_CMPLT_BY_NM")
    private String dataReviewCmpltByNm;
    @Column(name = "DATA_REVIEW_COMPLT_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date dataReviewCompltOnDtm;
    @Column(name = "BUSINESS_REVIEW_COMPLETE_YN", nullable = false)
    private String businessReviewCompleteYn;
    @Column(name = "BUSINESS_REVIEW_CMPLT_BY_NM")
    private String businessReviewCmpltByNm;
    @Column(name = "BUSINESS_REVIEW_COMPLT_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date businessReviewCompltOnDtm;
    @Column(name = "PAB_REVIEW_COMPLETE_YN", nullable = false)
    private String pabReviewCompleteYn;
    @Column(name = "PAB_REVIEW_COMPLETE_BY_NM")
    private String pabReviewCompleteByNm;
    @Column(name = "PAB_REVIEW_COMPLETE_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date pabReviewCompleteOnDtm;
    @Column(name = "COMMENT_TXT")
    private String commentTxt;
    @OneToMany(mappedBy = "siteId")
    private Collection<LoadSchedule> loadScheduleCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<SiteSurgeon> siteSurgeonCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<PostOperation> postOperationCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<Patient> patientCollection;
    @OneToMany(mappedBy = "siteId")
    private Collection<SiteStatistic> siteStatisticCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "siteId")
    private Collection<SiteAnnouncement> siteAnnouncementCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<SiteEncounterType> siteEncounterTypeCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<AssessmentTool> assessmentToolCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "siteId")
    private Collection<SiteMediaLongTermStat> siteMediaLongTermStatCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<PostponementReason> postponementReasonCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<SiteInterventionType> siteInterventionTypeCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<EncounterType> encounterTypeCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<SiteProcedureGroup> siteProcedureGroupCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "siteId")
    private Collection<SitePreference> sitePreferenceCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<CancellationReason> cancellationReasonCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<SiteHealthAuthority> siteHealthAuthorityCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<SiteFacility> siteFacilityCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<Surgeon> surgeonCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<SiteSpecialtyGroup> siteSpecialtyGroupCollection;
    @OneToMany(mappedBy = "siteId")
    private Collection<LoadError> loadErrorCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<NonSprSite> nonSprSiteCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<Facility> facilityCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<SprProcedure> sprProcedureCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<Booking> bookingCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<SitePriority> sitePriorityCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "site")
    private Collection<SiteCancerSuspected> siteCancerSuspectedCollection;

    public Site() {
    }

    public Site(Long siteId) {
        this.siteId = siteId;
    }

    public Site(Long siteId, short siteYearNbr, short siteMonthNbr, Date loadProcessStartDtm, String nonSprDataReviewedYn, String siteCertifiedYn, String publishedYn, Date reportingPeriodStartDt, Date reportingPeriodEndDt, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr, String dataReviewCompleteYn, String businessReviewCompleteYn, String pabReviewCompleteYn) {
        this.siteId = siteId;
        this.siteYearNbr = siteYearNbr;
        this.siteMonthNbr = siteMonthNbr;
        this.loadProcessStartDtm = loadProcessStartDtm;
        this.nonSprDataReviewedYn = nonSprDataReviewedYn;
        this.siteCertifiedYn = siteCertifiedYn;
        this.publishedYn = publishedYn;
        this.reportingPeriodStartDt = reportingPeriodStartDt;
        this.reportingPeriodEndDt = reportingPeriodEndDt;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
        this.dataReviewCompleteYn = dataReviewCompleteYn;
        this.businessReviewCompleteYn = businessReviewCompleteYn;
        this.pabReviewCompleteYn = pabReviewCompleteYn;
    }

    public Long getSiteId() {
        return siteId;
    }

    public void setSiteId(Long siteId) {
        this.siteId = siteId;
    }

    public short getSiteYearNbr() {
        return siteYearNbr;
    }

    public void setSiteYearNbr(short siteYearNbr) {
        this.siteYearNbr = siteYearNbr;
    }

    public short getSiteMonthNbr() {
        return siteMonthNbr;
    }

    public void setSiteMonthNbr(short siteMonthNbr) {
        this.siteMonthNbr = siteMonthNbr;
    }

    public Date getLoadProcessStartDtm() {
        return loadProcessStartDtm;
    }

    public void setLoadProcessStartDtm(Date loadProcessStartDtm) {
        this.loadProcessStartDtm = loadProcessStartDtm;
    }

    public Date getLoadProcessEndDtm() {
        return loadProcessEndDtm;
    }

    public void setLoadProcessEndDtm(Date loadProcessEndDtm) {
        this.loadProcessEndDtm = loadProcessEndDtm;
    }

    public String getNonSprDataReviewedYn() {
        return nonSprDataReviewedYn;
    }

    public void setNonSprDataReviewedYn(String nonSprDataReviewedYn) {
        this.nonSprDataReviewedYn = nonSprDataReviewedYn;
    }

    public String getSiteCertifiedYn() {
        return siteCertifiedYn;
    }

    public void setSiteCertifiedYn(String siteCertifiedYn) {
        this.siteCertifiedYn = siteCertifiedYn;
    }

    public String getPublishedYn() {
        return publishedYn;
    }

    public void setPublishedYn(String publishedYn) {
        this.publishedYn = publishedYn;
    }

    public String getPublishedByNm() {
        return publishedByNm;
    }

    public void setPublishedByNm(String publishedByNm) {
        this.publishedByNm = publishedByNm;
    }

    public Date getPublishedOnDtm() {
        return publishedOnDtm;
    }

    public void setPublishedOnDtm(Date publishedOnDtm) {
        this.publishedOnDtm = publishedOnDtm;
    }

    public Date getReportingPeriodStartDt() {
        return reportingPeriodStartDt;
    }

    public void setReportingPeriodStartDt(Date reportingPeriodStartDt) {
        this.reportingPeriodStartDt = reportingPeriodStartDt;
    }

    public Date getReportingPeriodEndDt() {
        return reportingPeriodEndDt;
    }

    public void setReportingPeriodEndDt(Date reportingPeriodEndDt) {
        this.reportingPeriodEndDt = reportingPeriodEndDt;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public String getNonSprDataReviewedByNm() {
        return nonSprDataReviewedByNm;
    }

    public void setNonSprDataReviewedByNm(String nonSprDataReviewedByNm) {
        this.nonSprDataReviewedByNm = nonSprDataReviewedByNm;
    }

    public Date getNonSprDataReviewedOnDtm() {
        return nonSprDataReviewedOnDtm;
    }

    public void setNonSprDataReviewedOnDtm(Date nonSprDataReviewedOnDtm) {
        this.nonSprDataReviewedOnDtm = nonSprDataReviewedOnDtm;
    }

    public String getDataReviewCompleteYn() {
        return dataReviewCompleteYn;
    }

    public void setDataReviewCompleteYn(String dataReviewCompleteYn) {
        this.dataReviewCompleteYn = dataReviewCompleteYn;
    }

    public String getDataReviewCmpltByNm() {
        return dataReviewCmpltByNm;
    }

    public void setDataReviewCmpltByNm(String dataReviewCmpltByNm) {
        this.dataReviewCmpltByNm = dataReviewCmpltByNm;
    }

    public Date getDataReviewCompltOnDtm() {
        return dataReviewCompltOnDtm;
    }

    public void setDataReviewCompltOnDtm(Date dataReviewCompltOnDtm) {
        this.dataReviewCompltOnDtm = dataReviewCompltOnDtm;
    }

    public String getBusinessReviewCompleteYn() {
        return businessReviewCompleteYn;
    }

    public void setBusinessReviewCompleteYn(String businessReviewCompleteYn) {
        this.businessReviewCompleteYn = businessReviewCompleteYn;
    }

    public String getBusinessReviewCmpltByNm() {
        return businessReviewCmpltByNm;
    }

    public void setBusinessReviewCmpltByNm(String businessReviewCmpltByNm) {
        this.businessReviewCmpltByNm = businessReviewCmpltByNm;
    }

    public Date getBusinessReviewCompltOnDtm() {
        return businessReviewCompltOnDtm;
    }

    public void setBusinessReviewCompltOnDtm(Date businessReviewCompltOnDtm) {
        this.businessReviewCompltOnDtm = businessReviewCompltOnDtm;
    }

    public String getPabReviewCompleteYn() {
        return pabReviewCompleteYn;
    }

    public void setPabReviewCompleteYn(String pabReviewCompleteYn) {
        this.pabReviewCompleteYn = pabReviewCompleteYn;
    }

    public String getPabReviewCompleteByNm() {
        return pabReviewCompleteByNm;
    }

    public void setPabReviewCompleteByNm(String pabReviewCompleteByNm) {
        this.pabReviewCompleteByNm = pabReviewCompleteByNm;
    }

    public Date getPabReviewCompleteOnDtm() {
        return pabReviewCompleteOnDtm;
    }

    public void setPabReviewCompleteOnDtm(Date pabReviewCompleteOnDtm) {
        this.pabReviewCompleteOnDtm = pabReviewCompleteOnDtm;
    }

    public String getCommentTxt() {
        return commentTxt;
    }

    public void setCommentTxt(String commentTxt) {
        this.commentTxt = commentTxt;
    }

    public Collection<LoadSchedule> getLoadScheduleCollection() {
        return loadScheduleCollection;
    }

    public void setLoadScheduleCollection(Collection<LoadSchedule> loadScheduleCollection) {
        this.loadScheduleCollection = loadScheduleCollection;
    }

    public Collection<SiteSurgeon> getSiteSurgeonCollection() {
        return siteSurgeonCollection;
    }

    public void setSiteSurgeonCollection(Collection<SiteSurgeon> siteSurgeonCollection) {
        this.siteSurgeonCollection = siteSurgeonCollection;
    }

    public Collection<PostOperation> getPostOperationCollection() {
        return postOperationCollection;
    }

    public void setPostOperationCollection(Collection<PostOperation> postOperationCollection) {
        this.postOperationCollection = postOperationCollection;
    }

    public Collection<Patient> getPatientCollection() {
        return patientCollection;
    }

    public void setPatientCollection(Collection<Patient> patientCollection) {
        this.patientCollection = patientCollection;
    }

    public Collection<SiteStatistic> getSiteStatisticCollection() {
        return siteStatisticCollection;
    }

    public void setSiteStatisticCollection(Collection<SiteStatistic> siteStatisticCollection) {
        this.siteStatisticCollection = siteStatisticCollection;
    }

    public Collection<SiteAnnouncement> getSiteAnnouncementCollection() {
        return siteAnnouncementCollection;
    }

    public void setSiteAnnouncementCollection(Collection<SiteAnnouncement> siteAnnouncementCollection) {
        this.siteAnnouncementCollection = siteAnnouncementCollection;
    }

    public Collection<SiteEncounterType> getSiteEncounterTypeCollection() {
        return siteEncounterTypeCollection;
    }

    public void setSiteEncounterTypeCollection(Collection<SiteEncounterType> siteEncounterTypeCollection) {
        this.siteEncounterTypeCollection = siteEncounterTypeCollection;
    }

    public Collection<AssessmentTool> getAssessmentToolCollection() {
        return assessmentToolCollection;
    }

    public void setAssessmentToolCollection(Collection<AssessmentTool> assessmentToolCollection) {
        this.assessmentToolCollection = assessmentToolCollection;
    }

    public Collection<SiteMediaLongTermStat> getSiteMediaLongTermStatCollection() {
        return siteMediaLongTermStatCollection;
    }

    public void setSiteMediaLongTermStatCollection(Collection<SiteMediaLongTermStat> siteMediaLongTermStatCollection) {
        this.siteMediaLongTermStatCollection = siteMediaLongTermStatCollection;
    }

    public Collection<PostponementReason> getPostponementReasonCollection() {
        return postponementReasonCollection;
    }

    public void setPostponementReasonCollection(Collection<PostponementReason> postponementReasonCollection) {
        this.postponementReasonCollection = postponementReasonCollection;
    }

    public Collection<SiteInterventionType> getSiteInterventionTypeCollection() {
        return siteInterventionTypeCollection;
    }

    public void setSiteInterventionTypeCollection(Collection<SiteInterventionType> siteInterventionTypeCollection) {
        this.siteInterventionTypeCollection = siteInterventionTypeCollection;
    }

    public Collection<EncounterType> getEncounterTypeCollection() {
        return encounterTypeCollection;
    }

    public void setEncounterTypeCollection(Collection<EncounterType> encounterTypeCollection) {
        this.encounterTypeCollection = encounterTypeCollection;
    }

    public Collection<SiteProcedureGroup> getSiteProcedureGroupCollection() {
        return siteProcedureGroupCollection;
    }

    public void setSiteProcedureGroupCollection(Collection<SiteProcedureGroup> siteProcedureGroupCollection) {
        this.siteProcedureGroupCollection = siteProcedureGroupCollection;
    }

    public Collection<SitePreference> getSitePreferenceCollection() {
        return sitePreferenceCollection;
    }

    public void setSitePreferenceCollection(Collection<SitePreference> sitePreferenceCollection) {
        this.sitePreferenceCollection = sitePreferenceCollection;
    }

    public Collection<CancellationReason> getCancellationReasonCollection() {
        return cancellationReasonCollection;
    }

    public void setCancellationReasonCollection(Collection<CancellationReason> cancellationReasonCollection) {
        this.cancellationReasonCollection = cancellationReasonCollection;
    }

    public Collection<SiteHealthAuthority> getSiteHealthAuthorityCollection() {
        return siteHealthAuthorityCollection;
    }

    public void setSiteHealthAuthorityCollection(Collection<SiteHealthAuthority> siteHealthAuthorityCollection) {
        this.siteHealthAuthorityCollection = siteHealthAuthorityCollection;
    }

    public Collection<SiteFacility> getSiteFacilityCollection() {
        return siteFacilityCollection;
    }

    public void setSiteFacilityCollection(Collection<SiteFacility> siteFacilityCollection) {
        this.siteFacilityCollection = siteFacilityCollection;
    }

    public Collection<Surgeon> getSurgeonCollection() {
        return surgeonCollection;
    }

    public void setSurgeonCollection(Collection<Surgeon> surgeonCollection) {
        this.surgeonCollection = surgeonCollection;
    }

    public Collection<SiteSpecialtyGroup> getSiteSpecialtyGroupCollection() {
        return siteSpecialtyGroupCollection;
    }

    public void setSiteSpecialtyGroupCollection(Collection<SiteSpecialtyGroup> siteSpecialtyGroupCollection) {
        this.siteSpecialtyGroupCollection = siteSpecialtyGroupCollection;
    }

    public Collection<LoadError> getLoadErrorCollection() {
        return loadErrorCollection;
    }

    public void setLoadErrorCollection(Collection<LoadError> loadErrorCollection) {
        this.loadErrorCollection = loadErrorCollection;
    }

    public Collection<NonSprSite> getNonSprSiteCollection() {
        return nonSprSiteCollection;
    }

    public void setNonSprSiteCollection(Collection<NonSprSite> nonSprSiteCollection) {
        this.nonSprSiteCollection = nonSprSiteCollection;
    }

    public Collection<Facility> getFacilityCollection() {
        return facilityCollection;
    }

    public void setFacilityCollection(Collection<Facility> facilityCollection) {
        this.facilityCollection = facilityCollection;
    }

    public Collection<SprProcedure> getSprProcedureCollection() {
        return sprProcedureCollection;
    }

    public void setSprProcedureCollection(Collection<SprProcedure> sprProcedureCollection) {
        this.sprProcedureCollection = sprProcedureCollection;
    }

    public Collection<Booking> getBookingCollection() {
        return bookingCollection;
    }

    public void setBookingCollection(Collection<Booking> bookingCollection) {
        this.bookingCollection = bookingCollection;
    }

    public Collection<SitePriority> getSitePriorityCollection() {
        return sitePriorityCollection;
    }

    public void setSitePriorityCollection(Collection<SitePriority> sitePriorityCollection) {
        this.sitePriorityCollection = sitePriorityCollection;
    }

    public Collection<SiteCancerSuspected> getSiteCancerSuspectedCollection() {
        return siteCancerSuspectedCollection;
    }

    public void setSiteCancerSuspectedCollection(Collection<SiteCancerSuspected> siteCancerSuspectedCollection) {
        this.siteCancerSuspectedCollection = siteCancerSuspectedCollection;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (siteId != null ? siteId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Site)) {
            return false;
        }
        Site other = (Site) object;
        if ((this.siteId == null && other.siteId != null) || (this.siteId != null && !this.siteId.equals(other.siteId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.Site[siteId=" + siteId + "]";
    }

    public String getSiteDisplayNm() {
        return "" + siteYearNbr + "-" + (siteMonthNbr < 10 ? "0" : "") + siteMonthNbr + ("Y".equals(publishedYn) ? "(*PUBLISHED*)" : "(*UNPUBLISHED*)");
    }

    public String getSiteDisplayNmWithId() {
        return siteId + " " + siteYearNbr + "-" + (siteMonthNbr < 10 ? "0" : "") + siteMonthNbr + ("Y".equals(publishedYn) ? "(*PUBLISHED*)" : "(*UNPUBLISHED*)");
    }

    @XmlTransient
    public Collection<SwtSiteProvProcedure> getSwtSiteProvProcedureCollection() {
        return swtSiteProvProcedureCollection;
    }

    public void setSwtSiteProvProcedureCollection(Collection<SwtSiteProvProcedure> swtSiteProvProcedureCollection) {
        this.swtSiteProvProcedureCollection = swtSiteProvProcedureCollection;
    }

    @XmlTransient
    public Collection<SwtSiteProvProcedureGroup> getSwtSiteProvProcedureGroupCollection() {
        return swtSiteProvProcedureGroupCollection;
    }

    public void setSwtSiteProvProcedureGroupCollection(Collection<SwtSiteProvProcedureGroup> swtSiteProvProcedureGroupCollection) {
        this.swtSiteProvProcedureGroupCollection = swtSiteProvProcedureGroupCollection;
    }
}
