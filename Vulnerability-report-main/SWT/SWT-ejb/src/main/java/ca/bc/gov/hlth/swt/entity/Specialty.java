/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_SPECIALTY")
@NamedQueries({
    @NamedQuery(name = "Specialty.findBySpecialtyId", query = "SELECT s FROM Specialty s WHERE s.specialtyId = :specialtyId"),
    @NamedQuery(name = "Specialty.findBySurgeonSpecialtyId", query = "SELECT s FROM Specialty s WHERE s.surgeonSpecialtyId = :surgeonSpecialtyId"),
    @NamedQuery(name = "Specialty.findBySurgeonSpecialtyDsc", query = "SELECT s FROM Specialty s WHERE s.surgeonSpecialtyDsc = :surgeonSpecialtyDsc"),
    @NamedQuery(name = "Specialty.findByEffectiveDtm", query = "SELECT s FROM Specialty s WHERE s.effectiveDtm = :effectiveDtm"),
    @NamedQuery(name = "Specialty.findByExpiryDtm", query = "SELECT s FROM Specialty s WHERE s.expiryDtm = :expiryDtm"),
    @NamedQuery(name = "Specialty.findByCreatedByNm", query = "SELECT s FROM Specialty s WHERE s.createdByNm = :createdByNm"),
    @NamedQuery(name = "Specialty.findByCreatedOnDtm", query = "SELECT s FROM Specialty s WHERE s.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "Specialty.findByLastModifiedByNm", query = "SELECT s FROM Specialty s WHERE s.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "Specialty.findByLastModifiedOnDtm", query = "SELECT s FROM Specialty s WHERE s.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "Specialty.findByStatelessTransactionNbr", query = "SELECT s FROM Specialty s WHERE s.statelessTransactionNbr = :statelessTransactionNbr")})
public class Specialty implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @Column(name = "SPECIALTY_ID", nullable = false)
    private Long specialtyId;
    @Column(name = "SURGEON_SPECIALTY_ID", nullable = false)
    private long surgeonSpecialtyId;
    @Column(name = "SURGEON_SPECIALTY_DSC", nullable = false)
    private String surgeonSpecialtyDsc;
    @Column(name = "EFFECTIVE_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveDtm;
    @Column(name = "EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date expiryDtm;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    private long statelessTransactionNbr;
    @JoinColumn(name = "SPECIALTY_GROUP_ID", referencedColumnName = "SPECIALTY_GROUP_ID")
    @ManyToOne
    private SpecialtyGroup specialtyGroupId;

    public Specialty() {
    }

    public Specialty(Long specialtyId) {
        this.specialtyId = specialtyId;
    }

    public Specialty(Long specialtyId, long surgeonSpecialtyId, String surgeonSpecialtyDsc, Date effectiveDtm, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.specialtyId = specialtyId;
        this.surgeonSpecialtyId = surgeonSpecialtyId;
        this.surgeonSpecialtyDsc = surgeonSpecialtyDsc;
        this.effectiveDtm = effectiveDtm;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Long getSpecialtyId() {
        return specialtyId;
    }

    public void setSpecialtyId(Long specialtyId) {
        this.specialtyId = specialtyId;
    }

    public long getSurgeonSpecialtyId() {
        return surgeonSpecialtyId;
    }

    public void setSurgeonSpecialtyId(long surgeonSpecialtyId) {
        this.surgeonSpecialtyId = surgeonSpecialtyId;
    }

    public String getSurgeonSpecialtyDsc() {
        return surgeonSpecialtyDsc;
    }

    public void setSurgeonSpecialtyDsc(String surgeonSpecialtyDsc) {
        this.surgeonSpecialtyDsc = surgeonSpecialtyDsc;
    }

    public Date getEffectiveDtm() {
        return effectiveDtm;
    }

    public void setEffectiveDtm(Date effectiveDtm) {
        this.effectiveDtm = effectiveDtm;
    }

    public Date getExpiryDtm() {
        return expiryDtm;
    }

    public void setExpiryDtm(Date expiryDtm) {
        this.expiryDtm = expiryDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public SpecialtyGroup getSpecialtyGroupId() {
        return specialtyGroupId;
    }

    public void setSpecialtyGroupId(SpecialtyGroup specialtyGroupId) {
        this.specialtyGroupId = specialtyGroupId;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (specialtyId != null ? specialtyId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Specialty)) {
            return false;
        }
        Specialty other = (Specialty) object;
        if ((this.specialtyId == null && other.specialtyId != null) || (this.specialtyId != null && !this.specialtyId.equals(other.specialtyId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.Specialty[specialtyId=" + specialtyId + "]";
    }

}
