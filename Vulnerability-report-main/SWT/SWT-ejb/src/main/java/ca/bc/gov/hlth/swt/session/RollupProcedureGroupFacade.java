/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.session;

import ca.bc.gov.hlth.swt.ejbsupport.StatisticQueryBuilder;
import ca.bc.gov.hlth.swt.entity.RollupProcedureGroup;
import jakarta.ejb.Stateless;
import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import jakarta.persistence.Query;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Logger;

/**
 *
 * @author greg.perkins
 */
@Stateless
public class RollupProcedureGroupFacade implements RollupProcedureGroupFacadeLocal {

    @PersistenceContext(unitName = "SWT-ejbPU")
    private EntityManager em;

    private Logger log = Logger.getLogger(this.getClass().getName());

    public void create(RollupProcedureGroup rollupProcedureGroup) {
        em.persist(rollupProcedureGroup);
    }

    public void edit(RollupProcedureGroup rollupProcedureGroup) {
        em.merge(rollupProcedureGroup);
    }

    public void remove(RollupProcedureGroup rollupProcedureGroup) {
        em.remove(em.merge(rollupProcedureGroup));
    }

    public RollupProcedureGroup find(Object id) {
        return em.find(ca.bc.gov.hlth.swt.entity.RollupProcedureGroup.class, id);
    }

    public List<RollupProcedureGroup> findAll() {
        return em.createQuery("select object(o) from RollupProcedureGroup as o").getResultList();
    }

    public List<RollupProcedureGroup> findByProcedureNm(String procNm) {
        Query query = em.createNamedQuery("RollupProcedureGroup.findByProcedureGroupNm");
        query.setParameter("procedureGroupNm", procNm);
        List<RollupProcedureGroup> results = query.getResultList();
        return results;
    }

    public List<RollupProcedureGroup> findBySiteAndCategory(Long siteId, String adult) {
//    Disabling Radiotherapy      AND r.ROLLUP_PROCEDURE_GROUP_ID <> 70
//        return em.createNativeQuery("select o.* from swt_Rollup_Procedure_Group o, swt_Site_Procedure_Group s, SWT_INTERVENTION_TYPE i where s.rollup_Procedure_Group_Id = o.rollup_Procedure_Group_Id AND i.INTERVENTION_TYPE_CD = o.INTERVENTION_TYPE_CD and s.site_Id = ?1 and s.adult = ?2 ORDER BY i.SORT_ORDER_NBR NULLS FIRST, i.INTERVENTION_TYPE_CD, i.INTERVENTION_TYPE_DSC, o.sort_Order_Nbr NULLS FIRST, o.procedure_Group_Nm",RollupProcedureGroup.class)
        return em.createNativeQuery("select o.* from swt_Rollup_Procedure_Group o, swt_Site_Procedure_Group s, SWT_INTERVENTION_TYPE i where s.rollup_Procedure_Group_Id = o.rollup_Procedure_Group_Id AND i.INTERVENTION_TYPE_CD = o.INTERVENTION_TYPE_CD AND o.ROLLUP_PROCEDURE_GROUP_ID <> 70 and s.site_Id = ?1 and s.adult = ?2 ORDER BY i.SORT_ORDER_NBR NULLS FIRST, i.INTERVENTION_TYPE_CD, i.INTERVENTION_TYPE_DSC, o.sort_Order_Nbr NULLS FIRST, o.procedure_Group_Nm", RollupProcedureGroup.class)
                .setParameter(1, siteId)
                .setParameter(2, adult)
                .getResultList();
    }

    public List<RollupProcedureGroup> findBySiteAndCategoryNonSpr(Long siteId, String adult) {
//    Disabling Radiotherapy      AND r.ROLLUP_PROCEDURE_GROUP_ID <> 70
//        return em.createNativeQuery("select o.* from swt_Rollup_Procedure_Group o, swt_Site_Procedure_Group s, SWT_INTERVENTION_TYPE i where s.rollup_Procedure_Group_Id = o.rollup_Procedure_Group_Id AND i.INTERVENTION_TYPE_CD = o.INTERVENTION_TYPE_CD and o.NON_SPR_YN = 'N' and s.site_Id = ?1 and s.adult = ?2 ORDER BY i.SORT_ORDER_NBR NULLS FIRST, i.INTERVENTION_TYPE_CD, i.INTERVENTION_TYPE_DSC, o.sort_Order_Nbr NULLS FIRST, o.procedure_Group_Nm",RollupProcedureGroup.class)
        return em.createNativeQuery("select o.* from swt_Rollup_Procedure_Group o, swt_Site_Procedure_Group s, SWT_INTERVENTION_TYPE i where s.rollup_Procedure_Group_Id = o.rollup_Procedure_Group_Id AND i.INTERVENTION_TYPE_CD = o.INTERVENTION_TYPE_CD and o.NON_SPR_YN = 'N' AND o.ROLLUP_PROCEDURE_GROUP_ID <> 70 and s.site_Id = ?1 and s.adult = ?2 ORDER BY i.SORT_ORDER_NBR NULLS FIRST, i.INTERVENTION_TYPE_CD, i.INTERVENTION_TYPE_DSC, o.sort_Order_Nbr NULLS FIRST, o.procedure_Group_Nm", RollupProcedureGroup.class)
                .setParameter(1, siteId)
                .setParameter(2, adult)
                .getResultList();
    }

    public List search(Long siteId, Long rollupFacilityId, Long specialistId) {
        StringBuilder buff = new StringBuilder();
        buff.append("SELECT distinct p.*, i.SORT_ORDER_NBR, i.INTERVENTION_TYPE_CD, i.INTERVENTION_TYPE_DSC FROM SWT_ROLLUP_PROCEDURE_GROUP p, SWT_SITE_STATISTIC s, swt_intervention_type i WHERE ");
        buff.append("p.ROLLUP_PROCEDURE_GROUP_ID = s.ROLLUP_PROCEDURE_GROUP_ID ");
        buff.append("AND i.INTERVENTION_TYPE_CD = p.INTERVENTION_TYPE_CD ");
        buff.append("AND s.SITE_ID = ?1 ");
        buff.append("AND s.ROLLUP_FACILITY_ID = ?2 ");
        if (specialistId != null) {
            buff.append("AND s.ROLLUP_SURGEON_ID  = ?3 ");
        }
        buff.append(" and s.ROLLUP_INTERVENTION_TYPE_ID IS NULL ");
        buff.append(" and s.ROLLUP_SPECIALTY_GROUP_ID IS NULL ");
        buff.append(" and s.ROLLUP_ENCOUNTER_TYPE_ID IS NULL ");
        buff.append(" and s.ROLLUP_CANCER_SUSPECTED_ID IS NULL ");
        //buff.append(" and s.ROLLUP_HEALTH_AUTHORITY_ID IS NULL "); 
//    Disabling Radiotherapy      AND r.ROLLUP_PROCEDURE_GROUP_ID <> 70
        buff.append(" and p.ROLLUP_PROCEDURE_GROUP_ID <> 70 ");
        buff.append(" ORDER BY i.SORT_ORDER_NBR NULLS FIRST, i.INTERVENTION_TYPE_CD, i.INTERVENTION_TYPE_DSC, p.SORT_ORDER_NBR NULLS FIRST, p.PROCEDURE_GROUP_NM");
        Query q = em.createNativeQuery(buff.toString(), RollupProcedureGroup.class);
        q.setParameter(1, siteId);
        q.setParameter(2, rollupFacilityId);
        if (specialistId != null) {
            q.setParameter(3, specialistId);
        }
        return q.getResultList();
    }

    public List search(Long siteId, Long rollupFacilityId, Long specialistId, String adult) {
        StringBuilder buff = new StringBuilder();
        buff.append("SELECT distinct p.*, i.SORT_ORDER_NBR, i.INTERVENTION_TYPE_CD, i.INTERVENTION_TYPE_DSC FROM SWT_ROLLUP_PROCEDURE_GROUP p, SWT_SITE_STATISTIC s, swt_intervention_type i WHERE ");
        buff.append("p.ROLLUP_PROCEDURE_GROUP_ID = s.ROLLUP_PROCEDURE_GROUP_ID ");
        buff.append("AND i.INTERVENTION_TYPE_CD = p.INTERVENTION_TYPE_CD ");
        buff.append("AND s.SITE_ID = ?1 ");
        buff.append("AND s.ROLLUP_FACILITY_ID = ?2 ");
        buff.append(" and S.ADULT = ?3 ");
        if (specialistId != null) {
            buff.append("AND s.ROLLUP_SURGEON_ID  = ?4 ");
        }
        buff.append(" and s.ROLLUP_INTERVENTION_TYPE_ID IS NULL ");
        buff.append(" and s.ROLLUP_SPECIALTY_GROUP_ID IS NULL ");
        buff.append(" and s.ROLLUP_ENCOUNTER_TYPE_ID IS NULL ");
        buff.append(" and s.ROLLUP_CANCER_SUSPECTED_ID IS NULL ");
        //buff.append(" and s.ROLLUP_HEALTH_AUTHORITY_ID IS NULL "); 
//    Disabling Radiotherapy      AND r.ROLLUP_PROCEDURE_GROUP_ID <> 70
        buff.append(" and p.ROLLUP_PROCEDURE_GROUP_ID <> 70 ");
        buff.append(" ORDER BY i.SORT_ORDER_NBR NULLS FIRST, i.INTERVENTION_TYPE_CD, i.INTERVENTION_TYPE_DSC, p.SORT_ORDER_NBR NULLS FIRST, p.PROCEDURE_GROUP_NM");
        Query q = em.createNativeQuery(buff.toString(), RollupProcedureGroup.class);
        q.setParameter(1, siteId);
        q.setParameter(2, rollupFacilityId);
        q.setParameter(3, adult);
        if (specialistId != null) {
            q.setParameter(4, specialistId);
        }
        return q.getResultList();
    }

    public List<RollupProcedureGroup> findBySiteAndCriteria(Long siteId, String joinColumn, Long criteria) {
        StringBuilder buff = new StringBuilder();
        buff.append("SELECT p.* FROM SWT_ROLLUP_PROCEDURE_GROUP p, SWT_SITE_STATISTIC s, swt_intervention_type i ");
        buff.append("WHERE p.ROLLUP_PROCEDURE_GROUP_ID = s.ROLLUP_PROCEDURE_GROUP_ID ");
        buff.append("AND i.INTERVENTION_TYPE_CD = p.INTERVENTION_TYPE_CD ");
        buff.append("AND " + StatisticQueryBuilder.buildWhereClause("s", joinColumn, "ROLLUP_PROCEDURE_GROUP_ID", null));
        buff.append("AND s.SITE_ID = ?2 ");
//    Disabling Radiotherapy      AND r.ROLLUP_PROCEDURE_GROUP_ID <> 70
        buff.append(" and p.ROLLUP_PROCEDURE_GROUP_ID <> 70 ");
        buff.append(" ORDER BY i.SORT_ORDER_NBR NULLS FIRST, i.INTERVENTION_TYPE_CD, i.INTERVENTION_TYPE_DSC, p.SORT_ORDER_NBR NULLS FIRST, p.PROCEDURE_GROUP_NM");
        log.finest(buff.toString());
        Query q = em.createNativeQuery(buff.toString(), RollupProcedureGroup.class);
        q.setParameter(1, criteria);
        q.setParameter(2, siteId);
        return q.getResultList();
    }

    public List<RollupProcedureGroup> findBySiteAndMultipleCriteria(Long siteId, List joinColumns, List criteria, boolean sortByIntervention) {
        StringBuilder buff = new StringBuilder();
        List optionalColumns = Arrays.asList(new String[]{"ROLLUP_PROCEDURE_GROUP_ID", "ROLLUP_FACILITY_ID", "ROLLUP_HEALTH_AUTHORITY_ID", "ROLLUP_SURGEON_ID"});
        if (criteria.size() == 0) {
            buff.append("SELECT p.* FROM SWT_ROLLUP_PROCEDURE_GROUP p, SWT_SITE_PROCEDURE_GROUP s, swt_intervention_type i WHERE p.ROLLUP_PROCEDURE_GROUP_ID = s.ROLLUP_PROCEDURE_GROUP_ID AND i.INTERVENTION_TYPE_CD = p.INTERVENTION_TYPE_CD AND s.SITE_ID = ?1");
        } else {
            buff.append("SELECT DISTINCT p.* " + (sortByIntervention ? ",i.SORT_ORDER_NBR, i.INTERVENTION_TYPE_CD, i.INTERVENTION_TYPE_DSC " : "") + " FROM SWT_ROLLUP_PROCEDURE_GROUP p, SWT_SITE_STATISTIC s, swt_intervention_type i ");
            buff.append("WHERE p.ROLLUP_PROCEDURE_GROUP_ID = s.ROLLUP_PROCEDURE_GROUP_ID ");
            buff.append("AND i.INTERVENTION_TYPE_CD = p.INTERVENTION_TYPE_CD ");
            buff.append("AND " + StatisticQueryBuilder.buildWhereClause("s", joinColumns, optionalColumns, "ROLLUP_PROCEDURE_GROUP_ID", null));
            buff.append("AND s.SITE_ID = ?" + (criteria.size() + 1) + " ");
        }
        String optionalSort = "";
//    Disabling Radiotherapy      AND r.ROLLUP_PROCEDURE_GROUP_ID <> 70
        buff.append(" and p.ROLLUP_PROCEDURE_GROUP_ID <> 70 ");
        if (sortByIntervention) {
            optionalSort = "i.SORT_ORDER_NBR NULLS FIRST, i.INTERVENTION_TYPE_CD, i.INTERVENTION_TYPE_DSC,";
        }
        buff.append(" ORDER BY " + optionalSort + "p.SORT_ORDER_NBR NULLS FIRST, p.PROCEDURE_GROUP_NM");
        log.finest(buff.toString());
        Query q = em.createNativeQuery(buff.toString(), RollupProcedureGroup.class);
        for (int i = 0; i < criteria.size(); i++) {
            q.setParameter(i + 1, criteria.get(i));
        }
        q.setParameter(criteria.size() + 1, siteId);
        long start = System.currentTimeMillis();
        List l = q.getResultList();
        log.info("Found " + l.size() + " procedures in " + (System.currentTimeMillis() - start) + "ms");
        return l;
    }

    public List findAllNonSpr() {
//    Disabling Radiotherapy      AND r.ROLLUP_PROCEDURE_GROUP_ID <> 70
//        return em.createNativeQuery("select o.* from swt_Rollup_Procedure_Group o where o.non_Spr_Yn = 'Y' and o.expiry_Dtm is null order by o.sort_Order_Nbr nulls first, o.procedure_group_nm",RollupProcedureGroup.class).getResultList();
        return em.createNativeQuery("select o.* from swt_Rollup_Procedure_Group o where o.non_Spr_Yn = 'Y' AND o.ROLLUP_PROCEDURE_GROUP_ID <> 70 and o.expiry_Dtm is null order by o.sort_Order_Nbr nulls first, o.procedure_group_nm", RollupProcedureGroup.class).getResultList();
    }

    public Long findRollupProcedureForSiteAndProcedure(Long siteId, Long procedureGroupId, String adult) {
        try {
//    Disabling Radiotherapy      AND r.ROLLUP_PROCEDURE_GROUP_ID <> 70
//            return ((RollupProcedureGroup)em.createNativeQuery("SELECT r.ROLLUP_PROCEDURE_GROUP_ID FROM SWT_ROLLUP_PROCEDURE_GROUP r, SWT_SITE_PROCEDURE_GROUP s WHERE r.PROCEDURE_GROUP_ID = "+procedureGroupId+" AND s.ROLLUP_PROCEDURE_GROUP_ID = r.ROLLUP_PROCEDURE_GROUP_ID AND s.site_id = "+siteId + " AND s.ADULT = '" + adult + "'",RollupProcedureGroup.class).getSingleResult()).getRollupProcedureGroupId();
            return ((RollupProcedureGroup) em.createNativeQuery("SELECT r.ROLLUP_PROCEDURE_GROUP_ID FROM SWT_ROLLUP_PROCEDURE_GROUP r, SWT_SITE_PROCEDURE_GROUP s WHERE r.PROCEDURE_GROUP_ID = " + procedureGroupId + " AND s.ROLLUP_PROCEDURE_GROUP_ID = r.ROLLUP_PROCEDURE_GROUP_ID  AND r.ROLLUP_PROCEDURE_GROUP_ID <> 70 AND s.site_id = " + siteId + " AND s.ADULT = '" + adult + "'", RollupProcedureGroup.class).getSingleResult()).getRollupProcedureGroupId();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    public List<RollupProcedureGroup> findByInterventionTypeBodyPartAndAge(Long siteId, String interventionType, String bodyPart, String adult) {
        return em.createNativeQuery("SELECT r.* FROM SWT_ROLLUP_PROCEDURE_GROUP r INNER JOIN SWT_SITE_PROCEDURE_GROUP s ON s.ROLLUP_PROCEDURE_GROUP_ID = r.ROLLUP_PROCEDURE_GROUP_ID"
                + " INNER JOIN SWT_PROCEDURE_GROUP pg ON pg.PROCEDURE_GROUP_ID = r.PROCEDURE_GROUP_ID"
                + " INNER JOIN SWT_PROCGROUP_BODYPART pgbp ON pgbp.PROCEDURE_GROUP_ID = pg.PROCEDURE_GROUP_ID AND pgbp.BODY_PART_CD = '" + bodyPart + "'"
                + " WHERE r.INTERVENTION_TYPE_CD = ?1 AND s.ADULT = ?2 AND s.SITE_ID = ?3 AND r.ROLLUP_PROCEDURE_GROUP_ID <> 70", RollupProcedureGroup.class)
                //    Disabling Radiotherapy      AND r.ROLLUP_PROCEDURE_GROUP_ID <> 70
                //                + " WHERE r.INTERVENTION_TYPE_CD = ?1 AND s.ADULT = ?2 AND s.SITE_ID = ?3", RollupProcedureGroup.class)
                .setParameter(1, interventionType)
                .setParameter(2, adult)
                .setParameter(3, siteId)
                .getResultList();
    }

    public List<RollupProcedureGroup> findProceduresAdult(Long siteId) {
//    Disabling Radiotherapy      AND r.ROLLUP_PROCEDURE_GROUP_ID <> 70
//        return em.createNativeQuery("SELECT * FROM SWT_SITE_PROCEDURE_GROUP SPG, SWT_ROLLUP_PROCEDURE_GROUP RPG WHERE SPG.ROLLUP_PROCEDURE_GROUP_ID = RPG.ROLLUP_PROCEDURE_GROUP_ID  AND SPG.SITE_ID=?1 AND SPG.ADULT=?2 ORDER BY RPG.PROCEDURE_GROUP_NM",RollupProcedureGroup.class)
        return em.createNativeQuery("SELECT * FROM SWT_SITE_PROCEDURE_GROUP SPG, SWT_ROLLUP_PROCEDURE_GROUP RPG WHERE SPG.ROLLUP_PROCEDURE_GROUP_ID = RPG.ROLLUP_PROCEDURE_GROUP_ID  AND RPG.ROLLUP_PROCEDURE_GROUP_ID <> 70 AND SPG.SITE_ID=?1 AND SPG.ADULT=?2 ORDER BY RPG.PROCEDURE_GROUP_NM", RollupProcedureGroup.class)
                .setParameter(1, siteId)
                .setParameter(2, "Y")
                .getResultList();
    }

    public List<RollupProcedureGroup> findProceduresPediatric(Long siteId) {
//    Disabling Radiotherapy      AND r.ROLLUP_PROCEDURE_GROUP_ID <> 70
//        return em.createNativeQuery("SELECT * FROM SWT_SITE_PROCEDURE_GROUP SPG, SWT_ROLLUP_PROCEDURE_GROUP RPG WHERE SPG.ROLLUP_PROCEDURE_GROUP_ID = RPG.ROLLUP_PROCEDURE_GROUP_ID  AND SPG.SITE_ID=?1 AND SPG.ADULT=?2 ORDER BY RPG.PROCEDURE_GROUP_NM",RollupProcedureGroup.class)
        return em.createNativeQuery("SELECT * FROM SWT_SITE_PROCEDURE_GROUP SPG, SWT_ROLLUP_PROCEDURE_GROUP RPG WHERE SPG.ROLLUP_PROCEDURE_GROUP_ID = RPG.ROLLUP_PROCEDURE_GROUP_ID  AND RPG.ROLLUP_PROCEDURE_GROUP_ID <> 70 AND SPG.SITE_ID=?1 AND SPG.ADULT=?2 ORDER BY RPG.PROCEDURE_GROUP_NM", RollupProcedureGroup.class)
                .setParameter(1, siteId)
                .setParameter(2, "N")
                .getResultList();
    }

    public RollupProcedureGroup findDescProcedure(Long rollupProcedureGroupId) {
        try {
//    Disabling Radiotherapy      AND r.ROLLUP_PROCEDURE_GROUP_ID <> 70
//          return (RollupProcedureGroup)em.createNativeQuery("SELECT DISTINCT P.* FROM SWT_ROLLUP_PROCEDURE_GROUP P WHERE P.ROLLUP_PROCEDURE_GROUP_ID = ?1" ,RollupProcedureGroup.class)
            return (RollupProcedureGroup) em.createNativeQuery("SELECT DISTINCT P.* FROM SWT_ROLLUP_PROCEDURE_GROUP P WHERE P.ROLLUP_PROCEDURE_GROUP_ID = ?1 AND P.ROLLUP_PROCEDURE_GROUP_ID <> 70", RollupProcedureGroup.class)
                    .setParameter(1, rollupProcedureGroupId)
                    .getSingleResult();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    public RollupProcedureGroup findIDProcedure(Long siteId, String adult, String ProcedureGroupNm) {
        try {
//    Disabling Radiotherapy      AND r.ROLLUP_PROCEDURE_GROUP_ID <> 70
            return (RollupProcedureGroup) em.createNativeQuery("SELECT * FROM SWT_SITE_PROCEDURE_GROUP SPG, SWT_ROLLUP_PROCEDURE_GROUP RPG WHERE SPG.ROLLUP_PROCEDURE_GROUP_ID = RPG.ROLLUP_PROCEDURE_GROUP_ID  AND RPG.ROLLUP_PROCEDURE_GROUP_ID <> 70 AND SPG.SITE_ID= " + siteId + " AND SPG.ADULT='" + adult + "'  AND RPG.PROCEDURE_GROUP_NM='" + ProcedureGroupNm + "' ORDER BY RPG.PROCEDURE_GROUP_NM", RollupProcedureGroup.class).getSingleResult();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
}
