/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_PRIORITY")
@NamedQueries({
    @NamedQuery(name = "Priority.findByPriorityCd", query = "SELECT p FROM Priority p WHERE p.priorityCd = :priorityCd"),
    @NamedQuery(name = "Priority.findByPriorityDsc", query = "SELECT p FROM Priority p WHERE p.priorityDsc = :priorityDsc"),
    @NamedQuery(name = "Priority.findBySortOrderNbr", query = "SELECT p FROM Priority p WHERE p.sortOrderNbr = :sortOrderNbr"),
    @NamedQuery(name = "Priority.findByEffectiveDtm", query = "SELECT p FROM Priority p WHERE p.effectiveDtm = :effectiveDtm"),
    @NamedQuery(name = "Priority.findByExpiryDtm", query = "SELECT p FROM Priority p WHERE p.expiryDtm = :expiryDtm"),
    @NamedQuery(name = "Priority.findByCreatedByNm", query = "SELECT p FROM Priority p WHERE p.createdByNm = :createdByNm"),
    @NamedQuery(name = "Priority.findByCreatedOnDtm", query = "SELECT p FROM Priority p WHERE p.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "Priority.findByLastModifiedByNm", query = "SELECT p FROM Priority p WHERE p.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "Priority.findByLastModifiedOnDtm", query = "SELECT p FROM Priority p WHERE p.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "Priority.findByStatelessTransactionNbr", query = "SELECT p FROM Priority p WHERE p.statelessTransactionNbr = :statelessTransactionNbr"),
    @NamedQuery(name = "Priority.findByCommentTxt", query = "SELECT p FROM Priority p WHERE p.commentTxt = :commentTxt")})
public class Priority implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @Column(name = "PRIORITY_CD", nullable = false)
    private String priorityCd;
    @Column(name = "PRIORITY_DSC", nullable = false)
    private String priorityDsc;
    @Column(name = "SORT_ORDER_NBR")
    private Long sortOrderNbr;
    @Column(name = "EFFECTIVE_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveDtm;
    @Column(name = "EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date expiryDtm;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR")
    @Version
    private long statelessTransactionNbr;
    @Column(name = "COMMENT_TXT")
    private String commentTxt;

    public Priority() {
    }

    public Priority(String priorityCd) {
        this.priorityCd = priorityCd;
    }

    public Priority(String priorityCd, String priorityDsc, Long sortOrderNbr, Date effectiveDtm, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.priorityCd = priorityCd;
        this.priorityDsc = priorityDsc;
        this.sortOrderNbr = sortOrderNbr;
        this.effectiveDtm = effectiveDtm;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public String getPriorityCd() {
        return priorityCd;
    }

    public void setPriorityCd(String priorityCd) {
        this.priorityCd = priorityCd;
    }

    public String getPriorityDsc() {
        return priorityDsc;
    }

    public void setPriorityDsc(String priorityDsc) {
        this.priorityDsc = priorityDsc;
    }

    public Long getSortOrderNbr() {
        return sortOrderNbr;
    }

    public void setSortOrderNbr(Long sortOrderNbr) {
        this.sortOrderNbr = sortOrderNbr;
    }

    public Date getEffectiveDtm() {
        return effectiveDtm;
    }

    public void setEffectiveDtm(Date effectiveDtm) {
        this.effectiveDtm = effectiveDtm;
    }

    public Date getExpiryDtm() {
        return expiryDtm;
    }

    public void setExpiryDtm(Date expiryDtm) {
        this.expiryDtm = expiryDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public String getCommentTxt() {
        return commentTxt;
    }

    public void setCommentTxt(String commentTxt) {
        this.commentTxt = commentTxt;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (priorityCd != null ? priorityCd.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Priority)) {
            return false;
        }
        Priority other = (Priority) object;
        if ((this.priorityCd == null && other.priorityCd != null) || (this.priorityCd != null && !this.priorityCd.equals(other.priorityCd))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "Priority{" + "priorityCd=" + priorityCd + ", priorityDsc=" + priorityDsc + ", sortOrderNbr=" + sortOrderNbr + ", effectiveDtm=" + effectiveDtm + ", expiryDtm=" + expiryDtm + ", createdByNm=" + createdByNm + ", createdOnDtm=" + createdOnDtm + ", lastModifiedByNm=" + lastModifiedByNm + ", lastModifiedOnDtm=" + lastModifiedOnDtm + ", statelessTransactionNbr=" + statelessTransactionNbr + ", commentTxt=" + commentTxt + '}';
    }

}
