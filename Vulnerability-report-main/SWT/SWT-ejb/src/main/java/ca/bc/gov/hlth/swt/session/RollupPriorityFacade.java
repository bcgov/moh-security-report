/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.session;

import ca.bc.gov.hlth.swt.entity.RollupPriority;
import jakarta.annotation.Resource;
import jakarta.ejb.Stateless;
import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import jakarta.persistence.Query;
import java.util.List;
import javax.sql.DataSource;

/**
 *
 * @author greg.perkins
 */
@Stateless
public class RollupPriorityFacade implements RollupPriorityFacadeLocal {

    @PersistenceContext(unitName = "SWT-ejbPU")
    private EntityManager em;

    @Resource(name = "java:app/jdbc/SWT")
    private DataSource ds;

    public void create(RollupPriority rollupPriority) {
        em.persist(rollupPriority);
    }

    public void edit(RollupPriority rollupPriority) {
        em.merge(rollupPriority);
    }

    public void remove(RollupPriority rollupPriority) {
        em.remove(em.merge(rollupPriority));
    }

    public RollupPriority find(Object id) {
        return em.find(ca.bc.gov.hlth.swt.entity.RollupPriority.class, id);
    }

    public List<RollupPriority> findAll() {
        return em.createNativeQuery("select o.* from SWT_Rollup_Priority o, SWT_PRIORITY p WHERE o.PRIORITY_CD = p.PRIORITY_CD AND (o.EXPIRY_DTM IS NULL OR o.EXPIRY_DTM > SYSDATE) ORDER BY p.EXPIRY_DTM DESC NULLS FIRST, nvl(o.SORT_ORDER_NBR,998), o.PRIORITY_DSC", RollupPriority.class).getResultList();
    }

    public List<RollupPriority> findByPriorityDsc(String priorityNm) {
        Query query = em.createNamedQuery("RollupPriority.findByPriorityDsc");
        query.setParameter("priorityDsc", priorityNm);
        List<RollupPriority> results = query.getResultList();
        return results;
    }

    public void refreshPriorityRollups() {
        em.createNativeQuery("{call SWT_SNAPSHOTLOAD_PKG.pr_load_priority()}").executeUpdate();
    }

}
