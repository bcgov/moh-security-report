/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_LOAD_ERROR")
@NamedQueries({
    @NamedQuery(name = "LoadError.findByLoadErrorId", query = "SELECT l FROM LoadError l WHERE l.loadErrorId = :loadErrorId"),
    @NamedQuery(name = "LoadError.findByLoadErrorTxt", query = "SELECT l FROM LoadError l WHERE l.loadErrorTxt = :loadErrorTxt"),
    @NamedQuery(name = "LoadError.findByCreatedByNm", query = "SELECT l FROM LoadError l WHERE l.createdByNm = :createdByNm"),
    @NamedQuery(name = "LoadError.findByCreatedOnDtm", query = "SELECT l FROM LoadError l WHERE l.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "LoadError.findByLastModifiedByNm", query = "SELECT l FROM LoadError l WHERE l.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "LoadError.findByLastModifiedOnDtm", query = "SELECT l FROM LoadError l WHERE l.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "LoadError.findByStatelessTransactionNbr", query = "SELECT l FROM LoadError l WHERE l.statelessTransactionNbr = :statelessTransactionNbr")})
public class LoadError implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @Column(name = "LOAD_ERROR_ID", nullable = false)
    private Long loadErrorId;
    @Column(name = "LOAD_ERROR_TXT", nullable = false)
    private String loadErrorTxt;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    private long statelessTransactionNbr;
    @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID")
    @ManyToOne
    private Site siteId;

    public LoadError() {
    }

    public LoadError(Long loadErrorId) {
        this.loadErrorId = loadErrorId;
    }

    public LoadError(Long loadErrorId, String loadErrorTxt, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.loadErrorId = loadErrorId;
        this.loadErrorTxt = loadErrorTxt;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Long getLoadErrorId() {
        return loadErrorId;
    }

    public void setLoadErrorId(Long loadErrorId) {
        this.loadErrorId = loadErrorId;
    }

    public String getLoadErrorTxt() {
        return loadErrorTxt;
    }

    public void setLoadErrorTxt(String loadErrorTxt) {
        this.loadErrorTxt = loadErrorTxt;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Site getSiteId() {
        return siteId;
    }

    public void setSiteId(Site siteId) {
        this.siteId = siteId;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (loadErrorId != null ? loadErrorId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof LoadError)) {
            return false;
        }
        LoadError other = (LoadError) object;
        if ((this.loadErrorId == null && other.loadErrorId != null) || (this.loadErrorId != null && !this.loadErrorId.equals(other.loadErrorId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.LoadError[loadErrorId=" + loadErrorId + "]";
    }

}
