/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.io.Serializable;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_ROLLUP_HEALTH_AUTHORITY")
@NamedQueries({
    @NamedQuery(name = "RollupHealthAuthority.findByRollupHealthAuthorityId", query = "SELECT r FROM RollupHealthAuthority r WHERE r.rollupHealthAuthorityId = :rollupHealthAuthorityId"),
    @NamedQuery(name = "RollupHealthAuthority.findByHealthAuthorityId", query = "SELECT r FROM RollupHealthAuthority r WHERE r.healthAuthorityId = :healthAuthorityId"),
    @NamedQuery(name = "RollupHealthAuthority.findByHealthAuthorityNm", query = "SELECT r FROM RollupHealthAuthority r WHERE r.healthAuthorityNm = :healthAuthorityNm"),
    @NamedQuery(name = "RollupHealthAuthority.findByEffectiveDtm", query = "SELECT r FROM RollupHealthAuthority r WHERE r.effectiveDtm = :effectiveDtm"),
    @NamedQuery(name = "RollupHealthAuthority.findByExpiryDtm", query = "SELECT r FROM RollupHealthAuthority r WHERE r.expiryDtm = :expiryDtm"),
    @NamedQuery(name = "RollupHealthAuthority.findByCreatedByNm", query = "SELECT r FROM RollupHealthAuthority r WHERE r.createdByNm = :createdByNm"),
    @NamedQuery(name = "RollupHealthAuthority.findByCreatedOnDtm", query = "SELECT r FROM RollupHealthAuthority r WHERE r.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "RollupHealthAuthority.findByLastModifiedByNm", query = "SELECT r FROM RollupHealthAuthority r WHERE r.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "RollupHealthAuthority.findByLastModifiedOnDtm", query = "SELECT r FROM RollupHealthAuthority r WHERE r.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "RollupHealthAuthority.findByStatelessTransactionNbr", query = "SELECT r FROM RollupHealthAuthority r WHERE r.statelessTransactionNbr = :statelessTransactionNbr")})
public class RollupHealthAuthority implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @Column(name = "ROLLUP_HEALTH_AUTHORITY_ID", nullable = false)
    private Long rollupHealthAuthorityId;
    @Column(name = "HEALTH_AUTHORITY_ID", nullable = false)
    private long healthAuthorityId;
    @Column(name = "HEALTH_AUTHORITY_NM", nullable = false)
    private String healthAuthorityNm;
    @Column(name = "EFFECTIVE_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveDtm;
    @Column(name = "EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date expiryDtm;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    private long statelessTransactionNbr;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "rollupHealthAuthority")
    private Collection<SiteHealthAuthority> siteHealthAuthorityCollection;

    public RollupHealthAuthority() {
    }

    public RollupHealthAuthority(Long rollupHealthAuthorityId) {
        this.rollupHealthAuthorityId = rollupHealthAuthorityId;
    }

    public RollupHealthAuthority(Long rollupHealthAuthorityId, long healthAuthorityId, String healthAuthorityNm, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.rollupHealthAuthorityId = rollupHealthAuthorityId;
        this.healthAuthorityId = healthAuthorityId;
        this.healthAuthorityNm = healthAuthorityNm;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Long getRollupHealthAuthorityId() {
        return rollupHealthAuthorityId;
    }

    public void setRollupHealthAuthorityId(Long rollupHealthAuthorityId) {
        this.rollupHealthAuthorityId = rollupHealthAuthorityId;
    }

    public long getHealthAuthorityId() {
        return healthAuthorityId;
    }

    public void setHealthAuthorityId(long healthAuthorityId) {
        this.healthAuthorityId = healthAuthorityId;
    }

    public String getHealthAuthorityNm() {
        return healthAuthorityNm;
    }

    public void setHealthAuthorityNm(String healthAuthorityNm) {
        this.healthAuthorityNm = healthAuthorityNm;
    }

    public Date getEffectiveDtm() {
        return effectiveDtm;
    }

    public void setEffectiveDtm(Date effectiveDtm) {
        this.effectiveDtm = effectiveDtm;
    }

    public Date getExpiryDtm() {
        return expiryDtm;
    }

    public void setExpiryDtm(Date expiryDtm) {
        this.expiryDtm = expiryDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Collection<SiteHealthAuthority> getSiteHealthAuthorityCollection() {
        return siteHealthAuthorityCollection;
    }

    public void setSiteHealthAuthorityCollection(Collection<SiteHealthAuthority> siteHealthAuthorityCollection) {
        this.siteHealthAuthorityCollection = siteHealthAuthorityCollection;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (rollupHealthAuthorityId != null ? rollupHealthAuthorityId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof RollupHealthAuthority)) {
            return false;
        }
        RollupHealthAuthority other = (RollupHealthAuthority) object;
        if ((this.rollupHealthAuthorityId == null && other.rollupHealthAuthorityId != null) || (this.rollupHealthAuthorityId != null && !this.rollupHealthAuthorityId.equals(other.rollupHealthAuthorityId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.RollupHealthAuthority[rollupHealthAuthorityId=" + rollupHealthAuthorityId + "]";
    }

}
