/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_NON_SPR_STATISTIC")
@NamedQueries({
    @NamedQuery(name = "NonSprStatistic.findByNonSprStatisticId", query = "SELECT n FROM NonSprStatistic n WHERE n.nonSprStatisticId = :nonSprStatisticId"),
    @NamedQuery(name = "NonSprStatistic.findByPatientsWaitingNbr", query = "SELECT n FROM NonSprStatistic n WHERE n.patientsWaitingNbr = :patientsWaitingNbr"),
    @NamedQuery(name = "NonSprStatistic.findByProceduresPerformedNbr", query = "SELECT n FROM NonSprStatistic n WHERE n.proceduresPerformedNbr = :proceduresPerformedNbr"),
    @NamedQuery(name = "NonSprStatistic.findByFiftyPctWeeksNbr", query = "SELECT n FROM NonSprStatistic n WHERE n.fiftyPctWeeksNbr = :fiftyPctWeeksNbr"),
    @NamedQuery(name = "NonSprStatistic.findByNinetyPctWeeksNbr", query = "SELECT n FROM NonSprStatistic n WHERE n.ninetyPctWeeksNbr = :ninetyPctWeeksNbr"),
    @NamedQuery(name = "NonSprStatistic.findByCreatedByNm", query = "SELECT n FROM NonSprStatistic n WHERE n.createdByNm = :createdByNm"),
    @NamedQuery(name = "NonSprStatistic.findByCreatedOnDtm", query = "SELECT n FROM NonSprStatistic n WHERE n.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "NonSprStatistic.findByLastModifiedByNm", query = "SELECT n FROM NonSprStatistic n WHERE n.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "NonSprStatistic.findByLastModifiedOnDtm", query = "SELECT n FROM NonSprStatistic n WHERE n.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "NonSprStatistic.findByStatelessTransactionNbr", query = "SELECT n FROM NonSprStatistic n WHERE n.statelessTransactionNbr = :statelessTransactionNbr")})
@SequenceGenerator(name = "NonSprStatisticSeq", sequenceName = "SWT_NONS_SEQ", allocationSize = 1, initialValue = 1)
public class NonSprStatistic implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "NonSprStatisticSeq")
    @Column(name = "NON_SPR_STATISTIC_ID", nullable = false)
    private Long nonSprStatisticId;
    @Column(name = "PATIENTS_WAITING_NBR")
    private Integer patientsWaitingNbr;
    @Column(name = "PROCEDURES_PERFORMED_NBR")
    private Integer proceduresPerformedNbr;
    @Column(name = "WT2_FIFTY_PCT_WEEKS_NBR")
    private BigDecimal fiftyPctWeeksNbr;
    @Column(name = "WT2_NINETY_PCT_WEEKS_NBR")
    private BigDecimal ninetyPctWeeksNbr;
    @Column(name = "PCT_COMPLETED_WITHIN_TGT")
    private BigDecimal pctCompletedWithinTgt;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    @Version
    private long statelessTransactionNbr;
    @Column(name = "COMMENT_TXT")
    private String commentTxt;
    @JoinColumn(name = "NON_SPR_DATA_ENTRY_ID", referencedColumnName = "NON_SPR_DATA_ENTRY_ID")
    @ManyToOne
    private NonSprDataEntry nonSprDataEntryId;
    @JoinColumn(name = "ROLLUP_FACILITY_ID", referencedColumnName = "ROLLUP_FACILITY_ID")
    @ManyToOne
    private RollupFacility rollupFacilityId;
    @JoinColumn(name = "ROLLUP_PRIORITY_ID", referencedColumnName = "ROLLUP_PRIORITY_ID")
    @ManyToOne
    private RollupPriority rollupPriorityId;
    @JoinColumn(name = "ROLLUP_SURGEON_ID", referencedColumnName = "ROLLUP_SURGEON_ID")
    @ManyToOne
    private RollupSurgeon rollupSurgeonId;

    public NonSprStatistic() {
    }

    public NonSprStatistic(Long nonSprStatisticId) {
        this.nonSprStatisticId = nonSprStatisticId;
    }

    public NonSprStatistic(Long nonSprStatisticId, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.nonSprStatisticId = nonSprStatisticId;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Long getNonSprStatisticId() {
        return nonSprStatisticId;
    }

    public void setNonSprStatisticId(Long nonSprStatisticId) {
        this.nonSprStatisticId = nonSprStatisticId;
    }

    public Integer getPatientsWaitingNbr() {
        return patientsWaitingNbr;
    }

    public void setPatientsWaitingNbr(Integer patientsWaitingNbr) {
        this.patientsWaitingNbr = patientsWaitingNbr;
    }

    public Integer getProceduresPerformedNbr() {
        return proceduresPerformedNbr;
    }

    public void setProceduresPerformedNbr(Integer proceduresPerformedNbr) {
        this.proceduresPerformedNbr = proceduresPerformedNbr;
    }

    public BigDecimal getFiftyPctWeeksNbr() {
        return fiftyPctWeeksNbr;
    }

    public void setFiftyPctWeeksNbr(BigDecimal fiftyPctWeeksNbr) {
        this.fiftyPctWeeksNbr = fiftyPctWeeksNbr;
    }

    public BigDecimal getNinetyPctWeeksNbr() {
        return ninetyPctWeeksNbr;
    }

    public void setNinetyPctWeeksNbr(BigDecimal ninetyPctWeeksNbr) {
        this.ninetyPctWeeksNbr = ninetyPctWeeksNbr;
    }

    public BigDecimal getPctCompletedWithinTgt() {
        return pctCompletedWithinTgt;
    }

    public void setPctCompletedWithinTgt(BigDecimal pctCompletedWithinTgt) {
        this.pctCompletedWithinTgt = pctCompletedWithinTgt;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public String getCommentTxt() {
        return commentTxt;
    }

    public void setCommentTxt(String commentTxt) {
        this.commentTxt = commentTxt;
    }

    public NonSprDataEntry getNonSprDataEntryId() {
        return nonSprDataEntryId;
    }

    public void setNonSprDataEntryId(NonSprDataEntry nonSprDataEntryId) {
        this.nonSprDataEntryId = nonSprDataEntryId;
    }

    public RollupFacility getRollupFacilityId() {
        return rollupFacilityId;
    }

    public void setRollupFacilityId(RollupFacility rollupFacilityId) {
        this.rollupFacilityId = rollupFacilityId;
    }

    public RollupPriority getRollupPriorityId() {
        return rollupPriorityId;
    }

    public void setRollupPriorityId(RollupPriority rollupPriorityId) {
        this.rollupPriorityId = rollupPriorityId;
    }

    public RollupSurgeon getRollupSurgeonId() {
        return rollupSurgeonId;
    }

    public void setRollupSurgeonId(RollupSurgeon rollupSurgeonId) {
        this.rollupSurgeonId = rollupSurgeonId;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (nonSprStatisticId != null ? nonSprStatisticId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof NonSprStatistic)) {
            return false;
        }
        NonSprStatistic other = (NonSprStatistic) object;
        if ((this.nonSprStatisticId == null && other.nonSprStatisticId != null) || (this.nonSprStatisticId != null && !this.nonSprStatisticId.equals(other.nonSprStatisticId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.NonSprStatistic[nonSprStatisticId=" + nonSprStatisticId + "]";
    }

}
