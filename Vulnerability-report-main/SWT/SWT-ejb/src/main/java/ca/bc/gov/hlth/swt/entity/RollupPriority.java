/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.io.Serializable;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_ROLLUP_PRIORITY")
@NamedQueries({
    @NamedQuery(name = "RollupPriority.findByRollupPriorityId", query = "SELECT r FROM RollupPriority r WHERE r.rollupPriorityId = :rollupPriorityId"),
    @NamedQuery(name = "RollupPriority.findByPriorityCd", query = "SELECT r FROM RollupPriority r WHERE r.priorityCd = :priorityCd"),
    @NamedQuery(name = "RollupPriority.findByPriorityDsc", query = "SELECT r FROM RollupPriority r WHERE r.priorityDsc = :priorityDsc"),
    @NamedQuery(name = "RollupPriority.findBySortOrderNbr", query = "SELECT r FROM RollupPriority r WHERE r.sortOrderNbr = :sortOrderNbr"),
    @NamedQuery(name = "RollupPriority.findByCreatedByNm", query = "SELECT r FROM RollupPriority r WHERE r.createdByNm = :createdByNm"),
    @NamedQuery(name = "RollupPriority.findByCreatedOnDtm", query = "SELECT r FROM RollupPriority r WHERE r.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "RollupPriority.findByLastModifiedByNm", query = "SELECT r FROM RollupPriority r WHERE r.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "RollupPriority.findByLastModifiedOnDtm", query = "SELECT r FROM RollupPriority r WHERE r.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "RollupPriority.findByStatelessTransactionNbr", query = "SELECT r FROM RollupPriority r WHERE r.statelessTransactionNbr = :statelessTransactionNbr")})
@SequenceGenerator(name = "RollupPrioritySeq", sequenceName = "SWT_RP_SEQ", allocationSize = 1, initialValue = 1)
public class RollupPriority implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "RollupPrioritySeq")
    @Column(name = "ROLLUP_PRIORITY_ID", nullable = false)
    private Long rollupPriorityId;
    @Column(name = "PRIORITY_CD", nullable = false)
    private String priorityCd;
    @Column(name = "PRIORITY_DSC", nullable = false)
    private String priorityDsc;
    @Column(name = "SORT_ORDER_NBR")
    private Long sortOrderNbr;
    @Column(name = "EFFECTIVE_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveDtm;
    @Column(name = "EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date expiryDtm;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    private long statelessTransactionNbr;
    @OneToMany(mappedBy = "rollupPriorityId")
    private Collection<SiteMediaLongTermStat> siteMediaLongTermStatCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "rollupPriority")
    private Collection<SitePriority> sitePriorityCollection;

    public RollupPriority() {
    }

    public RollupPriority(Long rollupPriorityId) {
        this.rollupPriorityId = rollupPriorityId;
    }

    public RollupPriority(Long rollupPriorityId, String priorityCd, String priorityDsc, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.rollupPriorityId = rollupPriorityId;
        this.priorityCd = priorityCd;
        this.priorityDsc = priorityDsc;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Long getRollupPriorityId() {
        return rollupPriorityId;
    }

    public void setRollupPriorityId(Long rollupPriorityId) {
        this.rollupPriorityId = rollupPriorityId;
    }

    public String getPriorityCd() {
        return priorityCd;
    }

    public void setPriorityCd(String priorityCd) {
        this.priorityCd = priorityCd;
    }

    public String getPriorityDsc() {
        return priorityDsc;
    }

    public void setPriorityDsc(String priorityDsc) {
        this.priorityDsc = priorityDsc;
    }

    public Long getSortOrderNbr() {
        return sortOrderNbr;
    }

    public void setSortOrderNbr(Long sortOrderNbr) {
        this.sortOrderNbr = sortOrderNbr;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Collection<SiteMediaLongTermStat> getSiteMediaLongTermStatCollection() {
        return siteMediaLongTermStatCollection;
    }

    public void setSiteMediaLongTermStatCollection(Collection<SiteMediaLongTermStat> siteMediaLongTermStatCollection) {
        this.siteMediaLongTermStatCollection = siteMediaLongTermStatCollection;
    }

    public Collection<SitePriority> getSitePriorityCollection() {
        return sitePriorityCollection;
    }

    public void setSitePriorityCollection(Collection<SitePriority> sitePriorityCollection) {
        this.sitePriorityCollection = sitePriorityCollection;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (rollupPriorityId != null ? rollupPriorityId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof RollupPriority)) {
            return false;
        }
        RollupPriority other = (RollupPriority) object;
        if ((this.rollupPriorityId == null && other.rollupPriorityId != null) || (this.rollupPriorityId != null && !this.rollupPriorityId.equals(other.rollupPriorityId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.RollupPriority[rollupPriorityId=" + rollupPriorityId + "]";
    }

    public Date getEffectiveDtm() {
        return effectiveDtm;
    }

    public void setEffectiveDtm(Date effectiveDtm) {
        this.effectiveDtm = effectiveDtm;
    }

    public Date getExpiryDtm() {
        return expiryDtm;
    }

    public void setExpiryDtm(Date expiryDtm) {
        this.expiryDtm = expiryDtm;
    }

}
