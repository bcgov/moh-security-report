/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.io.Serializable;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_CANCELLATION_REASON")
@NamedQueries({
    @NamedQuery(name = "CancellationReason.findByCancelRsnListId", query = "SELECT c FROM CancellationReason c WHERE c.cancellationReasonPK.cancelRsnListId = :cancelRsnListId"),
    @NamedQuery(name = "CancellationReason.findByHaCancelRsnCd", query = "SELECT c FROM CancellationReason c WHERE c.cancellationReasonPK.haCancelRsnCd = :haCancelRsnCd"),
    @NamedQuery(name = "CancellationReason.findBySiteId", query = "SELECT c FROM CancellationReason c WHERE c.cancellationReasonPK.siteId = :siteId"),
    @NamedQuery(name = "CancellationReason.findByHaCancelRsnDsc", query = "SELECT c FROM CancellationReason c WHERE c.haCancelRsnDsc = :haCancelRsnDsc"),
    @NamedQuery(name = "CancellationReason.findByHaCancelRsnEffectiveDtm", query = "SELECT c FROM CancellationReason c WHERE c.haCancelRsnEffectiveDtm = :haCancelRsnEffectiveDtm"),
    @NamedQuery(name = "CancellationReason.findByHaCancelRsnExpiryDtm", query = "SELECT c FROM CancellationReason c WHERE c.haCancelRsnExpiryDtm = :haCancelRsnExpiryDtm"),
    @NamedQuery(name = "CancellationReason.findByProvCancelRsnCd", query = "SELECT c FROM CancellationReason c WHERE c.provCancelRsnCd = :provCancelRsnCd"),
    @NamedQuery(name = "CancellationReason.findByProvCancelRsnDsc", query = "SELECT c FROM CancellationReason c WHERE c.provCancelRsnDsc = :provCancelRsnDsc"),
    @NamedQuery(name = "CancellationReason.findByProvCancelRsnEffectiveDtm", query = "SELECT c FROM CancellationReason c WHERE c.provCancelRsnEffectiveDtm = :provCancelRsnEffectiveDtm"),
    @NamedQuery(name = "CancellationReason.findByProvCancelRsnExpiryDtm", query = "SELECT c FROM CancellationReason c WHERE c.provCancelRsnExpiryDtm = :provCancelRsnExpiryDtm"),
    @NamedQuery(name = "CancellationReason.findByCancelReasonListDsc", query = "SELECT c FROM CancellationReason c WHERE c.cancelReasonListDsc = :cancelReasonListDsc"),
    @NamedQuery(name = "CancellationReason.findByCreatedByNm", query = "SELECT c FROM CancellationReason c WHERE c.createdByNm = :createdByNm"),
    @NamedQuery(name = "CancellationReason.findByCreatedOnDtm", query = "SELECT c FROM CancellationReason c WHERE c.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "CancellationReason.findByLastModifiedByNm", query = "SELECT c FROM CancellationReason c WHERE c.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "CancellationReason.findByLastModifiedOnDtm", query = "SELECT c FROM CancellationReason c WHERE c.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "CancellationReason.findByStatelessTransactionNbr", query = "SELECT c FROM CancellationReason c WHERE c.statelessTransactionNbr = :statelessTransactionNbr")})
public class CancellationReason implements Serializable {

    private static final long serialVersionUID = 1L;
    @EmbeddedId
    protected CancellationReasonPK cancellationReasonPK;
    @Column(name = "HA_CANCEL_RSN_DSC", nullable = false)
    private String haCancelRsnDsc;
    @Column(name = "HA_CANCEL_RSN_EFFECTIVE_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date haCancelRsnEffectiveDtm;
    @Column(name = "HA_CANCEL_RSN_EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date haCancelRsnExpiryDtm;
    @Column(name = "PROV_CANCEL_RSN_CD", nullable = false)
    private String provCancelRsnCd;
    @Column(name = "PROV_CANCEL_RSN_DSC", nullable = false)
    private String provCancelRsnDsc;
    @Column(name = "PROV_CANCEL_RSN_EFFECTIVE_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date provCancelRsnEffectiveDtm;
    @Column(name = "PROV_CANCEL_RSN_EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date provCancelRsnExpiryDtm;
    @Column(name = "CANCEL_REASON_LIST_DSC", nullable = false)
    private String cancelReasonListDsc;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    private long statelessTransactionNbr;
    @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false)
    @ManyToOne
    private Site site;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "cancellationReason")
    private Collection<Booking> bookingCollection;

    public CancellationReason() {
    }

    public CancellationReason(CancellationReasonPK cancellationReasonPK) {
        this.cancellationReasonPK = cancellationReasonPK;
    }

    public CancellationReason(CancellationReasonPK cancellationReasonPK, String haCancelRsnDsc, String provCancelRsnCd, String provCancelRsnDsc, String cancelReasonListDsc, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.cancellationReasonPK = cancellationReasonPK;
        this.haCancelRsnDsc = haCancelRsnDsc;
        this.provCancelRsnCd = provCancelRsnCd;
        this.provCancelRsnDsc = provCancelRsnDsc;
        this.cancelReasonListDsc = cancelReasonListDsc;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public CancellationReason(long cancelRsnListId, String haCancelRsnCd, long siteId) {
        this.cancellationReasonPK = new CancellationReasonPK(cancelRsnListId, haCancelRsnCd, siteId);
    }

    public CancellationReasonPK getCancellationReasonPK() {
        return cancellationReasonPK;
    }

    public void setCancellationReasonPK(CancellationReasonPK cancellationReasonPK) {
        this.cancellationReasonPK = cancellationReasonPK;
    }

    public String getHaCancelRsnDsc() {
        return haCancelRsnDsc;
    }

    public void setHaCancelRsnDsc(String haCancelRsnDsc) {
        this.haCancelRsnDsc = haCancelRsnDsc;
    }

    public Date getHaCancelRsnEffectiveDtm() {
        return haCancelRsnEffectiveDtm;
    }

    public void setHaCancelRsnEffectiveDtm(Date haCancelRsnEffectiveDtm) {
        this.haCancelRsnEffectiveDtm = haCancelRsnEffectiveDtm;
    }

    public Date getHaCancelRsnExpiryDtm() {
        return haCancelRsnExpiryDtm;
    }

    public void setHaCancelRsnExpiryDtm(Date haCancelRsnExpiryDtm) {
        this.haCancelRsnExpiryDtm = haCancelRsnExpiryDtm;
    }

    public String getProvCancelRsnCd() {
        return provCancelRsnCd;
    }

    public void setProvCancelRsnCd(String provCancelRsnCd) {
        this.provCancelRsnCd = provCancelRsnCd;
    }

    public String getProvCancelRsnDsc() {
        return provCancelRsnDsc;
    }

    public void setProvCancelRsnDsc(String provCancelRsnDsc) {
        this.provCancelRsnDsc = provCancelRsnDsc;
    }

    public Date getProvCancelRsnEffectiveDtm() {
        return provCancelRsnEffectiveDtm;
    }

    public void setProvCancelRsnEffectiveDtm(Date provCancelRsnEffectiveDtm) {
        this.provCancelRsnEffectiveDtm = provCancelRsnEffectiveDtm;
    }

    public Date getProvCancelRsnExpiryDtm() {
        return provCancelRsnExpiryDtm;
    }

    public void setProvCancelRsnExpiryDtm(Date provCancelRsnExpiryDtm) {
        this.provCancelRsnExpiryDtm = provCancelRsnExpiryDtm;
    }

    public String getCancelReasonListDsc() {
        return cancelReasonListDsc;
    }

    public void setCancelReasonListDsc(String cancelReasonListDsc) {
        this.cancelReasonListDsc = cancelReasonListDsc;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Site getSite() {
        return site;
    }

    public void setSite(Site site) {
        this.site = site;
    }

    public Collection<Booking> getBookingCollection() {
        return bookingCollection;
    }

    public void setBookingCollection(Collection<Booking> bookingCollection) {
        this.bookingCollection = bookingCollection;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (cancellationReasonPK != null ? cancellationReasonPK.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof CancellationReason)) {
            return false;
        }
        CancellationReason other = (CancellationReason) object;
        if ((this.cancellationReasonPK == null && other.cancellationReasonPK != null) || (this.cancellationReasonPK != null && !this.cancellationReasonPK.equals(other.cancellationReasonPK))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.CancellationReason[cancellationReasonPK=" + cancellationReasonPK + "]";
    }

}
