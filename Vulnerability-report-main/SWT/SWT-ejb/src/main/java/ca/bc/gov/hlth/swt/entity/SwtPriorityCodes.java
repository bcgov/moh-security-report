/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlTransient;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author brice.mimifir
 */
@Entity
@Table(name = "SWT_PRIORITY_CODES")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "SwtPriorityCodes.findAll", query = "SELECT s FROM SwtPriorityCodes s"),
    @NamedQuery(name = "SwtPriorityCodes.findBySiteId", query = "SELECT s FROM SwtPriorityCodes s WHERE s.swtPriorityCodesPK.siteId = :siteId"),
    @NamedQuery(name = "SwtPriorityCodes.findByPriorityCd", query = "SELECT s FROM SwtPriorityCodes s WHERE s.swtPriorityCodesPK.priorityCd = :priorityCd"),
    @NamedQuery(name = "SwtPriorityCodes.findByEffectiveDt", query = "SELECT s FROM SwtPriorityCodes s WHERE s.effectiveDt = :effectiveDt"),
    @NamedQuery(name = "SwtPriorityCodes.findByEffectiveUsr", query = "SELECT s FROM SwtPriorityCodes s WHERE s.effectiveUsr = :effectiveUsr"),
    @NamedQuery(name = "SwtPriorityCodes.findByWaitTimeNo", query = "SELECT s FROM SwtPriorityCodes s WHERE s.waitTimeNo = :waitTimeNo"),
    @NamedQuery(name = "SwtPriorityCodes.findByCreatedByNm", query = "SELECT s FROM SwtPriorityCodes s WHERE s.createdByNm = :createdByNm"),
    @NamedQuery(name = "SwtPriorityCodes.findByCreatedOnDtm", query = "SELECT s FROM SwtPriorityCodes s WHERE s.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "SwtPriorityCodes.findByLastModifiedByNm", query = "SELECT s FROM SwtPriorityCodes s WHERE s.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "SwtPriorityCodes.findByLastModifiedOnDtm", query = "SELECT s FROM SwtPriorityCodes s WHERE s.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "SwtPriorityCodes.findByStatelessTransactionNbr", query = "SELECT s FROM SwtPriorityCodes s WHERE s.statelessTransactionNbr = :statelessTransactionNbr")})
public class SwtPriorityCodes implements Serializable {

    private static final long serialVersionUID = 1L;
    @EmbeddedId
    protected SwtPriorityCodesPK swtPriorityCodesPK;
    @Column(name = "EFFECTIVE_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveDt;
    @Size(max = 100)
    @Column(name = "EFFECTIVE_USR")
    private String effectiveUsr;
    // @Max(value=?)  @Min(value=?)//if you know range of your decimal fields consider using these annotations to enforce field validation
    @Basic(optional = false)
    @NotNull
    @Column(name = "WAIT_TIME_NO")
    private BigDecimal waitTimeNo;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "STATELESS_TRANSACTION_NBR")
    private long statelessTransactionNbr;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "swtPriorityCodes")
    private Collection<SwtDiagnosisCodes> swtDiagnosisCodesCollection;

    public SwtPriorityCodes() {
    }

    public SwtPriorityCodes(SwtPriorityCodesPK swtPriorityCodesPK) {
        this.swtPriorityCodesPK = swtPriorityCodesPK;
    }

    public SwtPriorityCodes(SwtPriorityCodesPK swtPriorityCodesPK, BigDecimal waitTimeNo, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.swtPriorityCodesPK = swtPriorityCodesPK;
        this.waitTimeNo = waitTimeNo;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public SwtPriorityCodes(long siteId, String priorityCd) {
        this.swtPriorityCodesPK = new SwtPriorityCodesPK(siteId, priorityCd);
    }

    public SwtPriorityCodesPK getSwtPriorityCodesPK() {
        return swtPriorityCodesPK;
    }

    public void setSwtPriorityCodesPK(SwtPriorityCodesPK swtPriorityCodesPK) {
        this.swtPriorityCodesPK = swtPriorityCodesPK;
    }

    public Date getEffectiveDt() {
        return effectiveDt;
    }

    public void setEffectiveDt(Date effectiveDt) {
        this.effectiveDt = effectiveDt;
    }

    public String getEffectiveUsr() {
        return effectiveUsr;
    }

    public void setEffectiveUsr(String effectiveUsr) {
        this.effectiveUsr = effectiveUsr;
    }

    public BigDecimal getWaitTimeNo() {
        return waitTimeNo;
    }

    public void setWaitTimeNo(BigDecimal waitTimeNo) {
        this.waitTimeNo = waitTimeNo;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    @XmlTransient
    public Collection<SwtDiagnosisCodes> getSwtDiagnosisCodesCollection() {
        return swtDiagnosisCodesCollection;
    }

    public void setSwtDiagnosisCodesCollection(Collection<SwtDiagnosisCodes> swtDiagnosisCodesCollection) {
        this.swtDiagnosisCodesCollection = swtDiagnosisCodesCollection;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (swtPriorityCodesPK != null ? swtPriorityCodesPK.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof SwtPriorityCodes)) {
            return false;
        }
        SwtPriorityCodes other = (SwtPriorityCodes) object;
        if ((this.swtPriorityCodesPK == null && other.swtPriorityCodesPK != null) || (this.swtPriorityCodesPK != null && !this.swtPriorityCodesPK.equals(other.swtPriorityCodesPK))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.SwtPriorityCodes[ swtPriorityCodesPK=" + swtPriorityCodesPK + " ]";
    }

}
