/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.io.Serializable;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_SPR_PROCEDURE")
@NamedQueries({
    @NamedQuery(name = "SprProcedure.findByProcedureListId", query = "SELECT s FROM SprProcedure s WHERE s.sprProcedurePK.procedureListId = :procedureListId"),
    @NamedQuery(name = "SprProcedure.findByHaProcedureCd", query = "SELECT s FROM SprProcedure s WHERE s.sprProcedurePK.haProcedureCd = :haProcedureCd"),
    @NamedQuery(name = "SprProcedure.findBySiteId", query = "SELECT s FROM SprProcedure s WHERE s.sprProcedurePK.siteId = :siteId"),
    @NamedQuery(name = "SprProcedure.findByProcedureCrossRefId", query = "SELECT s FROM SprProcedure s WHERE s.procedureCrossRefId = :procedureCrossRefId"),
    @NamedQuery(name = "SprProcedure.findByHaProcedureNm", query = "SELECT s FROM SprProcedure s WHERE s.haProcedureNm = :haProcedureNm"),
    @NamedQuery(name = "SprProcedure.findByHaProcedureEffectiveDtm", query = "SELECT s FROM SprProcedure s WHERE s.haProcedureEffectiveDtm = :haProcedureEffectiveDtm"),
    @NamedQuery(name = "SprProcedure.findByHaProcedureExpiryDtm", query = "SELECT s FROM SprProcedure s WHERE s.haProcedureExpiryDtm = :haProcedureExpiryDtm"),
    @NamedQuery(name = "SprProcedure.findByProvProcedureId", query = "SELECT s FROM SprProcedure s WHERE s.provProcedureId = :provProcedureId"),
    @NamedQuery(name = "SprProcedure.findByProvProcedureNm", query = "SELECT s FROM SprProcedure s WHERE s.provProcedureNm = :provProcedureNm"),
    @NamedQuery(name = "SprProcedure.findByProvProcedureEffectiveDtm", query = "SELECT s FROM SprProcedure s WHERE s.provProcedureEffectiveDtm = :provProcedureEffectiveDtm"),
    @NamedQuery(name = "SprProcedure.findByProvProcedureExpiryDtm", query = "SELECT s FROM SprProcedure s WHERE s.provProcedureExpiryDtm = :provProcedureExpiryDtm"),
    @NamedQuery(name = "SprProcedure.findByProcedureListDsc", query = "SELECT s FROM SprProcedure s WHERE s.procedureListDsc = :procedureListDsc"),
    @NamedQuery(name = "SprProcedure.findByScoringRangeHighAvgNbr", query = "SELECT s FROM SprProcedure s WHERE s.scoringRangeHighAvgNbr = :scoringRangeHighAvgNbr"),
    @NamedQuery(name = "SprProcedure.findByScoringRangeLowAvgNbr", query = "SELECT s FROM SprProcedure s WHERE s.scoringRangeLowAvgNbr = :scoringRangeLowAvgNbr"),
    @NamedQuery(name = "SprProcedure.findBySideRequiredYn", query = "SELECT s FROM SprProcedure s WHERE s.sideRequiredYn = :sideRequiredYn"),
    @NamedQuery(name = "SprProcedure.findBySurgicalServiceCd", query = "SELECT s FROM SprProcedure s WHERE s.surgicalServiceCd = :surgicalServiceCd"),
    @NamedQuery(name = "SprProcedure.findBySurgicalServiceDsc", query = "SELECT s FROM SprProcedure s WHERE s.surgicalServiceDsc = :surgicalServiceDsc"),
    @NamedQuery(name = "SprProcedure.findBySurgicalServiceEffectiveDtm", query = "SELECT s FROM SprProcedure s WHERE s.surgicalServiceEffectiveDtm = :surgicalServiceEffectiveDtm"),
    @NamedQuery(name = "SprProcedure.findBySurgicalServiceExpiryDtm", query = "SELECT s FROM SprProcedure s WHERE s.surgicalServiceExpiryDtm = :surgicalServiceExpiryDtm"),
    @NamedQuery(name = "SprProcedure.findByCreatedByNm", query = "SELECT s FROM SprProcedure s WHERE s.createdByNm = :createdByNm"),
    @NamedQuery(name = "SprProcedure.findByCreatedOnDtm", query = "SELECT s FROM SprProcedure s WHERE s.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "SprProcedure.findByLastModifiedByNm", query = "SELECT s FROM SprProcedure s WHERE s.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "SprProcedure.findByLastModifiedOnDtm", query = "SELECT s FROM SprProcedure s WHERE s.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "SprProcedure.findByStatelessTransactionNbr", query = "SELECT s FROM SprProcedure s WHERE s.statelessTransactionNbr = :statelessTransactionNbr")})
public class SprProcedure implements Serializable {

    private static final long serialVersionUID = 1L;
    @EmbeddedId
    protected SprProcedurePK sprProcedurePK;
    @Column(name = "PROCEDURE_CROSS_REF_ID")
    private Long procedureCrossRefId;
    @Column(name = "HA_PROCEDURE_NM", nullable = false)
    private String haProcedureNm;
    @Column(name = "HA_PROCEDURE_EFFECTIVE_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date haProcedureEffectiveDtm;
    @Column(name = "HA_PROCEDURE_EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date haProcedureExpiryDtm;
    @Column(name = "PROV_PROCEDURE_ID", nullable = false)
    private String provProcedureId;
    @Column(name = "PROV_PROCEDURE_NM", nullable = false)
    private String provProcedureNm;
    @Column(name = "PROV_PROCEDURE_EFFECTIVE_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date provProcedureEffectiveDtm;
    @Column(name = "PROV_PROCEDURE_EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date provProcedureExpiryDtm;
    @Column(name = "PROCEDURE_LIST_DSC", nullable = false)
    private String procedureListDsc;
    @Column(name = "SCORING_RANGE_HIGH_AVG_NBR")
    private Integer scoringRangeHighAvgNbr;
    @Column(name = "SCORING_RANGE_LOW_AVG_NBR")
    private Integer scoringRangeLowAvgNbr;
    @Column(name = "SIDE_REQUIRED_YN")
    private String sideRequiredYn;
    @Column(name = "SURGICAL_SERVICE_CD")
    private String surgicalServiceCd;
    @Column(name = "SURGICAL_SERVICE_DSC")
    private String surgicalServiceDsc;
    @Column(name = "SURGICAL_SERVICE_EFFECTIVE_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date surgicalServiceEffectiveDtm;
    @Column(name = "SURGICAL_SERVICE_EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date surgicalServiceExpiryDtm;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    private long statelessTransactionNbr;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "sprProcedure")
    private Collection<PostOperation> postOperationCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "sprProcedure1")
    private Collection<PostOperation> postOperationCollection1;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "sprProcedure2")
    private Collection<PostOperation> postOperationCollection2;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "sprProcedure3")
    private Collection<PostOperation> postOperationCollection3;
    @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false)
    @ManyToOne
    private Site site;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "sprProcedure")
    private Collection<Booking> bookingCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "sprProcedure1")
    private Collection<Booking> bookingCollection1;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "sprProcedure2")
    private Collection<Booking> bookingCollection2;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "sprProcedure3")
    private Collection<Booking> bookingCollection3;

    public SprProcedure() {
    }

    public SprProcedure(SprProcedurePK sprProcedurePK) {
        this.sprProcedurePK = sprProcedurePK;
    }

    public SprProcedure(SprProcedurePK sprProcedurePK, String haProcedureNm, String provProcedureId, String provProcedureNm, String procedureListDsc, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.sprProcedurePK = sprProcedurePK;
        this.haProcedureNm = haProcedureNm;
        this.provProcedureId = provProcedureId;
        this.provProcedureNm = provProcedureNm;
        this.procedureListDsc = procedureListDsc;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public SprProcedure(long procedureListId, String haProcedureCd, long siteId) {
        this.sprProcedurePK = new SprProcedurePK(procedureListId, haProcedureCd, siteId);
    }

    public SprProcedurePK getSprProcedurePK() {
        return sprProcedurePK;
    }

    public void setSprProcedurePK(SprProcedurePK sprProcedurePK) {
        this.sprProcedurePK = sprProcedurePK;
    }

    public Long getProcedureCrossRefId() {
        return procedureCrossRefId;
    }

    public void setProcedureCrossRefId(Long procedureCrossRefId) {
        this.procedureCrossRefId = procedureCrossRefId;
    }

    public String getHaProcedureNm() {
        return haProcedureNm;
    }

    public void setHaProcedureNm(String haProcedureNm) {
        this.haProcedureNm = haProcedureNm;
    }

    public Date getHaProcedureEffectiveDtm() {
        return haProcedureEffectiveDtm;
    }

    public void setHaProcedureEffectiveDtm(Date haProcedureEffectiveDtm) {
        this.haProcedureEffectiveDtm = haProcedureEffectiveDtm;
    }

    public Date getHaProcedureExpiryDtm() {
        return haProcedureExpiryDtm;
    }

    public void setHaProcedureExpiryDtm(Date haProcedureExpiryDtm) {
        this.haProcedureExpiryDtm = haProcedureExpiryDtm;
    }

    public String getProvProcedureId() {
        return provProcedureId;
    }

    public void setProvProcedureId(String provProcedureId) {
        this.provProcedureId = provProcedureId;
    }

    public String getProvProcedureNm() {
        return provProcedureNm;
    }

    public void setProvProcedureNm(String provProcedureNm) {
        this.provProcedureNm = provProcedureNm;
    }

    public Date getProvProcedureEffectiveDtm() {
        return provProcedureEffectiveDtm;
    }

    public void setProvProcedureEffectiveDtm(Date provProcedureEffectiveDtm) {
        this.provProcedureEffectiveDtm = provProcedureEffectiveDtm;
    }

    public Date getProvProcedureExpiryDtm() {
        return provProcedureExpiryDtm;
    }

    public void setProvProcedureExpiryDtm(Date provProcedureExpiryDtm) {
        this.provProcedureExpiryDtm = provProcedureExpiryDtm;
    }

    public String getProcedureListDsc() {
        return procedureListDsc;
    }

    public void setProcedureListDsc(String procedureListDsc) {
        this.procedureListDsc = procedureListDsc;
    }

    public Integer getScoringRangeHighAvgNbr() {
        return scoringRangeHighAvgNbr;
    }

    public void setScoringRangeHighAvgNbr(Integer scoringRangeHighAvgNbr) {
        this.scoringRangeHighAvgNbr = scoringRangeHighAvgNbr;
    }

    public Integer getScoringRangeLowAvgNbr() {
        return scoringRangeLowAvgNbr;
    }

    public void setScoringRangeLowAvgNbr(Integer scoringRangeLowAvgNbr) {
        this.scoringRangeLowAvgNbr = scoringRangeLowAvgNbr;
    }

    public String getSideRequiredYn() {
        return sideRequiredYn;
    }

    public void setSideRequiredYn(String sideRequiredYn) {
        this.sideRequiredYn = sideRequiredYn;
    }

    public String getSurgicalServiceCd() {
        return surgicalServiceCd;
    }

    public void setSurgicalServiceCd(String surgicalServiceCd) {
        this.surgicalServiceCd = surgicalServiceCd;
    }

    public String getSurgicalServiceDsc() {
        return surgicalServiceDsc;
    }

    public void setSurgicalServiceDsc(String surgicalServiceDsc) {
        this.surgicalServiceDsc = surgicalServiceDsc;
    }

    public Date getSurgicalServiceEffectiveDtm() {
        return surgicalServiceEffectiveDtm;
    }

    public void setSurgicalServiceEffectiveDtm(Date surgicalServiceEffectiveDtm) {
        this.surgicalServiceEffectiveDtm = surgicalServiceEffectiveDtm;
    }

    public Date getSurgicalServiceExpiryDtm() {
        return surgicalServiceExpiryDtm;
    }

    public void setSurgicalServiceExpiryDtm(Date surgicalServiceExpiryDtm) {
        this.surgicalServiceExpiryDtm = surgicalServiceExpiryDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Collection<PostOperation> getPostOperationCollection() {
        return postOperationCollection;
    }

    public void setPostOperationCollection(Collection<PostOperation> postOperationCollection) {
        this.postOperationCollection = postOperationCollection;
    }

    public Collection<PostOperation> getPostOperationCollection1() {
        return postOperationCollection1;
    }

    public void setPostOperationCollection1(Collection<PostOperation> postOperationCollection1) {
        this.postOperationCollection1 = postOperationCollection1;
    }

    public Collection<PostOperation> getPostOperationCollection2() {
        return postOperationCollection2;
    }

    public void setPostOperationCollection2(Collection<PostOperation> postOperationCollection2) {
        this.postOperationCollection2 = postOperationCollection2;
    }

    public Collection<PostOperation> getPostOperationCollection3() {
        return postOperationCollection3;
    }

    public void setPostOperationCollection3(Collection<PostOperation> postOperationCollection3) {
        this.postOperationCollection3 = postOperationCollection3;
    }

    public Site getSite() {
        return site;
    }

    public void setSite(Site site) {
        this.site = site;
    }

    public Collection<Booking> getBookingCollection() {
        return bookingCollection;
    }

    public void setBookingCollection(Collection<Booking> bookingCollection) {
        this.bookingCollection = bookingCollection;
    }

    public Collection<Booking> getBookingCollection1() {
        return bookingCollection1;
    }

    public void setBookingCollection1(Collection<Booking> bookingCollection1) {
        this.bookingCollection1 = bookingCollection1;
    }

    public Collection<Booking> getBookingCollection2() {
        return bookingCollection2;
    }

    public void setBookingCollection2(Collection<Booking> bookingCollection2) {
        this.bookingCollection2 = bookingCollection2;
    }

    public Collection<Booking> getBookingCollection3() {
        return bookingCollection3;
    }

    public void setBookingCollection3(Collection<Booking> bookingCollection3) {
        this.bookingCollection3 = bookingCollection3;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (sprProcedurePK != null ? sprProcedurePK.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof SprProcedure)) {
            return false;
        }
        SprProcedure other = (SprProcedure) object;
        if ((this.sprProcedurePK == null && other.sprProcedurePK != null) || (this.sprProcedurePK != null && !this.sprProcedurePK.equals(other.sprProcedurePK))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.SprProcedure[sprProcedurePK=" + sprProcedurePK + "]";
    }

}
