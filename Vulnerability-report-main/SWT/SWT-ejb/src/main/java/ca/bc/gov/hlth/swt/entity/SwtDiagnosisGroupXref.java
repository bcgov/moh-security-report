/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinColumns;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import jakarta.xml.bind.annotation.XmlRootElement;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author brice.mimifir
 */
@Entity
@Table(name = "SWT_DIAGNOSIS_GROUP_XREF")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "SwtDiagnosisGroupXref.findAll", query = "SELECT s FROM SwtDiagnosisGroupXref s"),
    @NamedQuery(name = "SwtDiagnosisGroupXref.findBySiteId", query = "SELECT s FROM SwtDiagnosisGroupXref s WHERE s.swtDiagnosisGroupXrefPK.siteId = :siteId"),
    @NamedQuery(name = "SwtDiagnosisGroupXref.findByDiagnosisCd", query = "SELECT s FROM SwtDiagnosisGroupXref s WHERE s.swtDiagnosisGroupXrefPK.diagnosisCd = :diagnosisCd"),
    @NamedQuery(name = "SwtDiagnosisGroupXref.findByDiagnosisGroupId", query = "SELECT s FROM SwtDiagnosisGroupXref s WHERE s.swtDiagnosisGroupXrefPK.diagnosisGroupId = :diagnosisGroupId"),
    @NamedQuery(name = "SwtDiagnosisGroupXref.findByCreatedByNm", query = "SELECT s FROM SwtDiagnosisGroupXref s WHERE s.createdByNm = :createdByNm"),
    @NamedQuery(name = "SwtDiagnosisGroupXref.findByCreatedOnDtm", query = "SELECT s FROM SwtDiagnosisGroupXref s WHERE s.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "SwtDiagnosisGroupXref.findByLastModifiedByNm", query = "SELECT s FROM SwtDiagnosisGroupXref s WHERE s.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "SwtDiagnosisGroupXref.findByLastModifiedOnDtm", query = "SELECT s FROM SwtDiagnosisGroupXref s WHERE s.lastModifiedOnDtm = :lastModifiedOnDtm")})
public class SwtDiagnosisGroupXref implements Serializable {

    private static final long serialVersionUID = 1L;
    @EmbeddedId
    protected SwtDiagnosisGroupXrefPK swtDiagnosisGroupXrefPK;
    @Size(max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @JoinColumns({
        @JoinColumn(name = "DIAGNOSIS_CD", referencedColumnName = "DIAGNOSIS_CD", insertable = false, updatable = false),
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false)})
    @ManyToOne(optional = false)
    private SwtDiagnosisCodes swtDiagnosisCodes;
    @JoinColumns({
        @JoinColumn(name = "DIAGNOSIS_GROUP_ID", referencedColumnName = "DIAGNOSIS_GROUP_ID", insertable = false, updatable = false),
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false)})
    @ManyToOne(optional = false)
    private SwtDiagnosisGroups swtDiagnosisGroups;

    public SwtDiagnosisGroupXref() {
    }

    public SwtDiagnosisGroupXref(SwtDiagnosisGroupXrefPK swtDiagnosisGroupXrefPK) {
        this.swtDiagnosisGroupXrefPK = swtDiagnosisGroupXrefPK;
    }

    public SwtDiagnosisGroupXref(SwtDiagnosisGroupXrefPK swtDiagnosisGroupXrefPK, String lastModifiedByNm, Date lastModifiedOnDtm) {
        this.swtDiagnosisGroupXrefPK = swtDiagnosisGroupXrefPK;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public SwtDiagnosisGroupXref(long siteId, String diagnosisCd, long diagnosisGroupId) {
        this.swtDiagnosisGroupXrefPK = new SwtDiagnosisGroupXrefPK(siteId, diagnosisCd, diagnosisGroupId);
    }

    public SwtDiagnosisGroupXrefPK getSwtDiagnosisGroupXrefPK() {
        return swtDiagnosisGroupXrefPK;
    }

    public void setSwtDiagnosisGroupXrefPK(SwtDiagnosisGroupXrefPK swtDiagnosisGroupXrefPK) {
        this.swtDiagnosisGroupXrefPK = swtDiagnosisGroupXrefPK;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public SwtDiagnosisCodes getSwtDiagnosisCodes() {
        return swtDiagnosisCodes;
    }

    public void setSwtDiagnosisCodes(SwtDiagnosisCodes swtDiagnosisCodes) {
        this.swtDiagnosisCodes = swtDiagnosisCodes;
    }

    public SwtDiagnosisGroups getSwtDiagnosisGroups() {
        return swtDiagnosisGroups;
    }

    public void setSwtDiagnosisGroups(SwtDiagnosisGroups swtDiagnosisGroups) {
        this.swtDiagnosisGroups = swtDiagnosisGroups;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (swtDiagnosisGroupXrefPK != null ? swtDiagnosisGroupXrefPK.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof SwtDiagnosisGroupXref)) {
            return false;
        }
        SwtDiagnosisGroupXref other = (SwtDiagnosisGroupXref) object;
        if ((this.swtDiagnosisGroupXrefPK == null && other.swtDiagnosisGroupXrefPK != null) || (this.swtDiagnosisGroupXrefPK != null && !this.swtDiagnosisGroupXrefPK.equals(other.swtDiagnosisGroupXrefPK))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.SwtDiagnosisGroupXref[ swtDiagnosisGroupXrefPK=" + swtDiagnosisGroupXrefPK + " ]";
    }

}
