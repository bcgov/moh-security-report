/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.io.Serializable;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_ROLLUP_PROCEDURE_GROUP")
@NamedQueries({
    @NamedQuery(name = "RollupProcedureGroup.findByRollupProcedureGroupId", query = "SELECT r FROM RollupProcedureGroup r WHERE r.rollupProcedureGroupId = :rollupProcedureGroupId"),
    @NamedQuery(name = "RollupProcedureGroup.findByProcedureGroupId", query = "SELECT r FROM RollupProcedureGroup r WHERE r.procedureGroupId = :procedureGroupId"),
    @NamedQuery(name = "RollupProcedureGroup.findByProcedureGroupNm", query = "SELECT r FROM RollupProcedureGroup r WHERE r.procedureGroupNm = :procedureGroupNm"),
    @NamedQuery(name = "RollupProcedureGroup.findBySortOrderNbr", query = "SELECT r FROM RollupProcedureGroup r WHERE r.sortOrderNbr = :sortOrderNbr"),
    @NamedQuery(name = "RollupProcedureGroup.findByPublishYn", query = "SELECT r FROM RollupProcedureGroup r WHERE r.publishYn = :publishYn"),
    @NamedQuery(name = "RollupProcedureGroup.findByEffectiveDtm", query = "SELECT r FROM RollupProcedureGroup r WHERE r.effectiveDtm = :effectiveDtm"),
    @NamedQuery(name = "RollupProcedureGroup.findByExpiryDtm", query = "SELECT r FROM RollupProcedureGroup r WHERE r.expiryDtm = :expiryDtm"),
    @NamedQuery(name = "RollupProcedureGroup.findByCreatedByNm", query = "SELECT r FROM RollupProcedureGroup r WHERE r.createdByNm = :createdByNm"),
    @NamedQuery(name = "RollupProcedureGroup.findByCreatedOnDtm", query = "SELECT r FROM RollupProcedureGroup r WHERE r.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "RollupProcedureGroup.findByLastModifiedByNm", query = "SELECT r FROM RollupProcedureGroup r WHERE r.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "RollupProcedureGroup.findByLastModifiedOnDtm", query = "SELECT r FROM RollupProcedureGroup r WHERE r.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "RollupProcedureGroup.findByStatelessTransactionNbr", query = "SELECT r FROM RollupProcedureGroup r WHERE r.statelessTransactionNbr = :statelessTransactionNbr"),
    @NamedQuery(name = "RollupProcedureGroup.findByNationalPriorityAreaYn", query = "SELECT r FROM RollupProcedureGroup r WHERE r.nationalPriorityAreaYn = :nationalPriorityAreaYn"),
    @NamedQuery(name = "RollupProcedureGroup.findByNonSprYn", query = "SELECT r FROM RollupProcedureGroup r WHERE r.nonSprYn = :nonSprYn"),
    @NamedQuery(name = "RollupProcedureGroup.findByCancerReportingYn", query = "SELECT r FROM RollupProcedureGroup r WHERE r.cancerReportingYn = :cancerReportingYn")})
public class RollupProcedureGroup implements Serializable, Comparable<RollupProcedureGroup> {

    private static final long serialVersionUID = 1L;
    @Id
    @Column(name = "ROLLUP_PROCEDURE_GROUP_ID", nullable = false)
    private Long rollupProcedureGroupId;
    @Column(name = "PROCEDURE_GROUP_ID", nullable = false)
    private long procedureGroupId;
    @Column(name = "PROCEDURE_GROUP_NM", nullable = false)
    private String procedureGroupNm;
    @Column(name = "PROCEDURE_GROUP_DESC", nullable = false)
    private String procedureGroupDesc;
    @Column(name = "SORT_ORDER_NBR")
    private Long sortOrderNbr;
    @Column(name = "PUBLISH_YN", nullable = false)
    private String publishYn;
    @Column(name = "EFFECTIVE_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveDtm;
    @Column(name = "EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date expiryDtm;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    private long statelessTransactionNbr;
    @Column(name = "NATIONAL_PRIORITY_AREA_YN", nullable = false)
    private String nationalPriorityAreaYn;
    @Column(name = "NON_SPR_YN", nullable = false)
    private String nonSprYn;
    @Column(name = "CANCER_REPORTING_YN", nullable = false)
    private String cancerReportingYn;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "rollupProcedureGroupId")
    private Collection<NonSprDataEntry> nonSprDataEntryCollection;
    @OneToMany(mappedBy = "rollupProcedureGroupId")
    private Collection<SiteMediaLongTermStat> siteMediaLongTermStatCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "rollupProcedureGroup")
    private Collection<SiteProcedureGroup> siteProcedureGroupCollection;
    @JoinColumn(name = "INTERVENTION_TYPE_CD", referencedColumnName = "INTERVENTION_TYPE_CD")
    @ManyToOne(fetch = FetchType.LAZY)
    private InterventionType interventionTypeCd;

    public RollupProcedureGroup() {
    }

    public RollupProcedureGroup(Long rollupProcedureGroupId) {
        this.rollupProcedureGroupId = rollupProcedureGroupId;
    }

    public RollupProcedureGroup(Long rollupProcedureGroupId, long procedureGroupId, String procedureGroupNm, String procedureGroupDesc, String publishYn, Date effectiveDtm, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr, String nationalPriorityAreaYn, String nonSprYn, String cancerReportingYn) {
        this.rollupProcedureGroupId = rollupProcedureGroupId;
        this.procedureGroupId = procedureGroupId;
        this.procedureGroupNm = procedureGroupNm;
        this.procedureGroupDesc = procedureGroupDesc;
        this.publishYn = publishYn;
        this.effectiveDtm = effectiveDtm;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
        this.nationalPriorityAreaYn = nationalPriorityAreaYn;
        this.nonSprYn = nonSprYn;
        this.cancerReportingYn = cancerReportingYn;
    }

    public Long getRollupProcedureGroupId() {
        return rollupProcedureGroupId;
    }

    public void setRollupProcedureGroupId(Long rollupProcedureGroupId) {
        this.rollupProcedureGroupId = rollupProcedureGroupId;
    }

    public long getProcedureGroupId() {
        return procedureGroupId;
    }

    public void setProcedureGroupId(long procedureGroupId) {
        this.procedureGroupId = procedureGroupId;
    }

    public String getProcedureGroupNm() {
        return procedureGroupNm;
    }

    public void setProcedureGroupNm(String procedureGroupNm) {
        this.procedureGroupNm = procedureGroupNm;
    }

    public String getProcedureGroupDesc() {
        return procedureGroupDesc;
    }

    public void setProcedureGroupDesc(String procedureGroupDesc) {
        this.procedureGroupDesc = procedureGroupDesc;
    }

    public Long getSortOrderNbr() {
        return sortOrderNbr;
    }

    public void setSortOrderNbr(Long sortOrderNbr) {
        this.sortOrderNbr = sortOrderNbr;
    }

    public String getPublishYn() {
        return publishYn;
    }

    public void setPublishYn(String publishYn) {
        this.publishYn = publishYn;
    }

    public Date getEffectiveDtm() {
        return effectiveDtm;
    }

    public void setEffectiveDtm(Date effectiveDtm) {
        this.effectiveDtm = effectiveDtm;
    }

    public Date getExpiryDtm() {
        return expiryDtm;
    }

    public void setExpiryDtm(Date expiryDtm) {
        this.expiryDtm = expiryDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public String getNationalPriorityAreaYn() {
        return nationalPriorityAreaYn;
    }

    public void setNationalPriorityAreaYn(String nationalPriorityAreaYn) {
        this.nationalPriorityAreaYn = nationalPriorityAreaYn;
    }

    public String getNonSprYn() {
        return nonSprYn;
    }

    public void setNonSprYn(String nonSprYn) {
        this.nonSprYn = nonSprYn;
    }

    public String getCancerReportingYn() {
        return cancerReportingYn;
    }

    public void setCancerReportingYn(String cancerReportingYn) {
        this.cancerReportingYn = cancerReportingYn;
    }

    public Collection<NonSprDataEntry> getNonSprDataEntryCollection() {
        return nonSprDataEntryCollection;
    }

    public void setNonSprDataEntryCollection(Collection<NonSprDataEntry> nonSprDataEntryCollection) {
        this.nonSprDataEntryCollection = nonSprDataEntryCollection;
    }

    public Collection<SiteMediaLongTermStat> getSiteMediaLongTermStatCollection() {
        return siteMediaLongTermStatCollection;
    }

    public void setSiteMediaLongTermStatCollection(Collection<SiteMediaLongTermStat> siteMediaLongTermStatCollection) {
        this.siteMediaLongTermStatCollection = siteMediaLongTermStatCollection;
    }

    public Collection<SiteProcedureGroup> getSiteProcedureGroupCollection() {
        return siteProcedureGroupCollection;
    }

    public void setSiteProcedureGroupCollection(Collection<SiteProcedureGroup> siteProcedureGroupCollection) {
        this.siteProcedureGroupCollection = siteProcedureGroupCollection;
    }

    public InterventionType getInterventionTypeCd() {
        return interventionTypeCd;
    }

    public void setInterventionTypeCd(InterventionType interventionTypeCd) {
        this.interventionTypeCd = interventionTypeCd;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (rollupProcedureGroupId != null ? rollupProcedureGroupId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof RollupProcedureGroup)) {
            return false;
        }
        RollupProcedureGroup other = (RollupProcedureGroup) object;
        if ((this.rollupProcedureGroupId == null && other.rollupProcedureGroupId != null) || (this.rollupProcedureGroupId != null && !this.rollupProcedureGroupId.equals(other.rollupProcedureGroupId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.RollupProcedureGroup[rollupProcedureGroupId=" + rollupProcedureGroupId + "]";
    }

    @Override
    public int compareTo(RollupProcedureGroup other) {
        return this.procedureGroupNm.compareTo(other.procedureGroupNm);
    }

    public String getDisplayTxt() {
        return interventionTypeCd.getInterventionTypeDsc() + " - " + procedureGroupNm;
    }
}
