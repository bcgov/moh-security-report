/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlTransient;
import java.io.Serializable;
import java.math.BigInteger;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author brice.mimifir
 */
@Entity
@Table(name = "SWT_SITE_PROV_PROCEDURE_GROUP")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findAll", query = "SELECT s FROM SwtSiteProvProcedureGroup s"),
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findBySiteId", query = "SELECT s FROM SwtSiteProvProcedureGroup s WHERE s.swtSiteProvProcedureGroupPK.siteId = :siteId"),
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findByProcedureGroupId", query = "SELECT s FROM SwtSiteProvProcedureGroup s WHERE s.swtSiteProvProcedureGroupPK.procedureGroupId = :procedureGroupId"),
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findByProcedureGroupNm", query = "SELECT s FROM SwtSiteProvProcedureGroup s WHERE s.procedureGroupNm = :procedureGroupNm"),
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findByDescription", query = "SELECT s FROM SwtSiteProvProcedureGroup s WHERE s.description = :description"),
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findByComments", query = "SELECT s FROM SwtSiteProvProcedureGroup s WHERE s.comments = :comments"),
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findByProcedureGroupType", query = "SELECT s FROM SwtSiteProvProcedureGroup s WHERE s.procedureGroupType = :procedureGroupType"),
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findByProcedureGroupExpiryDtm", query = "SELECT s FROM SwtSiteProvProcedureGroup s WHERE s.procedureGroupExpiryDtm = :procedureGroupExpiryDtm"),
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findByProcedureGroupEffectiveDtm", query = "SELECT s FROM SwtSiteProvProcedureGroup s WHERE s.procedureGroupEffectiveDtm = :procedureGroupEffectiveDtm"),
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findByCreatedByNm", query = "SELECT s FROM SwtSiteProvProcedureGroup s WHERE s.createdByNm = :createdByNm"),
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findByCreatedOnDtm", query = "SELECT s FROM SwtSiteProvProcedureGroup s WHERE s.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findByLastModifiedByNm", query = "SELECT s FROM SwtSiteProvProcedureGroup s WHERE s.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findByLastModifiedOnDtm", query = "SELECT s FROM SwtSiteProvProcedureGroup s WHERE s.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findByStatelessTransactionNbr", query = "SELECT s FROM SwtSiteProvProcedureGroup s WHERE s.statelessTransactionNbr = :statelessTransactionNbr"),
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findBySortOrderNbr", query = "SELECT s FROM SwtSiteProvProcedureGroup s WHERE s.sortOrderNbr = :sortOrderNbr"),
    @NamedQuery(name = "SwtSiteProvProcedureGroup.findByNonSprYn", query = "SELECT s FROM SwtSiteProvProcedureGroup s WHERE s.nonSprYn = :nonSprYn")})
public class SwtSiteProvProcedureGroup implements Serializable {

    private static final long serialVersionUID = 1L;
    @EmbeddedId
    protected SwtSiteProvProcedureGroupPK swtSiteProvProcedureGroupPK;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 255)
    @Column(name = "PROCEDURE_GROUP_NM")
    private String procedureGroupNm;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 255)
    @Column(name = "DESCRIPTION")
    private String description;
    @Size(max = 255)
    @Column(name = "COMMENTS")
    private String comments;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 25)
    @Column(name = "PROCEDURE_GROUP_TYPE")
    private String procedureGroupType;
    @Column(name = "PROCEDURE_GROUP_EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date procedureGroupExpiryDtm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "PROCEDURE_GROUP_EFFECTIVE_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date procedureGroupEffectiveDtm;
    @Size(max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "STATELESS_TRANSACTION_NBR")
    private long statelessTransactionNbr;
    @Column(name = "SORT_ORDER_NBR")
    private Long sortOrderNbr;
    @Size(max = 1)
    @Column(name = "NON_SPR_YN")
    private String nonSprYn;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "swtSiteProvProcedureGroup")
    private Collection<SwtSiteProvProcGroupXref> swtSiteProvProcGroupXrefCollection;
    @JoinColumn(name = "INTERVENTION_TYPE_CD", referencedColumnName = "INTERVENTION_TYPE_CD")
    @ManyToOne
    private InterventionType interventionTypeCd;
    @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false)
    @ManyToOne(optional = false)
    private Site site;

    public SwtSiteProvProcedureGroup() {
    }

    public SwtSiteProvProcedureGroup(SwtSiteProvProcedureGroupPK swtSiteProvProcedureGroupPK) {
        this.swtSiteProvProcedureGroupPK = swtSiteProvProcedureGroupPK;
    }

    public SwtSiteProvProcedureGroup(SwtSiteProvProcedureGroupPK swtSiteProvProcedureGroupPK, String procedureGroupNm, String description, String procedureGroupType, Date procedureGroupEffectiveDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.swtSiteProvProcedureGroupPK = swtSiteProvProcedureGroupPK;
        this.procedureGroupNm = procedureGroupNm;
        this.description = description;
        this.procedureGroupType = procedureGroupType;
        this.procedureGroupEffectiveDtm = procedureGroupEffectiveDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public SwtSiteProvProcedureGroup(long siteId, BigInteger procedureGroupId) {
        this.swtSiteProvProcedureGroupPK = new SwtSiteProvProcedureGroupPK(siteId, procedureGroupId);
    }

    public SwtSiteProvProcedureGroupPK getSwtSiteProvProcedureGroupPK() {
        return swtSiteProvProcedureGroupPK;
    }

    public void setSwtSiteProvProcedureGroupPK(SwtSiteProvProcedureGroupPK swtSiteProvProcedureGroupPK) {
        this.swtSiteProvProcedureGroupPK = swtSiteProvProcedureGroupPK;
    }

    public String getProcedureGroupNm() {
        return procedureGroupNm;
    }

    public void setProcedureGroupNm(String procedureGroupNm) {
        this.procedureGroupNm = procedureGroupNm;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getComments() {
        return comments;
    }

    public void setComments(String comments) {
        this.comments = comments;
    }

    public String getProcedureGroupType() {
        return procedureGroupType;
    }

    public void setProcedureGroupType(String procedureGroupType) {
        this.procedureGroupType = procedureGroupType;
    }

    public Date getProcedureGroupExpiryDtm() {
        return procedureGroupExpiryDtm;
    }

    public void setProcedureGroupExpiryDtm(Date procedureGroupExpiryDtm) {
        this.procedureGroupExpiryDtm = procedureGroupExpiryDtm;
    }

    public Date getProcedureGroupEffectiveDtm() {
        return procedureGroupEffectiveDtm;
    }

    public void setProcedureGroupEffectiveDtm(Date procedureGroupEffectiveDtm) {
        this.procedureGroupEffectiveDtm = procedureGroupEffectiveDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Long getSortOrderNbr() {
        return sortOrderNbr;
    }

    public void setSortOrderNbr(Long sortOrderNbr) {
        this.sortOrderNbr = sortOrderNbr;
    }

    public String getNonSprYn() {
        return nonSprYn;
    }

    public void setNonSprYn(String nonSprYn) {
        this.nonSprYn = nonSprYn;
    }

    @XmlTransient
    public Collection<SwtSiteProvProcGroupXref> getSwtSiteProvProcGroupXrefCollection() {
        return swtSiteProvProcGroupXrefCollection;
    }

    public void setSwtSiteProvProcGroupXrefCollection(Collection<SwtSiteProvProcGroupXref> swtSiteProvProcGroupXrefCollection) {
        this.swtSiteProvProcGroupXrefCollection = swtSiteProvProcGroupXrefCollection;
    }

    public InterventionType getInterventionTypeCd() {
        return interventionTypeCd;
    }

    public void setInterventionTypeCd(InterventionType interventionTypeCd) {
        this.interventionTypeCd = interventionTypeCd;
    }

    public Site getSite() {
        return site;
    }

    public void setSite(Site site) {
        this.site = site;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (swtSiteProvProcedureGroupPK != null ? swtSiteProvProcedureGroupPK.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof SwtSiteProvProcedureGroup)) {
            return false;
        }
        SwtSiteProvProcedureGroup other = (SwtSiteProvProcedureGroup) object;
        if ((this.swtSiteProvProcedureGroupPK == null && other.swtSiteProvProcedureGroupPK != null) || (this.swtSiteProvProcedureGroupPK != null && !this.swtSiteProvProcedureGroupPK.equals(other.swtSiteProvProcedureGroupPK))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.SwtSiteProvProcedureGroup[ swtSiteProvProcedureGroupPK=" + swtSiteProvProcedureGroupPK + " ]";
    }

}
