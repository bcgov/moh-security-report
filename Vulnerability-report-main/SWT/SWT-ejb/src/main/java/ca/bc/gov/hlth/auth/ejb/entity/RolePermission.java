/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.auth.ejb.entity;

import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinColumns;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_ROLE_PERMISSION")
@NamedQueries({
    @NamedQuery(name = "RolePermission.findByApplicationNm", query = "SELECT r FROM RolePermission r WHERE r.rolePermissionPK.applicationNm = :applicationNm"),
    @NamedQuery(name = "RolePermission.findByRoleNm", query = "SELECT r FROM RolePermission r WHERE r.rolePermissionPK.roleNm = :roleNm"),
    @NamedQuery(name = "RolePermission.findByPermissionNm", query = "SELECT r FROM RolePermission r WHERE r.rolePermissionPK.permissionNm = :permissionNm"),
    @NamedQuery(name = "RolePermission.findByActiveYn", query = "SELECT r FROM RolePermission r WHERE r.activeYn = :activeYn"),
    @NamedQuery(name = "RolePermission.findByCreatedByNm", query = "SELECT r FROM RolePermission r WHERE r.createdByNm = :createdByNm"),
    @NamedQuery(name = "RolePermission.findByCreatedOnDtm", query = "SELECT r FROM RolePermission r WHERE r.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "RolePermission.findByLastModifiedByNm", query = "SELECT r FROM RolePermission r WHERE r.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "RolePermission.findByLastModifiedOnDtm", query = "SELECT r FROM RolePermission r WHERE r.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "RolePermission.findByStatelessTransactionNbr", query = "SELECT r FROM RolePermission r WHERE r.statelessTransactionNbr = :statelessTransactionNbr")})
public class RolePermission implements Serializable {

    private static final long serialVersionUID = 1L;
    @EmbeddedId
    protected RolePermissionPK rolePermissionPK;
    @Column(name = "ACTIVE_YN", nullable = false)
    private String activeYn;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    @Version
    private long statelessTransactionNbr;
    @JoinColumns({
        @JoinColumn(name = "APPLICATION_NM", referencedColumnName = "APPLICATION_NM", insertable = false, updatable = false),
        @JoinColumn(name = "PERMISSION_NM", referencedColumnName = "PERMISSION_NM", insertable = false, updatable = false)})
    @ManyToOne
    private Permission permission;
    @JoinColumns({
        @JoinColumn(name = "APPLICATION_NM", referencedColumnName = "APPLICATION_NM", insertable = false, updatable = false),
        @JoinColumn(name = "ROLE_NM", referencedColumnName = "ROLE_NM", insertable = false, updatable = false)})
    @ManyToOne
    private Role role;

    public RolePermission() {
    }

    public RolePermission(RolePermissionPK rolePermissionPK) {
        this.rolePermissionPK = rolePermissionPK;
    }

    public RolePermission(RolePermissionPK rolePermissionPK, String activeYn, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.rolePermissionPK = rolePermissionPK;
        this.activeYn = activeYn;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public RolePermission(String applicationNm, String roleNm, String permissionNm) {
        this.rolePermissionPK = new RolePermissionPK(applicationNm, roleNm, permissionNm);
    }

    public RolePermissionPK getRolePermissionPK() {
        return rolePermissionPK;
    }

    public void setRolePermissionPK(RolePermissionPK rolePermissionPK) {
        this.rolePermissionPK = rolePermissionPK;
    }

    public String getActiveYn() {
        return activeYn;
    }

    public void setActiveYn(String activeYn) {
        this.activeYn = activeYn;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Permission getPermission() {
        return permission;
    }

    public void setPermission(Permission permission) {
        this.permission = permission;
    }

    public Role getRole() {
        return role;
    }

    public void setRole(Role role) {
        this.role = role;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (rolePermissionPK != null ? rolePermissionPK.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof RolePermission)) {
            return false;
        }
        RolePermission other = (RolePermission) object;
        if ((this.rolePermissionPK == null && other.rolePermissionPK != null) || (this.rolePermissionPK != null && !this.rolePermissionPK.equals(other.rolePermissionPK))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.auth.ejb.entity.RolePermission[rolePermissionPK=" + rolePermissionPK + "]";
    }

}
