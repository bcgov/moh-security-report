/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.auth.ejb.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import java.io.Serializable;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_APPLICATION")
@NamedQueries({
    @NamedQuery(name = "Application.findByApplicationNm", query = "SELECT a FROM Application a WHERE a.applicationNm = :applicationNm"),
    @NamedQuery(name = "Application.findByApplicationDsc", query = "SELECT a FROM Application a WHERE a.applicationDsc = :applicationDsc"),
    @NamedQuery(name = "Application.findByActiveYn", query = "SELECT a FROM Application a WHERE a.activeYn = :activeYn"),
    @NamedQuery(name = "Application.findByCreatedByNm", query = "SELECT a FROM Application a WHERE a.createdByNm = :createdByNm"),
    @NamedQuery(name = "Application.findByCreatedOnDtm", query = "SELECT a FROM Application a WHERE a.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "Application.findByLastModifiedByNm", query = "SELECT a FROM Application a WHERE a.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "Application.findByLastModifiedOnDtm", query = "SELECT a FROM Application a WHERE a.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "Application.findByStatelessTransactionNbr", query = "SELECT a FROM Application a WHERE a.statelessTransactionNbr = :statelessTransactionNbr")})
public class Application implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @Column(name = "APPLICATION_NM", nullable = false)
    private String applicationNm;
    @Column(name = "APPLICATION_DSC", nullable = false)
    private String applicationDsc;
    @Column(name = "ACTIVE_YN", nullable = false)
    private String activeYn;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    @Version
    private long statelessTransactionNbr;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "application")
    private Collection<Role> roleCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "application")
    private Collection<Permission> permissionCollection;

    public boolean isActiveYnBoolean() {
        return "Y".equals(activeYn);
    }

    public void setActiveYnBoolean(boolean activeYnBoolean) {
        activeYn = activeYnBoolean ? "Y" : "N";
    }

    public Application() {
    }

    public Application(String applicationNm) {
        this.applicationNm = applicationNm;
    }

    public Application(String applicationNm, String applicationDsc, String activeYn, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.applicationNm = applicationNm;
        this.applicationDsc = applicationDsc;
        this.activeYn = activeYn;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public String getApplicationNm() {
        return applicationNm;
    }

    public void setApplicationNm(String applicationNm) {
        this.applicationNm = applicationNm;
    }

    public String getApplicationDsc() {
        return applicationDsc;
    }

    public void setApplicationDsc(String applicationDsc) {
        this.applicationDsc = applicationDsc;
    }

    public String getActiveYn() {
        return activeYn;
    }

    public void setActiveYn(String activeYn) {
        this.activeYn = activeYn;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Collection<Role> getRoleCollection() {
        return roleCollection;
    }

    public void setRoleCollection(Collection<Role> roleCollection) {
        this.roleCollection = roleCollection;
    }

    public Collection<Permission> getPermissionCollection() {
        return permissionCollection;
    }

    public void setPermissionCollection(Collection<Permission> permissionCollection) {
        this.permissionCollection = permissionCollection;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (applicationNm != null ? applicationNm.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Application)) {
            return false;
        }
        Application other = (Application) object;
        if ((this.applicationNm == null && other.applicationNm != null) || (this.applicationNm != null && !this.applicationNm.equals(other.applicationNm))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.auth.ejb.entity.Application[applicationNm=" + applicationNm + "]";
    }

}
