/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinColumns;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.io.Serializable;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_ASSESSMENT_TOOL")
@NamedQueries({
    @NamedQuery(name = "AssessmentTool.findByAssessmentId", query = "SELECT a FROM AssessmentTool a WHERE a.assessmentToolPK.assessmentId = :assessmentId"),
    @NamedQuery(name = "AssessmentTool.findBySiteId", query = "SELECT a FROM AssessmentTool a WHERE a.assessmentToolPK.siteId = :siteId"),
    @NamedQuery(name = "AssessmentTool.findByPatientBirthDt", query = "SELECT a FROM AssessmentTool a WHERE a.patientBirthDt = :patientBirthDt"),
    @NamedQuery(name = "AssessmentTool.findByProcedureDecisionDt", query = "SELECT a FROM AssessmentTool a WHERE a.procedureDecisionDt = :procedureDecisionDt"),
    @NamedQuery(name = "AssessmentTool.findByAssessmentInactiveDtm", query = "SELECT a FROM AssessmentTool a WHERE a.assessmentInactiveDtm = :assessmentInactiveDtm"),
    @NamedQuery(name = "AssessmentTool.findByAssessmentStatusId", query = "SELECT a FROM AssessmentTool a WHERE a.assessmentStatusId = :assessmentStatusId"),
    @NamedQuery(name = "AssessmentTool.findByEvaluationQuestionId", query = "SELECT a FROM AssessmentTool a WHERE a.evaluationQuestionId = :evaluationQuestionId"),
    @NamedQuery(name = "AssessmentTool.findByEvaluationQuestionDsc", query = "SELECT a FROM AssessmentTool a WHERE a.evaluationQuestionDsc = :evaluationQuestionDsc"),
    @NamedQuery(name = "AssessmentTool.findByClinicalPriorityScoreNbr", query = "SELECT a FROM AssessmentTool a WHERE a.clinicalPriorityScoreNbr = :clinicalPriorityScoreNbr"),
    @NamedQuery(name = "AssessmentTool.findByHealthAuthorityNm", query = "SELECT a FROM AssessmentTool a WHERE a.healthAuthorityNm = :healthAuthorityNm"),
    @NamedQuery(name = "AssessmentTool.findBySurgicalServiceId", query = "SELECT a FROM AssessmentTool a WHERE a.surgicalServiceId = :surgicalServiceId"),
    @NamedQuery(name = "AssessmentTool.findBySurgicalServiceDsc", query = "SELECT a FROM AssessmentTool a WHERE a.surgicalServiceDsc = :surgicalServiceDsc"),
    @NamedQuery(name = "AssessmentTool.findByCancerProvenSuspectedYn", query = "SELECT a FROM AssessmentTool a WHERE a.cancerProvenSuspectedYn = :cancerProvenSuspectedYn"),
    @NamedQuery(name = "AssessmentTool.findByPatientDeclinedQuestionYn", query = "SELECT a FROM AssessmentTool a WHERE a.patientDeclinedQuestionYn = :patientDeclinedQuestionYn"),
    @NamedQuery(name = "AssessmentTool.findBySprCreatedOnDtm", query = "SELECT a FROM AssessmentTool a WHERE a.sprCreatedOnDtm = :sprCreatedOnDtm"),
    @NamedQuery(name = "AssessmentTool.findBySprLastModifiedOnDtm", query = "SELECT a FROM AssessmentTool a WHERE a.sprLastModifiedOnDtm = :sprLastModifiedOnDtm"),
    @NamedQuery(name = "AssessmentTool.findBySprLastModifiedByNm", query = "SELECT a FROM AssessmentTool a WHERE a.sprLastModifiedByNm = :sprLastModifiedByNm"),
    @NamedQuery(name = "AssessmentTool.findByCreatedByNm", query = "SELECT a FROM AssessmentTool a WHERE a.createdByNm = :createdByNm"),
    @NamedQuery(name = "AssessmentTool.findByCreatedOnDtm", query = "SELECT a FROM AssessmentTool a WHERE a.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "AssessmentTool.findByLastModifiedByNm", query = "SELECT a FROM AssessmentTool a WHERE a.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "AssessmentTool.findByLastModifiedOnDtm", query = "SELECT a FROM AssessmentTool a WHERE a.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "AssessmentTool.findByStatelessTransactionNbr", query = "SELECT a FROM AssessmentTool a WHERE a.statelessTransactionNbr = :statelessTransactionNbr")})
public class AssessmentTool implements Serializable {

    private static final long serialVersionUID = 1L;
    @EmbeddedId
    protected AssessmentToolPK assessmentToolPK;
    @Column(name = "PATIENT_BIRTH_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date patientBirthDt;
    @Column(name = "PROCEDURE_DECISION_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date procedureDecisionDt;
    @Column(name = "ASSESSMENT_INACTIVE_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date assessmentInactiveDtm;
    @Column(name = "ASSESSMENT_STATUS_ID", nullable = false)
    private long assessmentStatusId;
    @Column(name = "EVALUATION_QUESTION_ID")
    private Long evaluationQuestionId;
    @Column(name = "EVALUATION_QUESTION_DSC")
    private String evaluationQuestionDsc;
    @Column(name = "CLINICAL_PRIORITY_SCORE_NBR")
    private Integer clinicalPriorityScoreNbr;
    @Column(name = "HEALTH_AUTHORITY_NM", nullable = false)
    private String healthAuthorityNm;
    @Column(name = "SURGICAL_SERVICE_ID")
    private Long surgicalServiceId;
    @Column(name = "SURGICAL_SERVICE_DSC")
    private String surgicalServiceDsc;
    @Column(name = "CANCER_PROVEN_SUSPECTED_YN", nullable = false)
    private String cancerProvenSuspectedYn;
    @Column(name = "PATIENT_DECLINED_QUESTION_YN")
    private String patientDeclinedQuestionYn;
    @Column(name = "SPR_CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date sprCreatedOnDtm;
    @Column(name = "SPR_LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date sprLastModifiedOnDtm;
    @Column(name = "SPR_LAST_MODIFIED_BY_NM", nullable = false)
    private String sprLastModifiedByNm;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    private long statelessTransactionNbr;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "PERSONAL_HEALTH_NBR", referencedColumnName = "PERSONAL_HEALTH_NBR"),
        @JoinColumn(name = "HEALTH_AUTHORITY_ID", referencedColumnName = "HEALTH_AUTHORITY_ID", insertable = false, updatable = false)})
    @ManyToOne
    private Patient patient;
    @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false)
    @ManyToOne
    private Site site;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "SURGEON_COLLEGE_ID", referencedColumnName = "SURGEON_COLLEGE_ID"),
        @JoinColumn(name = "HEALTH_AUTHORITY_ID", referencedColumnName = "HEALTH_AUTHORITY_ID", insertable = false, updatable = false)})
    @ManyToOne
    private Surgeon surgeon;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "assessmentTool")
    private Collection<Booking> bookingCollection;

    public AssessmentTool() {
    }

    public AssessmentTool(AssessmentToolPK assessmentToolPK) {
        this.assessmentToolPK = assessmentToolPK;
    }

    public AssessmentTool(AssessmentToolPK assessmentToolPK, long assessmentStatusId, String healthAuthorityNm, String cancerProvenSuspectedYn, Date sprCreatedOnDtm, Date sprLastModifiedOnDtm, String sprLastModifiedByNm, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.assessmentToolPK = assessmentToolPK;
        this.assessmentStatusId = assessmentStatusId;
        this.healthAuthorityNm = healthAuthorityNm;
        this.cancerProvenSuspectedYn = cancerProvenSuspectedYn;
        this.sprCreatedOnDtm = sprCreatedOnDtm;
        this.sprLastModifiedOnDtm = sprLastModifiedOnDtm;
        this.sprLastModifiedByNm = sprLastModifiedByNm;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public AssessmentTool(long assessmentId, long siteId) {
        this.assessmentToolPK = new AssessmentToolPK(assessmentId, siteId);
    }

    public AssessmentToolPK getAssessmentToolPK() {
        return assessmentToolPK;
    }

    public void setAssessmentToolPK(AssessmentToolPK assessmentToolPK) {
        this.assessmentToolPK = assessmentToolPK;
    }

    public Date getPatientBirthDt() {
        return patientBirthDt;
    }

    public void setPatientBirthDt(Date patientBirthDt) {
        this.patientBirthDt = patientBirthDt;
    }

    public Date getProcedureDecisionDt() {
        return procedureDecisionDt;
    }

    public void setProcedureDecisionDt(Date procedureDecisionDt) {
        this.procedureDecisionDt = procedureDecisionDt;
    }

    public Date getAssessmentInactiveDtm() {
        return assessmentInactiveDtm;
    }

    public void setAssessmentInactiveDtm(Date assessmentInactiveDtm) {
        this.assessmentInactiveDtm = assessmentInactiveDtm;
    }

    public long getAssessmentStatusId() {
        return assessmentStatusId;
    }

    public void setAssessmentStatusId(long assessmentStatusId) {
        this.assessmentStatusId = assessmentStatusId;
    }

    public Long getEvaluationQuestionId() {
        return evaluationQuestionId;
    }

    public void setEvaluationQuestionId(Long evaluationQuestionId) {
        this.evaluationQuestionId = evaluationQuestionId;
    }

    public String getEvaluationQuestionDsc() {
        return evaluationQuestionDsc;
    }

    public void setEvaluationQuestionDsc(String evaluationQuestionDsc) {
        this.evaluationQuestionDsc = evaluationQuestionDsc;
    }

    public Integer getClinicalPriorityScoreNbr() {
        return clinicalPriorityScoreNbr;
    }

    public void setClinicalPriorityScoreNbr(Integer clinicalPriorityScoreNbr) {
        this.clinicalPriorityScoreNbr = clinicalPriorityScoreNbr;
    }

    public String getHealthAuthorityNm() {
        return healthAuthorityNm;
    }

    public void setHealthAuthorityNm(String healthAuthorityNm) {
        this.healthAuthorityNm = healthAuthorityNm;
    }

    public Long getSurgicalServiceId() {
        return surgicalServiceId;
    }

    public void setSurgicalServiceId(Long surgicalServiceId) {
        this.surgicalServiceId = surgicalServiceId;
    }

    public String getSurgicalServiceDsc() {
        return surgicalServiceDsc;
    }

    public void setSurgicalServiceDsc(String surgicalServiceDsc) {
        this.surgicalServiceDsc = surgicalServiceDsc;
    }

    public String getCancerProvenSuspectedYn() {
        return cancerProvenSuspectedYn;
    }

    public void setCancerProvenSuspectedYn(String cancerProvenSuspectedYn) {
        this.cancerProvenSuspectedYn = cancerProvenSuspectedYn;
    }

    public String getPatientDeclinedQuestionYn() {
        return patientDeclinedQuestionYn;
    }

    public void setPatientDeclinedQuestionYn(String patientDeclinedQuestionYn) {
        this.patientDeclinedQuestionYn = patientDeclinedQuestionYn;
    }

    public Date getSprCreatedOnDtm() {
        return sprCreatedOnDtm;
    }

    public void setSprCreatedOnDtm(Date sprCreatedOnDtm) {
        this.sprCreatedOnDtm = sprCreatedOnDtm;
    }

    public Date getSprLastModifiedOnDtm() {
        return sprLastModifiedOnDtm;
    }

    public void setSprLastModifiedOnDtm(Date sprLastModifiedOnDtm) {
        this.sprLastModifiedOnDtm = sprLastModifiedOnDtm;
    }

    public String getSprLastModifiedByNm() {
        return sprLastModifiedByNm;
    }

    public void setSprLastModifiedByNm(String sprLastModifiedByNm) {
        this.sprLastModifiedByNm = sprLastModifiedByNm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Patient getPatient() {
        return patient;
    }

    public void setPatient(Patient patient) {
        this.patient = patient;
    }

    public Site getSite() {
        return site;
    }

    public void setSite(Site site) {
        this.site = site;
    }

    public Surgeon getSurgeon() {
        return surgeon;
    }

    public void setSurgeon(Surgeon surgeon) {
        this.surgeon = surgeon;
    }

    public Collection<Booking> getBookingCollection() {
        return bookingCollection;
    }

    public void setBookingCollection(Collection<Booking> bookingCollection) {
        this.bookingCollection = bookingCollection;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (assessmentToolPK != null ? assessmentToolPK.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof AssessmentTool)) {
            return false;
        }
        AssessmentTool other = (AssessmentTool) object;
        if ((this.assessmentToolPK == null && other.assessmentToolPK != null) || (this.assessmentToolPK != null && !this.assessmentToolPK.equals(other.assessmentToolPK))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.AssessmentTool[assessmentToolPK=" + assessmentToolPK + "]";
    }

}
