/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.io.Serializable;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_ROLLUP_CANCER_SUSPECTED")
@NamedQueries({
    @NamedQuery(name = "RollupCancerSuspected.findByRollupCancerSuspectedId", query = "SELECT r FROM RollupCancerSuspected r WHERE r.rollupCancerSuspectedId = :rollupCancerSuspectedId"),
    @NamedQuery(name = "RollupCancerSuspected.findByCancerSuspectedCd", query = "SELECT r FROM RollupCancerSuspected r WHERE r.cancerSuspectedCd = :cancerSuspectedCd"),
    @NamedQuery(name = "RollupCancerSuspected.findByCancerSuspectedDsc", query = "SELECT r FROM RollupCancerSuspected r WHERE r.cancerSuspectedDsc = :cancerSuspectedDsc"),
    @NamedQuery(name = "RollupCancerSuspected.findBySortOrderNbr", query = "SELECT r FROM RollupCancerSuspected r WHERE r.sortOrderNbr = :sortOrderNbr"),
    @NamedQuery(name = "RollupCancerSuspected.findByEffectiveDtm", query = "SELECT r FROM RollupCancerSuspected r WHERE r.effectiveDtm = :effectiveDtm"),
    @NamedQuery(name = "RollupCancerSuspected.findByExpiryDtm", query = "SELECT r FROM RollupCancerSuspected r WHERE r.expiryDtm = :expiryDtm"),
    @NamedQuery(name = "RollupCancerSuspected.findByCreatedByNm", query = "SELECT r FROM RollupCancerSuspected r WHERE r.createdByNm = :createdByNm"),
    @NamedQuery(name = "RollupCancerSuspected.findByCreatedOnDtm", query = "SELECT r FROM RollupCancerSuspected r WHERE r.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "RollupCancerSuspected.findByLastModifiedByNm", query = "SELECT r FROM RollupCancerSuspected r WHERE r.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "RollupCancerSuspected.findByLastModifiedOnDtm", query = "SELECT r FROM RollupCancerSuspected r WHERE r.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "RollupCancerSuspected.findByStatelessTransactionNbr", query = "SELECT r FROM RollupCancerSuspected r WHERE r.statelessTransactionNbr = :statelessTransactionNbr")})
public class RollupCancerSuspected implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @Column(name = "ROLLUP_CANCER_SUSPECTED_ID", nullable = false)
    private Long rollupCancerSuspectedId;
    @Column(name = "CANCER_SUSPECTED_CD", nullable = false)
    private String cancerSuspectedCd;
    @Column(name = "CANCER_SUSPECTED_DSC", nullable = false)
    private String cancerSuspectedDsc;
    @Column(name = "SORT_ORDER_NBR")
    private Long sortOrderNbr;
    @Column(name = "EFFECTIVE_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveDtm;
    @Column(name = "EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date expiryDtm;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    private long statelessTransactionNbr;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "rollupCancerSuspected")
    private Collection<SiteCancerSuspected> siteCancerSuspectedCollection;

    public RollupCancerSuspected() {
    }

    public RollupCancerSuspected(Long rollupCancerSuspectedId) {
        this.rollupCancerSuspectedId = rollupCancerSuspectedId;
    }

    public RollupCancerSuspected(Long rollupCancerSuspectedId, String cancerSuspectedCd, String cancerSuspectedDsc, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.rollupCancerSuspectedId = rollupCancerSuspectedId;
        this.cancerSuspectedCd = cancerSuspectedCd;
        this.cancerSuspectedDsc = cancerSuspectedDsc;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Long getRollupCancerSuspectedId() {
        return rollupCancerSuspectedId;
    }

    public void setRollupCancerSuspectedId(Long rollupCancerSuspectedId) {
        this.rollupCancerSuspectedId = rollupCancerSuspectedId;
    }

    public String getCancerSuspectedCd() {
        return cancerSuspectedCd;
    }

    public void setCancerSuspectedCd(String cancerSuspectedCd) {
        this.cancerSuspectedCd = cancerSuspectedCd;
    }

    public String getCancerSuspectedDsc() {
        return cancerSuspectedDsc;
    }

    public void setCancerSuspectedDsc(String cancerSuspectedDsc) {
        this.cancerSuspectedDsc = cancerSuspectedDsc;
    }

    public Long getSortOrderNbr() {
        return sortOrderNbr;
    }

    public void setSortOrderNbr(Long sortOrderNbr) {
        this.sortOrderNbr = sortOrderNbr;
    }

    public Date getEffectiveDtm() {
        return effectiveDtm;
    }

    public void setEffectiveDtm(Date effectiveDtm) {
        this.effectiveDtm = effectiveDtm;
    }

    public Date getExpiryDtm() {
        return expiryDtm;
    }

    public void setExpiryDtm(Date expiryDtm) {
        this.expiryDtm = expiryDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Collection<SiteCancerSuspected> getSiteCancerSuspectedCollection() {
        return siteCancerSuspectedCollection;
    }

    public void setSiteCancerSuspectedCollection(Collection<SiteCancerSuspected> siteCancerSuspectedCollection) {
        this.siteCancerSuspectedCollection = siteCancerSuspectedCollection;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (rollupCancerSuspectedId != null ? rollupCancerSuspectedId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof RollupCancerSuspected)) {
            return false;
        }
        RollupCancerSuspected other = (RollupCancerSuspected) object;
        if ((this.rollupCancerSuspectedId == null && other.rollupCancerSuspectedId != null) || (this.rollupCancerSuspectedId != null && !this.rollupCancerSuspectedId.equals(other.rollupCancerSuspectedId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.RollupCancerSuspected[rollupCancerSuspectedId=" + rollupCancerSuspectedId + "]";
    }

}
