/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_SURGEON")
@NamedQueries({
    @NamedQuery(name = "Surgeon.findBySurgeonCollegeId", query = "SELECT s FROM Surgeon s WHERE s.surgeonPK.surgeonCollegeId = :surgeonCollegeId"),
    @NamedQuery(name = "Surgeon.findBySiteId", query = "SELECT s FROM Surgeon s WHERE s.surgeonPK.siteId = :siteId"),
    @NamedQuery(name = "Surgeon.findBySurgeonMspNbr", query = "SELECT s FROM Surgeon s WHERE s.surgeonMspNbr = :surgeonMspNbr"),
    @NamedQuery(name = "Surgeon.findBySurgeonFirstNm", query = "SELECT s FROM Surgeon s WHERE s.surgeonFirstNm = :surgeonFirstNm"),
    @NamedQuery(name = "Surgeon.findBySurgeonLastNm", query = "SELECT s FROM Surgeon s WHERE s.surgeonLastNm = :surgeonLastNm"),
    @NamedQuery(name = "Surgeon.findBySurgeonFullNm", query = "SELECT s FROM Surgeon s WHERE s.surgeonFullNm = :surgeonFullNm"),
    @NamedQuery(name = "Surgeon.findByProviderId", query = "SELECT s FROM Surgeon s WHERE s.providerId = :providerId"),
    @NamedQuery(name = "Surgeon.findByProviderNm", query = "SELECT s FROM Surgeon s WHERE s.providerNm = :providerNm"),
    @NamedQuery(name = "Surgeon.findBySpecialtyId", query = "SELECT s FROM Surgeon s WHERE s.specialtyId = :specialtyId"),
    @NamedQuery(name = "Surgeon.findBySpecialtyDsc", query = "SELECT s FROM Surgeon s WHERE s.specialtyDsc = :specialtyDsc"),
    @NamedQuery(name = "Surgeon.findByCityOfClinicNm", query = "SELECT s FROM Surgeon s WHERE s.cityOfClinicNm = :cityOfClinicNm"),
    @NamedQuery(name = "Surgeon.findByStreetAddressTxt", query = "SELECT s FROM Surgeon s WHERE s.streetAddressTxt = :streetAddressTxt"),
    @NamedQuery(name = "Surgeon.findByProvinceCd", query = "SELECT s FROM Surgeon s WHERE s.provinceCd = :provinceCd"),
    @NamedQuery(name = "Surgeon.findByProvinceNm", query = "SELECT s FROM Surgeon s WHERE s.provinceNm = :provinceNm"),
    @NamedQuery(name = "Surgeon.findByCountryOfResidenceNm", query = "SELECT s FROM Surgeon s WHERE s.countryOfResidenceNm = :countryOfResidenceNm"),
    @NamedQuery(name = "Surgeon.findByPostalCodeTxt", query = "SELECT s FROM Surgeon s WHERE s.postalCodeTxt = :postalCodeTxt"),
    @NamedQuery(name = "Surgeon.findByPhoneAreaCodeTxt", query = "SELECT s FROM Surgeon s WHERE s.phoneAreaCodeTxt = :phoneAreaCodeTxt"),
    @NamedQuery(name = "Surgeon.findByPhoneNumberTxt", query = "SELECT s FROM Surgeon s WHERE s.phoneNumberTxt = :phoneNumberTxt"),
    @NamedQuery(name = "Surgeon.findByPhoneExtTxt", query = "SELECT s FROM Surgeon s WHERE s.phoneExtTxt = :phoneExtTxt"),
    @NamedQuery(name = "Surgeon.findByHealthAuthorityId", query = "SELECT s FROM Surgeon s WHERE s.surgeonPK.healthAuthorityId = :healthAuthorityId"),
    @NamedQuery(name = "Surgeon.findByHealthAuthorityNm", query = "SELECT s FROM Surgeon s WHERE s.healthAuthorityNm = :healthAuthorityNm"),
    @NamedQuery(name = "Surgeon.findByEffectiveDtm", query = "SELECT s FROM Surgeon s WHERE s.effectiveDtm = :effectiveDtm"),
    @NamedQuery(name = "Surgeon.findByExpiryDtm", query = "SELECT s FROM Surgeon s WHERE s.expiryDtm = :expiryDtm"),
    @NamedQuery(name = "Surgeon.findBySprModifiedByNm", query = "SELECT s FROM Surgeon s WHERE s.sprModifiedByNm = :sprModifiedByNm"),
    @NamedQuery(name = "Surgeon.findBySprModifiedByDtm", query = "SELECT s FROM Surgeon s WHERE s.sprModifiedByDtm = :sprModifiedByDtm"),
    @NamedQuery(name = "Surgeon.findByCreatedByNm", query = "SELECT s FROM Surgeon s WHERE s.createdByNm = :createdByNm"),
    @NamedQuery(name = "Surgeon.findByCreatedOnDtm", query = "SELECT s FROM Surgeon s WHERE s.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "Surgeon.findByLastModifiedByNm", query = "SELECT s FROM Surgeon s WHERE s.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "Surgeon.findByLastModifiedOnDtm", query = "SELECT s FROM Surgeon s WHERE s.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "Surgeon.findByStatelessTransactionNbr", query = "SELECT s FROM Surgeon s WHERE s.statelessTransactionNbr = :statelessTransactionNbr")})
public class Surgeon implements Serializable {

    private static final long serialVersionUID = 1L;
    @EmbeddedId
    protected SurgeonPK surgeonPK;
    @Size(max = 7)
    @Column(name = "SURGEON_MSP_NBR")
    private String surgeonMspNbr;
    @Column(name = "SURGEON_FIRST_NM", nullable = false)
    private String surgeonFirstNm;
    @Column(name = "SURGEON_LAST_NM", nullable = false)
    private String surgeonLastNm;
    @Column(name = "SURGEON_FULL_NM", nullable = false)
    private String surgeonFullNm;
    @Size(max = 10)
    @Column(name = "PROVIDER_ID")
    private String providerId;
    @Column(name = "PROVIDER_NM")
    private String providerNm;
    @Column(name = "SPECIALTY_ID")
    private Long specialtyId;
    @Column(name = "SPECIALTY_DSC")
    private String specialtyDsc;
    @Column(name = "CITY_OF_CLINIC_NM")
    private String cityOfClinicNm;
    @Column(name = "STREET_ADDRESS_TXT")
    private String streetAddressTxt;
    @Column(name = "PROVINCE_CD")
    private String provinceCd;
    @Column(name = "PROVINCE_NM")
    private String provinceNm;
    @Column(name = "COUNTRY_OF_RESIDENCE_NM")
    private String countryOfResidenceNm;
    @Column(name = "POSTAL_CODE_TXT")
    private String postalCodeTxt;
    @Column(name = "PHONE_AREA_CODE_TXT")
    private Short phoneAreaCodeTxt;
    @Column(name = "PHONE_NUMBER_TXT")
    private String phoneNumberTxt;
    @Column(name = "PHONE_EXT_TXT")
    private String phoneExtTxt;
    @Column(name = "HEALTH_AUTHORITY_NM", nullable = false)
    private String healthAuthorityNm;
    @Column(name = "EFFECTIVE_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveDtm;
    @Column(name = "EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date expiryDtm;
    @Column(name = "SPR_MODIFIED_BY_NM")
    private String sprModifiedByNm;
    @Column(name = "SPR_MODIFIED_BY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date sprModifiedByDtm;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    private long statelessTransactionNbr;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "surgeon")
    private Collection<PostOperation> postOperationCollection;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "surgeon")
    private Collection<AssessmentTool> assessmentToolCollection;
    @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false)
    @ManyToOne
    private Site site;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "surgeon")
    private Collection<Booking> bookingCollection;

    public Surgeon() {
    }

    public Surgeon(SurgeonPK surgeonPK) {
        this.surgeonPK = surgeonPK;
    }

    public Surgeon(SurgeonPK surgeonPK, String surgeonFirstNm, String surgeonLastNm, String surgeonFullNm, String healthAuthorityNm, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.surgeonPK = surgeonPK;
        this.surgeonFirstNm = surgeonFirstNm;
        this.surgeonLastNm = surgeonLastNm;
        this.surgeonFullNm = surgeonFullNm;
        this.healthAuthorityNm = healthAuthorityNm;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Surgeon(String surgeonCollegeId, long siteId, long healthAuthorityId) {
        this.surgeonPK = new SurgeonPK(surgeonCollegeId, siteId, healthAuthorityId);
    }

    public SurgeonPK getSurgeonPK() {
        return surgeonPK;
    }

    public void setSurgeonPK(SurgeonPK surgeonPK) {
        this.surgeonPK = surgeonPK;
    }

    public String getSurgeonMspNbr() {
        return surgeonMspNbr;
    }

    public void setSurgeonMspNbr(String surgeonMspNbr) {
        this.surgeonMspNbr = surgeonMspNbr;
    }

    public String getSurgeonFirstNm() {
        return surgeonFirstNm;
    }

    public void setSurgeonFirstNm(String surgeonFirstNm) {
        this.surgeonFirstNm = surgeonFirstNm;
    }

    public String getSurgeonLastNm() {
        return surgeonLastNm;
    }

    public void setSurgeonLastNm(String surgeonLastNm) {
        this.surgeonLastNm = surgeonLastNm;
    }

    public String getSurgeonFullNm() {
        return surgeonFullNm;
    }

    public void setSurgeonFullNm(String surgeonFullNm) {
        this.surgeonFullNm = surgeonFullNm;
    }

    public String getProviderId() {
        return providerId;
    }

    public void setProviderId(String providerId) {
        this.providerId = providerId;
    }

    public String getProviderNm() {
        return providerNm;
    }

    public void setProviderNm(String providerNm) {
        this.providerNm = providerNm;
    }

    public Long getSpecialtyId() {
        return specialtyId;
    }

    public void setSpecialtyId(Long specialtyId) {
        this.specialtyId = specialtyId;
    }

    public String getSpecialtyDsc() {
        return specialtyDsc;
    }

    public void setSpecialtyDsc(String specialtyDsc) {
        this.specialtyDsc = specialtyDsc;
    }

    public String getCityOfClinicNm() {
        return cityOfClinicNm;
    }

    public void setCityOfClinicNm(String cityOfClinicNm) {
        this.cityOfClinicNm = cityOfClinicNm;
    }

    public String getStreetAddressTxt() {
        return streetAddressTxt;
    }

    public void setStreetAddressTxt(String streetAddressTxt) {
        this.streetAddressTxt = streetAddressTxt;
    }

    public String getProvinceCd() {
        return provinceCd;
    }

    public void setProvinceCd(String provinceCd) {
        this.provinceCd = provinceCd;
    }

    public String getProvinceNm() {
        return provinceNm;
    }

    public void setProvinceNm(String provinceNm) {
        this.provinceNm = provinceNm;
    }

    public String getCountryOfResidenceNm() {
        return countryOfResidenceNm;
    }

    public void setCountryOfResidenceNm(String countryOfResidenceNm) {
        this.countryOfResidenceNm = countryOfResidenceNm;
    }

    public String getPostalCodeTxt() {
        return postalCodeTxt;
    }

    public void setPostalCodeTxt(String postalCodeTxt) {
        this.postalCodeTxt = postalCodeTxt;
    }

    public Short getPhoneAreaCodeTxt() {
        return phoneAreaCodeTxt;
    }

    public void setPhoneAreaCodeTxt(Short phoneAreaCodeTxt) {
        this.phoneAreaCodeTxt = phoneAreaCodeTxt;
    }

    public String getPhoneNumberTxt() {
        return phoneNumberTxt;
    }

    public void setPhoneNumberTxt(String phoneNumberTxt) {
        this.phoneNumberTxt = phoneNumberTxt;
    }

    public String getPhoneExtTxt() {
        return phoneExtTxt;
    }

    public void setPhoneExtTxt(String phoneExtTxt) {
        this.phoneExtTxt = phoneExtTxt;
    }

    public String getHealthAuthorityNm() {
        return healthAuthorityNm;
    }

    public void setHealthAuthorityNm(String healthAuthorityNm) {
        this.healthAuthorityNm = healthAuthorityNm;
    }

    public Date getEffectiveDtm() {
        return effectiveDtm;
    }

    public void setEffectiveDtm(Date effectiveDtm) {
        this.effectiveDtm = effectiveDtm;
    }

    public Date getExpiryDtm() {
        return expiryDtm;
    }

    public void setExpiryDtm(Date expiryDtm) {
        this.expiryDtm = expiryDtm;
    }

    public String getSprModifiedByNm() {
        return sprModifiedByNm;
    }

    public void setSprModifiedByNm(String sprModifiedByNm) {
        this.sprModifiedByNm = sprModifiedByNm;
    }

    public Date getSprModifiedByDtm() {
        return sprModifiedByDtm;
    }

    public void setSprModifiedByDtm(Date sprModifiedByDtm) {
        this.sprModifiedByDtm = sprModifiedByDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Collection<PostOperation> getPostOperationCollection() {
        return postOperationCollection;
    }

    public void setPostOperationCollection(Collection<PostOperation> postOperationCollection) {
        this.postOperationCollection = postOperationCollection;
    }

    public Collection<AssessmentTool> getAssessmentToolCollection() {
        return assessmentToolCollection;
    }

    public void setAssessmentToolCollection(Collection<AssessmentTool> assessmentToolCollection) {
        this.assessmentToolCollection = assessmentToolCollection;
    }

    public Site getSite() {
        return site;
    }

    public void setSite(Site site) {
        this.site = site;
    }

    public Collection<Booking> getBookingCollection() {
        return bookingCollection;
    }

    public void setBookingCollection(Collection<Booking> bookingCollection) {
        this.bookingCollection = bookingCollection;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (surgeonPK != null ? surgeonPK.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Surgeon)) {
            return false;
        }
        Surgeon other = (Surgeon) object;
        if ((this.surgeonPK == null && other.surgeonPK != null) || (this.surgeonPK != null && !this.surgeonPK.equals(other.surgeonPK))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.Surgeon[surgeonPK=" + surgeonPK + "]";
    }

}
