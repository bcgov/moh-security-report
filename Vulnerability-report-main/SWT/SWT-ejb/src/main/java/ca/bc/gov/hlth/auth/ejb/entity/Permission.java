/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.auth.ejb.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import java.io.Serializable;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_PERMISSION")
@NamedQueries({
    @NamedQuery(name = "Permission.findByApplicationNm", query = "SELECT p FROM Permission p WHERE p.permissionPK.applicationNm = :applicationNm ORDER BY p.permissionDsc"),
    @NamedQuery(name = "Permission.findByPermissionNm", query = "SELECT p FROM Permission p WHERE p.permissionPK.permissionNm = :permissionNm"),
    @NamedQuery(name = "Permission.findByPermissionDsc", query = "SELECT p FROM Permission p WHERE p.permissionDsc = :permissionDsc"),
    @NamedQuery(name = "Permission.findByCreatedByNm", query = "SELECT p FROM Permission p WHERE p.createdByNm = :createdByNm"),
    @NamedQuery(name = "Permission.findByCreatedOnDtm", query = "SELECT p FROM Permission p WHERE p.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "Permission.findByLastModifiedByNm", query = "SELECT p FROM Permission p WHERE p.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "Permission.findByLastModifiedOnDtm", query = "SELECT p FROM Permission p WHERE p.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "Permission.findByStatelessTransactionNbr", query = "SELECT p FROM Permission p WHERE p.statelessTransactionNbr = :statelessTransactionNbr")})
public class Permission implements Serializable {

    private static final long serialVersionUID = 1L;
    @EmbeddedId
    protected PermissionPK permissionPK;
    @Column(name = "PERMISSION_DSC", nullable = false)
    private String permissionDsc;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    @Version
    private long statelessTransactionNbr;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "permission")
    private Collection<RolePermission> rolePermissionCollection;
    @JoinColumn(name = "APPLICATION_NM", referencedColumnName = "APPLICATION_NM", insertable = false, updatable = false)
    @ManyToOne
    private Application application;

    public Permission() {
    }

    public Permission(PermissionPK permissionPK) {
        this.permissionPK = permissionPK;
    }

    public Permission(PermissionPK permissionPK, String permissionDsc, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.permissionPK = permissionPK;
        this.permissionDsc = permissionDsc;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Permission(String applicationNm, String permissionNm) {
        this.permissionPK = new PermissionPK(applicationNm, permissionNm);
    }

    public PermissionPK getPermissionPK() {
        return permissionPK;
    }

    public void setPermissionPK(PermissionPK permissionPK) {
        this.permissionPK = permissionPK;
    }

    public String getPermissionDsc() {
        return permissionDsc;
    }

    public void setPermissionDsc(String permissionDsc) {
        this.permissionDsc = permissionDsc;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Collection<RolePermission> getRolePermissionCollection() {
        return rolePermissionCollection;
    }

    public void setRolePermissionCollection(Collection<RolePermission> rolePermissionCollection) {
        this.rolePermissionCollection = rolePermissionCollection;
    }

    public Application getApplication() {
        return application;
    }

    public void setApplication(Application application) {
        this.application = application;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (permissionPK != null ? permissionPK.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Permission)) {
            return false;
        }
        Permission other = (Permission) object;
        if ((this.permissionPK == null && other.permissionPK != null) || (this.permissionPK != null && !this.permissionPK.equals(other.permissionPK))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.auth.ejb.entity.Permission[permissionPK=" + permissionPK + "]";
    }

}
