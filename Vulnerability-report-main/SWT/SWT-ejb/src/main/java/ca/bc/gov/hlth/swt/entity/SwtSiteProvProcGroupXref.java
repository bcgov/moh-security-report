/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinColumns;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import jakarta.xml.bind.annotation.XmlRootElement;
import java.io.Serializable;
import java.math.BigInteger;
import java.util.Date;

/**
 *
 * @author brice.mimifir
 */
@Entity
@Table(name = "SWT_SITE_PROV_PROC_GROUP_XREF")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "SwtSiteProvProcGroupXref.findAll", query = "SELECT s FROM SwtSiteProvProcGroupXref s"),
    @NamedQuery(name = "SwtSiteProvProcGroupXref.findBySiteId", query = "SELECT s FROM SwtSiteProvProcGroupXref s WHERE s.swtSiteProvProcGroupXrefPK.siteId = :siteId"),
    @NamedQuery(name = "SwtSiteProvProcGroupXref.findByProvProcedureId", query = "SELECT s FROM SwtSiteProvProcGroupXref s WHERE s.swtSiteProvProcGroupXrefPK.provProcedureId = :provProcedureId"),
    @NamedQuery(name = "SwtSiteProvProcGroupXref.findByProcedureGroupId", query = "SELECT s FROM SwtSiteProvProcGroupXref s WHERE s.swtSiteProvProcGroupXrefPK.procedureGroupId = :procedureGroupId"),
    @NamedQuery(name = "SwtSiteProvProcGroupXref.findByCreatedByNm", query = "SELECT s FROM SwtSiteProvProcGroupXref s WHERE s.createdByNm = :createdByNm"),
    @NamedQuery(name = "SwtSiteProvProcGroupXref.findByCreatedOnDtm", query = "SELECT s FROM SwtSiteProvProcGroupXref s WHERE s.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "SwtSiteProvProcGroupXref.findByLastModifiedByNm", query = "SELECT s FROM SwtSiteProvProcGroupXref s WHERE s.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "SwtSiteProvProcGroupXref.findByLastModifiedOnDtm", query = "SELECT s FROM SwtSiteProvProcGroupXref s WHERE s.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "SwtSiteProvProcGroupXref.findByStatelessTransactionNbr", query = "SELECT s FROM SwtSiteProvProcGroupXref s WHERE s.statelessTransactionNbr = :statelessTransactionNbr")})
public class SwtSiteProvProcGroupXref implements Serializable {

    private static final long serialVersionUID = 1L;
    @EmbeddedId
    protected SwtSiteProvProcGroupXrefPK swtSiteProvProcGroupXrefPK;
    @Size(max = 100)
    @Column(name = "CREATED_BY_NM")
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 100)
    @Column(name = "LAST_MODIFIED_BY_NM")
    private String lastModifiedByNm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "LAST_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Basic(optional = false)
    @NotNull
    @Column(name = "STATELESS_TRANSACTION_NBR")
    private long statelessTransactionNbr;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "PROV_PROCEDURE_ID", referencedColumnName = "PROV_PROCEDURE_ID", insertable = false, updatable = false)})
    @ManyToOne(optional = false)
    private SwtSiteProvProcedure swtSiteProvProcedure;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "PROCEDURE_GROUP_ID", referencedColumnName = "PROCEDURE_GROUP_ID", insertable = false, updatable = false)})
    @ManyToOne(optional = false)
    private SwtSiteProvProcedureGroup swtSiteProvProcedureGroup;

    public SwtSiteProvProcGroupXref() {
    }

    public SwtSiteProvProcGroupXref(SwtSiteProvProcGroupXrefPK swtSiteProvProcGroupXrefPK) {
        this.swtSiteProvProcGroupXrefPK = swtSiteProvProcGroupXrefPK;
    }

    public SwtSiteProvProcGroupXref(SwtSiteProvProcGroupXrefPK swtSiteProvProcGroupXrefPK, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.swtSiteProvProcGroupXrefPK = swtSiteProvProcGroupXrefPK;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public SwtSiteProvProcGroupXref(long siteId, String provProcedureId, BigInteger procedureGroupId) {
        this.swtSiteProvProcGroupXrefPK = new SwtSiteProvProcGroupXrefPK(siteId, provProcedureId, procedureGroupId);
    }

    public SwtSiteProvProcGroupXrefPK getSwtSiteProvProcGroupXrefPK() {
        return swtSiteProvProcGroupXrefPK;
    }

    public void setSwtSiteProvProcGroupXrefPK(SwtSiteProvProcGroupXrefPK swtSiteProvProcGroupXrefPK) {
        this.swtSiteProvProcGroupXrefPK = swtSiteProvProcGroupXrefPK;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public SwtSiteProvProcedure getSwtSiteProvProcedure() {
        return swtSiteProvProcedure;
    }

    public void setSwtSiteProvProcedure(SwtSiteProvProcedure swtSiteProvProcedure) {
        this.swtSiteProvProcedure = swtSiteProvProcedure;
    }

    public SwtSiteProvProcedureGroup getSwtSiteProvProcedureGroup() {
        return swtSiteProvProcedureGroup;
    }

    public void setSwtSiteProvProcedureGroup(SwtSiteProvProcedureGroup swtSiteProvProcedureGroup) {
        this.swtSiteProvProcedureGroup = swtSiteProvProcedureGroup;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (swtSiteProvProcGroupXrefPK != null ? swtSiteProvProcGroupXrefPK.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof SwtSiteProvProcGroupXref)) {
            return false;
        }
        SwtSiteProvProcGroupXref other = (SwtSiteProvProcGroupXref) object;
        if ((this.swtSiteProvProcGroupXrefPK == null && other.swtSiteProvProcGroupXrefPK != null) || (this.swtSiteProvProcGroupXrefPK != null && !this.swtSiteProvProcGroupXrefPK.equals(other.swtSiteProvProcGroupXrefPK))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.SwtSiteProvProcGroupXref[ swtSiteProvProcGroupXrefPK=" + swtSiteProvProcGroupXrefPK + " ]";
    }

}
