/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import java.io.Serializable;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_ROLLUP_FACILITY")
@NamedQueries({
    @NamedQuery(name = "RollupFacility.findByRollupFacilityId", query = "SELECT r FROM RollupFacility r WHERE r.rollupFacilityId = :rollupFacilityId"),
    @NamedQuery(name = "RollupFacility.findByFacilityId", query = "SELECT r FROM RollupFacility r WHERE r.facilityId = :facilityId"),
    @NamedQuery(name = "RollupFacility.findByFacilityNm", query = "SELECT r FROM RollupFacility r WHERE r.facilityNm = :facilityNm"),
    @NamedQuery(name = "RollupFacility.findByLocationNm", query = "SELECT r FROM RollupFacility r WHERE r.locationNm = :locationNm"),
    @NamedQuery(name = "RollupFacility.findByFacilityPostalCodeTxt", query = "SELECT r FROM RollupFacility r WHERE r.facilityPostalCodeTxt = :facilityPostalCodeTxt"),
    @NamedQuery(name = "RollupFacility.findByAddressFullTxt", query = "SELECT r FROM RollupFacility r WHERE r.addressFullTxt = :addressFullTxt"),
    @NamedQuery(name = "RollupFacility.findByLatitudeNbr", query = "SELECT r FROM RollupFacility r WHERE r.latitudeNbr = :latitudeNbr"),
    @NamedQuery(name = "RollupFacility.findByLongitudeNbr", query = "SELECT r FROM RollupFacility r WHERE r.longitudeNbr = :longitudeNbr"),
    @NamedQuery(name = "RollupFacility.findByEffectiveDtm", query = "SELECT r FROM RollupFacility r WHERE r.effectiveDtm = :effectiveDtm"),
    @NamedQuery(name = "RollupFacility.findByExpiryDtm", query = "SELECT r FROM RollupFacility r WHERE r.expiryDtm = :expiryDtm"),
    @NamedQuery(name = "RollupFacility.findByCreatedByNm", query = "SELECT r FROM RollupFacility r WHERE r.createdByNm = :createdByNm"),
    @NamedQuery(name = "RollupFacility.findByCreatedOnDtm", query = "SELECT r FROM RollupFacility r WHERE r.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "RollupFacility.findByLastModifiedByNm", query = "SELECT r FROM RollupFacility r WHERE r.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "RollupFacility.findByLastModifiedOnDtm", query = "SELECT r FROM RollupFacility r WHERE r.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "RollupFacility.findByStatelessTransactionNbr", query = "SELECT r FROM RollupFacility r WHERE r.statelessTransactionNbr = :statelessTransactionNbr")})
public class RollupFacility implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @Column(name = "ROLLUP_FACILITY_ID", nullable = false)
    private Long rollupFacilityId;
    @Column(name = "FACILITY_ID", nullable = false)
    private long facilityId;
    @Column(name = "FACILITY_NM", nullable = false)
    private String facilityNm;
    @Column(name = "LOCATION_NM", nullable = false)
    private String locationNm;
    @Column(name = "FACILITY_POSTAL_CODE_TXT")
    private String facilityPostalCodeTxt;
    @Column(name = "ADDRESS_FULL_TXT")
    private String addressFullTxt;
    @Column(name = "LATITUDE_NBR")
    private Double latitudeNbr;
    @Column(name = "LONGITUDE_NBR")
    private Double longitudeNbr;
    @Column(name = "EFFECTIVE_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveDtm;
    @Column(name = "EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date expiryDtm;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    @Version
    private long statelessTransactionNbr;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "rollupFacility", fetch = FetchType.LAZY)
    private Collection<SiteFacility> siteFacilityCollection;

    public RollupFacility() {
    }

    public RollupFacility(Long rollupFacilityId) {
        this.rollupFacilityId = rollupFacilityId;
    }

    public RollupFacility(Long rollupFacilityId, long facilityId, String facilityNm, String locationNm, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.rollupFacilityId = rollupFacilityId;
        this.facilityId = facilityId;
        this.facilityNm = facilityNm;
        this.locationNm = locationNm;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Long getRollupFacilityId() {
        return rollupFacilityId;
    }

    public void setRollupFacilityId(Long rollupFacilityId) {
        this.rollupFacilityId = rollupFacilityId;
    }

    public long getFacilityId() {
        return facilityId;
    }

    public void setFacilityId(long facilityId) {
        this.facilityId = facilityId;
    }

    public String getFacilityNm() {
        return facilityNm;
    }

    public void setFacilityNm(String facilityNm) {
        this.facilityNm = facilityNm;
    }

    public String getLocationNm() {
        return locationNm;
    }

    public void setLocationNm(String locationNm) {
        this.locationNm = locationNm;
    }

    public String getFacilityPostalCodeTxt() {
        return facilityPostalCodeTxt;
    }

    public void setFacilityPostalCodeTxt(String facilityPostalCodeTxt) {
        this.facilityPostalCodeTxt = facilityPostalCodeTxt;
    }

    public String getAddressFullTxt() {
        return addressFullTxt;
    }

    public void setAddressFullTxt(String addressFullTxt) {
        this.addressFullTxt = addressFullTxt;
    }

    public Double getLatitudeNbr() {
        return latitudeNbr;
    }

    public void setLatitudeNbr(Double latitudeNbr) {
        this.latitudeNbr = latitudeNbr;
    }

    public Double getLongitudeNbr() {
        return longitudeNbr;
    }

    public void setLongitudeNbr(Double longitudeNbr) {
        this.longitudeNbr = longitudeNbr;
    }

    public Date getEffectiveDtm() {
        return effectiveDtm;
    }

    public void setEffectiveDtm(Date effectiveDtm) {
        this.effectiveDtm = effectiveDtm;
    }

    public Date getExpiryDtm() {
        return expiryDtm;
    }

    public void setExpiryDtm(Date expiryDtm) {
        this.expiryDtm = expiryDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Collection<SiteFacility> getSiteFacilityCollection() {
        return siteFacilityCollection;
    }

    public void setSiteFacilityCollection(Collection<SiteFacility> siteFacilityCollection) {
        this.siteFacilityCollection = siteFacilityCollection;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (rollupFacilityId != null ? rollupFacilityId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof RollupFacility)) {
            return false;
        }
        RollupFacility other = (RollupFacility) object;
        if ((this.rollupFacilityId == null && other.rollupFacilityId != null) || (this.rollupFacilityId != null && !this.rollupFacilityId.equals(other.rollupFacilityId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.RollupFacility[rollupFacilityId=" + rollupFacilityId + "]";
    }

    public String getDisplayTxt() {
        return locationNm + " - " + facilityNm;
    }
}
