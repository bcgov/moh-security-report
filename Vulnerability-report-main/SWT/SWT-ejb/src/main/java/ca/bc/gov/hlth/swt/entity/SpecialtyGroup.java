/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import java.io.Serializable;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_SPECIALTY_GROUP")
@NamedQueries({
    @NamedQuery(name = "SpecialtyGroup.findBySpecialtyGroupId", query = "SELECT s FROM SpecialtyGroup s WHERE s.specialtyGroupId = :specialtyGroupId"),
    @NamedQuery(name = "SpecialtyGroup.findBySpecialtyGroupNm", query = "SELECT s FROM SpecialtyGroup s WHERE s.specialtyGroupNm = :specialtyGroupNm"),
    @NamedQuery(name = "SpecialtyGroup.findBySortOrderNbr", query = "SELECT s FROM SpecialtyGroup s WHERE s.sortOrderNbr = :sortOrderNbr"),
    @NamedQuery(name = "SpecialtyGroup.findByEffectiveDtm", query = "SELECT s FROM SpecialtyGroup s WHERE s.effectiveDtm = :effectiveDtm"),
    @NamedQuery(name = "SpecialtyGroup.findByExpiryDtm", query = "SELECT s FROM SpecialtyGroup s WHERE s.expiryDtm = :expiryDtm"),
    @NamedQuery(name = "SpecialtyGroup.findByCreatedByNm", query = "SELECT s FROM SpecialtyGroup s WHERE s.createdByNm = :createdByNm"),
    @NamedQuery(name = "SpecialtyGroup.findByCreatedOnDtm", query = "SELECT s FROM SpecialtyGroup s WHERE s.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "SpecialtyGroup.findByLastModifiedByNm", query = "SELECT s FROM SpecialtyGroup s WHERE s.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "SpecialtyGroup.findByLastModifiedOnDtm", query = "SELECT s FROM SpecialtyGroup s WHERE s.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "SpecialtyGroup.findByStatelessTransactionNbr", query = "SELECT s FROM SpecialtyGroup s WHERE s.statelessTransactionNbr = :statelessTransactionNbr"),
    @NamedQuery(name = "SpecialtyGroup.findByCommentTxt", query = "SELECT s FROM SpecialtyGroup s WHERE s.commentTxt = :commentTxt")})
@SequenceGenerator(name = "SpecialtyGroupSeq", sequenceName = "SWT_SG_SEQ", allocationSize = 1, initialValue = 1)
public class SpecialtyGroup implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @Column(name = "SPECIALTY_GROUP_ID", nullable = false)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SpecialtyGroupSeq")
    private Long specialtyGroupId;
    @Column(name = "SPECIALTY_GROUP_NM", nullable = false)
    private String specialtyGroupNm;
    @Column(name = "SORT_ORDER_NBR")
    private Long sortOrderNbr;
    @Column(name = "EFFECTIVE_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date effectiveDtm;
    @Column(name = "EXPIRY_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date expiryDtm;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    @Version
    private long statelessTransactionNbr;
    @Column(name = "COMMENT_TXT")
    private String commentTxt;
    @OneToMany(mappedBy = "specialtyGroupId")
    private Collection<Specialty> specialtyCollection;

    public SpecialtyGroup() {
    }

    public SpecialtyGroup(Long specialtyGroupId) {
        this.specialtyGroupId = specialtyGroupId;
    }

    public SpecialtyGroup(Long specialtyGroupId, String specialtyGroupNm, Date effectiveDtm, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.specialtyGroupId = specialtyGroupId;
        this.specialtyGroupNm = specialtyGroupNm;
        this.effectiveDtm = effectiveDtm;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Long getSpecialtyGroupId() {
        return specialtyGroupId;
    }

    public void setSpecialtyGroupId(Long specialtyGroupId) {
        this.specialtyGroupId = specialtyGroupId;
    }

    public String getSpecialtyGroupNm() {
        return specialtyGroupNm;
    }

    public void setSpecialtyGroupNm(String specialtyGroupNm) {
        this.specialtyGroupNm = specialtyGroupNm;
    }

    public Long getSortOrderNbr() {
        return sortOrderNbr;
    }

    public void setSortOrderNbr(Long sortOrderNbr) {
        this.sortOrderNbr = sortOrderNbr;
    }

    public Date getEffectiveDtm() {
        return effectiveDtm;
    }

    public void setEffectiveDtm(Date effectiveDtm) {
        this.effectiveDtm = effectiveDtm;
    }

    public Date getExpiryDtm() {
        return expiryDtm;
    }

    public void setExpiryDtm(Date expiryDtm) {
        this.expiryDtm = expiryDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public String getCommentTxt() {
        return commentTxt;
    }

    public void setCommentTxt(String commentTxt) {
        this.commentTxt = commentTxt;
    }

    public Collection<Specialty> getSpecialtyCollection() {
        return specialtyCollection;
    }

    public void setSpecialtyCollection(Collection<Specialty> specialtyCollection) {
        this.specialtyCollection = specialtyCollection;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (specialtyGroupId != null ? specialtyGroupId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof SpecialtyGroup)) {
            return false;
        }
        SpecialtyGroup other = (SpecialtyGroup) object;
        if ((this.specialtyGroupId == null && other.specialtyGroupId != null) || (this.specialtyGroupId != null && !this.specialtyGroupId.equals(other.specialtyGroupId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.SpecialtyGroup[specialtyGroupId=" + specialtyGroupId + "]";
    }

}
