/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinColumns;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_SITE_STATISTIC")
@NamedQueries({
    @NamedQuery(name = "SiteStatistic.findBySiteStatisticId", query = "SELECT s FROM SiteStatistic s WHERE s.siteStatisticId = :siteStatisticId"),
    @NamedQuery(name = "SiteStatistic.findByPatientsWaitingNbr", query = "SELECT s FROM SiteStatistic s WHERE s.patientsWaitingNbr = :patientsWaitingNbr"),
    @NamedQuery(name = "SiteStatistic.findByProceduresPerformedNbr", query = "SELECT s FROM SiteStatistic s WHERE s.proceduresPerformedNbr = :proceduresPerformedNbr"),
    @NamedQuery(name = "SiteStatistic.findByFiftyPctWeeksNbr", query = "SELECT s FROM SiteStatistic s WHERE s.fiftyPctWeeksNbrWaitTwo = :fiftyPctWeeksNbr"),
    @NamedQuery(name = "SiteStatistic.findByNinetyPctWeeksNbr", query = "SELECT s FROM SiteStatistic s WHERE s.ninetyPctWeeksNbrWaitTwo = :ninetyPctWeeksNbr"),
    @NamedQuery(name = "SiteStatistic.findByCreatedByNm", query = "SELECT s FROM SiteStatistic s WHERE s.createdByNm = :createdByNm"),
    @NamedQuery(name = "SiteStatistic.findByCreatedOnDtm", query = "SELECT s FROM SiteStatistic s WHERE s.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "SiteStatistic.findByLastModifiedByNm", query = "SELECT s FROM SiteStatistic s WHERE s.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "SiteStatistic.findByLastModifiedOnDtm", query = "SELECT s FROM SiteStatistic s WHERE s.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "SiteStatistic.findByStatelessTransactionNbr", query = "SELECT s FROM SiteStatistic s WHERE s.statelessTransactionNbr = :statelessTransactionNbr")})
public class SiteStatistic implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @Column(name = "SITE_STATISTIC_ID", nullable = false)
    private Long siteStatisticId;
    @Column(name = "PATIENTS_WAITING_NBR")
    private Integer patientsWaitingNbr;
    @Column(name = "PROCEDURES_PERFORMED_NBR")
    private Integer proceduresPerformedNbr;
    @Column(name = "WT1_FIFTY_PCT_WEEKS_NBR")
    private BigDecimal fiftyPctWeeksNbrWaitOne;
    @Column(name = "WT1_NINETY_PCT_WEEKS_NBR")
    private BigDecimal ninetyPctWeeksNbrWaitOne;
    @Column(name = "WT2_FIFTY_PCT_WEEKS_NBR")
    private BigDecimal fiftyPctWeeksNbrWaitTwo;
    @Column(name = "WT2_NINETY_PCT_WEEKS_NBR")
    private BigDecimal ninetyPctWeeksNbrWaitTwo;
    @Column(name = "ADULT")
    private String adult;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    private long statelessTransactionNbr;
    @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID")
    @ManyToOne
    private Site siteId;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "ROLLUP_CANCER_SUSPECTED_ID", referencedColumnName = "ROLLUP_CANCER_SUSPECTED_ID"),
        @JoinColumn(name = "ADULT", referencedColumnName = "ADULT", insertable = false, updatable = false)})
    @ManyToOne
    private SiteCancerSuspected siteCancerSuspected;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "ROLLUP_ENCOUNTER_TYPE_ID", referencedColumnName = "ROLLUP_ENCOUNTER_TYPE_ID"),
        @JoinColumn(name = "ADULT", referencedColumnName = "ADULT", insertable = false, updatable = false)})
    @ManyToOne
    private SiteEncounterType siteEncounterType;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "ROLLUP_FACILITY_ID", referencedColumnName = "ROLLUP_FACILITY_ID"),
        @JoinColumn(name = "ADULT", referencedColumnName = "ADULT", insertable = false, updatable = false)})
    @ManyToOne
    private SiteFacility siteFacility;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "ROLLUP_HEALTH_AUTHORITY_ID", referencedColumnName = "ROLLUP_HEALTH_AUTHORITY_ID"),
        @JoinColumn(name = "ADULT", referencedColumnName = "ADULT", insertable = false, updatable = false)})
    @ManyToOne
    private SiteHealthAuthority siteHealthAuthority;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "ROLLUP_INTERVENTION_TYPE_ID", referencedColumnName = "ROLLUP_INTERVENTION_TYPE_ID")})
    @ManyToOne
    private SiteInterventionType siteInterventionType;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "ROLLUP_PRIORITY_ID", referencedColumnName = "ROLLUP_PRIORITY_ID")})
    @ManyToOne
    private SitePriority sitePriority;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "ROLLUP_PROCEDURE_GROUP_ID", referencedColumnName = "ROLLUP_PROCEDURE_GROUP_ID"),
        @JoinColumn(name = "ADULT", referencedColumnName = "ADULT", insertable = false, updatable = false)})
    @ManyToOne
    private SiteProcedureGroup siteProcedureGroup;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "ROLLUP_SPECIALTY_GROUP_ID", referencedColumnName = "ROLLUP_SPECIALTY_GROUP_ID"),
        @JoinColumn(name = "ADULT", referencedColumnName = "ADULT", insertable = false, updatable = false)})
    @ManyToOne
    private SiteSpecialtyGroup siteSpecialtyGroup;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "ROLLUP_SURGEON_ID", referencedColumnName = "ROLLUP_SURGEON_ID"),
        @JoinColumn(name = "ADULT", referencedColumnName = "ADULT", insertable = false, updatable = false)})
    @ManyToOne
    private SiteSurgeon siteSurgeon;

    public SiteStatistic() {
    }

    public SiteStatistic(Long siteStatisticId) {
        this.siteStatisticId = siteStatisticId;
    }

    public SiteStatistic(Long siteStatisticId, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr, String adult) {
        this.siteStatisticId = siteStatisticId;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
        this.adult = adult;
    }

    public Long getSiteStatisticId() {
        return siteStatisticId;
    }

    public void setSiteStatisticId(Long siteStatisticId) {
        this.siteStatisticId = siteStatisticId;
    }

    public Integer getPatientsWaitingNbr() {
        return patientsWaitingNbr;
    }

    public void setPatientsWaitingNbr(Integer patientsWaitingNbr) {
        this.patientsWaitingNbr = patientsWaitingNbr;
    }

    public Integer getProceduresPerformedNbr() {
        return proceduresPerformedNbr;
    }

    public void setProceduresPerformedNbr(Integer proceduresPerformedNbr) {
        this.proceduresPerformedNbr = proceduresPerformedNbr;
    }

    public BigDecimal getFiftyPctWeeksNbrForWaitOne() {
        return fiftyPctWeeksNbrWaitOne;
    }

    public void setFiftyPctWeeksNbrForWaitOne(BigDecimal fiftyPctWeeksNbrWaitOne) {
        this.fiftyPctWeeksNbrWaitOne = fiftyPctWeeksNbrWaitOne;
    }

    public BigDecimal getNinetyPctWeeksNbrForWaitOne() {
        return ninetyPctWeeksNbrWaitOne;
    }

    public void setNinetyPctWeeksNbrForWaitOne(BigDecimal ninetyPctWeeksNbrWaitOne) {
        this.ninetyPctWeeksNbrWaitOne = ninetyPctWeeksNbrWaitOne;
    }

    public BigDecimal getFiftyPctWeeksNbrForWaitTwo() {
        return fiftyPctWeeksNbrWaitTwo;
    }

    public void setFiftyPctWeeksNbrForWaitTwo(BigDecimal fiftyPctWeeksNbrWaitTwo) {
        this.fiftyPctWeeksNbrWaitTwo = fiftyPctWeeksNbrWaitTwo;
    }

    public BigDecimal getNinetyPctWeeksNbrForWaitTwo() {
        return ninetyPctWeeksNbrWaitTwo;
    }

    public void setNinetyPctWeeksNbrForWaitTwo(BigDecimal ninetyPctWeeksNbrWaitTwo) {
        this.ninetyPctWeeksNbrWaitTwo = ninetyPctWeeksNbrWaitTwo;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Site getSiteId() {
        return siteId;
    }

    public void setSiteId(Site siteId) {
        this.siteId = siteId;
    }

    public String getAdult() {
        return adult;
    }

    public void setAdult(String adult) {
        this.adult = adult;
    }

    public SiteCancerSuspected getSiteCancerSuspected() {
        return siteCancerSuspected;
    }

    public void setSiteCancerSuspected(SiteCancerSuspected siteCancerSuspected) {
        this.siteCancerSuspected = siteCancerSuspected;
    }

    public SiteEncounterType getSiteEncounterType() {
        return siteEncounterType;
    }

    public void setSiteEncounterType(SiteEncounterType siteEncounterType) {
        this.siteEncounterType = siteEncounterType;
    }

    public SiteFacility getSiteFacility() {
        return siteFacility;
    }

    public void setSiteFacility(SiteFacility siteFacility) {
        this.siteFacility = siteFacility;
    }

    public SiteHealthAuthority getSiteHealthAuthority() {
        return siteHealthAuthority;
    }

    public void setSiteHealthAuthority(SiteHealthAuthority siteHealthAuthority) {
        this.siteHealthAuthority = siteHealthAuthority;
    }

    public SiteInterventionType getSiteInterventionType() {
        return siteInterventionType;
    }

    public void setSiteInterventionType(SiteInterventionType siteInterventionType) {
        this.siteInterventionType = siteInterventionType;
    }

    public SitePriority getSitePriority() {
        return sitePriority;
    }

    public void setSitePriority(SitePriority sitePriority) {
        this.sitePriority = sitePriority;
    }

    public SiteProcedureGroup getSiteProcedureGroup() {
        return siteProcedureGroup;
    }

    public void setSiteProcedureGroup(SiteProcedureGroup siteProcedureGroup) {
        this.siteProcedureGroup = siteProcedureGroup;
    }

    public SiteSpecialtyGroup getSiteSpecialtyGroup() {
        return siteSpecialtyGroup;
    }

    public void setSiteSpecialtyGroup(SiteSpecialtyGroup siteSpecialtyGroup) {
        this.siteSpecialtyGroup = siteSpecialtyGroup;
    }

    public SiteSurgeon getSiteSurgeon() {
        return siteSurgeon;
    }

    public void setSiteSurgeon(SiteSurgeon siteSurgeon) {
        this.siteSurgeon = siteSurgeon;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (siteStatisticId != null ? siteStatisticId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof SiteStatistic)) {
            return false;
        }
        SiteStatistic other = (SiteStatistic) object;
        if ((this.siteStatisticId == null && other.siteStatisticId != null) || (this.siteStatisticId != null && !this.siteStatisticId.equals(other.siteStatisticId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.SiteStatistic[siteStatisticId=" + siteStatisticId + "]";
    }

}
