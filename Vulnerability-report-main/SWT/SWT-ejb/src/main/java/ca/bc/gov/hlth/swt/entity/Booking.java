/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinColumns;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Collection;
import java.util.Date;

/**
 *
 * @author greg.perkins
 */
@Entity
@Table(name = "SWT_BOOKING")
@NamedQueries({
    @NamedQuery(name = "Booking.findByBookingId", query = "SELECT b FROM Booking b WHERE b.bookingPK.bookingId = :bookingId"),
    @NamedQuery(name = "Booking.findBySiteId", query = "SELECT b FROM Booking b WHERE b.bookingPK.siteId = :siteId"),
    @NamedQuery(name = "Booking.findByBookingFormReceivedDt", query = "SELECT b FROM Booking b WHERE b.bookingFormReceivedDt = :bookingFormReceivedDt"),
    @NamedQuery(name = "Booking.findByPatientUnavailableRsn1Txt", query = "SELECT b FROM Booking b WHERE b.patientUnavailableRsn1Txt = :patientUnavailableRsn1Txt"),
    @NamedQuery(name = "Booking.findByPatientUnavailableStart1Dt", query = "SELECT b FROM Booking b WHERE b.patientUnavailableStart1Dt = :patientUnavailableStart1Dt"),
    @NamedQuery(name = "Booking.findByPatientUnavailableEnd1Dt", query = "SELECT b FROM Booking b WHERE b.patientUnavailableEnd1Dt = :patientUnavailableEnd1Dt"),
    @NamedQuery(name = "Booking.findByPatientUnavailableRsn2Txt", query = "SELECT b FROM Booking b WHERE b.patientUnavailableRsn2Txt = :patientUnavailableRsn2Txt"),
    @NamedQuery(name = "Booking.findByPatientUnavailableStart2Dt", query = "SELECT b FROM Booking b WHERE b.patientUnavailableStart2Dt = :patientUnavailableStart2Dt"),
    @NamedQuery(name = "Booking.findByPatientUnavailableEnd2Dt", query = "SELECT b FROM Booking b WHERE b.patientUnavailableEnd2Dt = :patientUnavailableEnd2Dt"),
    @NamedQuery(name = "Booking.findByPatientUnavailableRsn3Txt", query = "SELECT b FROM Booking b WHERE b.patientUnavailableRsn3Txt = :patientUnavailableRsn3Txt"),
    @NamedQuery(name = "Booking.findByPatientUnavailableStart3Dt", query = "SELECT b FROM Booking b WHERE b.patientUnavailableStart3Dt = :patientUnavailableStart3Dt"),
    @NamedQuery(name = "Booking.findByPatientUnavailableEnd3Dt", query = "SELECT b FROM Booking b WHERE b.patientUnavailableEnd3Dt = :patientUnavailableEnd3Dt"),
    @NamedQuery(name = "Booking.findByReferredToSurgeonDt", query = "SELECT b FROM Booking b WHERE b.referredToSurgeonDt = :referredToSurgeonDt"),
    @NamedQuery(name = "Booking.findByScheduledSurgeryDt", query = "SELECT b FROM Booking b WHERE b.scheduledSurgeryDt = :scheduledSurgeryDt"),
    @NamedQuery(name = "Booking.findByInitialSurgeonVisitDt", query = "SELECT b FROM Booking b WHERE b.initialSurgeonVisitDt = :initialSurgeonVisitDt"),
    @NamedQuery(name = "Booking.findByProvCancelRsnCd", query = "SELECT b FROM Booking b WHERE b.provCancelRsnCd = :provCancelRsnCd"),
    @NamedQuery(name = "Booking.findByCityNm", query = "SELECT b FROM Booking b WHERE b.cityNm = :cityNm"),
    @NamedQuery(name = "Booking.findBySurgeryDeferredDt", query = "SELECT b FROM Booking b WHERE b.surgeryDeferredDt = :surgeryDeferredDt"),
    @NamedQuery(name = "Booking.findByDiagnosisTxt", query = "SELECT b FROM Booking b WHERE b.diagnosisTxt = :diagnosisTxt"),
    @NamedQuery(name = "Booking.findByProvEncounterTypeCd", query = "SELECT b FROM Booking b WHERE b.provEncounterTypeCd = :provEncounterTypeCd"),
    @NamedQuery(name = "Booking.findByPostalCodeTxt", query = "SELECT b FROM Booking b WHERE b.postalCodeTxt = :postalCodeTxt"),
    @NamedQuery(name = "Booking.findByProvPostponeRsnCd", query = "SELECT b FROM Booking b WHERE b.provPostponeRsnCd = :provPostponeRsnCd"),
    @NamedQuery(name = "Booking.findByOrbsBookingIdNbr", query = "SELECT b FROM Booking b WHERE b.orbsBookingIdNbr = :orbsBookingIdNbr"),
    @NamedQuery(name = "Booking.findBySurgeonAlternativeId", query = "SELECT b FROM Booking b WHERE b.surgeonAlternativeId = :surgeonAlternativeId"),
    @NamedQuery(name = "Booking.findBySurgeryStatusDsc", query = "SELECT b FROM Booking b WHERE b.surgeryStatusDsc = :surgeryStatusDsc"),
    @NamedQuery(name = "Booking.findBySideDescriptionNbr", query = "SELECT b FROM Booking b WHERE b.sideDescriptionNbr = :sideDescriptionNbr"),
    @NamedQuery(name = "Booking.findBySideDescriptionScndry1Nbr", query = "SELECT b FROM Booking b WHERE b.sideDescriptionScndry1Nbr = :sideDescriptionScndry1Nbr"),
    @NamedQuery(name = "Booking.findBySideDescriptionScndry2Nbr", query = "SELECT b FROM Booking b WHERE b.sideDescriptionScndry2Nbr = :sideDescriptionScndry2Nbr"),
    @NamedQuery(name = "Booking.findBySideDescriptionScndry3Nbr", query = "SELECT b FROM Booking b WHERE b.sideDescriptionScndry3Nbr = :sideDescriptionScndry3Nbr"),
    @NamedQuery(name = "Booking.findByFacilityNm", query = "SELECT b FROM Booking b WHERE b.facilityNm = :facilityNm"),
    @NamedQuery(name = "Booking.findByProcedureDescriptionTxt", query = "SELECT b FROM Booking b WHERE b.procedureDescriptionTxt = :procedureDescriptionTxt"),
    @NamedQuery(name = "Booking.findByProcDescriptionScndry1Txt", query = "SELECT b FROM Booking b WHERE b.procDescriptionScndry1Txt = :procDescriptionScndry1Txt"),
    @NamedQuery(name = "Booking.findByProcDescriptionScndry2Txt", query = "SELECT b FROM Booking b WHERE b.procDescriptionScndry2Txt = :procDescriptionScndry2Txt"),
    @NamedQuery(name = "Booking.findByProcDescriptionScndry3Txt", query = "SELECT b FROM Booking b WHERE b.procDescriptionScndry3Txt = :procDescriptionScndry3Txt"),
    @NamedQuery(name = "Booking.findByHaCaseNumberTxt", query = "SELECT b FROM Booking b WHERE b.haCaseNumberTxt = :haCaseNumberTxt"),
    @NamedQuery(name = "Booking.findByHealthAuthorityNm", query = "SELECT b FROM Booking b WHERE b.healthAuthorityNm = :healthAuthorityNm"),
    @NamedQuery(name = "Booking.findByInactiveExplanationTxt", query = "SELECT b FROM Booking b WHERE b.inactiveExplanationTxt = :inactiveExplanationTxt"),
    @NamedQuery(name = "Booking.findBySurgicalCaseExplanationTxt", query = "SELECT b FROM Booking b WHERE b.surgicalCaseExplanationTxt = :surgicalCaseExplanationTxt"),
    @NamedQuery(name = "Booking.findBySurgeryInactiveDt", query = "SELECT b FROM Booking b WHERE b.surgeryInactiveDt = :surgeryInactiveDt"),
    @NamedQuery(name = "Booking.findByPrimaryProvProcedureId", query = "SELECT b FROM Booking b WHERE b.primaryProvProcedureId = :primaryProvProcedureId"),
    @NamedQuery(name = "Booking.findBySecondaryProvProcedure1Id", query = "SELECT b FROM Booking b WHERE b.secondaryProvProcedure1Id = :secondaryProvProcedure1Id"),
    @NamedQuery(name = "Booking.findBySecondaryProvProcedure2Id", query = "SELECT b FROM Booking b WHERE b.secondaryProvProcedure2Id = :secondaryProvProcedure2Id"),
    @NamedQuery(name = "Booking.findBySecondaryProvProcedure3Id", query = "SELECT b FROM Booking b WHERE b.secondaryProvProcedure3Id = :secondaryProvProcedure3Id"),
    @NamedQuery(name = "Booking.findBySprCreateDtm", query = "SELECT b FROM Booking b WHERE b.sprCreateDtm = :sprCreateDtm"),
    @NamedQuery(name = "Booking.findBySprModifiedByNm", query = "SELECT b FROM Booking b WHERE b.sprModifiedByNm = :sprModifiedByNm"),
    @NamedQuery(name = "Booking.findBySprModifiedOnDtm", query = "SELECT b FROM Booking b WHERE b.sprModifiedOnDtm = :sprModifiedOnDtm"),
    @NamedQuery(name = "Booking.findByCreatedByNm", query = "SELECT b FROM Booking b WHERE b.createdByNm = :createdByNm"),
    @NamedQuery(name = "Booking.findByCreatedOnDtm", query = "SELECT b FROM Booking b WHERE b.createdOnDtm = :createdOnDtm"),
    @NamedQuery(name = "Booking.findByLastModifiedByNm", query = "SELECT b FROM Booking b WHERE b.lastModifiedByNm = :lastModifiedByNm"),
    @NamedQuery(name = "Booking.findByLastModifiedOnDtm", query = "SELECT b FROM Booking b WHERE b.lastModifiedOnDtm = :lastModifiedOnDtm"),
    @NamedQuery(name = "Booking.findByStatelessTransactionNbr", query = "SELECT b FROM Booking b WHERE b.statelessTransactionNbr = :statelessTransactionNbr")})
public class Booking implements Serializable {

    private static final long serialVersionUID = 1L;
    @EmbeddedId
    protected BookingPK bookingPK;
    @Column(name = "BOOKING_FORM_RECEIVED_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date bookingFormReceivedDt;
    @Column(name = "PATIENT_UNAVAILABLE_RSN1_TXT")
    private String patientUnavailableRsn1Txt;
    @Column(name = "PATIENT_UNAVAILABLE_START1_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date patientUnavailableStart1Dt;
    @Column(name = "PATIENT_UNAVAILABLE_END1_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date patientUnavailableEnd1Dt;
    @Column(name = "PATIENT_UNAVAILABLE_RSN2_TXT")
    private String patientUnavailableRsn2Txt;
    @Column(name = "PATIENT_UNAVAILABLE_START2_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date patientUnavailableStart2Dt;
    @Column(name = "PATIENT_UNAVAILABLE_END2_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date patientUnavailableEnd2Dt;
    @Column(name = "PATIENT_UNAVAILABLE_RSN3_TXT")
    private String patientUnavailableRsn3Txt;
    @Column(name = "PATIENT_UNAVAILABLE_START3_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date patientUnavailableStart3Dt;
    @Column(name = "PATIENT_UNAVAILABLE_END3_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date patientUnavailableEnd3Dt;
    @Column(name = "REFERRED_TO_SURGEON_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date referredToSurgeonDt;
    @Column(name = "SCHEDULED_SURGERY_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date scheduledSurgeryDt;
    @Column(name = "INITIAL_SURGEON_VISIT_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date initialSurgeonVisitDt;
    @Column(name = "PROV_CANCEL_RSN_CD")
    private String provCancelRsnCd;
    @Column(name = "CITY_NM")
    private String cityNm;
    @Column(name = "SURGERY_DEFERRED_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date surgeryDeferredDt;
    @Column(name = "DIAGNOSIS_TXT")
    private String diagnosisTxt;
    @Column(name = "PROV_ENCOUNTER_TYPE_CD")
    private String provEncounterTypeCd;
    @Column(name = "POSTAL_CODE_TXT")
    private String postalCodeTxt;
    @Column(name = "PROV_POSTPONE_RSN_CD")
    private String provPostponeRsnCd;
    @Column(name = "ORBS_BOOKING_ID_NBR")
    private Long orbsBookingIdNbr;
    @Size(max = 10)
    @Column(name = "SURGEON_ALTERNATIVE_ID")
    private String surgeonAlternativeId;
    @Column(name = "SURGERY_STATUS_DSC")
    private String surgeryStatusDsc;
    @Column(name = "SIDE_DESCRIPTION_NBR")
    private Short sideDescriptionNbr;
    @Column(name = "SIDE_DESCRIPTION_SCNDRY1_NBR")
    private Short sideDescriptionScndry1Nbr;
    @Column(name = "SIDE_DESCRIPTION_SCNDRY2_NBR")
    private Short sideDescriptionScndry2Nbr;
    @Column(name = "SIDE_DESCRIPTION_SCNDRY3_NBR")
    private Short sideDescriptionScndry3Nbr;
    @Column(name = "FACILITY_NM", nullable = false)
    private String facilityNm;
    @Column(name = "PROCEDURE_DESCRIPTION_TXT")
    private String procedureDescriptionTxt;
    @Column(name = "PROC_DESCRIPTION_SCNDRY1_TXT")
    private String procDescriptionScndry1Txt;
    @Column(name = "PROC_DESCRIPTION_SCNDRY2_TXT")
    private String procDescriptionScndry2Txt;
    @Column(name = "PROC_DESCRIPTION_SCNDRY3_TXT")
    private String procDescriptionScndry3Txt;
    @Column(name = "HA_CASE_NUMBER_TXT")
    private String haCaseNumberTxt;
    @Column(name = "HEALTH_AUTHORITY_NM", nullable = false)
    private String healthAuthorityNm;
    @Column(name = "INACTIVE_EXPLANATION_TXT")
    private String inactiveExplanationTxt;
    @Column(name = "SURGICAL_CASE_EXPLANATION_TXT")
    private String surgicalCaseExplanationTxt;
    @Column(name = "SURGERY_INACTIVE_DT")
    @Temporal(TemporalType.TIMESTAMP)
    private Date surgeryInactiveDt;
    @Column(name = "PRIMARY_PROV_PROCEDURE_ID", nullable = false)
    private String primaryProvProcedureId;
    @Column(name = "SECONDARY_PROV_PROCEDURE1_ID")
    private String secondaryProvProcedure1Id;
    @Column(name = "SECONDARY_PROV_PROCEDURE2_ID")
    private String secondaryProvProcedure2Id;
    @Column(name = "SECONDARY_PROV_PROCEDURE3_ID")
    private String secondaryProvProcedure3Id;
    @Column(name = "SPR_CREATE_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date sprCreateDtm;
    @Column(name = "SPR_MODIFIED_BY_NM")
    private String sprModifiedByNm;
    @Column(name = "SPR_MODIFIED_ON_DTM")
    @Temporal(TemporalType.TIMESTAMP)
    private Date sprModifiedOnDtm;
    @Column(name = "CREATED_BY_NM", nullable = false)
    private String createdByNm;
    @Column(name = "CREATED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdOnDtm;
    @Column(name = "LAST_MODIFIED_BY_NM", nullable = false)
    private String lastModifiedByNm;
    @Column(name = "LAST_MODIFIED_ON_DTM", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedOnDtm;
    @Column(name = "STATELESS_TRANSACTION_NBR", nullable = false)
    private long statelessTransactionNbr;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "booking")
    private Collection<PostOperation> postOperationCollection;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "ASSESSMENT_ID", referencedColumnName = "ASSESSMENT_ID")})
    @ManyToOne
    private AssessmentTool assessmentTool;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "CANCEL_RSN_LIST_ID", referencedColumnName = "CANCEL_RSN_LIST_ID"),
        @JoinColumn(name = "HA_CANCEL_RSN_CD", referencedColumnName = "HA_CANCEL_RSN_CD")})
    @ManyToOne
    private CancellationReason cancellationReason;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "ENCOUNTER_TYPE_LIST_ID", referencedColumnName = "ENCOUNTER_TYPE_LIST_ID"),
        @JoinColumn(name = "HA_ENCOUNTER_TYPE_CD", referencedColumnName = "HA_ENCOUNTER_TYPE_CD")})
    @ManyToOne
    private EncounterType encounterType;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "FACILITY_ID", referencedColumnName = "FACILITY_ID")})
    @ManyToOne
    private Facility facility;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "PERSONAL_HEALTH_NBR", referencedColumnName = "PERSONAL_HEALTH_NBR"),
        @JoinColumn(name = "HEALTH_AUTHORITY_ID", referencedColumnName = "HEALTH_AUTHORITY_ID", insertable = false, updatable = false)})
    @ManyToOne
    private Patient patient;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "POSTPONE_REASON_LIST_ID", referencedColumnName = "POSTPONE_REASON_LIST_ID", insertable = false, updatable = false),
        @JoinColumn(name = "HA_POSTPONE_REASON_CD", referencedColumnName = "HA_POSTPONE_REASON_CD")})
    @ManyToOne
    private PostponementReason postponementReason;
    @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false)
    @ManyToOne
    private Site site;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "PROCEDURE_LIST_ID", referencedColumnName = "PROCEDURE_LIST_ID", insertable = false, updatable = false),
        @JoinColumn(name = "PRIMARY_HA_PROCEDURE_CD", referencedColumnName = "HA_PROCEDURE_CD")})
    @ManyToOne
    private SprProcedure sprProcedure;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "PROCEDURE_LIST_ID", referencedColumnName = "PROCEDURE_LIST_ID", insertable = false, updatable = false),
        @JoinColumn(name = "SECONDARY_HA_PROCEDURE2_CD", referencedColumnName = "HA_PROCEDURE_CD")})
    @ManyToOne
    private SprProcedure sprProcedure1;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "PROCEDURE_LIST_ID", referencedColumnName = "PROCEDURE_LIST_ID", insertable = false, updatable = false),
        @JoinColumn(name = "SECONDARY_HA_PROCEDURE3_CD", referencedColumnName = "HA_PROCEDURE_CD")})
    @ManyToOne
    private SprProcedure sprProcedure2;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "PROCEDURE_LIST_ID", referencedColumnName = "PROCEDURE_LIST_ID", insertable = false, updatable = false),
        @JoinColumn(name = "SECONDARY_HA_PROCEDURE1_CD", referencedColumnName = "HA_PROCEDURE_CD")})
    @ManyToOne
    private SprProcedure sprProcedure3;
    @JoinColumns({
        @JoinColumn(name = "SITE_ID", referencedColumnName = "SITE_ID", insertable = false, updatable = false),
        @JoinColumn(name = "SURGEON_COLLEGE_ID", referencedColumnName = "SURGEON_COLLEGE_ID"),
        @JoinColumn(name = "HEALTH_AUTHORITY_ID", referencedColumnName = "HEALTH_AUTHORITY_ID")})
    @ManyToOne
    private Surgeon surgeon;

    public Booking() {
    }

    public Booking(BookingPK bookingPK) {
        this.bookingPK = bookingPK;
    }

    public Booking(BookingPK bookingPK, String facilityNm, String healthAuthorityNm, String primaryProvProcedureId, String createdByNm, Date createdOnDtm, String lastModifiedByNm, Date lastModifiedOnDtm, long statelessTransactionNbr) {
        this.bookingPK = bookingPK;
        this.facilityNm = facilityNm;
        this.healthAuthorityNm = healthAuthorityNm;
        this.primaryProvProcedureId = primaryProvProcedureId;
        this.createdByNm = createdByNm;
        this.createdOnDtm = createdOnDtm;
        this.lastModifiedByNm = lastModifiedByNm;
        this.lastModifiedOnDtm = lastModifiedOnDtm;
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Booking(long bookingId, long siteId) {
        this.bookingPK = new BookingPK(bookingId, siteId);
    }

    public BookingPK getBookingPK() {
        return bookingPK;
    }

    public void setBookingPK(BookingPK bookingPK) {
        this.bookingPK = bookingPK;
    }

    public Date getBookingFormReceivedDt() {
        return bookingFormReceivedDt;
    }

    public void setBookingFormReceivedDt(Date bookingFormReceivedDt) {
        this.bookingFormReceivedDt = bookingFormReceivedDt;
    }

    public String getPatientUnavailableRsn1Txt() {
        return patientUnavailableRsn1Txt;
    }

    public void setPatientUnavailableRsn1Txt(String patientUnavailableRsn1Txt) {
        this.patientUnavailableRsn1Txt = patientUnavailableRsn1Txt;
    }

    public Date getPatientUnavailableStart1Dt() {
        return patientUnavailableStart1Dt;
    }

    public void setPatientUnavailableStart1Dt(Date patientUnavailableStart1Dt) {
        this.patientUnavailableStart1Dt = patientUnavailableStart1Dt;
    }

    public Date getPatientUnavailableEnd1Dt() {
        return patientUnavailableEnd1Dt;
    }

    public void setPatientUnavailableEnd1Dt(Date patientUnavailableEnd1Dt) {
        this.patientUnavailableEnd1Dt = patientUnavailableEnd1Dt;
    }

    public String getPatientUnavailableRsn2Txt() {
        return patientUnavailableRsn2Txt;
    }

    public void setPatientUnavailableRsn2Txt(String patientUnavailableRsn2Txt) {
        this.patientUnavailableRsn2Txt = patientUnavailableRsn2Txt;
    }

    public Date getPatientUnavailableStart2Dt() {
        return patientUnavailableStart2Dt;
    }

    public void setPatientUnavailableStart2Dt(Date patientUnavailableStart2Dt) {
        this.patientUnavailableStart2Dt = patientUnavailableStart2Dt;
    }

    public Date getPatientUnavailableEnd2Dt() {
        return patientUnavailableEnd2Dt;
    }

    public void setPatientUnavailableEnd2Dt(Date patientUnavailableEnd2Dt) {
        this.patientUnavailableEnd2Dt = patientUnavailableEnd2Dt;
    }

    public String getPatientUnavailableRsn3Txt() {
        return patientUnavailableRsn3Txt;
    }

    public void setPatientUnavailableRsn3Txt(String patientUnavailableRsn3Txt) {
        this.patientUnavailableRsn3Txt = patientUnavailableRsn3Txt;
    }

    public Date getPatientUnavailableStart3Dt() {
        return patientUnavailableStart3Dt;
    }

    public void setPatientUnavailableStart3Dt(Date patientUnavailableStart3Dt) {
        this.patientUnavailableStart3Dt = patientUnavailableStart3Dt;
    }

    public Date getPatientUnavailableEnd3Dt() {
        return patientUnavailableEnd3Dt;
    }

    public void setPatientUnavailableEnd3Dt(Date patientUnavailableEnd3Dt) {
        this.patientUnavailableEnd3Dt = patientUnavailableEnd3Dt;
    }

    public Date getReferredToSurgeonDt() {
        return referredToSurgeonDt;
    }

    public void setReferredToSurgeonDt(Date referredToSurgeonDt) {
        this.referredToSurgeonDt = referredToSurgeonDt;
    }

    public Date getScheduledSurgeryDt() {
        return scheduledSurgeryDt;
    }

    public void setScheduledSurgeryDt(Date scheduledSurgeryDt) {
        this.scheduledSurgeryDt = scheduledSurgeryDt;
    }

    public Date getInitialSurgeonVisitDt() {
        return initialSurgeonVisitDt;
    }

    public void setInitialSurgeonVisitDt(Date initialSurgeonVisitDt) {
        this.initialSurgeonVisitDt = initialSurgeonVisitDt;
    }

    public String getProvCancelRsnCd() {
        return provCancelRsnCd;
    }

    public void setProvCancelRsnCd(String provCancelRsnCd) {
        this.provCancelRsnCd = provCancelRsnCd;
    }

    public String getCityNm() {
        return cityNm;
    }

    public void setCityNm(String cityNm) {
        this.cityNm = cityNm;
    }

    public Date getSurgeryDeferredDt() {
        return surgeryDeferredDt;
    }

    public void setSurgeryDeferredDt(Date surgeryDeferredDt) {
        this.surgeryDeferredDt = surgeryDeferredDt;
    }

    public String getDiagnosisTxt() {
        return diagnosisTxt;
    }

    public void setDiagnosisTxt(String diagnosisTxt) {
        this.diagnosisTxt = diagnosisTxt;
    }

    public String getProvEncounterTypeCd() {
        return provEncounterTypeCd;
    }

    public void setProvEncounterTypeCd(String provEncounterTypeCd) {
        this.provEncounterTypeCd = provEncounterTypeCd;
    }

    public String getPostalCodeTxt() {
        return postalCodeTxt;
    }

    public void setPostalCodeTxt(String postalCodeTxt) {
        this.postalCodeTxt = postalCodeTxt;
    }

    public String getProvPostponeRsnCd() {
        return provPostponeRsnCd;
    }

    public void setProvPostponeRsnCd(String provPostponeRsnCd) {
        this.provPostponeRsnCd = provPostponeRsnCd;
    }

    public Long getOrbsBookingIdNbr() {
        return orbsBookingIdNbr;
    }

    public void setOrbsBookingIdNbr(Long orbsBookingIdNbr) {
        this.orbsBookingIdNbr = orbsBookingIdNbr;
    }

    public String getSurgeonAlternativeId() {
        return surgeonAlternativeId;
    }

    public void setSurgeonAlternativeId(String surgeonAlternativeId) {
        this.surgeonAlternativeId = surgeonAlternativeId;
    }

    public String getSurgeryStatusDsc() {
        return surgeryStatusDsc;
    }

    public void setSurgeryStatusDsc(String surgeryStatusDsc) {
        this.surgeryStatusDsc = surgeryStatusDsc;
    }

    public Short getSideDescriptionNbr() {
        return sideDescriptionNbr;
    }

    public void setSideDescriptionNbr(Short sideDescriptionNbr) {
        this.sideDescriptionNbr = sideDescriptionNbr;
    }

    public Short getSideDescriptionScndry1Nbr() {
        return sideDescriptionScndry1Nbr;
    }

    public void setSideDescriptionScndry1Nbr(Short sideDescriptionScndry1Nbr) {
        this.sideDescriptionScndry1Nbr = sideDescriptionScndry1Nbr;
    }

    public Short getSideDescriptionScndry2Nbr() {
        return sideDescriptionScndry2Nbr;
    }

    public void setSideDescriptionScndry2Nbr(Short sideDescriptionScndry2Nbr) {
        this.sideDescriptionScndry2Nbr = sideDescriptionScndry2Nbr;
    }

    public Short getSideDescriptionScndry3Nbr() {
        return sideDescriptionScndry3Nbr;
    }

    public void setSideDescriptionScndry3Nbr(Short sideDescriptionScndry3Nbr) {
        this.sideDescriptionScndry3Nbr = sideDescriptionScndry3Nbr;
    }

    public String getFacilityNm() {
        return facilityNm;
    }

    public void setFacilityNm(String facilityNm) {
        this.facilityNm = facilityNm;
    }

    public String getProcedureDescriptionTxt() {
        return procedureDescriptionTxt;
    }

    public void setProcedureDescriptionTxt(String procedureDescriptionTxt) {
        this.procedureDescriptionTxt = procedureDescriptionTxt;
    }

    public String getProcDescriptionScndry1Txt() {
        return procDescriptionScndry1Txt;
    }

    public void setProcDescriptionScndry1Txt(String procDescriptionScndry1Txt) {
        this.procDescriptionScndry1Txt = procDescriptionScndry1Txt;
    }

    public String getProcDescriptionScndry2Txt() {
        return procDescriptionScndry2Txt;
    }

    public void setProcDescriptionScndry2Txt(String procDescriptionScndry2Txt) {
        this.procDescriptionScndry2Txt = procDescriptionScndry2Txt;
    }

    public String getProcDescriptionScndry3Txt() {
        return procDescriptionScndry3Txt;
    }

    public void setProcDescriptionScndry3Txt(String procDescriptionScndry3Txt) {
        this.procDescriptionScndry3Txt = procDescriptionScndry3Txt;
    }

    public String getHaCaseNumberTxt() {
        return haCaseNumberTxt;
    }

    public void setHaCaseNumberTxt(String haCaseNumberTxt) {
        this.haCaseNumberTxt = haCaseNumberTxt;
    }

    public String getHealthAuthorityNm() {
        return healthAuthorityNm;
    }

    public void setHealthAuthorityNm(String healthAuthorityNm) {
        this.healthAuthorityNm = healthAuthorityNm;
    }

    public String getInactiveExplanationTxt() {
        return inactiveExplanationTxt;
    }

    public void setInactiveExplanationTxt(String inactiveExplanationTxt) {
        this.inactiveExplanationTxt = inactiveExplanationTxt;
    }

    public String getSurgicalCaseExplanationTxt() {
        return surgicalCaseExplanationTxt;
    }

    public void setSurgicalCaseExplanationTxt(String surgicalCaseExplanationTxt) {
        this.surgicalCaseExplanationTxt = surgicalCaseExplanationTxt;
    }

    public Date getSurgeryInactiveDt() {
        return surgeryInactiveDt;
    }

    public void setSurgeryInactiveDt(Date surgeryInactiveDt) {
        this.surgeryInactiveDt = surgeryInactiveDt;
    }

    public String getPrimaryProvProcedureId() {
        return primaryProvProcedureId;
    }

    public void setPrimaryProvProcedureId(String primaryProvProcedureId) {
        this.primaryProvProcedureId = primaryProvProcedureId;
    }

    public String getSecondaryProvProcedure1Id() {
        return secondaryProvProcedure1Id;
    }

    public void setSecondaryProvProcedure1Id(String secondaryProvProcedure1Id) {
        this.secondaryProvProcedure1Id = secondaryProvProcedure1Id;
    }

    public String getSecondaryProvProcedure2Id() {
        return secondaryProvProcedure2Id;
    }

    public void setSecondaryProvProcedure2Id(String secondaryProvProcedure2Id) {
        this.secondaryProvProcedure2Id = secondaryProvProcedure2Id;
    }

    public String getSecondaryProvProcedure3Id() {
        return secondaryProvProcedure3Id;
    }

    public void setSecondaryProvProcedure3Id(String secondaryProvProcedure3Id) {
        this.secondaryProvProcedure3Id = secondaryProvProcedure3Id;
    }

    public Date getSprCreateDtm() {
        return sprCreateDtm;
    }

    public void setSprCreateDtm(Date sprCreateDtm) {
        this.sprCreateDtm = sprCreateDtm;
    }

    public String getSprModifiedByNm() {
        return sprModifiedByNm;
    }

    public void setSprModifiedByNm(String sprModifiedByNm) {
        this.sprModifiedByNm = sprModifiedByNm;
    }

    public Date getSprModifiedOnDtm() {
        return sprModifiedOnDtm;
    }

    public void setSprModifiedOnDtm(Date sprModifiedOnDtm) {
        this.sprModifiedOnDtm = sprModifiedOnDtm;
    }

    public String getCreatedByNm() {
        return createdByNm;
    }

    public void setCreatedByNm(String createdByNm) {
        this.createdByNm = createdByNm;
    }

    public Date getCreatedOnDtm() {
        return createdOnDtm;
    }

    public void setCreatedOnDtm(Date createdOnDtm) {
        this.createdOnDtm = createdOnDtm;
    }

    public String getLastModifiedByNm() {
        return lastModifiedByNm;
    }

    public void setLastModifiedByNm(String lastModifiedByNm) {
        this.lastModifiedByNm = lastModifiedByNm;
    }

    public Date getLastModifiedOnDtm() {
        return lastModifiedOnDtm;
    }

    public void setLastModifiedOnDtm(Date lastModifiedOnDtm) {
        this.lastModifiedOnDtm = lastModifiedOnDtm;
    }

    public long getStatelessTransactionNbr() {
        return statelessTransactionNbr;
    }

    public void setStatelessTransactionNbr(long statelessTransactionNbr) {
        this.statelessTransactionNbr = statelessTransactionNbr;
    }

    public Collection<PostOperation> getPostOperationCollection() {
        return postOperationCollection;
    }

    public void setPostOperationCollection(Collection<PostOperation> postOperationCollection) {
        this.postOperationCollection = postOperationCollection;
    }

    public AssessmentTool getAssessmentTool() {
        return assessmentTool;
    }

    public void setAssessmentTool(AssessmentTool assessmentTool) {
        this.assessmentTool = assessmentTool;
    }

    public CancellationReason getCancellationReason() {
        return cancellationReason;
    }

    public void setCancellationReason(CancellationReason cancellationReason) {
        this.cancellationReason = cancellationReason;
    }

    public EncounterType getEncounterType() {
        return encounterType;
    }

    public void setEncounterType(EncounterType encounterType) {
        this.encounterType = encounterType;
    }

    public Facility getFacility() {
        return facility;
    }

    public void setFacility(Facility facility) {
        this.facility = facility;
    }

    public Patient getPatient() {
        return patient;
    }

    public void setPatient(Patient patient) {
        this.patient = patient;
    }

    public PostponementReason getPostponementReason() {
        return postponementReason;
    }

    public void setPostponementReason(PostponementReason postponementReason) {
        this.postponementReason = postponementReason;
    }

    public Site getSite() {
        return site;
    }

    public void setSite(Site site) {
        this.site = site;
    }

    public SprProcedure getSprProcedure() {
        return sprProcedure;
    }

    public void setSprProcedure(SprProcedure sprProcedure) {
        this.sprProcedure = sprProcedure;
    }

    public SprProcedure getSprProcedure1() {
        return sprProcedure1;
    }

    public void setSprProcedure1(SprProcedure sprProcedure1) {
        this.sprProcedure1 = sprProcedure1;
    }

    public SprProcedure getSprProcedure2() {
        return sprProcedure2;
    }

    public void setSprProcedure2(SprProcedure sprProcedure2) {
        this.sprProcedure2 = sprProcedure2;
    }

    public SprProcedure getSprProcedure3() {
        return sprProcedure3;
    }

    public void setSprProcedure3(SprProcedure sprProcedure3) {
        this.sprProcedure3 = sprProcedure3;
    }

    public Surgeon getSurgeon() {
        return surgeon;
    }

    public void setSurgeon(Surgeon surgeon) {
        this.surgeon = surgeon;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (bookingPK != null ? bookingPK.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Booking)) {
            return false;
        }
        Booking other = (Booking) object;
        if ((this.bookingPK == null && other.bookingPK != null) || (this.bookingPK != null && !this.bookingPK.equals(other.bookingPK))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.swt.entity.Booking[bookingPK=" + bookingPK + "]";
    }

}
