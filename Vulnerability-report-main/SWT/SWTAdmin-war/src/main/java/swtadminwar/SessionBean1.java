/*
 * SessionBean1.java
 *
 * Created on Oct 29, 2008, 2:01:45 PM
 */
package swtadminwar;

import jakarta.enterprise.context.SessionScoped;
import jakarta.faces.context.FacesContext;
import jakarta.inject.Named;
import jakarta.servlet.http.HttpServletRequest;
import java.io.Serializable;

/**
 * <p>Session scope data bean for your application. Create properties here to represent cached data that should be made
 * available across multiple HTTP requests for an individual user.</p>
 *
 * <p>An instance of this class will be created for you automatically, the first time your application evaluates a value
 * binding expression or method binding expression that references a managed bean using this class.</p>
 *
 * @author greg.perkins
 */
@SessionScoped
@Named
public class SessionBean1 implements Serializable {

    private static final long serialVersionUID = 1L;

    //   private Option[] availableSPR;
    private String[] selectedSPR;

    /**
     * <p>Construct a new session data bean instance.</p>
     */
    public SessionBean1() {
    }

//    /**
//     * <p>Return a reference to the scoped data bean.</p>
//     *
//     * @return reference to the scoped data bean
//     */
//    protected ApplicationBean1 getApplicationBean1() {
//        return (ApplicationBean1) getBean("ApplicationBean1");
//    }
//    public Option[] getAvailableSPR() {
//        return availableSPR;
//    }
//
//    public void setAvailableSPR(Option[] availableSPR) {
//        this.availableSPR = availableSPR;
//    }
    public String[] getSelectedSPR() {
        return selectedSPR;
    }

    public void setSelectedSPR(String[] selectedSPR) {
        this.selectedSPR = selectedSPR;
    }

    public String getServerName() {
        return ((HttpServletRequest) FacesContext.getCurrentInstance().getExternalContext().getRequest()).getServerName();
    }

}
