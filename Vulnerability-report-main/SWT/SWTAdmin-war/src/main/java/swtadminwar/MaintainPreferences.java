/*
 * MaintainPreferences.java
 *
 * Created on Nov 19, 2008, 2:25:43 PM
 */
package swtadminwar;

import ca.bc.gov.hlth.swt.session.SiteFacadeLocal;
import jakarta.annotation.PostConstruct;
import jakarta.ejb.EJB;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.context.FacesContext;
import jakarta.faces.event.ValueChangeEvent;
import jakarta.faces.model.SelectItem;
import jakarta.faces.view.ViewScoped;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import java.io.Serializable;
import java.util.List;
import swtadminwar.businessdelegate.MaintainSitesDelegate;

/**
 * This class maintains site preferences.
 *
 * @author Kuan.Fan
 */
@ViewScoped
@Named("MaintainPreferences")
public class MaintainPreferences implements Serializable {

    private static final String DEFAULT_SELECTEDSITE_ID = "-1";
    private static final String PREFERENCE_NAME_1 = "Show_Number_of_Procedures_Completed_on_pages_containing_Specialist_data";

    private String selectedSiteId;
    private List<SelectItem> siteOptions;
    private String preference1PreferenceId;
    private boolean preference1Checked;

    @EJB
    private SiteFacadeLocal siteFacade;

    private boolean editable = false;

    @Inject
    private MaintainSitesDelegate maintainSitesDelegate;

    public boolean isEditable() {
        return editable;
    }

    public void setEditable(boolean editable) {
        this.editable = editable;
    }

    /**
     * <p>Construct a new Page bean instance.</p>
     */
    public MaintainPreferences() {
    }

    @PostConstruct
    public void init() {
        this.selectedSiteId = DEFAULT_SELECTEDSITE_ID;
        this.siteOptions = this.maintainSitesDelegate.getAllSiteOptions();
        String defaultSiteId = (String) ((SelectItem) this.siteOptions.get(0)).getValue();
        this.reloadSitePreferences(defaultSiteId);
    }

    /**
     * Reload the preferences.
     *
     * @param siteId String the site id.
     */
    private void reloadSitePreferences(String siteId) {
        this.preference1PreferenceId = this.maintainSitesDelegate.getSitePreferenceId(siteId, PREFERENCE_NAME_1);
        if (preference1PreferenceId == null) {
            this.preference1Checked = false;
        } else {
            String tmpReference1Value = this.maintainSitesDelegate.getSitePreferenceValue(siteId, PREFERENCE_NAME_1);
            if (tmpReference1Value != null && tmpReference1Value.equalsIgnoreCase("Y")) {
                this.preference1Checked = true;
            } else {
                this.preference1Checked = false;
            }
        }
        if (siteId != null && !siteId.equals("")) {
            editable = !"Y".equals(siteFacade.find(Long.parseLong(siteId)).getPublishedYn());
        } else {
            editable = false;
        }
    }

    /**
     * This method is activated by changing site event.
     *
     * @param vce ValueChangeEvent the value change event
     */
    public void changeSiteAction(ValueChangeEvent vce) {
        String newSiteId = vce.getNewValue().toString();
        this.reloadSitePreferences(newSiteId);
    }

    /**
     * This method is activated when user clicks the save button. It save the site preferences to database.
     *
     * @return String navigation string
     */
    public String saveAction() {
        if (preference1PreferenceId != null) {
            String tmpPreference1Str = null;
            if (this.preference1Checked) {
                tmpPreference1Str = "Y";
            } else {
                tmpPreference1Str = "N";
            }
            this.maintainSitesDelegate.saveSitePreferences(this.preference1PreferenceId, tmpPreference1Str);
        }
        FacesContext.getCurrentInstance().addMessage(null, new FacesMessage("Save Successful"));
        return null;
    }

    /**
     * This method is activated when user clicks the clear button. It resets the page components back to the initial
     * status.
     *
     * @return String navigation string
     */
    public String clearAction() {
        this.reloadSitePreferences(this.selectedSiteId);
        return null;
    }

    public boolean isPreference1Checked() {
        return preference1Checked;
    }

    public void setPreference1Checked(boolean preference1Checked) {
        this.preference1Checked = preference1Checked;
    }

    public String getPreference1PreferenceId() {
        return preference1PreferenceId;
    }

    public void setPreference1PreferenceId(String preference1PreferenceId) {
        this.preference1PreferenceId = preference1PreferenceId;
    }

    public String getSelectedSiteId() {
        return selectedSiteId;
    }

    public void setSelectedSiteId(String selectedSiteId) {
        this.selectedSiteId = selectedSiteId;
    }

    public List<SelectItem> getSiteOptions() {
        return siteOptions;
    }

    public void setSiteOptions(List<SelectItem> siteOptions) {
        this.siteOptions = siteOptions;
    }

    public MaintainSitesDelegate getMaintainSitesDelegate() {
        return maintainSitesDelegate;
    }

    public void setMaintainSitesDelegate(MaintainSitesDelegate maintainSitesDelegate) {
        this.maintainSitesDelegate = maintainSitesDelegate;
    }
}
