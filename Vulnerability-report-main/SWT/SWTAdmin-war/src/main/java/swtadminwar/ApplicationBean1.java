/*
 * ApplicationBean1.java
 *
 * Created on Oct 29, 2008, 2:01:45 PM
 */

package swtadminwar;

import ca.bc.gov.health.auth.jsf.converter.YesNoBooleanConverter;
import jakarta.annotation.PostConstruct;
import jakarta.enterprise.context.ApplicationScoped;
import jakarta.faces.convert.DateTimeConverter;
import jakarta.inject.Named;

/**
 * <p>Application scope data bean for your application.  Create properties
 *  here to represent cached data that should be made available to all users
 *  and pages in the application.</p>
 *
 * <p>An instance of this class will be created for you automatically,
 * the first time your application evaluates a value binding expression
 * or method binding expression that references a managed bean using
 * this class.</p>
 *
 * @author greg.perkins
 */
@ApplicationScoped
@Named("ApplicationBean1")
public class ApplicationBean1 {

    private DateTimeConverter dateConverter;
    private YesNoBooleanConverter booleanConverter;

    /**
     * <p>Construct a new application data bean instance.</p>
     */
    public ApplicationBean1() {
    }

    /**
     * <p>This method is called when this bean is initially added to
     * application scope.  Typically, this occurs as a result of evaluating
     * a value binding or method binding expression, which utilizes the
     * managed bean facility to instantiate this bean and store it into
     * application scope.</p>
     *
     * <p>You may customize this method to initialize and cache application wide
     * data values (such as the lists of valid options for dropdown list
     * components), or to allocate resources that are required for the
     * lifetime of the application.</p>
     */
    @PostConstruct
    public void init() {

        dateConverter = new DateTimeConverter();
        dateConverter.setType("date");
        dateConverter.setPattern("dd-MMM-yyyy");

        booleanConverter = new YesNoBooleanConverter();

    }



    /**
     * <p>Return an appropriate character encoding based on the
     * <code>Locale</code> defined for the current JavaServer Faces
     * view.  If no more suitable encoding can be found, return
     * "UTF-8" as a general purpose default.</p>
     */
//    public String getLocaleCharacterEncoding() {
//        return FacesContext.getCurrentInstance().;
//    }

    public DateTimeConverter getDateConverter() {
        return dateConverter;
    }

    public void setDateConverter(DateTimeConverter dateConverter) {
        this.dateConverter = dateConverter;
    }

    public YesNoBooleanConverter getBooleanConverter() {
        return booleanConverter;
    }

    public void setBooleanConverter(YesNoBooleanConverter booleanConverter) {
        this.booleanConverter = booleanConverter;
    }

}
