/*
 * AccessDenied.java
 *
 * Created on Oct 7, 2008, 1:35:14 PM
 */
package swtadminwar;

import ca.bc.gov.health.login.RoleHelper;
import jakarta.annotation.PostConstruct;
import jakarta.enterprise.context.RequestScoped;
import jakarta.faces.context.FacesContext;
import jakarta.inject.Named;
import java.util.Iterator;
import java.util.List;

/**
 * <p>Page bean that corresponds to a similarly named JSP page. This class contains component definitions (and
 * initialization code) for all components that you have defined on this page, as well as lifecycle methods and event
 * handlers where you may add behavior to respond to incoming events.</p>
 *
 * @author greg.perkins
 */
@RequestScoped
@Named
public class AccessDenied {

    private String roles;
    private String username;

    public String getRoles() {
        return roles;
    }

    public void setRoles(String roles) {
        this.roles = roles;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * <p>
     * Construct a new Page bean instance.</p>
     */
    public AccessDenied() {
    }

    /**
     * <p>
     * Callback method that is called whenever a page is navigated to, either directly via a URL, or indirectly via page
     * navigation. Customize this method to acquire resources that will be needed for event handlers and lifecycle
     * methods, whether or not this page is performing post back processing.</p>
     *
     * <p>
     * Note that, if the current request is a postback, the property values of the components do <strong>not</strong>
     * represent any values submitted with this request. Instead, they represent the property values that were saved for
     * this view when it was rendered.</p>
     */
    @PostConstruct
    public void init() {

        // </editor-fold>
        // Perform application initialization that must complete
        // *after* managed components are initialized
        // TODO - add your own initialization code here
        List roleList = RoleHelper.getUserRoles(FacesContext.getCurrentInstance());
        roles = "";
        for (Iterator it = roleList.iterator(); it.hasNext();) {
            String role = (String) it.next();
            roles += role + " ";
        }
        username = RoleHelper.getUserName(FacesContext.getCurrentInstance());
    }

}
