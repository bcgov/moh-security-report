/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.swt.admin.converter;

import ca.bc.gov.hlth.swt.entity.Procedure;
import ca.bc.gov.hlth.swt.session.MaintainRollupsFacadeLocal;
import jakarta.faces.component.UIComponent;
import jakarta.faces.context.FacesContext;
import jakarta.faces.convert.Converter;
import jakarta.faces.convert.ConverterException;
import jakarta.faces.convert.FacesConverter;
import jakarta.inject.Inject;

/**
 * The Class ProcedureConverter.
 *
 * @author CGI Information Management Consultants Inc.
 */
@SuppressWarnings("rawtypes")
@FacesConverter(value = "procedureConverter", managed = true)
public class ProcedureConverter implements Converter {

    @Inject
    private MaintainRollupsFacadeLocal maintainRollupsFacadeLocal;

    /**
     * @see jakarta.faces.convert.Converter#getAsObject(jakarta.faces.context.FacesContext,
     * jakarta.faces.component.UIComponent, java.lang.String)
     */
    @Override
    public Procedure getAsObject(FacesContext fc, UIComponent uic, String value)
            throws ConverterException {

        if (value != null && value.trim().length() > 0) {

            try {
                return maintainRollupsFacadeLocal.findProcedure(value);

            } catch (Exception ex) {
                throw ex;
            }
        }
        return null;
    }

    /**
     * @see jakarta.faces.convert.Converter#getAsString(jakarta.faces.context.FacesContext,
     * jakarta.faces.component.UIComponent, java.lang.Object)
     */
    @Override
    public String getAsString(FacesContext fc, UIComponent uic, Object object) {
        if (object != null) {
            return String.valueOf(((Procedure) object).getProcedureId());
        } else {
            return null;
        }
    }

}
