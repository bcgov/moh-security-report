package ca.bc.gov.health.swt.admin.converter;

import ca.bc.gov.hlth.swt.entity.RollupFacility;
import ca.bc.gov.hlth.swt.session.RollupFacilityFacadeLocal;
import jakarta.faces.component.UIComponent;
import jakarta.faces.context.FacesContext;
import jakarta.faces.convert.Converter;
import jakarta.faces.convert.ConverterException;
import jakarta.faces.convert.FacesConverter;
import jakarta.inject.Inject;
import org.apache.commons.lang3.StringUtils;

/**
 * The Class SpecialtyConverter.
 *
 * @author CGI Information Management Consultants Inc.
 */
@SuppressWarnings("rawtypes")
@FacesConverter(value = "facilityConverter", managed = true)
public class FacilityConverter implements Converter {

    @Inject
    private RollupFacilityFacadeLocal facilityFacadeLocal;

    /*
     * @see jakarta.faces.convert.Converter#getAsObject(jakarta.faces.context.FacesContext,
     * jakarta.faces.component.UIComponent, java.lang.String)
     */
    @Override
    public RollupFacility getAsObject(FacesContext fc, UIComponent uic, String value) throws ConverterException {
        if (value != null && value.trim().length() > 0 && StringUtils.isNumeric(value)) {
            try {
                return facilityFacadeLocal.find(Long.valueOf(value));
            } catch (Exception ex) {
                throw ex;
            }
        }
        return null;
    }

    /*
     * @see jakarta.faces.convert.Converter#getAsString(jakarta.faces.context.FacesContext,
     * jakarta.faces.component.UIComponent, java.lang.Object)
     */
    @Override
    public String getAsString(FacesContext fc, UIComponent uic, Object object) {
        if (object instanceof RollupFacility) {
            return String.valueOf(((RollupFacility) object).getRollupFacilityId());
        } else {
            return null;
        }
    }
}
