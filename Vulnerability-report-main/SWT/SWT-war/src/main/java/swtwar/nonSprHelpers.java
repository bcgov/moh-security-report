/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swtwar;

import ca.bc.gov.hlth.swt.entity.SimpleSiteStatistic;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author trevor.schiavone
 */
public class nonSprHelpers {

    /**
     * Adds a row to the results for lookups that aren't for all (null) HA, Facility, Specialist This new row has the
     * data for sum of the cases waiting at the facility level
     *
     * @param results - List of SimpleSiteStatistic
     * @return nonSprResults - A list of results possibly with a new row added
     */
    public static List<SimpleSiteStatistic> addFacilityStatistics(List<SimpleSiteStatistic> results) {

        List<SimpleSiteStatistic> nonSprResults = new ArrayList();
        nonSprResults.addAll(results);
        int totalCasesWaiting = 0;

        //The first record either has a null facility name (no filters selected)
        //or there is a facility name set, these are the ones we need to calculate a 
        //total for
        if (nonSprResults.get(0).getFacilityNm() != null
                && nonSprResults.get(0).getSurgeonNm() == null) {

            //Set up a new statistic to be the first row
            SimpleSiteStatistic totalsRow = new SimpleSiteStatistic();
            totalsRow.setProcedureGroupNm(nonSprResults.get(0).getProcedureGroupNm());
            totalsRow.setRollupProcedureGroupId(nonSprResults.get(0).getRollupProcedureGroupId());
            totalsRow.setFiftyPctWeeksNbrForWaitTwo(nonSprResults.get(0).getFiftyPctWeeksNbrForWaitTwo());
            totalsRow.setNinetyPctWeeksNbrForWaitTwo(nonSprResults.get(0).getNinetyPctWeeksNbrForWaitTwo());

            for (SimpleSiteStatistic result : nonSprResults) {

                //Sum up the facility level patients waiting
                //SurgeonNm is null for the facility level results
                if (result.getSurgeonNm() == null) {
                    totalCasesWaiting += result.getPatientsWaitingNbr();
                }
            }
            //Add the new first record and set the total cases waiting
            nonSprResults.add(0, totalsRow);
            nonSprResults.get(0).setPatientsWaitingNbr(totalCasesWaiting);
        }
        return nonSprResults;
    }

    /**
     * Move non spr results from the original results list and convert them into nonSprDataEntry objects in a new list
     *
     * @param results a list of siteStatistic results
     * @return a list of the nonSPR results
     */
    public static List<SimpleSiteStatistic> setupNonSprResults(List<SimpleSiteStatistic> results) {
        List<SimpleSiteStatistic> tempNonSprResults = new ArrayList<>();
        if (results != null) {
            for (SimpleSiteStatistic result : results) {

                if (result.getDataSource() != null && !result.getDataSource().equals("Surgical Patient Registry")) {
                    tempNonSprResults.add(result);
                }
            }
        }
        return tempNonSprResults;
    }

}
