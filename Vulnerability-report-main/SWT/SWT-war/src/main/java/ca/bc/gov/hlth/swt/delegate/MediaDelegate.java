/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.hlth.swt.delegate;

import ca.bc.gov.hlth.swt.entity.Site;
import ca.bc.gov.hlth.swt.session.MediaProvincialWaitTimesFacadeLocal;
import ca.bc.gov.hlth.swt.session.SiteFacadeLocal;
import ca.bc.gov.hlth.swt.to.CurrentPriorityAreaDSWTStatisticsTo;
import ca.bc.gov.hlth.swt.to.CurrentWTStatisticsTo;
import ca.bc.gov.hlth.swt.to.DataSourceLongTermWTSec2To;
import ca.bc.gov.hlth.swt.to.MonthCompareProGroupTo;
import ca.bc.gov.hlth.swt.to.MonthCompareSpecialtyTo;
import ca.bc.gov.hlth.swt.to.OrderedLongTermWTSec1To;
import jakarta.ejb.EJB;
import jakarta.enterprise.context.ApplicationScoped;
import jakarta.inject.Named;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 *
 * @author Kuan.Fan
 */
@ApplicationScoped
@Named
public class MediaDelegate {

    @EJB
    private MediaProvincialWaitTimesFacadeLocal mediaProvincialWaitTimesFacade;

    @EJB
    private SiteFacadeLocal siteFacade;

    private Map currentWaitTimesCache = new HashMap();
    private Map currentPriorityAreaDSWTStatisticsCache = new HashMap();
    private Map orderedLongTermSection1WaitTimesCache = new HashMap();
    private Map dataSourceLongTermWTSecCache = new HashMap();

    public List<CurrentWTStatisticsTo> getCurrentWaitTimes(String siteId, String adult) {
        String key = siteId + adult;
        if (currentWaitTimesCache.get(key) == null) {
            List<CurrentWTStatisticsTo> list = mediaProvincialWaitTimesFacade.findCurrentWaitTimes(siteId, adult);
            currentWaitTimesCache.put(key, list);
        }
        return (List<CurrentWTStatisticsTo>) currentWaitTimesCache.get(key);
    }

    public List<CurrentPriorityAreaDSWTStatisticsTo> getCurrentPriorityAreaDSWTStatisticsTos(String siteId, String adult) {
        String key = siteId + adult;

        if (currentPriorityAreaDSWTStatisticsCache.get(key) == null) {
            List<CurrentPriorityAreaDSWTStatisticsTo> rt = this.mediaProvincialWaitTimesFacade.findCurrentPriorityAreaDSWTStatisticsTos(siteId, adult);
            currentPriorityAreaDSWTStatisticsCache.put(key, rt);
        }
        return (List<CurrentPriorityAreaDSWTStatisticsTo>) currentPriorityAreaDSWTStatisticsCache.get(key);
    }

    public List<OrderedLongTermWTSec1To> getOrderedLongTermWTSec1(String siteId, String adult) {
        String key = siteId + adult;
        if (orderedLongTermSection1WaitTimesCache.get(key) == null) {
            List list = this.mediaProvincialWaitTimesFacade.findOrderedLongTermWTSec1(siteId, adult);
            orderedLongTermSection1WaitTimesCache.put(key, list);
        }
        return (List<OrderedLongTermWTSec1To>) orderedLongTermSection1WaitTimesCache.get(key);
    }

    public List<DataSourceLongTermWTSec2To> getDataSourceLongTermWTSec2Tos(String siteId, String adult) {
        String key = siteId + adult;
        if (dataSourceLongTermWTSecCache.get(key) == null) {
            List list = this.mediaProvincialWaitTimesFacade.findDataSourceLongTermWTSec2Tos(siteId, adult);
            dataSourceLongTermWTSecCache.put(key, list);
        }
        return (List<DataSourceLongTermWTSec2To>) dataSourceLongTermWTSecCache.get(key);
    }

    public String getCurrentSiteId() {
        Site currentSite = this.siteFacade.findCurrent();
        return currentSite.getSiteId().toString();
    }

    public List<MonthCompareProGroupTo> getMonthCompareProGroupTos(String siteId) {
        return this.mediaProvincialWaitTimesFacade.findMonthCompareProGroupTos(siteId);
    }

    public List<MonthCompareSpecialtyTo> getMonthCompareSpecialtyTos(String siteId) {
        return this.mediaProvincialWaitTimesFacade.findMonthCompareSpecialtyTos(siteId);
    }

    public List<MonthCompareSpecialtyTo> getMonthCompareNonSprTos(String siteId) {
        return this.mediaProvincialWaitTimesFacade.findMonthCompareNonSprTos(siteId);
    }

    public Date getSitePublishedDate(String siteId) {
        Site site = this.siteFacade.find(new Long(siteId));
        return site.getPublishedOnDtm();
    }

    public Date getSiteReportingPeriodEndDt(String siteId) {
        Site site = this.siteFacade.find(new Long(siteId));
        return site.getReportingPeriodEndDt();
    }

}
