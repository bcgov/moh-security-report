/*
 * To change this license header, choose License Headers in Project Properties. To change this
 * template file, choose Tools | Templates and open the template in the editor.
 */
package ca.bc.gov.health.database.entity;

import ca.bc.gov.health.util.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

/**
 * The Class Hospitals.
 *
 * @author je.tremblay
 */
@Entity
@Table(name = "HOSPITALS")
@NamedQuery(name = "Hospitals.findAll", query = "SELECT h FROM Hospitals h")
@NamedQuery(
    name = "Hospitals.checkValidHospital",
    query =
        "SELECT h FROM Hospitals h WHERE h.hospitalNumber = :hospitalNumber AND (:hospitalName is null OR h.name = :hospitalName) AND h.pteId.provinceCode = :provinceCode")
@NamedQuery(
    name = "Hospitals.searchHospitalByProvince",
    query = "SELECT h FROM Hospitals h WHERE h.pteId.provinceCode = :provinceCode")
@NamedQuery(
    name = "Hospitals.checkDuplicateHospital",
    query =
        "SELECT h FROM Hospitals h WHERE h.hospitalNumber = :hospitalNumber AND h.pteId.provinceCode = :provinceCode")
@NamedQuery(name = "Hospitals.findAllNumbers", query = "SELECT h.hospitalNumber FROM Hospitals h")
@NamedQuery(
    name = "Hospitals.findAllowedNumbers",
    query =
        "SELECT h.hospitalNumber FROM Hospitals h "
            + "JOIN AppUserAuthorizations a "
            + "WHERE h.id = a.hspId.id "
            + "AND (UPPER(a.aurId.applicationUserid) = UPPER(:applicationUserid)) "
            + "AND ((CURRENT_DATE BETWEEN a.effectiveDate AND a.endDate) OR (a.endDate IS null))")
@EntityListeners({AuditListener.class})
public class Hospitals extends MainEntity implements Serializable {

  private static final long serialVersionUID = 1L;

  @Id
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "HospitalsGenerator")
  @SequenceGenerator(
      name = "HospitalsGenerator",
      sequenceName = "HOSPITALS_SEQ",
      allocationSize = 1)
  @Basic(optional = false)
  @NotNull
  @Column(name = "ID")
  private Long id;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 5)
  @Column(name = "HOSPITAL_NUMBER")
  private String hospitalNumber;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 40)
  @Column(name = "NAME")
  private String name;

  @Size(max = 50)
  @Column(name = "NOTES")
  private String notes;

  @Size(max = 80)
  @Column(name = "ADDRESS1")
  private String address1;

  @Size(max = 80)
  @Column(name = "ADDRESS2")
  private String address2;

  @Size(max = 50)
  @Column(name = "CITY")
  private String city;

  @Size(max = 4)
  @Column(name = "PROVINCE")
  private String province;

  @Size(max = 7)
  @Column(name = "POSTAL_CODE")
  private String postalCode;

  @Size(max = 100)
  @Column(name = "DATA_EXCHANGE_ID")
  private String dataExchangeId;

  @Column(name = "LOCK_SEQ_NUM")
  private Integer lockSeqNum;

  @Basic(optional = false)
  @NotNull
  @Column(name = "CREATE_DATE")
  private LocalDate createDate;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 30)
  @Column(name = "CREATE_USER")
  private String createUser;

  @Column(name = "MODIFY_DATE")
  private LocalDate modifyDate;

  @Size(max = 30)
  @Column(name = "MODIFY_USER")
  private String modifyUser;

  @OneToMany(mappedBy = "hspId", fetch = FetchType.LAZY)
  private List<HospitalOopClaims> hospitalOopClaimsList;

  @OneToMany(cascade = CascadeType.ALL, mappedBy = "hspId", fetch = FetchType.LAZY)
  private List<HospitalPerDiemRates> hospitalPerDiemRatesList;

  @OneToMany(cascade = CascadeType.ALL, mappedBy = "hspId", fetch = FetchType.LAZY)
  private List<AppUserAuthorizations> appUserAuthorizationsList;

  @OneToMany(mappedBy = "hspId", fetch = FetchType.LAZY)
  private List<ReportRequestSubjects> reportRequestSubjectsList;

  @OneToMany(mappedBy = "hspId", fetch = FetchType.LAZY)
  private List<InvoiceParties> invoicePartiesList;

  @JoinColumn(name = "HA_ID", referencedColumnName = "ID")
  @ManyToOne(fetch = FetchType.LAZY)
  private HealthAuthorities haId;

  @JoinColumn(name = "PTE_ID", referencedColumnName = "ID")
  @ManyToOne(fetch = FetchType.LAZY)
  private ProvincesTerritories pteId;

  /** Instantiates a new hospitals. */
  public Hospitals() {
    this.hospitalPerDiemRatesList = new ArrayList<>();
    this.haId = new HealthAuthorities();
  }

  /**
   * Instantiates a new hospitals.
   *
   * @param id the id
   */
  public Hospitals(Long id) {
    this.id = id;
    this.hospitalPerDiemRatesList = new ArrayList<>();
  }

  /**
   * Instantiates a new hospitals.
   *
   * @param id the id
   * @param hospitalNumber the hospital number
   * @param name the name
   * @param createDate the create date
   * @param createUser the create user
   */
  public Hospitals(
      Long id, String hospitalNumber, String name, LocalDate createDate, String createUser) {
    this.id = id;
    this.hospitalNumber = hospitalNumber;
    this.name = name;
    this.hospitalPerDiemRatesList = new ArrayList<>();
    this.createDate = createDate;
    this.createUser = createUser;
  }

  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public String getHospitalNumber() {
    return hospitalNumber;
  }

  public void setHospitalNumber(String hospitalNumber) {
    this.hospitalNumber = hospitalNumber;
  }

  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public String getAddress1() {
    return address1;
  }

  public void setAddress1(String address1) {
    this.address1 = address1;
  }

  public String getAddress2() {
    return address2;
  }

  public void setAddress2(String address2) {
    this.address2 = address2;
  }

  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public String getProvince() {
    return province;
  }

  public void setProvince(String province) {
    this.province = province;
  }

  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public String getDataExchangeId() {
    return dataExchangeId;
  }

  public void setDataExchangeId(String dataExchangeId) {
    this.dataExchangeId = dataExchangeId;
  }

  public Integer getLockSeqNum() {
    return lockSeqNum;
  }

  public void setLockSeqNum(Integer lockSeqNum) {
    this.lockSeqNum = lockSeqNum;
  }

  public LocalDate getCreateDate() {
    return createDate;
  }

  public void setCreateDate(LocalDate createDate) {
    this.createDate = createDate;
  }

  public String getCreateUser() {
    return createUser;
  }

  public void setCreateUser(String createUser) {
    this.createUser = createUser;
  }

  public LocalDate getModifyDate() {
    return modifyDate;
  }

  public void setModifyDate(LocalDate modifyDate) {
    this.modifyDate = modifyDate;
  }

  public String getModifyUser() {
    return modifyUser;
  }

  public void setModifyUser(String modifyUser) {
    this.modifyUser = modifyUser;
  }

  public List<HospitalOopClaims> getHospitalOopClaimsList() {
    return hospitalOopClaimsList;
  }

  public void setHospitalOopClaimsList(List<HospitalOopClaims> hospitalOopClaimsList) {
    this.hospitalOopClaimsList = hospitalOopClaimsList;
  }

  public List<HospitalPerDiemRates> getHospitalPerDiemRatesList() {
    return hospitalPerDiemRatesList;
  }

  public void setHospitalPerDiemRatesList(List<HospitalPerDiemRates> hospitalPerDiemRatesList) {
    this.hospitalPerDiemRatesList = hospitalPerDiemRatesList;
  }

  public List<AppUserAuthorizations> getAppUserAuthorizationsList() {
    return appUserAuthorizationsList;
  }

  public void setAppUserAuthorizationsList(List<AppUserAuthorizations> appUserAuthorizationsList) {
    this.appUserAuthorizationsList = appUserAuthorizationsList;
  }

  public List<ReportRequestSubjects> getReportRequestSubjectsList() {
    return reportRequestSubjectsList;
  }

  public void setReportRequestSubjectsList(List<ReportRequestSubjects> reportRequestSubjectsList) {
    this.reportRequestSubjectsList = reportRequestSubjectsList;
  }

  public List<InvoiceParties> getInvoicePartiesList() {
    return invoicePartiesList;
  }

  public void setInvoicePartiesList(List<InvoiceParties> invoicePartiesList) {
    this.invoicePartiesList = invoicePartiesList;
  }

  public HealthAuthorities getHaId() {
    return haId;
  }

  public void setHaId(HealthAuthorities haId) {
    this.haId = haId;
  }

  public ProvincesTerritories getPteId() {
    return pteId;
  }

  public void setPteId(ProvincesTerritories pteId) {
    this.pteId = pteId;
  }

  /*
   * (non-Javadoc)
   *
   * @see java.lang.Object#hashCode()
   */
  @Override
  public int hashCode() {
    int hash = 0;
    hash += (id != null ? id.hashCode() : 0);
    return hash;
  }

  /*
   * (non-Javadoc)
   *
   * @see java.lang.Object#equals(java.lang.Object)
   */
  @Override
  public boolean equals(Object object) {

    if (!(object instanceof Hospitals)) {
      return false;
    }
    Hospitals other = (Hospitals) object;
    if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
      return false;
    }
    return true;
  }

  /*
   * (non-Javadoc)
   *
   * @see java.lang.Object#toString()
   */
  @Override
  public String toString() {
    return "ca.bc.gov.health.database.entity.Hospitals[ id=" + id + " ]";
  }
}
