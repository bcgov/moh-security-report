/*
 * To change this license header, choose License Headers in Project Properties. To change this
 * template file, choose Tools | Templates and open the template in the editor.
 */
package ca.bc.gov.health.database.entity;

import ca.bc.gov.health.util.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDate;

/**
 * The Class HighcostProcedurePerformed.
 *
 * @author je.tremblay
 */
@Entity
@Table(name = "HIGHCOST_PROCEDURE_PERFORMED")
@NamedQuery(
    name = "HighcostProcedurePerformed.findAll",
    query = "SELECT h FROM HighcostProcedurePerformed h")
@EntityListeners({AuditListener.class})
public class HighcostProcedurePerformed implements Serializable {

  private static final long serialVersionUID = 1L;

  @Id
  @GeneratedValue(
      strategy = GenerationType.SEQUENCE,
      generator = "HighcostProcedurePerformedGenerator")
  @SequenceGenerator(
      name = "HighcostProcedurePerformedGenerator",
      sequenceName = "HIGHCOST_PROCEDURE_PERFORMED_SEQ",
      allocationSize = 1)
  @Basic(optional = false)
  @NotNull
  @Column(name = "ID")
  private Long id;

  @Column(name = "PROCEDURE_DATE")
  private LocalDate procedureDate;

  @Basic(optional = false)
  @NotNull
  @Column(name = "SEQUENCE_NUM")
  private Long sequenceNum;
  // @Max(value=?) @Min(value=?)//if you know range of your decimal fields consider using these
  @Column(name = "PROCEDURE_COST")
  private BigDecimal procedureCost;

  @Column(name = "LOCK_SEQ_NUM")
  private Integer lockSeqNum;

  @Basic(optional = false)
  @NotNull
  @Column(name = "CREATE_DATE")
  private LocalDate createDate;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 30)
  @Column(name = "CREATE_USER")
  private String createUser;

  @Column(name = "MODIFY_DATE")
  private LocalDate modifyDate;

  @Size(max = 30)
  @Column(name = "MODIFY_USER")
  private String modifyUser;

  @JoinColumn(name = "HCPP_ID", referencedColumnName = "ID")
  @ManyToOne(fetch = FetchType.LAZY)
  private HighcostProcedureCodes hcppId;

  @JoinColumn(name = "HOC_ID", referencedColumnName = "ID")
  @ManyToOne(optional = false, fetch = FetchType.LAZY)
  private HospitalOopClaims hocId;

  /** Instantiates a new highcost procedure performed. */
  public HighcostProcedurePerformed() {}

  /**
   * Instantiates a new highcost procedure performed.
   *
   * @param id the id
   */
  public HighcostProcedurePerformed(Long id) {
    this.id = id;
    this.createDate = LocalDate.now();
    this.createUser = "system";
  }

  /**
   * Instantiates a new highcost procedure performed.
   *
   * @param id the id
   * @param sequenceNum the sequence num
   * @param createDate the create date
   * @param createUser the create user
   */
  public HighcostProcedurePerformed(
      Long id, long sequenceNum, LocalDate createDate, String createUser) {
    this.id = id;
    this.sequenceNum = sequenceNum;
    this.createDate = createDate;
    this.createUser = createUser;
  }

  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public LocalDate getProcedureDate() {
    return procedureDate;
  }

  public void setProcedureDate(LocalDate procedureDate) {
    this.procedureDate = procedureDate;
  }

  public Long getSequenceNum() {
    return sequenceNum;
  }

  public void setSequenceNum(Long sequenceNum) {
    this.sequenceNum = sequenceNum;
  }

  public BigDecimal getProcedureCost() {
    return procedureCost;
  }

  public void setProcedureCost(BigDecimal procedureCost) {
    this.procedureCost = procedureCost;
  }

  public Integer getLockSeqNum() {
    return lockSeqNum;
  }

  public void setLockSeqNum(Integer lockSeqNum) {
    this.lockSeqNum = lockSeqNum;
  }

  public LocalDate getCreateDate() {
    return createDate;
  }

  public void setCreateDate(LocalDate createDate) {
    this.createDate = createDate;
  }

  public String getCreateUser() {
    return createUser;
  }

  public void setCreateUser(String createUser) {
    this.createUser = createUser;
  }

  public LocalDate getModifyDate() {
    return modifyDate;
  }

  public void setModifyDate(LocalDate modifyDate) {
    this.modifyDate = modifyDate;
  }

  public String getModifyUser() {
    return modifyUser;
  }

  public void setModifyUser(String modifyUser) {
    this.modifyUser = modifyUser;
  }

  public HighcostProcedureCodes getHcppId() {
    return hcppId;
  }

  public void setHcppId(HighcostProcedureCodes hcppId) {
    this.hcppId = hcppId;
  }

  public HospitalOopClaims getHocId() {
    return hocId;
  }

  public void setHocId(HospitalOopClaims hocId) {
    this.hocId = hocId;
  }

  /*
   * (non-Javadoc)
   *
   * @see java.lang.Object#hashCode()
   */
  @Override
  public int hashCode() {
    int hash = 0;
    hash += (id != null ? id.hashCode() : 0);
    return hash;
  }

  /*
   * (non-Javadoc)
   *
   * @see java.lang.Object#equals(java.lang.Object)
   */
  @Override
  public boolean equals(Object object) {
    if (!(object instanceof HighcostProcedurePerformed)) {
      return false;
    }
    HighcostProcedurePerformed other = (HighcostProcedurePerformed) object;
    if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
      return false;
    }
    return true;
  }

  /*
   * (non-Javadoc)
   *
   * @see java.lang.Object#toString()
   */
  @Override
  public String toString() {
    return "ca.bc.gov.health.database.entity.HighcostProcedurePerformed[ id=" + id + " ]";
  }
}
