package ca.bc.gov.health.transformer;

import ca.bc.gov.health.constants.OverrideStatus;
import ca.bc.gov.health.database.entity.ClaimOverrides;
import ca.bc.gov.health.database.entity.HospitalOopClaims;
import ca.bc.gov.health.service.viewmodel.ClaimOverridesViewModel;
import org.apache.commons.lang3.StringUtils;

/** The Class ClaimOverridesTransformer. */
public class ClaimOverridesTransformer {

  private ClaimOverridesTransformer() {
    // Utility class
  }

  /**
   * Transform.
   *
   * @param entity the entity
   * @return the claim overrides view model
   */
  public static ClaimOverridesViewModel transform(ClaimOverrides entity) {
    ClaimOverridesViewModel model = new ClaimOverridesViewModel();
    if (entity != null) {
      model.setId(entity.getId());
      if (entity.getOverrideRequest().equals("Y")) {
        model.setOverrideRequest(true);
      } else {
        model.setOverrideRequest(false);
      }
      model.setOverrideRequestReason(entity.getOverrideRequestReason());
      model.setOverrideStatus(entity.getOverrideStatus());
      model.setOverrideStatusReason(entity.getOverrideStatusReason());
    }
    return model;
  }

  /**
   * Transform.
   *
   * @param model the model
   * @param claim the claim
   * @return the claim overrides
   */
  public static ClaimOverrides transform(ClaimOverridesViewModel model, HospitalOopClaims claim) {
    if (model != null) {
      if (claim.getClaimOverrides() == null
          && (model.isOverrideRequest()
              || !StringUtils.isAllBlank(
                  model.getOverrideRequestReason(),
                  model.getOverrideStatus(),
                  model.getOverrideStatusReason()))) {
        claim.setClaimOverrides(new ClaimOverrides());
        claim.getClaimOverrides().setHocId(claim);
        if (model.getOverrideStatus() == null) {
          claim.getClaimOverrides().setOverrideStatus(OverrideStatus.REQUESTED.toString());
        } else {
          claim.getClaimOverrides().setOverrideStatus(model.getOverrideStatus());
        }
        claim.getClaimOverrides().setOverrideRequestReason(model.getOverrideRequestReason());
        claim.getClaimOverrides().setOverrideStatusReason(model.getOverrideStatusReason());
      }
      //BCMOHAD-10404-11Mar22: getting rid of Override status and status reason leaving override request and request reason as is.
      if (claim.getClaimOverrides() != null) {
        claim.getClaimOverrides().setId(model.getId());
        if (model.isOverrideRequest()) {
          claim.getClaimOverrides().setOverrideRequest("Y");
          claim.getClaimOverrides().setOverrideRequestReason(model.getOverrideRequestReason());
          if (model.getOverrideStatus() == null) {
            claim.getClaimOverrides().setOverrideStatus(OverrideStatus.REQUESTED.toString());
            claim.getClaimOverrides().setOverrideStatusReason(null);
          } else {
            claim.getClaimOverrides().setOverrideStatus(model.getOverrideStatus());
          claim.getClaimOverrides().setOverrideStatusReason(model.getOverrideStatusReason());
          }
          
        } else {
          
          claim.getClaimOverrides().setOverrideRequest("N");
          claim.getClaimOverrides().setOverrideStatus(null);
          claim.getClaimOverrides().setOverrideRequestReason(null);
          claim.getClaimOverrides().setOverrideStatusReason(null);
        }
      }
    }
    return claim.getClaimOverrides();
  }
}
