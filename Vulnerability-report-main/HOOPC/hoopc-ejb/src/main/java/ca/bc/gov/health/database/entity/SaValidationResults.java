/*
 * To change this license header, choose License Headers in Project Properties. To change this
 * template file, choose Tools | Templates and open the template in the editor.
 */
package ca.bc.gov.health.database.entity;

import ca.bc.gov.health.util.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;

/**
 * The Class SaValidationResults.
 *
 * @author je.tremblay
 */
@Entity
@Table(name = "SA_VALIDATION_RESULTS")
@NamedQuery(name = "SaValidationResults.findAll", query = "SELECT s FROM SaValidationResults s")
@EntityListeners({AuditListener.class})
public class SaValidationResults implements Serializable {

  private static final long serialVersionUID = 1L;
  // @Max(value=?) @Min(value=?)//if you know range of your decimal fields consider using these
  @Id
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SaValidationResultsGenerator")
  @SequenceGenerator(
      name = "SaValidationResultsGenerator",
      sequenceName = "SA_VALIDATION_RESULTS_SEQ",
      allocationSize = 1)
  @Basic(optional = false)
  @NotNull
  @Column(name = "ID")
  private BigDecimal id;

  @Size(max = 12)
  @Column(name = "VAL_CODE")
  private String valCode;

  @Size(max = 2000)
  @Column(name = "VAL_MESSAGE")
  private String valMessage;

  @Basic(optional = false)
  @NotNull
  @Column(name = "LOCK_SEQ_NUM")
  private int lockSeqNum;

  @Basic(optional = false)
  @NotNull
  @Column(name = "CREATE_DATE")
  private LocalDate createDate;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 30)
  @Column(name = "CREATE_USER")
  private String createUser;

  @Column(name = "MODIFY_DATE")
  private LocalDate modifyDate;

  @Size(max = 30)
  @Column(name = "MODIFY_USER")
  private String modifyUser;

  @Basic(optional = false)
  @NotNull
  @Column(name = "SUB_ID")
  private BigInteger subId;

  @Size(max = 50)
  @Column(name = "VAL_TYPE")
  private String valType;

  @Column(name = "RECORD_TYPE")
  private Character recordType;

  @JoinColumn(name = "SUBD_ID", referencedColumnName = "ID")
  @ManyToOne(optional = false, fetch = FetchType.LAZY)
  private SaSubmissionDetails subdId;

  /** Instantiates a new sa validation results. */
  public SaValidationResults() {}

  /**
   * Instantiates a new sa validation results.
   *
   * @param id the id
   */
  public SaValidationResults(BigDecimal id) {
    this.id = id;
  }

  /**
   * Instantiates a new sa validation results.
   *
   * @param id the id
   * @param lockSeqNum the lock seq num
   * @param createDate the create date
   * @param createUser the create user
   * @param subId the sub id
   */
  public SaValidationResults(
      BigDecimal id, int lockSeqNum, LocalDate createDate, String createUser, BigInteger subId) {
    this.id = id;
    this.lockSeqNum = lockSeqNum;
    this.createDate = createDate;
    this.createUser = createUser;
    this.subId = subId;
  }

  public BigDecimal getId() {
    return id;
  }

  public void setId(BigDecimal id) {
    this.id = id;
  }

  public String getValCode() {
    return valCode;
  }

  public void setValCode(String valCode) {
    this.valCode = valCode;
  }

  public String getValMessage() {
    return valMessage;
  }

  public void setValMessage(String valMessage) {
    this.valMessage = valMessage;
  }

  public int getLockSeqNum() {
    return lockSeqNum;
  }

  public void setLockSeqNum(int lockSeqNum) {
    this.lockSeqNum = lockSeqNum;
  }

  public LocalDate getCreateDate() {
    return createDate;
  }

  public void setCreateDate(LocalDate createDate) {
    this.createDate = createDate;
  }

  public String getCreateUser() {
    return createUser;
  }

  public void setCreateUser(String createUser) {
    this.createUser = createUser;
  }

  public LocalDate getModifyDate() {
    return modifyDate;
  }

  public void setModifyDate(LocalDate modifyDate) {
    this.modifyDate = modifyDate;
  }

  public String getModifyUser() {
    return modifyUser;
  }

  public void setModifyUser(String modifyUser) {
    this.modifyUser = modifyUser;
  }

  public BigInteger getSubId() {
    return subId;
  }

  public void setSubId(BigInteger subId) {
    this.subId = subId;
  }

  public String getValType() {
    return valType;
  }

  public void setValType(String valType) {
    this.valType = valType;
  }

  public Character getRecordType() {
    return recordType;
  }

  public void setRecordType(Character recordType) {
    this.recordType = recordType;
  }

  public SaSubmissionDetails getSubdId() {
    return subdId;
  }

  public void setSubdId(SaSubmissionDetails subdId) {
    this.subdId = subdId;
  }

  /*
   * (non-Javadoc)
   *
   * @see java.lang.Object#hashCode()
   */
  @Override
  public int hashCode() {
    int hash = 0;
    hash += (id != null ? id.hashCode() : 0);
    return hash;
  }

  /*
   * (non-Javadoc)
   *
   * @see java.lang.Object#equals(java.lang.Object)
   */
  @Override
  public boolean equals(Object object) {

    if (!(object instanceof SaValidationResults)) {
      return false;
    }
    SaValidationResults other = (SaValidationResults) object;
    if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
      return false;
    }
    return true;
  }

  /*
   * (non-Javadoc)
   *
   * @see java.lang.Object#toString()
   */
  @Override
  public String toString() {
    return "ca.bc.gov.health.database.entity.SaValidationResults[ id=" + id + " ]";
  }
}
