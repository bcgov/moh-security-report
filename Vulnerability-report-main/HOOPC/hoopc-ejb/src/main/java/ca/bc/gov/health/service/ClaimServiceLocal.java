package ca.bc.gov.health.service;

import ca.bc.gov.health.database.entity.ClaimTypes;
import ca.bc.gov.health.database.entity.HospitalOopClaims;
import ca.bc.gov.health.database.entity.ResidencyTypes;
import ca.bc.gov.health.exception.HoopcException;
import ca.bc.gov.health.service.viewmodel.ClaimViewModel;
import jakarta.ejb.Local;
import java.util.List;

/** The Interface ClaimServiceLocal. */
@Local
public interface ClaimServiceLocal {

  /**
   * Creates the claim.
   *
   * @param claimView the claim view
   * @return the long
   * @throws HoopcException the hoopc exception
   */
  public Long createClaim(ClaimViewModel claimView) throws HoopcException;

  /**
   * Load claim.
   *
   * @param claimId the claim id
   * @return the claim view model
   * @throws HoopcException the hoopc exception
   */
  public ClaimViewModel loadClaim(Long claimId) throws HoopcException;

  /**
   * Save claim.
   *
   * @param claimView the claim view
   * @throws HoopcException the hoopc exception
   */
  public void saveClaim(ClaimViewModel claimView) throws HoopcException;

  /**
   * Delete claim.
   *
   * @param claimId the claim id
   * @throws HoopcException the hoopc exception
   */
  public void deleteClaim(Long claimId) throws HoopcException;

  /**
   * Save claim request.
   *
   * @param claimView the claim view
   * @throws HoopcException the hoopc exception
   */
  public void saveClaimRequest(ClaimViewModel claimView) throws HoopcException;

  /**
   * Delete claim request.
   *
   * @param claimId the claim id
   * @throws HoopcException the hoopc exception
   */
  public void deleteClaimRequest(Long claimId) throws HoopcException;

  /**
   * Save claim decision.
   *
   * @param claimView the claim view
   * @throws HoopcException the hoopc exception
   */
  public void saveClaimDecision(ClaimViewModel claimView) throws HoopcException;

  /**
   * Delete claim decision.
   *
   * @param claimId the claim id
   * @throws HoopcException the hoopc exception
   */
  public void deleteClaimDecision(Long claimId) throws HoopcException;

  /**
   * Claim has decision.
   *
   * @param claimId the claim id
   * @return true, if successful
   * @throws HoopcException the hoopc exception
   */
  // TODO: move to FormBean?
  public boolean claimHasDecision(Long claimId) throws HoopcException;

  /**
   * Claim has request.
   *
   * @param claimId the claim id
   * @return true, if successful
   * @throws HoopcException the hoopc exception
   */
  // TODO: move to FormBean?
  public boolean claimHasRequest(Long claimId) throws HoopcException;

  /**
   * Claim is editable.
   *
   * @param claimId the claim id
   * @return true, if successful
   * @throws HoopcException the hoopc exception
   */
  // TODO: move to FormBean?
  public boolean claimIsEditable(Long claimId) throws HoopcException;;

  /**
   * Search.
   *
   * @param claimCriteria the claim criteria
   * @return number of row
   * @throws HoopcException the hoopc exception
   */
  public Long selectCountByCriteria(ClaimViewModel claimCriteria) throws HoopcException;

  /**
   * Search.
   *
   * @param claimCriteria the claim criteria
   * @param firstResult the query offset
   * @param maxResult the query limit
   * @return the list
   * @throws HoopcException the hoopc exception
   */
  public List<HospitalOopClaims> searchByCriteria(
      ClaimViewModel claimCriteria,
      int firstResult,
      int maxResult,
      String sortField,
      String sortOrder)
      throws HoopcException;

  /**
   * Gets the residency type.
   *
   * @param residencyType the residency type
   * @return the residency type
   */
  public ResidencyTypes getResidencyType(String residencyType);

  /**
   * Gets the claim type.
   *
   * @param claimType the claim type
   * @return the claim type
   */
  public ClaimTypes getClaimType(String claimType);

  /**
   * Gets the claim errors.
   *
   * @param claimId the claim id
   * @return the claim errors
   */
  public List<String> getClaimErrors(Long claimId);
}
