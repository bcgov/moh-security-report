package ca.bc.gov.health.validation.rule;

import ca.bc.gov.health.validation.ValidationError;
import java.text.MessageFormat;
import java.util.function.Function;

/**
 * Validation rule for mandatory value.
 *
 * <p>Generates a validation error if field is null or blank String.
 *
 * @param <T> Type of object
 * @param <R> Type of field
 */
public class MandatoryRule<T, R> extends ValidationRule<T> {
  private Function<T, R> getter;

  /**
   * Creates a MandatoryRule. Example usage:
   *
   * <p><code>
   * new MandatoryRule<ClaimViewModel, String>("Hospital Number", ClaimViewModel::getHospitalNumber);
   *  </code>
   *
   * @param fieldName Field name to use for error message.
   * @param getter Function to get the value of field
   */
  public MandatoryRule(String fieldName, Function<T, R> getter) {
    super(ValidationRuleType.MANDATORY_VALUE, fieldName);
    this.getter = getter;
  }

  /**
   * Returns a ValidationError if value is null or blank String.
   *
   * @param object the object
   * @return the validation error
   */
  @Override
  public ValidationError validate(T object) {
    // Mandatory values should be validated in other rules
    R value = getValue(this.getter, object);
    if (value == null) {
      String errorMsg =
          MessageFormat.format(getMessage("claim.validation.mandatory"), getRuleIdentifier());
      return new ValidationError(this, errorMsg, null);
    }
    return null;
  }
}
