package ca.bc.gov.health.report;

import ca.bc.gov.health.constants.ClaimType;
import ca.bc.gov.health.constants.ReportType;
import ca.bc.gov.health.constants.ResidencyType;
import jakarta.enterprise.context.ApplicationScoped;
import jakarta.enterprise.inject.Any;
import jakarta.enterprise.inject.Instance;
import jakarta.inject.Inject;

/** Factory class to create reportProcessor. */
@ApplicationScoped
public class ReportProcessorFactory {
  @Inject @Any private Instance<ReportProcessor> reportInstance;

  /**
   * Create the appropriate report named "[reportType]-[residencyType]-[claimType]".
   *
   * @param reportType the report type
   * @param residencyType the residency type
   * @param claimType the claim type
   * @return the report processor
   */
  public ReportProcessor createReport(
      ReportType reportType, ResidencyType residencyType, ClaimType claimType) {
    String reportName =
        String.join("-", reportType.toString(), residencyType.toString(), claimType.toString());
    return createReport(reportName);
  }

  /**
   * Create the appropriate report.
   *
   * @param name the name
   * @return the report processor
   */
  public ReportProcessor createReport(String name) {
    Instance<ReportProcessor> instance =
        this.reportInstance.select(new ReportTypeNameLiteral(name));

    if (!instance.isResolvable()) {
      throw new IllegalArgumentException("Report " + name + " not supported");
    }

    return instance.get();
  }
}
