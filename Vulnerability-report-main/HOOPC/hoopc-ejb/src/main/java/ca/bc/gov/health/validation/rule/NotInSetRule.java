package ca.bc.gov.health.validation.rule;

import java.util.function.Function;

/**
 * Validation rule for NotInSet lookup.
 *
 * <p>Generates a validation error if value is found in a given set of values. Can also be used like
 * "notequals" when only one value in set. TODO: Could add a constructor to pass a lambda function
 * to get the set.
 *
 * @param <T> Type of object
 * @param <R> Type of field
 */
public class NotInSetRule<T, R> extends InSetRule<T, R> {

  /**
   * Creates a NotInSet rule. Example usage:
   *
   * <p><code>
   * new NotInSetRule<ClaimViewModel, String>("Province", c -> c.getPatient().getProvince(), "BC", "AB"));
   *  </code>
   *
   * @param fieldName Field name to use for error message.
   * @param getter Function to get the value of field
   * @param values list of values in the set
   */
  public NotInSetRule(
      String fieldName, Function<T, R> getter, @SuppressWarnings("unchecked") R... values) {
    super(fieldName, getter, values);
    this.type = ValidationRuleType.NOT_IN_SET;
  }

  /* (non-Javadoc)
   * @see ca.bc.gov.health.validation.rule.InSetRule#isError(boolean)
   */
  @Override
  protected boolean isError(boolean found) {
    return found;
  }

  @Override
  protected String getBaseMessageKey() {
    return "claim.validation.notinset";
  }
}
