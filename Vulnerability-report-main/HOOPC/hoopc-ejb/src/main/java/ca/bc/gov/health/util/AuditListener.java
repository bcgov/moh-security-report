/*
 * To change this template, choose Tools | Templates and open the template in the editor.
 */
package ca.bc.gov.health.util;

import jakarta.faces.context.FacesContext;
import jakarta.persistence.PrePersist;
import jakarta.persistence.PreUpdate;
import java.time.LocalDate;
import org.apache.commons.beanutils.PropertyUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * The listener interface for receiving audit events. The class that is interested in processing a
 * audit event implements this interface, and the object created with that class is registered with
 * a component using the component's <code>addAuditListener<code> method. When the audit event
 * occurs, that object's appropriate method is invoked.
 *
 * @author jf.tremblay
 */
public class AuditListener {
  private static Logger log = LoggerFactory.getLogger(AuditListener.class);

  /**
   * Pre persist.
   *
   * @param entity the entity
   */
  @PrePersist
  public void prePersist(Object entity) {
    try {
      PropertyUtils.setProperty(entity, "createDate", LocalDate.now());

      String user = null;
      try {
       user = FacesContext.getCurrentInstance().getExternalContext().getUserPrincipal().getName();
      }
      catch (Exception npe) {
        // When in the MonthEnd ejbTimer context, there is no user. So we hardcode it
        log.info("Warning in AuditListener pre-persist: no user found");
        user = "HPC.MonthEnd";
      }
      
      PropertyUtils.setProperty(
          entity,
          "createUser",
          user);
    } catch (Exception e) {
      log.error("Error in AuditListener pre-persist", e);
    }
  }

  /**
   * Pre update.
   *
   * @param entity the entity
   */
  @PreUpdate
  public void preUpdate(Object entity) {
    try {
      PropertyUtils.setProperty(entity, "modifyDate", LocalDate.now());
      String user = null;
      try {
       user = FacesContext.getCurrentInstance().getExternalContext().getUserPrincipal().getName();
      }
      catch (Exception npe) {
        // When in the MonthEnd ejbTimer context, there is no user. So we hardcode it
        log.info("Warning in AuditListener pre-persist: no user found");
        user = "HPC.MonthEnd";
      }
      PropertyUtils.setProperty(
          entity,
          "modifyUser",
          user);
    } catch (Exception e) {
      log.error("Error in AuditListener pre-update", e);
    }
  }
}
