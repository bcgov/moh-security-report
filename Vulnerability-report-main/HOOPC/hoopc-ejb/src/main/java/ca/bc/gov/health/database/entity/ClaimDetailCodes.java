/*
 * To change this license header, choose License Headers in Project Properties. To change this
 * template file, choose Tools | Templates and open the template in the editor.
 */
package ca.bc.gov.health.database.entity;

import ca.bc.gov.health.util.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

/**
 * The Class ClaimDetailCodes.
 *
 * @author je.tremblay
 */
@Entity
@Table(name = "CLAIM_DETAIL_CODES")
@NamedQuery(name = "ClaimDetailCodes.findAll", query = "SELECT c FROM ClaimDetailCodes c")
@NamedQuery(
    name = "ClaimDetailCodes.findAllICD10",
    query = "SELECT c FROM ClaimDetailCodes c WHERE c.codeType = 'ICD10'")
@NamedQuery(
    name = "ClaimDetailCodes.findAllService",
    query = "SELECT c FROM ClaimDetailCodes c WHERE c.codePurpose = 'SERVICE'")
@NamedQuery(
    name = "ClaimDetailCodes.findByCodeTypePurpose",
    query =
        "SELECT c FROM ClaimDetailCodes c WHERE c.codeValue = :codeValue AND c.codeType = :codeType AND c.codePurpose = :codePurpose")
@NamedQuery(
    name = "ClaimDetailCodes.findByCodeTypePurposeDupAllowed",
    query =
        "SELECT c FROM ClaimDetailCodes c WHERE c.codeValue = :codeValue AND c.codeType = :codeType AND c.codePurpose = :codePurpose"
            + " and c.duplicateAllowedInd = :duplicateAllowedInd")
@NamedQuery(
    name = "ClaimDetailCodes.findByTypePurpose",
    query =
        "SELECT c FROM ClaimDetailCodes c WHERE c.codeType = :codeType AND c.codePurpose = :codePurpose")
@NamedQuery(
    name = "ClaimDetailCodes.findByCodePurpose",
    query =
        "SELECT c FROM ClaimDetailCodes c WHERE c.codeValue = :codeValue AND c.codePurpose = :codePurpose")
@EntityListeners({AuditListener.class})
public class ClaimDetailCodes extends MainEntity implements Serializable {

  private static final long serialVersionUID = 1L;

  @Id
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "ClaimDetailCodesGenerator")
  @SequenceGenerator(
      name = "ClaimDetailCodesGenerator",
      sequenceName = "CLAIM_DETAIL_CODES_SEQ",
      allocationSize = 1)
  @Basic(optional = false)
  @NotNull
  @Column(name = "ID")
  private Long id;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 12)
  @Column(name = "CODE_PURPOSE")
  private String codePurpose;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 12)
  @Column(name = "CODE_TYPE")
  private String codeType;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 20)
  @Column(name = "CODE_VALUE")
  private String codeValue;

  @Size(max = 1)
  @Column(name = "DUPLICATE_ALLOWED_IND")
  private String duplicateAllowedInd;

  @Size(max = 100)
  @Column(name = "SHORT_DESCRIPTION")
  private String shortDescription;

  @Size(max = 2000)
  @Column(name = "LONG_DESCRIPTION")
  private String longDescription;

  @Column(name = "LOCK_SEQ_NUM")
  private Integer lockSeqNum;

  @Basic(optional = false)
  @NotNull
  @Column(name = "CREATE_DATE")
  private LocalDate createDate;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 30)
  @Column(name = "CREATE_USER")
  private String createUser;

  @Column(name = "MODIFY_DATE")
  private LocalDate modifyDate;

  @Size(max = 30)
  @Column(name = "MODIFY_USER")
  private String modifyUser;

  @OneToMany(cascade = CascadeType.ALL, mappedBy = "dcdId", fetch = FetchType.LAZY)
  private List<ServiceRates> serviceRatesList;

  @OneToMany(mappedBy = "cdcId", fetch = FetchType.LAZY)
  private List<ClaimContents> claimContentsList;

  /** Instantiates a new claim detail codes. */
  public ClaimDetailCodes() {
    serviceRatesList = new ArrayList<>();
  }

  /**
   * Instantiates a new claim detail codes.
   *
   * @param id the id
   */
  public ClaimDetailCodes(Long id) {
    this.id = id;
    serviceRatesList = new ArrayList<>();
  }

  /**
   * Instantiates a new claim detail codes.
   *
   * @param id the id
   * @param codePurpose the code purpose
   * @param codeType the code type
   * @param codeValue the code value
   * @param createDate the create date
   * @param createUser the create user
   */
  public ClaimDetailCodes(
      Long id,
      String codePurpose,
      String codeType,
      String codeValue,
      LocalDate createDate,
      String createUser) {
    this.id = id;
    this.codePurpose = codePurpose;
    this.codeType = codeType;
    this.codeValue = codeValue;
    this.createDate = createDate;
    this.createUser = createUser;
  }

  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public String getCodePurpose() {
    return codePurpose;
  }

  public void setCodePurpose(String codePurpose) {
    this.codePurpose = codePurpose;
  }

  public String getCodeType() {
    return codeType;
  }

  public void setCodeType(String codeType) {
    this.codeType = codeType;
  }

  public String getCodeValue() {
    return codeValue;
  }

  public void setCodeValue(String codeValue) {
    this.codeValue = codeValue;
  }

  public String getDuplicateAllowedInd() {
    return duplicateAllowedInd;
  }

  public void setDuplicateAllowedInd(String duplicateAllowedInd) {
    this.duplicateAllowedInd = duplicateAllowedInd;
  }

  public String getShortDescription() {
    return shortDescription;
  }

  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }

  public String getLongDescription() {
    return longDescription;
  }

  public void setLongDescription(String longDescription) {
    this.longDescription = longDescription;
  }

  public Integer getLockSeqNum() {
    return lockSeqNum;
  }

  public void setLockSeqNum(Integer lockSeqNum) {
    this.lockSeqNum = lockSeqNum;
  }

  public LocalDate getCreateDate() {
    return createDate;
  }

  public void setCreateDate(LocalDate createDate) {
    this.createDate = createDate;
  }

  public String getCreateUser() {
    return createUser;
  }

  public void setCreateUser(String createUser) {
    this.createUser = createUser;
  }

  public LocalDate getModifyDate() {
    return modifyDate;
  }

  public void setModifyDate(LocalDate modifyDate) {
    this.modifyDate = modifyDate;
  }

  public String getModifyUser() {
    return modifyUser;
  }

  public void setModifyUser(String modifyUser) {
    this.modifyUser = modifyUser;
  }

  public List<ServiceRates> getServiceRatesList() {
    return serviceRatesList;
  }

  public void setServiceRatesList(List<ServiceRates> serviceRatesList) {
    this.serviceRatesList = serviceRatesList;
  }

  public List<ClaimContents> getClaimContentsList() {
    return claimContentsList;
  }

  public void setClaimContentsList(List<ClaimContents> claimContentsList) {
    this.claimContentsList = claimContentsList;
  }

  /*
   * (non-Javadoc)
   *
   * @see java.lang.Object#hashCode()
   */
  @Override
  public int hashCode() {
    int hash = 0;
    hash += (id != null ? id.hashCode() : 0);
    return hash;
  }

  /*
   * (non-Javadoc)
   *
   * @see java.lang.Object#equals(java.lang.Object)
   */
  @Override
  public boolean equals(Object object) {

    if (!(object instanceof ClaimDetailCodes)) {
      return false;
    }
    ClaimDetailCodes other = (ClaimDetailCodes) object;
    if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
      return false;
    }
    return true;
  }

  /*
   * (non-Javadoc)
   *
   * @see java.lang.Object#toString()
   */
  @Override
  public String toString() {
    return "ca.bc.gov.health.database.entity.ClaimDetailCodes[ id=" + id + " ]";
  }
}
