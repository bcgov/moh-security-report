package ca.bc.gov.health.validation.rule;

import ca.bc.gov.health.validation.ValidationError;
import java.time.chrono.ChronoLocalDate;
import java.util.Set;
import org.apache.commons.lang3.Range;

/**
 * The Class NotInRangeRule.
 *
 * @param <T> the generic type
 * @param <R> the generic type
 */
public class NotInRangeRule<T, R extends Set<Range<ChronoLocalDate>>> extends ValidationRule<T> {

  private R ranges;

  /**
   * Instantiates a new not in range rule.
   *
   * @param fieldName the field name
   * @param ranges the ranges
   */
  public NotInRangeRule(String fieldName, R ranges) {
    super(ValidationRuleType.IN_RANGE, fieldName);
    this.ranges = ranges;
  }

  /* (non-Javadoc)
   * @see ca.bc.gov.health.validation.rule.ValidationRule#validate(java.lang.Object)
   */
  @Override
  public ValidationError validate(T entity) {
    boolean overlap =
        ranges
            .parallelStream()
            .unordered()
            .anyMatch(
                o1 -> ranges.parallelStream().anyMatch(o2 -> o1 != o2 && o1.isOverlappedBy(o2)));
    if (overlap) {
      return new ValidationError(this, getMessageFormat(), null);
    }

    return null;
  }

  protected String getMessageFormat() {
    return "One or more of the rate periods overlap";
  }
}
