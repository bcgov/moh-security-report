package ca.bc.gov.health.database.entity;

import ca.bc.gov.health.report.model.ErrorRptInViewModel;
import ca.bc.gov.health.report.model.ErrorRptOutViewModel;
import ca.bc.gov.health.report.model.MEBalRptProcessorViewModel;
import ca.bc.gov.health.report.model.MEClaimsFileProcessorViewModel;
import ca.bc.gov.health.report.model.MEFinRptViewModel;
import ca.bc.gov.health.report.model.MEInpDtlRptProcessorViewModel;
import ca.bc.gov.health.report.model.MEInpRejRptViewModel;
import ca.bc.gov.health.report.model.MEInvLetterViewModel;
import ca.bc.gov.health.report.model.MEOutDtlRptProcessorViewModel;
import ca.bc.gov.health.report.model.MEOutRejRptViewModel;
import ca.bc.gov.health.report.model.MEReimburseRptViewModel;
import ca.bc.gov.health.report.model.MEReqRptProcessorViewModel;
import ca.bc.gov.health.report.model.MESumServiceViewModel;
import ca.bc.gov.health.report.model.PayReqReportViewModel;
import jakarta.persistence.ColumnResult;
import jakarta.persistence.ConstructorResult;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedNativeQuery;
import jakarta.persistence.SqlResultSetMapping;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

@Entity
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchRecordsMEReqRptProcessor",
    query = "SELECT * FROM V_IN_ADJ_OR_DECL_REQ WHERE SEQ_ID = ?",
    resultSetMapping = "DummyMonthEndReportEntity.mapMEReqRptProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapMEReqRptProcessor",
    classes = {
      @ConstructorResult(
          targetClass = MEReqRptProcessorViewModel.class,
          columns = {
            @ColumnResult(name = "ADJ_AMT", type = BigDecimal.class),
            @ColumnResult(name = "ADJ_REASON", type = String.class),
            @ColumnResult(name = "ADMISS_DATE", type = Date.class),
            @ColumnResult(name = "BIRTHDATE", type = Date.class),
            @ColumnResult(name = "CITY", type = String.class),
            @ColumnResult(name = "CLAIM_AMT", type = BigDecimal.class),
            @ColumnResult(name = "DISCH_DATE", type = Date.class),
            @ColumnResult(name = "END_DATE", type = Date.class),
            @ColumnResult(name = "FIRST_NAME", type = String.class),
            @ColumnResult(name = "HEADING", type = String.class),
            @ColumnResult(name = "HOSPITAL_NAME", type = String.class),
            @ColumnResult(name = "HOSPITAL_NUMBER", type = String.class),
            @ColumnResult(name = "INS_CARD_NO", type = String.class),
            @ColumnResult(name = "POSTAL_CODE", type = String.class),
            @ColumnResult(name = "SEX", type = String.class),
            @ColumnResult(name = "LAST_NAME", type = String.class),
          })
    })
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchRecordsMEBalRptProcessor",
    query = "SELECT * FROM V_BAL_INVOICES_CLAIMS WHERE SEQ_ID = ?",
    resultSetMapping = "DummyMonthEndReportEntity.mapMEBalRptProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapMEBalRptProcessor",
    classes = {
      @ConstructorResult(
          targetClass = MEBalRptProcessorViewModel.class,
          columns = {
            @ColumnResult(name = "START_DATE", type = Date.class),
            @ColumnResult(name = "END_DATE", type = Date.class),
            @ColumnResult(name = "PROVINCE", type = String.class),
            @ColumnResult(name = "CLAIMS_IN", type = BigDecimal.class),
            @ColumnResult(name = "CLAIMS_OUT", type = BigDecimal.class),
            @ColumnResult(name = "INVOICE_IN", type = BigDecimal.class),
            @ColumnResult(name = "INVOICE_OUT", type = BigDecimal.class),
          })
    })
//BCMOHAD-9615-7Mar22: Retrieving patient's province too.
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchRecordsMEInpDtlRptProcessor",
    query =
        "SELECT * FROM V_DETL_RES_IN_CLAIMS WHERE SEQ_ID = ? "
            + "ORDER BY HOSPITAL_NUMBER, PROVINCE,   PROV_CLAIM_NO",
    resultSetMapping = "DummyMonthEndReportEntity.mapMEInpDtlRptProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapMEInpDtlRptProcessor",
    classes = {
      @ConstructorResult(
          targetClass = MEInpDtlRptProcessorViewModel.class,
          columns = {
            @ColumnResult(name = "PROVINCE", type = String.class),
            @ColumnResult(name = "SUBMISSION_DATE", type = Date.class),
            @ColumnResult(name = "STATUS", type = String.class),
            @ColumnResult(name = "PROV_CLAIM_NO", type = String.class),
            @ColumnResult(name = "HOSP_CLAIM_NO", type = String.class),
            @ColumnResult(name = "ASSOC_CLAIM_NO", type = String.class),
            @ColumnResult(name = "INS_CARD_NO", type = String.class),
            @ColumnResult(name = "INS_EXP_DATE", type = Date.class),
            @ColumnResult(name = "LAST_NAME", type = String.class),
            @ColumnResult(name = "FIRST_NAME", type = String.class),
            @ColumnResult(name = "BIRTHDATE", type = Date.class),
            @ColumnResult(name = "SEX", type = String.class),
            @ColumnResult(name = "NOTES", type = String.class),
            @ColumnResult(name = "ADMISS_DATE", type = Date.class),
            @ColumnResult(name = "DIAGNOSIS_CODE", type = String.class),
            @ColumnResult(name = "PROCEDURE_CODE", type = String.class),
            @ColumnResult(name = "CLAIM_AMT", type = BigDecimal.class),
            @ColumnResult(name = "ADJ_AMT", type = BigDecimal.class),
            @ColumnResult(name = "HOSP_NOTES", type = String.class),
            @ColumnResult(name = "ADJ_REASON", type = String.class),
            @ColumnResult(name = "OVERRIDE_REASON", type = String.class),
            @ColumnResult(name = "HOSPITAL_NUMBER", type = String.class),
            @ColumnResult(name = "HOSPITAL_NAME", type = String.class),
            @ColumnResult(name = "ADDRESS1", type = String.class),
            @ColumnResult(name = "CITY", type = String.class),
            @ColumnResult(name = "POSTAL_CODE", type = String.class),
            @ColumnResult(name = "ADDRESS2", type = String.class),
            @ColumnResult(name = "ADDR_PROVINCE", type = String.class),
            @ColumnResult(name = "DECEASED", type = String.class),
            @ColumnResult(name = "DISCH_DATE", type = Date.class),
            @ColumnResult(name = "DAYS_STAY", type = BigDecimal.class),
            @ColumnResult(name = "PER_DIEM_RATE", type = BigDecimal.class),
            @ColumnResult(name = "ADMISS_NO", type = String.class),
            @ColumnResult(name = "ACCIDENT_CODE", type = String.class),
            @ColumnResult(name = "HI_COST_PROC1", type = BigDecimal.class),
            @ColumnResult(name = "HI_COST_DATE1", type = Date.class),
            @ColumnResult(name = "HI_COST_PROC2", type = BigDecimal.class),
            @ColumnResult(name = "HI_COST_DATE2", type = Date.class),
            @ColumnResult(name = "HI_COST_PROC3", type = BigDecimal.class),
            @ColumnResult(name = "HI_COST_DATE3", type = Date.class),
            @ColumnResult(name = "REPORT_TYPE", type = String.class),
            @ColumnResult(name = "DEC_REASON", type = String.class),
          })
    })
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchRecordsMENResInpDtlRptProcessor",
    query =
        "SELECT * FROM V_DETL_NRES_IN_CLAIMS WHERE SEQ_ID = ? "
            + "ORDER BY HOSPITAL_NUMBER, PROVINCE,   PROV_CLAIM_NO",
    resultSetMapping = "DummyMonthEndReportEntity.mapMENResInpDtlRptProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapMENResInpDtlRptProcessor",
    classes = {
      @ConstructorResult(
          targetClass = MEInpDtlRptProcessorViewModel.class,
          columns = {
            @ColumnResult(name = "PROVINCE", type = String.class),
            @ColumnResult(name = "SUBMISSION_DATE", type = Date.class),
            @ColumnResult(name = "STATUS", type = String.class),
            @ColumnResult(name = "PROV_CLAIM_NO", type = String.class),
            @ColumnResult(name = "HOSP_CLAIM_NO", type = String.class),
            @ColumnResult(name = "ASSOC_CLAIM_NO", type = String.class),
            @ColumnResult(name = "INS_CARD_NO", type = String.class),
            @ColumnResult(name = "INS_EXP_DATE", type = Date.class),
            @ColumnResult(name = "LAST_NAME", type = String.class),
            @ColumnResult(name = "FIRST_NAME", type = String.class),
            @ColumnResult(name = "BIRTHDATE", type = Date.class),
            @ColumnResult(name = "SEX", type = String.class),
            @ColumnResult(name = "NOTES", type = String.class),
            @ColumnResult(name = "ADMISS_DATE", type = Date.class),
            @ColumnResult(name = "DIAGNOSIS_CODE", type = String.class),
            @ColumnResult(name = "PROCEDURE_CODE", type = String.class),
            @ColumnResult(name = "CLAIM_AMT", type = BigDecimal.class),
            @ColumnResult(name = "ADJ_AMT", type = BigDecimal.class),
            @ColumnResult(name = "HOSP_NOTES", type = String.class),
            @ColumnResult(name = "ADJ_REASON", type = String.class),
            @ColumnResult(name = "OVERRIDE_REASON", type = String.class),
            @ColumnResult(name = "HOSPITAL_NUMBER", type = String.class),
            @ColumnResult(name = "HOSPITAL_NAME", type = String.class),
            @ColumnResult(name = "ADDRESS1", type = String.class),
            @ColumnResult(name = "CITY", type = String.class),
            @ColumnResult(name = "POSTAL_CODE", type = String.class),
            @ColumnResult(name = "ADDRESS2", type = String.class),
            @ColumnResult(name = "DECEASED", type = String.class),
            @ColumnResult(name = "REASON", type = String.class),
            @ColumnResult(name = "DISCH_DATE", type = Date.class),
            @ColumnResult(name = "DAYS_STAY", type = BigDecimal.class),
            @ColumnResult(name = "PER_DIEM_RATE", type = BigDecimal.class),
            @ColumnResult(name = "ADMISS_NO", type = String.class),
            @ColumnResult(name = "ACCIDENT_CODE", type = String.class),
            @ColumnResult(name = "HI_COST_PROC1", type = BigDecimal.class),
            @ColumnResult(name = "HI_COST_DATE1", type = Date.class),
            @ColumnResult(name = "HI_COST_PROC2", type = BigDecimal.class),
            @ColumnResult(name = "HI_COST_DATE2", type = Date.class),
            @ColumnResult(name = "HI_COST_PROC3", type = BigDecimal.class),
            @ColumnResult(name = "HI_COST_DATE3", type = Date.class),
            @ColumnResult(name = "REPORT_TYPE", type = String.class),
            @ColumnResult(name = "DEC_REASON", type = String.class),
          })
    })
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchRecordsMEOutDtlRptProcessor",
    query =
        "SELECT * FROM V_DETL_RES_OUT_CLAIMS WHERE SEQ_ID = ? ORDER BY HOSPITAL_NUMBER,  INS_CARD_NO",
    resultSetMapping = "DummyMonthEndReportEntity.mapMEOutDtlRptProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapMEOutDtlRptProcessor",
    classes = {
      @ConstructorResult(
          targetClass = MEOutDtlRptProcessorViewModel.class,
          columns = {
            @ColumnResult(name = "PROVINCE", type = String.class),
            @ColumnResult(name = "SUBMISSION_DATE", type = Date.class),
            @ColumnResult(name = "STATUS", type = String.class),
            @ColumnResult(name = "PROV_CLAIM_NO", type = String.class),
            @ColumnResult(name = "HOSP_CLAIM_NO", type = String.class),
            @ColumnResult(name = "ASSOC_CLAIM_NO", type = String.class),
            @ColumnResult(name = "INS_CARD_NO", type = String.class),
            @ColumnResult(name = "INS_EXP_DATE", type = Date.class),
            @ColumnResult(name = "LAST_NAME", type = String.class),
            @ColumnResult(name = "FIRST_NAME", type = String.class),
            @ColumnResult(name = "BIRTHDATE", type = Date.class),
            @ColumnResult(name = "SEX", type = String.class),
            @ColumnResult(name = "NOTES", type = String.class),
            @ColumnResult(name = "SERVICE_DATE", type = Date.class),
            @ColumnResult(name = "SERVICE_CODE", type = String.class),
            @ColumnResult(name = "DIAGNOSIS_CODE", type = String.class),
            @ColumnResult(name = "PROCEDURE_CODE", type = String.class),
            @ColumnResult(name = "CLAIM_AMT", type = BigDecimal.class),
            @ColumnResult(name = "ADJ_AMT", type = BigDecimal.class),
            @ColumnResult(name = "HOSP_NOTES", type = String.class),
            @ColumnResult(name = "ADJ_REASON", type = String.class),
            @ColumnResult(name = "OVERRIDE_REASON", type = String.class),
            @ColumnResult(name = "HOSPITAL_NUMBER", type = String.class),
            @ColumnResult(name = "HOSPITAL_NAME", type = String.class),
            @ColumnResult(name = "REPORT_TYPE", type = String.class),
            @ColumnResult(name = "DEC_REASON", type = String.class),
          })
    })
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchRecordsMENonResOutDtlRptProcessor",
    query =
        "SELECT * FROM V_DETL_NRES_OUT_CLAIMS WHERE SEQ_ID = ? ORDER BY HOSPITAL_NUMBER,  INS_CARD_NO",
    resultSetMapping = "DummyMonthEndReportEntity.mapMENonResOutDtlRptProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapMENonResOutDtlRptProcessor",
    classes = {
      @ConstructorResult(
          targetClass = MEOutDtlRptProcessorViewModel.class,
          columns = {
            @ColumnResult(name = "PROVINCE", type = String.class),
            @ColumnResult(name = "SUBMISSION_DATE", type = Date.class),
            @ColumnResult(name = "STATUS", type = String.class),
            @ColumnResult(name = "PROV_CLAIM_NO", type = String.class),
            @ColumnResult(name = "HOSP_CLAIM_NO", type = String.class),
            @ColumnResult(name = "ASSOC_CLAIM_NO", type = String.class),
            @ColumnResult(name = "INS_CARD_NO", type = String.class),
            @ColumnResult(name = "INS_EXP_DATE", type = Date.class),
            @ColumnResult(name = "LAST_NAME", type = String.class),
            @ColumnResult(name = "FIRST_NAME", type = String.class),
            @ColumnResult(name = "BIRTHDATE", type = Date.class),
            @ColumnResult(name = "SEX", type = String.class),
            @ColumnResult(name = "NOTES", type = String.class),
            @ColumnResult(name = "SERVICE_DATE", type = Date.class),
            @ColumnResult(name = "SERVICE_CODE", type = String.class),
            @ColumnResult(name = "DIAGNOSIS_CODE", type = String.class),
            @ColumnResult(name = "PROCEDURE_CODE", type = String.class),
            @ColumnResult(name = "CLAIM_AMT", type = BigDecimal.class),
            @ColumnResult(name = "ADJ_AMT", type = BigDecimal.class),
            @ColumnResult(name = "HOSP_NOTES", type = String.class),
            @ColumnResult(name = "ADJ_REASON", type = String.class),
            @ColumnResult(name = "OVERRIDE_REASON", type = String.class),
            @ColumnResult(name = "HOSPITAL_NUMBER", type = String.class),
            @ColumnResult(name = "HOSPITAL_NAME", type = String.class),
            @ColumnResult(name = "REPORT_TYPE", type = String.class),
            @ColumnResult(name = "DEC_REASON", type = String.class),
          })
    })
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchRecordsPayReqProcessor",
    query =
        "SELECT * FROM   V_PAYMENT_REQ WHERE SEQ_ID = ? AND AMT > 0 ORDER BY PROV_HA_NAME,  CLAIM_TYPE",
    resultSetMapping = "DummyMonthEndReportEntity.mapPayReqProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapPayReqProcessor",
    classes = {
      @ConstructorResult(
          targetClass = PayReqReportViewModel.class,
          columns = {
            @ColumnResult(name = "PROV_HA_NAME", type = String.class),
            @ColumnResult(name = "AMT", type = BigDecimal.class),
            @ColumnResult(name = "DOC_CONTROL", type = String.class),
            @ColumnResult(name = "PAYEE_SUPPLIER", type = String.class),
            @ColumnResult(name = "DISTRIB_SUPPLIER", type = String.class),
            @ColumnResult(name = "MINISTRY", type = String.class),
            @ColumnResult(name = "RESP", type = String.class),
            @ColumnResult(name = "SERV_LINE", type = String.class),
            @ColumnResult(name = "STOB", type = String.class),
            @ColumnResult(name = "CHEQ_STUB_INFO", type = String.class),
            @ColumnResult(name = "REP_TITLE", type = String.class),
            @ColumnResult(name = "END_DATE", type = Date.class),
          })
    })
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchRecordsMEFinRptProcessor",
    query =
        "SELECT * FROM  V_FINANCIAL_SMMRY WHERE SEQ_ID = ? ORDER BY ROW_GROUP DESC, ROW_CODE ASC",
    resultSetMapping = "DummyMonthEndReportEntity.mapMEFinRptProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapMEFinRptProcessor",
    classes = {
      @ConstructorResult(
          targetClass = MEFinRptViewModel.class,
          columns = {
            @ColumnResult(name = "ROW_GROUP", type = String.class),
            @ColumnResult(name = "ROW_TYPE", type = String.class),
            @ColumnResult(name = "IN_NEW_CLAIMS", type = BigDecimal.class),
            @ColumnResult(name = "IN_ADJS", type = BigDecimal.class),
            @ColumnResult(name = "IN_TOTAL", type = BigDecimal.class),
            @ColumnResult(name = "OUT_NEW_CLAIM", type = BigDecimal.class),
            @ColumnResult(name = "OUT_ADJS", type = BigDecimal.class),
            @ColumnResult(name = "OUT_TOTAL", type = BigDecimal.class),
            @ColumnResult(name = "TOTAL_NEW_CLAIMS", type = BigDecimal.class),
            @ColumnResult(name = "TOTAL_ADJS", type = BigDecimal.class),
            @ColumnResult(name = "GRAND_TOTAL", type = BigDecimal.class),
            @ColumnResult(name = "END_DATE", type = Date.class),
          })
    })
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchRecordsMEReimburseRptProcessor",
    query =
        "SELECT * FROM  V_REIMB_SMMRY WHERE SEQ_ID = ? ORDER BY  SEQ_ID, END_DATE, HA_NAME, HOSPITAL_NUMBER, HOSPITAL_NAME",
    resultSetMapping = "DummyMonthEndReportEntity.mapMEReimburseRptProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapMEReimburseRptProcessor",
    classes = {
      @ConstructorResult(
          targetClass = MEReimburseRptViewModel.class,
          columns = {
            @ColumnResult(name = "HA_NAME", type = String.class),
            @ColumnResult(name = "HOSPITAL_NUMBER", type = String.class),
            @ColumnResult(name = "HOSPITAL_NAME", type = String.class),
            @ColumnResult(name = "IN_NEW_CLAIMS", type = BigDecimal.class),
            @ColumnResult(name = "IN_ADJS", type = BigDecimal.class),
            @ColumnResult(name = "IN_TOTAL", type = BigDecimal.class),
            @ColumnResult(name = "OUT_NEW_CLAIM", type = BigDecimal.class),
            @ColumnResult(name = "OUT_ADJS", type = BigDecimal.class),
            @ColumnResult(name = "OUT_TOTAL", type = BigDecimal.class),
            @ColumnResult(name = "TOTAL_NEW_CLAIMS", type = BigDecimal.class),
            @ColumnResult(name = "TOTAL_ADJS", type = BigDecimal.class),
            @ColumnResult(name = "GRAND_TOTAL", type = BigDecimal.class),
            @ColumnResult(name = "END_DATE", type = Date.class),
          })
    })
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchRecordsMEInpRejRptProcessor",
    query =
        "SELECT * FROM V_REJ_NRES_IN_CLAIMS WHERE SEQ_ID = ? "
            + "ORDER BY  HOSPITAL_NUMBER, INS_CARD_NO",
    resultSetMapping = "DummyMonthEndReportEntity.mapMEInpRejRptProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapMEInpRejRptProcessor",
    classes = {
      @ConstructorResult(
          targetClass = MEInpRejRptViewModel.class,
          columns = {
            @ColumnResult(name = "PROVINCE", type = String.class),
            @ColumnResult(name = "SUBMISSION_DATE", type = Date.class),
            @ColumnResult(name = "PROV_CLAIM_NO", type = String.class),
            @ColumnResult(name = "HOSP_CLAIM_NO", type = String.class),
            @ColumnResult(name = "ASSOC_CLAIM_NO", type = String.class),
            @ColumnResult(name = "INS_CARD_NO", type = String.class),
            @ColumnResult(name = "INS_EXP_DATE", type = Date.class),
            @ColumnResult(name = "LAST_NAME", type = String.class),
            @ColumnResult(name = "FIRST_NAME", type = String.class),
            @ColumnResult(name = "BIRTHDATE", type = Date.class),
            @ColumnResult(name = "SEX", type = String.class),
            @ColumnResult(name = "ADMISS_DATE", type = Date.class),
            @ColumnResult(name = "DIAGNOSIS_CODE", type = String.class),
            @ColumnResult(name = "PROCEDURE_CODE", type = String.class),
            @ColumnResult(name = "CLAIM_AMT", type = BigDecimal.class),
            @ColumnResult(name = "ADJ_AMT", type = BigDecimal.class),
            @ColumnResult(name = "HOSP_NOTES", type = String.class),
            @ColumnResult(name = "ADJ_REASON", type = String.class),
            @ColumnResult(name = "OVERRIDE_REASON", type = String.class),
            @ColumnResult(name = "HOSPITAL_NUMBER", type = String.class),
            @ColumnResult(name = "HOSPITAL_NAME", type = String.class),
            @ColumnResult(name = "ADDRESS1", type = String.class),
            @ColumnResult(name = "CITY", type = String.class),
            @ColumnResult(name = "POSTAL_CODE", type = String.class),
            @ColumnResult(name = "ADDRESS2", type = String.class),
            @ColumnResult(name = "DECEASED", type = String.class),
            @ColumnResult(name = "DISCH_DATE", type = Date.class),
            @ColumnResult(name = "DAYS_STAY", type = BigDecimal.class),
            @ColumnResult(name = "PER_DIEM_RATE", type = BigDecimal.class),
            @ColumnResult(name = "ADMISS_NO", type = String.class),
            @ColumnResult(name = "ACCIDENT_CODE", type = String.class),
            @ColumnResult(name = "HI_COST_PROC1", type = BigDecimal.class),
            @ColumnResult(name = "HI_COST_DATE1", type = Date.class),
            @ColumnResult(name = "HI_COST_PROC2", type = BigDecimal.class),
            @ColumnResult(name = "HI_COST_DATE2", type = Date.class),
            @ColumnResult(name = "HI_COST_PROC3", type = BigDecimal.class),
            @ColumnResult(name = "HI_COST_DATE3", type = Date.class),
            @ColumnResult(name = "REPORT_TYPE", type = String.class),
          })
    })
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchRecordsMEOutRejRptPreProcessor",
    query =
        "SELECT * FROM V_REJ_NRES_OUT_CLAIMS WHERE SEQ_ID = ? "
            + "ORDER BY  HOSPITAL_NUMBER, INS_CARD_NO",
    resultSetMapping = "DummyMonthEndReportEntity.mapMEOutRejRptPreProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapMEOutRejRptPreProcessor",
    classes = {
      @ConstructorResult(
          targetClass = MEOutRejRptViewModel.class,
          columns = {
            @ColumnResult(name = "PROVINCE", type = String.class),
            @ColumnResult(name = "SUBMISSION_DATE", type = Date.class),
            @ColumnResult(name = "PROV_CLAIM_NO", type = String.class),
            @ColumnResult(name = "HOSP_CLAIM_NO", type = String.class),
            @ColumnResult(name = "ASSOC_CLAIM_NO", type = String.class),
            @ColumnResult(name = "INS_CARD_NO", type = String.class),
            @ColumnResult(name = "INS_EXP_DATE", type = Date.class),
            @ColumnResult(name = "LAST_NAME", type = String.class),
            @ColumnResult(name = "FIRST_NAME", type = String.class),
            @ColumnResult(name = "BIRTHDATE", type = Date.class),
            @ColumnResult(name = "SEX", type = String.class),
            @ColumnResult(name = "NOTES", type = String.class),
            @ColumnResult(name = "SERVICE_DATE", type = Date.class),
            @ColumnResult(name = "SERVICE_CODE", type = String.class),
            @ColumnResult(name = "DIAGNOSIS_CODE", type = String.class),
            @ColumnResult(name = "PROCEDURE_CODE", type = String.class),
            @ColumnResult(name = "CLAIM_AMT", type = BigDecimal.class),
            @ColumnResult(name = "ERROR_MESSAGES", type = String.class),
            @ColumnResult(name = "HOSPITAL_NUMBER", type = String.class),
            @ColumnResult(name = "HOSPITAL_NAME", type = String.class),
            @ColumnResult(name = "REPORT_TYPE", type = String.class),
          })
    })
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchRecordsMEInvLetterRptProcessor",
    query = "SELECT * FROM  V_INVOICE_LETTER WHERE SEQ_ID = ? ORDER BY  SEQ_ID",
    resultSetMapping = "DummyMonthEndReportEntity.mapMEInvLetterRptProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapMEInvLetterRptProcessor",
    classes = {
      @ConstructorResult(
          targetClass = MEInvLetterViewModel.class,
          columns = {
            @ColumnResult(name = "NAME", type = String.class),
            @ColumnResult(name = "PROVINCE_CODE", type = String.class),
            @ColumnResult(name = "INVOICE_CONTACT", type = String.class),
            @ColumnResult(name = "INVOICE_TITLE1", type = String.class),
            @ColumnResult(name = "INVOICE_TITLE2", type = String.class),
            @ColumnResult(name = "INVOICE_OFFICE1", type = String.class),
            @ColumnResult(name = "INVOICE_OFFICE2", type = String.class),
            @ColumnResult(name = "INVOICE_ADDRESS1", type = String.class),
            @ColumnResult(name = "INVOICE_ADDRESS2", type = String.class),
            @ColumnResult(name = "INVOICE_CITY", type = String.class),
            @ColumnResult(name = "INVOICE_POSTAL_CODE", type = String.class),
            @ColumnResult(name = "INVOICE_NUMBER", type = String.class),
            @ColumnResult(name = "IN_TOTAL_AMT_CLAIMED", type = BigDecimal.class),
            @ColumnResult(name = "IN_ADJ_AMOUNT", type = BigDecimal.class),
            @ColumnResult(name = "OUT_TOTAL_AMT_CLAIMED", type = BigDecimal.class),
            @ColumnResult(name = "OUT_ADJ_AMOUNT", type = BigDecimal.class),
            @ColumnResult(name = "START_DATE", type = Date.class),
            @ColumnResult(name = "END_DATE", type = Date.class),
          })
    })
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchRecordsMESumServiceRptProcessor",
    query = "SELECT * FROM  V_SERVICES_SMMRY WHERE SEQ_ID = ? ORDER BY HOSPITAL_NAME",
    resultSetMapping = "DummyMonthEndReportEntity.mapMESumServiceRptProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapMESumServiceRptProcessor",
    classes = {
      @ConstructorResult(
          targetClass = MESumServiceViewModel.class,
          columns = {
            @ColumnResult(name = "PROVINCE", type = String.class),
            @ColumnResult(name = "START_DATE", type = Date.class),
            @ColumnResult(name = "END_DATE", type = Date.class),
            @ColumnResult(name = "HOSPITAL_NAME", type = String.class),
            @ColumnResult(name = "SERVICE_CODE", type = String.class),
            @ColumnResult(name = "SERVICE_COUNT", type = BigDecimal.class),
            @ColumnResult(name = "INVOICED_AMOUNT", type = BigDecimal.class),
          })
    })
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchMEClaimsFileProcessor",
    query = "SELECT * FROM V_NONRES_CLAIM_RECS WHERE SEQ_ID = ? ORDER BY DATA_RECORD",
    resultSetMapping = "DummyMonthEndReportEntity.mapMEClaimsFileProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapMEClaimsFileProcessor",
    classes = {
      @ConstructorResult(
          targetClass = MEClaimsFileProcessorViewModel.class,
          columns = {
            @ColumnResult(name = "DATA_RECORD", type = String.class),
          })
    })
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchMEClaimsFileProcessorON",
    query = "SELECT * FROM V_NONRES_CLAIM_RECS_ON WHERE SEQ_ID = ? ORDER BY DATA_RECORD",
    resultSetMapping = "DummyMonthEndReportEntity.mapMEClaimsFileProcessorON")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapMEClaimsFileProcessorON",
    classes = {
      @ConstructorResult(
          targetClass = MEClaimsFileProcessorViewModel.class,
          columns = {
            @ColumnResult(name = "DATA_RECORD", type = String.class),
          })
    })

//Start code BCMOHAD-9621 Automatically generate the error reports for the Alberta and Ontario files **
@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchRecordsErrorInRptProcessor",
    query = "SELECT * FROM  V_ERROR_RES_IN_CLAIMS WHERE BILLING_PERIOD = ? AND PROV_NAME = ? ORDER BY PROCESSED_DATE",
    resultSetMapping = "DummyMonthEndReportEntity.mapRecordsErrorInRptProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapRecordsErrorInRptProcessor",
    classes = {
      @ConstructorResult(
          targetClass = ErrorRptInViewModel.class,
          columns = {
            @ColumnResult(name = "PROVINCIAL_CLAIM_ID", type = String.class),
            @ColumnResult(name = "HOSPITAL_NAME", type = String.class),
            @ColumnResult(name = "PHN", type = String.class),
            @ColumnResult(name = "LAST_NAME", type = String.class),
            @ColumnResult(name = "FIRST_NAME", type = String.class),
            @ColumnResult(name = "BIRTH_DATE", type = String.class),
            @ColumnResult(name = "ADMISSION_DATE", type = String.class),
            @ColumnResult(name = "DISCHARGE_DATE", type = String.class),
            @ColumnResult(name = "TOTAL_AMOUNT_CLAIMED", type = BigDecimal.class),
            @ColumnResult(name = "ERROR_TEXT", type = String.class),
            @ColumnResult(name = "ERROR_TYPE", type = String.class),
            @ColumnResult(name = "BILLING_PERIOD", type = String.class),
            @ColumnResult(name = "PROCESSED_DATE", type = String.class),
            @ColumnResult(name = "PROV_NAME", type = String.class),
          })
    })

@NamedNativeQuery(
    name = "DummyMonthEndReportEntity.fetchRecordsErrorOutRptProcessor",
    query = "SELECT * FROM  V_ERROR_RES_OUT_CLAIMS WHERE BILLING_PERIOD = ? AND PROV_NAME = ? ORDER BY PROCESSED_DATE",
    resultSetMapping = "DummyMonthEndReportEntity.mapRecordsErrorOutRptProcessor")
@SqlResultSetMapping(
    name = "DummyMonthEndReportEntity.mapRecordsErrorOutRptProcessor",
    classes = {
      @ConstructorResult(
          targetClass = ErrorRptOutViewModel.class,
          columns = {
            @ColumnResult(name = "PROVINCIAL_CLAIM_ID", type = String.class),
            @ColumnResult(name = "HOSPITAL_NAME", type = String.class),
            @ColumnResult(name = "PHN", type = String.class),
            @ColumnResult(name = "LAST_NAME", type = String.class),
            @ColumnResult(name = "FIRST_NAME", type = String.class),
            @ColumnResult(name = "BIRTH_DATE", type = String.class),
            @ColumnResult(name = "SERVICE_DATE", type = String.class),
            @ColumnResult(name = "SERVICE_CODE", type = String.class),
            @ColumnResult(name = "TOTAL_AMOUNT_CLAIMED", type = BigDecimal.class),
            @ColumnResult(name = "ERROR_TEXT", type = String.class),
            @ColumnResult(name = "ERROR_TYPE", type = String.class),
            @ColumnResult(name = "BILLING_PERIOD", type = String.class),
            @ColumnResult(name = "PROCESSED_DATE", type = String.class),
            @ColumnResult(name = "PROV_NAME", type = String.class),
          })
    })
//End code BCMOHAD-9621 Automatically generate the error reports for the Alberta and Ontario files **

public class DummyMonthEndReportEntity implements Serializable {

  private static final long serialVersionUID = 1L;

  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  private Long id;

  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  @Override
  public int hashCode() {
    int hash = 0;
    hash += (id != null ? id.hashCode() : 0);
    return hash;
  }

  @Override
  public boolean equals(Object object) {
    if (!(object instanceof DummyMonthEndReportEntity)) {
      return false;
    }
    DummyMonthEndReportEntity other = (DummyMonthEndReportEntity) object;
    if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
      return false;
    }
    return true;
  }

  @Override
  public String toString() {
    return "ca.bc.gov.health.database.entity.DummyMonthEndReportEntity[ id=" + id + " ]";
  }
}
