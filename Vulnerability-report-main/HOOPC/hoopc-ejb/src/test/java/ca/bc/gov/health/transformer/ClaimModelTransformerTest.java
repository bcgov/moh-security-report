package ca.bc.gov.health.transformer;

import ca.bc.gov.health.database.entity.ClaimStatusCodes;
import ca.bc.gov.health.database.entity.HospitalOopClaims;
import ca.bc.gov.health.database.entity.Hospitals;
import ca.bc.gov.health.database.entity.ProvincesTerritories;
import ca.bc.gov.health.service.HoopcAppService;
import ca.bc.gov.health.service.viewmodel.ClaimViewModel;
import static ca.bc.gov.health.transformer.ClaimModelTransformerTestHelper.TEST_HOSPITAL_NUMBER;
import static ca.bc.gov.health.transformer.ClaimModelTransformerTestHelper.TEST_PROVINCE;
import static ca.bc.gov.health.transformer.ClaimModelTransformerTestHelper.TEST_PROVINCE2;
import static ca.bc.gov.health.transformer.ClaimModelTransformerTestHelper.TEST_STATUS_CODE;
import static ca.bc.gov.health.transformer.ClaimModelTransformerTestHelper.assertEntityToView;
import static ca.bc.gov.health.transformer.ClaimModelTransformerTestHelper.assertViewToEntity;
import static ca.bc.gov.health.transformer.ClaimModelTransformerTestHelper.createClaimEntity;
import static ca.bc.gov.health.transformer.ClaimModelTransformerTestHelper.createViewModel;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;

public class ClaimModelTransformerTest {

  @InjectMocks private ClaimModelTransformer claimModelTransformer;

  @Mock private HoopcAppService appService;

  @BeforeEach
  public void init() {
    // GIVEN
    MockitoAnnotations.initMocks(this);
  }

  @Test
  public void transformClaimViewToEntityTest() {
    // GIVEN
    ClaimViewModel claimView = createViewModel();
    Mockito.when(appService.getProvince(TEST_PROVINCE))
        .thenReturn(
            new ProvincesTerritories() {
              {
                setProvinceCode(TEST_PROVINCE);
              }
            });
    Mockito.when(appService.getProvince(TEST_PROVINCE2))
        .thenReturn(
            new ProvincesTerritories() {
              {
                setProvinceCode(TEST_PROVINCE2);
              }
            });
    Mockito.when(appService.getHospital(TEST_PROVINCE, TEST_HOSPITAL_NUMBER))
        .thenReturn(
            new Hospitals() {
              {
                setProvince(TEST_PROVINCE);
                setHospitalNumber(TEST_HOSPITAL_NUMBER);
              }
            });
    Mockito.when(appService.getByStatusCode(TEST_STATUS_CODE))
        .thenReturn(
            new ClaimStatusCodes() {
              {
                setStatusCode(TEST_STATUS_CODE);
              }
            });

    // WHEN
    HospitalOopClaims claim = new HospitalOopClaims();
    claimModelTransformer.claimViewToEntity(claimView, claim);

    // THEN
    Mockito.verify(appService).getProvince(TEST_PROVINCE);
    Mockito.verify(appService).getProvince(TEST_PROVINCE2);
    Mockito.verify(appService).getHospital(TEST_PROVINCE, TEST_HOSPITAL_NUMBER);
    Mockito.verify(appService).getByStatusCode(TEST_STATUS_CODE);
    Mockito.verifyNoMoreInteractions(appService);
    assertViewToEntity(claim);
  }

  @Test
  public void transformClaimEntityToViewTest() {
    // GIVEN
    HospitalOopClaims claim = createClaimEntity();

    // WHEN
    ClaimViewModel claimView = claimModelTransformer.claimEntityToView(claim);

    // THEN
    Mockito.verifyNoMoreInteractions(appService);
    assertEntityToView(claimView);
  }
}
