package ca.bc.gov.health.transformer;

import ca.bc.gov.health.constants.ClaimContentContext;
import ca.bc.gov.health.constants.ClaimDetailCodePurpose;
import ca.bc.gov.health.constants.ClaimDetailCodeType;
import ca.bc.gov.health.constants.ClaimType;
import ca.bc.gov.health.constants.ResidencyType;
import ca.bc.gov.health.database.entity.Admissions;
import ca.bc.gov.health.database.entity.ClaimContents;
import ca.bc.gov.health.database.entity.ClaimDetailCodes;
import ca.bc.gov.health.database.entity.ClaimStatusCodes;
import ca.bc.gov.health.database.entity.ClaimTypes;
import ca.bc.gov.health.database.entity.HospitalOopClaims;
import ca.bc.gov.health.database.entity.Hospitals;
import ca.bc.gov.health.database.entity.Patients;
import ca.bc.gov.health.database.entity.ProvincesTerritories;
import ca.bc.gov.health.database.entity.ResidencyTypes;
import ca.bc.gov.health.service.viewmodel.AdmissionsViewModel;
import ca.bc.gov.health.service.viewmodel.ClaimViewModel;
import ca.bc.gov.health.service.viewmodel.PatientsViewModel;
import java.math.BigDecimal;
import java.time.LocalDate;
import org.junit.jupiter.api.Assertions;

public class ClaimModelTransformerTestHelper extends BaseTransformerHelper {

  public static final String TEST_SOURCE = "MANUAL";
  public static final String TEST_PROVINCE = "BC";
  public static final String TEST_PROVINCE2 = "AB";
  public static final LocalDate TEST_SUBMISSION_DATE = LocalDate.now();
  public static final LocalDate TEST_PROCESSED_DATE = LocalDate.now().plusDays(1);
  public static final LocalDate TEST_SERVICE_DATE = LocalDate.now().plusDays(2);
  public static final String TEST_CODING_SCHEME = "codingScheme";
  public static final String TEST_PROV_CLAIMID = "provid";
  public static final String TEST_HOSPITAL_NAME_NUMBER = "100-TestHospital";
  public static final String TEST_HOSPITAL_NUMBER = "100";
  public static final String TEST_HOSPITAL_NAME = "TestHospital";
  public static final String TEST_HOSPITAL_CLAIM_NUMBER = "9999999999";
  public static final String TEST_HOSPITAL_NOTES = "Hospital Note";
  public static final String TEST_REVIEW_NOTES = "Review not";
  public static final String TEST_REVIEW_FLAG = "Y";
  public static final String TEST_CHANGE_REASON = "Change Reason";
  public static final String TEST_CHANGE_FLAG = "N";
  public static final String TEST_SERVICE_CODE = "S000";
  public static final String TEST_STATUS_CODE = "PENDING";
  public static final String TEST_ACCIDENT_INDICATOR = "N";
  public static final BigDecimal TEST_TOTAL_AMT = BigDecimal.TEN;

  public static final String TEST_INSURANCE_NUMBER = "66666666666666";
  public static final LocalDate TEST_ADMISSION_DATE = LocalDate.now().plusDays(3);

  /**
   * Creates a test ClaimViewModel object
   *
   * @return
   */
  public static ClaimViewModel createViewModel() {
    ClaimViewModel claimView =
        new ClaimViewModel() {
          {
            // Hidden fields
            setClaimSource(TEST_SOURCE);
            setClaimType(
                new ClaimTypes() {
                  {
                    setClaimType(ClaimType.INPATIENT.toString());
                  }
                });
            setResidencyType(
                new ResidencyTypes() {
                  {
                    setTypeCode(ResidencyType.RES.toString());
                  }
                });
            setStatusCode(TEST_STATUS_CODE);
            setIcdCodingScheme(TEST_CODING_SCHEME);
            setSubmissionDate(TEST_SUBMISSION_DATE);
            setProcessedDate(TEST_PROCESSED_DATE);
            setProvincialClaimId(TEST_PROV_CLAIMID);
            setServiceDate(TEST_SERVICE_DATE);
            setHospitalClaimNumber(TEST_HOSPITAL_CLAIM_NUMBER);

            // Claim data
            setTreatingProvince(TEST_PROVINCE);
            setReceivingProvince(TEST_PROVINCE2);
            setHospitalNumberAndName(TEST_HOSPITAL_NAME_NUMBER);

            setHospitalNotes(TEST_HOSPITAL_NOTES);
            setReviewNotes(TEST_REVIEW_NOTES);
            setReviewFlag(TEST_REVIEW_FLAG);

            setAccidentIndicator(TEST_ACCIDENT_INDICATOR);
            setTotalAmountClaimed(TEST_TOTAL_AMT);

            // Patient
            setPatient(
                new PatientsViewModel() {
                  {
                    // Check only one to make sure it's called (see other tests for other fields)
                    setInsuranceCardNumber(TEST_INSURANCE_NUMBER);
                  }
                });

            // Admission
            setAdmission(
                new AdmissionsViewModel() {
                  {
                    setAdmissionDate(TEST_ADMISSION_DATE);
                    // Check only one to make sure it's called (see other tests for other fields)
                  }
                });
          }
        };

    return claimView;
  }

  /**
   * Creates a test HospitalOopClaims object
   *
   * @return
   */
  protected static HospitalOopClaims createClaimEntity() {
    HospitalOopClaims c =
        new HospitalOopClaims() {
          {
            setClaimSource(TEST_SOURCE);
            setCtsId(
                new ClaimTypes() {
                  {
                    setClaimType(ClaimType.INPATIENT.toString());
                  }
                });
            setRtsId(
                new ResidencyTypes() {
                  {
                    setTypeCode(ResidencyType.RES.toString());
                  }
                });
            setCsId(
                new ClaimStatusCodes() {
                  {
                    setStatusCode(TEST_STATUS_CODE);
                  }
                });
            setIcdCodingScheme(TEST_CODING_SCHEME);
            setSubmissionDate(TEST_SUBMISSION_DATE);
            setProcessedDate(TEST_PROCESSED_DATE);
            setProvincialClaimId(TEST_PROV_CLAIMID);
            setServiceDate(TEST_SERVICE_DATE);
            setHospitalClaimNumber(TEST_HOSPITAL_CLAIM_NUMBER);

            // Claim data
            setTreatingPteId(
                new ProvincesTerritories() {
                  {
                    setProvinceCode(TEST_PROVINCE);
                  }
                });
            setHspId(
                new Hospitals() {
                  {
                    setProvince(TEST_PROVINCE);
                    setHospitalNumber(TEST_HOSPITAL_NUMBER);
                    setName(TEST_HOSPITAL_NAME);
                  }
                });

            setHospitalNotes(TEST_HOSPITAL_NOTES);
            setReviewNotes(TEST_REVIEW_NOTES);
            setClaimToBeReviewedInd(TEST_REVIEW_FLAG);
            setClaimChangeReason(TEST_CHANGE_REASON);
            setChangeToClaimInd(TEST_CHANGE_FLAG);

            setAccidentInd(TEST_ACCIDENT_INDICATOR);
            setTotalAmountClaimed(TEST_TOTAL_AMT);

            // Service Code
            getClaimContentsList()
                .add(
                    createClaimContent(
                        ClaimContentContext.SERVICE,
                        TEST_SERVICE_CODE,
                        ClaimDetailCodeType.SERVICE,
                        ClaimDetailCodePurpose.SERVICE));

            // Patient
            setPatId(
                new Patients() {
                  {
                    // Check only one to make sure it's called (see other tests for other fields)
                    setInsuranceCardNumber(TEST_INSURANCE_NUMBER);
                  }
                });

            // Admission
            getAdmissionsList()
                .add(
                    new Admissions() {
                      {
                        setAdmissionDate(TEST_ADMISSION_DATE);
                        // Check only one to make sure it's called (see other tests for other
                        // fields)
                      }
                    });
          }
        };
    return c;
  }

  private static ClaimContents createClaimContent(
      ClaimContentContext context,
      String codeValue,
      ClaimDetailCodeType codeType,
      ClaimDetailCodePurpose codePurpose) {
    return new ClaimContents() {
      {
        setCdcId(
            new ClaimDetailCodes() {
              {
                setCodeValue(codeValue);
                setCodeType(codeType.toString());
                setCodePurpose(codePurpose.toString());
              }
            });
        setContext(context.toString());
      }
    };
  }

  protected static void assertViewToEntity(HospitalOopClaims c) {
    // Hidden fields
    Assertions.assertEquals(TEST_SOURCE, c.getClaimSource());
    Assertions.assertEquals(ClaimType.INPATIENT.toString(), c.getCtsId().getClaimType());
    Assertions.assertEquals(ResidencyType.RES.toString(), c.getRtsId().getTypeCode());
    Assertions.assertEquals(TEST_STATUS_CODE, c.getCsId().getStatusCode());
    Assertions.assertEquals(TEST_CODING_SCHEME, c.getIcdCodingScheme());
    Assertions.assertEquals(TEST_SUBMISSION_DATE, c.getSubmissionDate());
    Assertions.assertEquals(TEST_PROCESSED_DATE, c.getProcessedDate());
    Assertions.assertEquals(TEST_PROV_CLAIMID, c.getProvincialClaimId());
    Assertions.assertEquals(TEST_HOSPITAL_CLAIM_NUMBER, c.getHospitalClaimNumber());

    // Claim fields
    Assertions.assertEquals(TEST_PROVINCE, c.getTreatingPteId().getProvinceCode());
    Assertions.assertEquals(TEST_PROVINCE, c.getHspId().getProvince());
    Assertions.assertEquals(TEST_HOSPITAL_NUMBER, c.getHspId().getHospitalNumber());

    Assertions.assertEquals(TEST_HOSPITAL_NOTES, c.getHospitalNotes());
    Assertions.assertEquals(TEST_REVIEW_NOTES, c.getReviewNotes());
    Assertions.assertEquals(TEST_REVIEW_FLAG, c.getClaimToBeReviewedInd());

    Assertions.assertEquals(TEST_ACCIDENT_INDICATOR, c.getAccidentInd());
    Assertions.assertEquals(TEST_TOTAL_AMT, c.getTotalAmountClaimed());

    // Patient
    Assertions.assertNotNull(c.getPatId());
    Assertions.assertEquals(TEST_INSURANCE_NUMBER, c.getPatId().getInsuranceCardNumber());

    // Admission
    Assertions.assertNotNull(c.getAdmissionsList().get(0));
    Assertions.assertEquals(1, c.getAdmissionsList().size());
    Assertions.assertEquals(TEST_ADMISSION_DATE, c.getAdmissionsList().get(0).getAdmissionDate());
  }

  protected static void assertEntityToView(ClaimViewModel c) {
    Assertions.assertEquals(TEST_SOURCE, c.getClaimSource());
    Assertions.assertEquals(ClaimType.INPATIENT.toString(), c.getClaimType().getClaimType());
    Assertions.assertEquals(ResidencyType.RES.toString(), c.getResidencyType().getTypeCode());
    Assertions.assertEquals(TEST_STATUS_CODE, c.getStatusCode());
    Assertions.assertEquals(TEST_CODING_SCHEME, c.getIcdCodingScheme());
    Assertions.assertEquals(TEST_SUBMISSION_DATE, c.getSubmissionDate());
    Assertions.assertEquals(TEST_PROCESSED_DATE, c.getProcessedDate());
    Assertions.assertEquals(TEST_PROV_CLAIMID, c.getProvincialClaimId());
    Assertions.assertEquals(TEST_HOSPITAL_CLAIM_NUMBER, c.getHospitalClaimNumber());

    // Claim fields
    Assertions.assertEquals(TEST_PROVINCE, c.getTreatingProvince());
    Assertions.assertEquals(TEST_HOSPITAL_NAME_NUMBER, c.getHospitalNumberAndName());

    Assertions.assertEquals(TEST_HOSPITAL_NOTES, c.getHospitalNotes());
    Assertions.assertEquals(TEST_REVIEW_NOTES, c.getReviewNotes());
    Assertions.assertEquals(TEST_REVIEW_FLAG, c.getReviewFlag());

    Assertions.assertEquals(TEST_ACCIDENT_INDICATOR, c.getAccidentIndicator());
    Assertions.assertEquals(TEST_TOTAL_AMT, c.getTotalAmountClaimed());

    // Service Code
    Assertions.assertEquals(TEST_SERVICE_CODE, c.getServiceCodeValue());

    // Patient
    Assertions.assertNotNull(c.getPatient());
    Assertions.assertEquals(TEST_INSURANCE_NUMBER, c.getPatient().getInsuranceCardNumber());

    // Admission
    Assertions.assertNotNull(c.getAdmission());
    Assertions.assertEquals(TEST_ADMISSION_DATE, c.getAdmission().getAdmissionDate());
  }
}
