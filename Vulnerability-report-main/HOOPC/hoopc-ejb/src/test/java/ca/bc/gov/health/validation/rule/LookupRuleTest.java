package ca.bc.gov.health.validation.rule;

import ca.bc.gov.health.validation.ValidationError;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;

public class LookupRuleTest {

  private static String FIELD_NAME = "FieldName";
  private static String OK_VALUE = "OK";

  public static boolean lookupFunction(String value) {
    return OK_VALUE.equals(value);
  }

  @Test
  public void lookup_OK() {
    TestObject obj =
        new TestObject() {
          {
            setStringValue(OK_VALUE);
          }
        };

    ValidationRule<TestObject> rule =
        new LookupRule<TestObject, String>(
            FIELD_NAME, TestObject::getStringValue, LookupRuleTest::lookupFunction);

    ValidationError error = rule.validate(obj);

    assertNull(error);
  }

  @Test
  public void lookup_Null() {
    TestObject obj = new TestObject();

    ValidationRule<TestObject> rule =
        new LookupRule<TestObject, String>(
            FIELD_NAME, o -> o.getStringValue(), v -> lookupFunction(v));

    ValidationError error = rule.validate(obj);

    assertNull(error);
  }

  @Test
  public void lookup_Error() {
    TestObject obj =
        new TestObject() {
          {
            setStringValue("NOTOK");
          }
        };

    ValidationRule<TestObject> rule =
        new LookupRule<TestObject, String>(
            FIELD_NAME, o -> o.getStringValue(), v -> lookupFunction(v));

    ValidationError error = rule.validate(obj);

    assertNotNull(error);
    assertEquals(FIELD_NAME, error.getRule().getRuleIdentifier());
    assertEquals(ValidationRuleType.LOOKUP_VALUE, error.getRule().getType());
    assertNotNull(error.getMessage());
    assertEquals("Invalid code NOTOK for FieldName", error.getMessage());
  }
}
