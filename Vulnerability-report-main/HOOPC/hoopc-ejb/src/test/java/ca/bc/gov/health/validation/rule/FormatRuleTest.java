package ca.bc.gov.health.validation.rule;

import ca.bc.gov.health.validation.ValidationError;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;

public class FormatRuleTest {
  private static String FIELD_NAME = "FieldName";
  private static String FORMAT = "^[A-Za-z]\\d[A-Za-z][ ]*\\d[A-Za-z]\\d$";

  @Test
  public void format_OK() {
    TestObject obj =
        new TestObject() {
          {
            setStringValue("X0X 0X0");
          }
        };

    ValidationRule<TestObject> rule =
        new FormatRule<TestObject>(FIELD_NAME, o -> o.getStringValue(), FORMAT);

    ValidationError error = rule.validate(obj);

    assertNull(error);
  }

  @Test
  public void format_Null() {
    TestObject obj = new TestObject();

    ValidationRule<TestObject> rule =
        new FormatRule<TestObject>(FIELD_NAME, o -> o.getStringValue(), FORMAT);

    ValidationError error = rule.validate(obj);

    assertNull(error);
  }

  @Test
  public void format_Error() {
    TestObject obj =
        new TestObject() {
          {
            setStringValue("1X1 X1X");
          }
        };

    ValidationRule<TestObject> rule =
        new FormatRule<TestObject>(FIELD_NAME, o -> o.getStringValue(), FORMAT);

    ValidationError error = rule.validate(obj);

    assertNotNull(error);
    assertEquals(ValidationRuleType.FORMAT, error.getRule().getType());
    assertEquals(FIELD_NAME, error.getRule().getRuleIdentifier());
    assertNotNull(error.getMessage());
    assertEquals("FieldName invalid format", error.getMessage());
  }
}
