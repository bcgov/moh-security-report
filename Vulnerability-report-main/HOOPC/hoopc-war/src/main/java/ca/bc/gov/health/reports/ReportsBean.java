/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.reports;

import ca.bc.gov.health.beans.ApplicationBean;
import ca.bc.gov.health.beans.BaseBean;
import ca.bc.gov.health.exception.HoopcException;
import ca.bc.gov.health.exception.HoopcValidationException;
import ca.bc.gov.health.report.ClaimReportBuilder;
import ca.bc.gov.health.report.model.ClaimReportViewModel;
import jakarta.faces.context.FacesContext;
import jakarta.inject.Inject;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.Serializable;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/** @author trevor.schiavone */
public abstract class ReportsBean extends BaseBean implements Serializable {

  private static final long serialVersionUID = 6879869945025626083L;

  ClaimReportViewModel viewModel = new ClaimReportViewModel();
  private static final Logger log = LoggerFactory.getLogger(ReportsBean.class);

  @Inject private ClaimReportBuilder reportBuilder;
  @Inject ApplicationBean appBean;

  protected void init() {
    viewModel.setAdHocFlag("Y");
    viewModel.setClaimType("BOTH");
    viewModel.setReportType("DETAILED");
  }

  /** Run report PDF. */
  public void runReportPDF() {
    String contentType = "application/pdf";
    String contentDisposition = "inline; filename=\"HPC.pdf\"";
    viewModel.setReportFormat("PDF");
    handleReport(contentType, contentDisposition);
  }

  /** Run report CSV. */
  public void runReportCSV() {
    String contentType = "text/csv";
    String contentDisposition = "inline; filename=\"HPC.csv\"";
    viewModel.setReportFormat("CSV");
    handleReport(contentType, contentDisposition);
  }

  protected void handleReport(String contentType, String contentDisposition) {
    try {

      byte[] file = reportBuilder.generateReport(viewModel);

      FacesContext fc = FacesContext.getCurrentInstance();
      HttpServletResponse response = (HttpServletResponse) fc.getExternalContext().getResponse();
      response.reset();
      response.setContentType(contentType);
      response.setContentLength(file.length);
      response.setHeader("Content-Disposition", contentDisposition);
      response.getOutputStream().write(file);
      fc.responseComplete();
    } catch (HoopcValidationException e) {
      addErrorMessage(e.getMessage());
    } catch (HoopcException e) {
      log.error(formatMessage(e));
      addMessage(new HoopcException(e));
    } catch (IOException e) {
      HoopcException hex = new HoopcException(e);
      log.error(formatMessage(hex));
      addMessage(hex);
    }
  }

  public ClaimReportViewModel getViewModel() {
    return viewModel;
  }

  public void setViewModel(ClaimReportViewModel viewModel) {
    this.viewModel = viewModel;
  }

  // This only exists as a method for the front end to call to trigger validation
  // the p:commandButton in reportSubmit.xhtml requires an action
  public void dummyAction() {}
}
