/*
 * To change this license header, choose License Headers in Project Properties. To change this
 * template file, choose Tools | Templates and open the template in the editor.
 */
package ca.bc.gov.health.validators;

import jakarta.faces.application.FacesMessage;
import jakarta.faces.component.UIComponent;
import jakarta.faces.component.UIInput;
import jakarta.faces.context.FacesContext;
import jakarta.faces.event.ComponentSystemEvent;
import java.io.Serializable;
import org.apache.commons.lang3.StringUtils;

/** The Class AdjustmentRequestValidator. */
public abstract class AdjustmentReasonValidator extends MultipleInputValidators
    implements Serializable {

  private static final long serialVersionUID = 4106013272008452158L;

  protected abstract String getReason1Id();

  protected abstract String getReason2Id();

  /**
   * Validate.
   *
   * @param event the event
   */
  public void validate(ComponentSystemEvent event) {

    FacesContext fc = FacesContext.getCurrentInstance();
    UIComponent panelComponent = event.getComponent();

    UIInput uiReason1 = (UIInput) panelComponent.findComponent(getReason1Id());
    UIInput uiReason2 = (UIInput) panelComponent.findComponent(getReason2Id());

    validateNotDuplicated(uiReason1, uiReason2, fc);
  }

  /**
   * Validate reasons are not duplicated.
   *
   * @param reason1 the ui reason 1
   * @param reason2 the ui reason 2
   * @param fc the fc
   */
  protected void validateNotDuplicated(UIInput uiReason1, UIInput uiReason2, FacesContext fc) {

    String errorMessage =
        "You cannot have duplicate reasons for Adjustment Request or Adjustment Decision";

    String reason1 = (String) uiReason1.getValue();
    String reason2 = (String) uiReason2.getValue();

    if (!StringUtils.isAllBlank(reason1, reason2) && StringUtils.equals(reason1, reason2)) {
      uiReason2.setValid(false);
      FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_ERROR, errorMessage, "");
      fc.addMessage(null, msg);
    }
  }
}
