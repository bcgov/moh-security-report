package ca.bc.gov.health.beans;

import ca.bc.gov.health.exception.HoopcException;
import ca.bc.gov.health.validation.ValidationError;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.application.FacesMessage.Severity;
import jakarta.faces.context.FacesContext;
import java.text.MessageFormat;
import java.util.List;

/** The Class BaseBean. */
public class BaseBean {

  /** Instantiates a new base bean. */
  public BaseBean() {
    // Nothing to init here
  }

  /**
   * Adds the message.
   *
   * @param faceMsg the face msg
   */
  public void addMessage(FacesMessage faceMsg) {
    FacesContext.getCurrentInstance().getExternalContext().getFlash().setKeepMessages(true);
    FacesContext.getCurrentInstance().addMessage(null, faceMsg);
  }

  /**
   * Adds the info message.
   *
   * @param message the message
   */
  public void addInfoMessage(String message) {
    addMessage(FacesMessage.SEVERITY_INFO, message, false);
  }

  /**
   * Adds the error message.
   *
   * @param message the message
   */
  public void addErrorMessage(String message) {
    addMessage(FacesMessage.SEVERITY_ERROR, message, false);
  }

  /**
   * Adds the warn message.
   *
   * @param message the message
   */
  public void addWarnMessage(String message) {
    addMessage(FacesMessage.SEVERITY_WARN, message, false);
  }

  /**
   * Adds the message.
   *
   * @param severity the severity
   * @param message the message
   * @param isFlash the is flash
   */
  public void addMessage(Severity severity, String message, boolean isFlash) {
    FacesContext.getCurrentInstance().getExternalContext().getFlash().setKeepMessages(isFlash);
    FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(severity, message, null));
  }

  /**
   * Adds the message.
   *
   * @param e the e
   */
  public void addMessage(HoopcException e) {
    addMessage(FacesMessage.SEVERITY_ERROR, formatMessage(e), true);
  }

  /**
   * Adds the message.
   *
   * @param e the e
   * @param isFlash the is flash
   */
  public void addMessage(HoopcException e, boolean isFlash) {
    addMessage(FacesMessage.SEVERITY_ERROR, formatMessage(e), isFlash);
  }

  /**
   * Adds the message validation errors.
   *
   * @param validationErrors the validation errors
   * @param isFlash the is flash
   */
  public void addMessageValidationErrors(List<ValidationError> validationErrors, boolean isFlash) {
    String errorMsg = "";
    for (int i = 0; i < validationErrors.size(); i++) {
      if (i > 0) {
        errorMsg += "<br/>";
      }
      errorMsg += validationErrors.get(i).getMessage();
    }
    addMessage(FacesMessage.SEVERITY_ERROR, errorMsg, isFlash);
  }

  /**
   * Format message.
   *
   * @param e the e
   * @return the string
   */
  public String formatMessage(HoopcException e) {
    return MessageFormat.format(
        "Fatal error: ref={0}<br/>{1}", e.getCorrelationId(), e.getMessage());
  }
}
