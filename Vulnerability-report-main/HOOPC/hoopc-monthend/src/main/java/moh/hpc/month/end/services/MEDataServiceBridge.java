package moh.hpc.month.end.services;

import jakarta.enterprise.inject.spi.CDI;
import jakarta.persistence.EntityManager;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Properties;
import moh.hpc.month.end.Runner;
import moh.hpc.month.end.services.support.OracleParameters;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class MEDataServiceBridge extends MEDataService {
  private static Logger logger = LoggerFactory.getLogger(MEDataServiceBridge.class);

  Runner runner;

  public MEDataServiceBridge(Properties prp) throws SQLException {
    super(prp);
  }

  @Override
  protected void createDataSource(OracleParameters oracleParms) throws SQLException {
    runner = CDI.current().select(Runner.class).get();
    this.con = getCon();
  }

  @Override
  public void commit() throws SQLException {}

  @Override
  public void createSavePoint(String savePoint) throws SQLException {}

  @Override
  public void rollback() throws SQLException {}

  @Override
  public void rollback(String savePoint) throws SQLException {}

  @Override
  public Connection getCon() {
    this.con = runner.getEm().unwrap(Connection.class);
    return this.con;
  }

  @Override
  public void destroy() {
    logger.info("++ TODO: Trying to clear cache");
    EntityManager em = runner.getEm();
    em.flush();
    em.getEntityManagerFactory().getCache().evictAll();
  }

  @Override
  public void finalize() {
    destroy();
  }
}
