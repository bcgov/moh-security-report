package moh.hoopc.services.util;

/**
 * @author Eric Bregeon
 * @version 1.0
 * @copyright Licensed Materials - Property of IBM - Copyright IBM Canada Ltd. 2003. All Rights
 *     Reserved
 * @security IBM Confidential
 * @date 02 November 2004
 * @revision Last Revision Name Comments
 * @revision ==========================================================================
 * @revision 02 November 2004 Eric Bregeon Created.
 * @see
 */
import java.sql.*;
import java.util.*;

public class ServiceFailedException extends Exception {

  private ErrorBeanList errorBeanList = null;

  ServiceFailedException(StoredProcedureException e) {
    super(e);
  }

  /**
   * WrapperFailedException constructor comment.
   *
   * @param com.ibm.jmb.db.wrapper.util.ErrorBeanList
   */
  public ServiceFailedException(ErrorBeanList errorBeanList) {
    this.errorBeanList = errorBeanList;
  }

  public ServiceFailedException(String s) {
    super(s);
  }

  public ServiceFailedException(SQLException e) {
    super(e.toString(), e);
  }

  /*
   * constructor that sets up cause
   */
  public ServiceFailedException(String message, Exception e) {
    super(message + ": " + e.toString(), e);
  }

  /**
   * WrapperFailedException constructor comment.
   *
   * @params java.lang.String
   */
  public ServiceFailedException(String errorCode, String errorText) {
    this.errorBeanList = new ErrorBeanList(errorCode, errorText);
  }

  public ErrorBeanList getErrorBeanList() {
    return errorBeanList;
  }

  public String getMessage() {
    String str = "";

    if (errorBeanList == null) {
      if (super.getMessage() != null) return super.getMessage();
      else return "no error message";
    }
    List errorList = errorBeanList.getErrorList();
    Iterator i = errorList.iterator();
    String s = "";
    while (i.hasNext()) {
      s += ((ErrorBean) i.next()).getErrorText();
      if (i.hasNext()) s += "\n";
    }
    return s.length() == 0 ? "errorList is empty!" : s;
  }
}
