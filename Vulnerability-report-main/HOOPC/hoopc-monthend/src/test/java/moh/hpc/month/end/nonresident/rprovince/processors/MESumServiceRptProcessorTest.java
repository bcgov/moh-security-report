/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package moh.hpc.month.end.nonresident.rprovince.processors;

import ca.bc.gov.health.report.model.MESumServiceReportModel;
import java.math.BigDecimal;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;

/** @author trevor.schiavone */
public class MESumServiceRptProcessorTest {

  @Test
  public void smokeTestReport() throws Exception {

    List<MESumServiceReportModel> reportList = new ArrayList<>();

    MESumServiceReportModel sumServiceRpt01 = new MESumServiceReportModel();
    sumServiceRpt01.setProvince("Ontario");
    sumServiceRpt01.setHospitalName("Hospital 1");
    sumServiceRpt01.setServiceCount51(BigDecimal.TEN);
    sumServiceRpt01.setServiceCount68(BigDecimal.TEN);
    sumServiceRpt01.setServiceCount63(BigDecimal.TEN);
    sumServiceRpt01.setServiceTotal(new BigDecimal("30"));
    sumServiceRpt01.setInvoicedAmount(new BigDecimal("65"));

    MESumServiceReportModel sumServiceRpt02 = new MESumServiceReportModel();
    sumServiceRpt02.setProvince("Ontario");
    sumServiceRpt02.setHospitalName("Hospital 2");
    sumServiceRpt02.setServiceCount68(BigDecimal.TEN);
    sumServiceRpt02.setServiceTotal(BigDecimal.TEN);
    sumServiceRpt02.setInvoicedAmount(new BigDecimal("35"));

    MESumServiceReportModel sumServiceRpt03 = new MESumServiceReportModel();
    sumServiceRpt03.setProvince("Ontario");
    sumServiceRpt03.setHospitalName("Hospital 3");
    sumServiceRpt03.setServiceCount55(new BigDecimal("40"));
    sumServiceRpt03.setServiceTotal(new BigDecimal("40"));
    sumServiceRpt03.setInvoicedAmount(new BigDecimal("2000"));

    reportList.add(sumServiceRpt01);
    reportList.add(sumServiceRpt02);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);
    reportList.add(sumServiceRpt03);

    MESumServiceRptProcessor sumServiceRptProcessor = new MESumServiceRptProcessor();
    sumServiceRptProcessor.setProcessMonth("201911");
    byte[] pdfData = sumServiceRptProcessor.createPdfReport(reportList);
    assertTrue(new String(pdfData).contains("PDF"));

//    Path path = Files.createTempFile("smokeTestReport", ".pdf");
//    Files.write(path, pdfData);
//    Process p = Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + path);
//    p.waitFor();
  }

  @Test
  public void smokeTestBlankReport() throws Exception {

    List<MESumServiceReportModel> reportList = new ArrayList<>();

    MESumServiceRptProcessor sumServiceRptProcessor = new MESumServiceRptProcessor();
    sumServiceRptProcessor.setProcessMonth("201911");
    byte[] pdfData = sumServiceRptProcessor.createPdfReport(reportList);
    assertTrue(new String(pdfData).contains("PDF"));

//    Path path = Files.createTempFile("smokeTestBlankReport", ".pdf");
//    Files.write(path, pdfData);
//    Process p = Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + path);
//    p.waitFor();
  }
}
