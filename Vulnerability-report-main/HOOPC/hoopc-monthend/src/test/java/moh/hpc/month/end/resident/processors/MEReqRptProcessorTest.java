package moh.hpc.month.end.resident.processors;

import ca.bc.gov.health.report.model.MEReqRptProcessorViewModel;
import java.math.BigDecimal;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

public class MEReqRptProcessorTest {

  @Test
  public void smokeTestReport() throws Exception {
    List<MEReqRptProcessorViewModel> reportList = new ArrayList<>();

    MEReqRptProcessorViewModel myNewBean = new MEReqRptProcessorViewModel();
    myNewBean.setAdjustmentAmt(BigDecimal.TEN);
    myNewBean.setAdjustmentReason("adjustment reason");
    myNewBean.setAdmissionServiceDate(new Date());
    myNewBean.setBirthDate(new Date());
    myNewBean.setCity("city");
    myNewBean.setClaimAmount(BigDecimal.TEN);
    myNewBean.setDischarge(new Date());
    myNewBean.setEndDate(new Date());
    myNewBean.setGivenName("given name");
    myNewBean.setHeading("some heading");
    myNewBean.setHospitalName(null);
    myNewBean.setHospitalNumber("hospital number");
    myNewBean.setInsuranceNumber("insurance number");
    myNewBean.setPostalCode("postal code");
    myNewBean.setReportType("report type");
    myNewBean.setSex("sex");
    myNewBean.setSubmissionDate(new Date());
    myNewBean.setSurname("surname");
    reportList.add(myNewBean);

    byte[] pdfData = new MEReqRptProcessor().createPdfReport(reportList, "no heading for this");

    assertTrue(new String(pdfData).contains("PDF"));

//    Path path = Files.createTempFile("smokeTestReport", ".pdf");
//    Files.write(path, pdfData);
//    Process p = Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + path);
//    p.waitFor();
  }
}
