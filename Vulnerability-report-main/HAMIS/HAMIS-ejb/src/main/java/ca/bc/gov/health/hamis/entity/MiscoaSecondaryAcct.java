/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.hamis.entity;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.List;

/** @author greg.perkins */
@Entity
@Table(name = "MISCOA_SECONDARY_ACCTS")
@NamedQueries({
  @NamedQuery(name = "MiscoaSecondaryAcct.findAll", query = "SELECT m FROM MiscoaSecondaryAcct m"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByMsaId",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.msaId = :msaId"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByScndryAcctNumber",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.scndryAcctNumber = :scndryAcctNumber"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByFsDataType",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.fsDataType = :fsDataType"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByLvlInd",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.lvlInd = :lvlInd"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByLvl1",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.lvl1 = :lvl1"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByLvl2",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.lvl2 = :lvl2"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByLvl3",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.lvl3 = :lvl3"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByLvl4",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.lvl4 = :lvl4"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByAgglvl2",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.agglvl2 = :agglvl2"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByAgglvl3",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.agglvl3 = :agglvl3"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByLevelName",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.levelName = :levelName"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByShortName",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.shortName = :shortName"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByLvl1Name",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.lvl1Name = :lvl1Name"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByLvl2Name",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.lvl2Name = :lvl2Name"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByLvl3Name",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.lvl3Name = :lvl3Name"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByAbbreviation",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.abbreviation = :abbreviation"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByActionable",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.actionable = :actionable"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByAmortAcctInd",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.amortAcctInd = :amortAcctInd"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByIncludeIfSubOrg",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.includeIfSubOrg = :includeIfSubOrg"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByIncludeIfMasterOrg",
      query =
          "SELECT m FROM MiscoaSecondaryAcct m WHERE m.includeIfMasterOrg = :includeIfMasterOrg"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByBcAccount",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.bcAccount = :bcAccount"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByMsaComment",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.msaComment = :msaComment"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByUserCreated",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.userCreated = :userCreated"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByDateCreated",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.dateCreated = :dateCreated"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByUserModified",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.userModified = :userModified"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByDateModified",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.dateModified = :dateModified"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByAffXferAccount",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.affXferAccount = :affXferAccount"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByHaXferAccount",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.haXferAccount = :haXferAccount"),
  @NamedQuery(
      name = "MiscoaSecondaryAcct.findByExtXferAccount",
      query = "SELECT m FROM MiscoaSecondaryAcct m WHERE m.extXferAccount = :extXferAccount")
})
@SequenceGenerator(name = "MSA_SEQ", sequenceName = "MSA_SEQ", allocationSize = 1)
public class MiscoaSecondaryAcct implements Serializable {

  private static final long serialVersionUID = 1L;

  @Id
  @Basic(optional = false)
  @NotNull
  @Column(name = "MSA_ID")
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "MSA_SEQ")
  private Long msaId;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 7)
  @Column(name = "SCNDRY_ACCT_NUMBER")
  private String scndryAcctNumber;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 1)
  @Column(name = "FS_DATA_TYPE")
  private String fsDataType;

  @Basic(optional = false)
  @NotNull
  @Column(name = "LVL_IND")
  private Long lvlInd;

  @Size(max = 7)
  @Column(name = "LVL_1")
  private String lvl1;

  @Size(max = 7)
  @Column(name = "LVL_2")
  private String lvl2;

  @Size(max = 7)
  @Column(name = "LVL_3")
  private String lvl3;

  @Size(max = 7)
  @Column(name = "LVL_4")
  private String lvl4;

  @Size(max = 80)
  @Column(name = "AGGLVL_2")
  private String agglvl2;

  @Size(max = 80)
  @Column(name = "AGGLVL_3")
  private String agglvl3;

  @Size(max = 80)
  @Column(name = "LEVEL_NAME")
  private String levelName;

  @Size(max = 30)
  @Column(name = "SHORT_NAME")
  private String shortName;

  @Size(max = 240)
  @Column(name = "LVL_1_NAME")
  private String lvl1Name;

  @Size(max = 240)
  @Column(name = "LVL_2_NAME")
  private String lvl2Name;

  @Size(max = 240)
  @Column(name = "LVL_3_NAME")
  private String lvl3Name;

  @Size(max = 9)
  @Column(name = "ABBREVIATION")
  private String abbreviation;

  @Size(max = 1)
  @Column(name = "ACTIONABLE")
  private String actionable;

  @Size(max = 1)
  @Column(name = "AMORT_ACCT_IND")
  private String amortAcctInd;

  @Size(max = 1)
  @Column(name = "INCLUDE_IF_SUB_ORG")
  private String includeIfSubOrg;

  @Size(max = 1)
  @Column(name = "INCLUDE_IF_MASTER_ORG")
  private String includeIfMasterOrg;

  @Size(max = 1)
  @Column(name = "BC_ACCOUNT")
  private String bcAccount;

  @Size(max = 240)
  @Column(name = "MSA_COMMENT")
  private String msaComment;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 100)
  @Column(name = "USER_CREATED")
  private String userCreated;

  @Basic(optional = false)
  @NotNull
  @Column(name = "DATE_CREATED")
  @Temporal(TemporalType.TIMESTAMP)
  private Date dateCreated;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 100)
  @Column(name = "USER_MODIFIED")
  private String userModified;

  @Basic(optional = false)
  @NotNull
  @Column(name = "DATE_MODIFIED")
  @Temporal(TemporalType.TIMESTAMP)
  private Date dateModified;

  @Size(max = 1)
  @Column(name = "AFF_XFER_ACCOUNT")
  private String affXferAccount;

  @Size(max = 1)
  @Column(name = "HA_XFER_ACCOUNT")
  private String haXferAccount;

  @Size(max = 1)
  @Column(name = "EXT_XFER_ACCOUNT")
  private String extXferAccount;

  @JoinColumn(name = "FISCAL_YEAR", referencedColumnName = "FISCAL_YEAR")
  @ManyToOne(optional = false)
  private FiscalYear fiscalYear;

  @JoinColumn(name = "SL3_ID", referencedColumnName = "SL3_ID")
  @ManyToOne
  private SecondaryLevel3 sl3Id;

  @OneToMany(mappedBy = "msaId")
  private List<CustomAccount> customAccountList;

  public MiscoaSecondaryAcct() {}

  public MiscoaSecondaryAcct(Long msaId) {
    this.msaId = msaId;
  }

  public MiscoaSecondaryAcct(
      Long msaId,
      String scndryAcctNumber,
      String fsDataType,
      Long lvlInd,
      String userCreated,
      Date dateCreated,
      String userModified,
      Date dateModified) {
    this.msaId = msaId;
    this.scndryAcctNumber = scndryAcctNumber;
    this.fsDataType = fsDataType;
    this.lvlInd = lvlInd;
    this.userCreated = userCreated;
    this.dateCreated = dateCreated;
    this.userModified = userModified;
    this.dateModified = dateModified;
  }

  public Long getMsaId() {
    return msaId;
  }

  public void setMsaId(Long msaId) {
    this.msaId = msaId;
  }

  public String getScndryAcctNumber() {
    return scndryAcctNumber;
  }

  public void setScndryAcctNumber(String scndryAcctNumber) {
    this.scndryAcctNumber = scndryAcctNumber;
  }

  public String getFsDataType() {
    return fsDataType;
  }

  public void setFsDataType(String fsDataType) {
    this.fsDataType = fsDataType;
  }

  public Long getLvlInd() {
    return lvlInd;
  }

  public void setLvlInd(Long lvlInd) {
    this.lvlInd = lvlInd;
  }

  public String getLvl1() {
    return lvl1;
  }

  public void setLvl1(String lvl1) {
    this.lvl1 = lvl1;
  }

  public String getLvl2() {
    return lvl2;
  }

  public void setLvl2(String lvl2) {
    this.lvl2 = lvl2;
  }

  public String getLvl3() {
    return lvl3;
  }

  public void setLvl3(String lvl3) {
    this.lvl3 = lvl3;
  }

  public String getLvl4() {
    return lvl4;
  }

  public void setLvl4(String lvl4) {
    this.lvl4 = lvl4;
  }

  public String getAgglvl2() {
    return agglvl2;
  }

  public void setAgglvl2(String agglvl2) {
    this.agglvl2 = agglvl2;
  }

  public String getAgglvl3() {
    return agglvl3;
  }

  public void setAgglvl3(String agglvl3) {
    this.agglvl3 = agglvl3;
  }

  public String getLevelName() {
    return levelName;
  }

  public void setLevelName(String levelName) {
    this.levelName = levelName;
  }

  public String getShortName() {
    return shortName;
  }

  public void setShortName(String shortName) {
    this.shortName = shortName;
  }

  public String getLvl1Name() {
    return lvl1Name;
  }

  public void setLvl1Name(String lvl1Name) {
    this.lvl1Name = lvl1Name;
  }

  public String getLvl2Name() {
    return lvl2Name;
  }

  public void setLvl2Name(String lvl2Name) {
    this.lvl2Name = lvl2Name;
  }

  public String getLvl3Name() {
    return lvl3Name;
  }

  public void setLvl3Name(String lvl3Name) {
    this.lvl3Name = lvl3Name;
  }

  public String getAbbreviation() {
    return abbreviation;
  }

  public void setAbbreviation(String abbreviation) {
    this.abbreviation = abbreviation;
  }

  public String getActionable() {
    return actionable;
  }

  public void setActionable(String actionable) {
    this.actionable = actionable;
  }

  public String getAmortAcctInd() {
    return amortAcctInd;
  }

  public void setAmortAcctInd(String amortAcctInd) {
    this.amortAcctInd = amortAcctInd;
  }

  public String getIncludeIfSubOrg() {
    return includeIfSubOrg;
  }

  public void setIncludeIfSubOrg(String includeIfSubOrg) {
    this.includeIfSubOrg = includeIfSubOrg;
  }

  public String getIncludeIfMasterOrg() {
    return includeIfMasterOrg;
  }

  public void setIncludeIfMasterOrg(String includeIfMasterOrg) {
    this.includeIfMasterOrg = includeIfMasterOrg;
  }

  public String getBcAccount() {
    return bcAccount;
  }

  public void setBcAccount(String bcAccount) {
    this.bcAccount = bcAccount;
  }

  public String getMsaComment() {
    return msaComment;
  }

  public void setMsaComment(String msaComment) {
    this.msaComment = msaComment;
  }

  public String getUserCreated() {
    return userCreated;
  }

  public void setUserCreated(String userCreated) {
    this.userCreated = userCreated;
  }

  public Date getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(Date dateCreated) {
    this.dateCreated = dateCreated;
  }

  public String getUserModified() {
    return userModified;
  }

  public void setUserModified(String userModified) {
    this.userModified = userModified;
  }

  public Date getDateModified() {
    return dateModified;
  }

  public void setDateModified(Date dateModified) {
    this.dateModified = dateModified;
  }

  public String getAffXferAccount() {
    return affXferAccount;
  }

  public void setAffXferAccount(String affXferAccount) {
    this.affXferAccount = affXferAccount;
  }

  public String getHaXferAccount() {
    return haXferAccount;
  }

  public void setHaXferAccount(String haXferAccount) {
    this.haXferAccount = haXferAccount;
  }

  public String getExtXferAccount() {
    return extXferAccount;
  }

  public void setExtXferAccount(String extXferAccount) {
    this.extXferAccount = extXferAccount;
  }

  public FiscalYear getFiscalYear() {
    return fiscalYear;
  }

  public void setFiscalYear(FiscalYear fiscalYear) {
    this.fiscalYear = fiscalYear;
  }

  public SecondaryLevel3 getSl3Id() {
    return sl3Id;
  }

  public void setSl3Id(SecondaryLevel3 sl3Id) {
    this.sl3Id = sl3Id;
  }

  public List<CustomAccount> getCustomAccountList() {
    return customAccountList;
  }

  public void setCustomAccountList(List<CustomAccount> customAccountList) {
    this.customAccountList = customAccountList;
  }

  @Override
  public int hashCode() {
    int hash = 0;
    hash += (msaId != null ? msaId.hashCode() : 0);
    return hash;
  }

  @Override
  public boolean equals(Object object) {
    // TODO: Warning - this method won't work in the case the id fields are not set
    if (!(object instanceof MiscoaSecondaryAcct)) {
      return false;
    }
    MiscoaSecondaryAcct other = (MiscoaSecondaryAcct) object;
    if ((this.msaId == null && other.msaId != null)
        || (this.msaId != null && !this.msaId.equals(other.msaId))) {
      return false;
    }
    return true;
  }

  @Override
  public String toString() {
    return "ca.bc.gov.health.hamis.entity.MiscoaSecondaryAcct[ msaId=" + msaId + " ]";
  }
}
