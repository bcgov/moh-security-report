/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.hamis.entity;

import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.List;

/** @author greg.perkins */
@Entity
@Table(name = "RELATIONSHIP_TYPES")
@NamedQueries({
  @NamedQuery(name = "RelationshipType.findAll", query = "SELECT r FROM RelationshipType r"),
  @NamedQuery(
      name = "RelationshipType.findAllowed",
      query =
          "SELECT r FROM RelationshipType r WHERE r.description IN ('Amalgamated', 'Affiliated', 'Contracted', 'HA to HA')"),
  @NamedQuery(
      name = "RelationshipType.findById",
      query = "SELECT r FROM RelationshipType r WHERE r.reltypCode = :id")
})
public class RelationshipType implements Serializable {

  private static final long serialVersionUID = 1L;

  @Id
  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 2)
  @Column(name = "RELTYP_CODE")
  private String reltypCode;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 80)
  @Column(name = "DESCRIPTION")
  private String description;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 1)
  @Column(name = "DEFAULT_POSSIBLE_DBL_CNT")
  private String defaultPossibleDblCnt;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 100)
  @Column(name = "USER_CREATED")
  private String userCreated;

  @Basic(optional = false)
  @NotNull
  @Column(name = "DATE_CREATED")
  @Temporal(TemporalType.TIMESTAMP)
  private Date dateCreated;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 100)
  @Column(name = "USER_MODIFIED")
  private String userModified;

  @Basic(optional = false)
  @NotNull
  @Column(name = "DATE_MODIFIED")
  @Temporal(TemporalType.TIMESTAMP)
  private Date dateModified;

  @OneToMany(cascade = CascadeType.ALL, mappedBy = "reltypCode")
  private List<OrganizationRelationship> organizationRelationshipsList;

  public RelationshipType() {}

  public RelationshipType(String reltypCode) {
    this.reltypCode = reltypCode;
  }

  public RelationshipType(
      String reltypCode,
      String description,
      String defaultPossibleDblCnt,
      String userCreated,
      Date dateCreated,
      String userModified,
      Date dateModified) {
    this.reltypCode = reltypCode;
    this.description = description;
    this.defaultPossibleDblCnt = defaultPossibleDblCnt;
    this.userCreated = userCreated;
    this.dateCreated = dateCreated;
    this.userModified = userModified;
    this.dateModified = dateModified;
  }

  public String getReltypCode() {
    return reltypCode;
  }

  public void setReltypCode(String reltypCode) {
    this.reltypCode = reltypCode;
  }

  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public String getDefaultPossibleDblCnt() {
    return defaultPossibleDblCnt;
  }

  public void setDefaultPossibleDblCnt(String defaultPossibleDblCnt) {
    this.defaultPossibleDblCnt = defaultPossibleDblCnt;
  }

  public String getUserCreated() {
    return userCreated;
  }

  public void setUserCreated(String userCreated) {
    this.userCreated = userCreated;
  }

  public Date getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(Date dateCreated) {
    this.dateCreated = dateCreated;
  }

  public String getUserModified() {
    return userModified;
  }

  public void setUserModified(String userModified) {
    this.userModified = userModified;
  }

  public Date getDateModified() {
    return dateModified;
  }

  public void setDateModified(Date dateModified) {
    this.dateModified = dateModified;
  }

  public List<OrganizationRelationship> getOrganizationRelationshipsList() {
    return organizationRelationshipsList;
  }

  public void setOrganizationRelationshipsList(
      List<OrganizationRelationship> organizationRelationshipsList) {
    this.organizationRelationshipsList = organizationRelationshipsList;
  }

  @Override
  public int hashCode() {
    int hash = 0;
    hash += (reltypCode != null ? reltypCode.hashCode() : 0);
    return hash;
  }

  @Override
  public boolean equals(Object object) {
    // TODO: Warning - this method won't work in the case the id fields are not set
    if (!(object instanceof RelationshipType)) {
      return false;
    }
    RelationshipType other = (RelationshipType) object;
    if ((this.reltypCode == null && other.reltypCode != null)
        || (this.reltypCode != null && !this.reltypCode.equals(other.reltypCode))) {
      return false;
    }
    return true;
  }

  @Override
  public String toString() {
    return "ca.bc.gov.health.hamis.entity.RelationshipType[ reltypCode=" + reltypCode + " ]";
  }
}
