/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.hamis.entity;

import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.List;

/** @author greg.perkins */
@Entity
@Table(name = "ORGANIZATION_RELATIONSHIPS")
@NamedQueries({
  @NamedQuery(
      name = "OrganizationRelationship.findAll",
      query = "SELECT o FROM OrganizationRelationship o"),
  @NamedQuery(
      name = "OrganizationRelationship.findBySubordinate",
      query =
          "SELECT o FROM OrganizationRelationship o JOIN o.subHoId s WHERE s.hoId = :ho_id AND (o.endDt IS NULL OR o.endDt > :sys_date) ORDER BY s.dateModified DESC"),
  @NamedQuery(
      name = "OrganizationRelationship.findByMaster",
      query =
          "SELECT o FROM OrganizationRelationship o JOIN o.mstHoId s WHERE s.hoId = :ho_id AND (o.endDt IS NULL OR o.endDt > :sys_date) ORDER BY s.dateModified DESC"),
  @NamedQuery(
      name = "OrganizationRelationship.findById",
      query = "SELECT o FROM OrganizationRelationship o WHERE o.orId = :id")
})
@SequenceGenerator(name = "OR_1_SEQ", sequenceName = "OR_1_SEQ", allocationSize = 1)
public class OrganizationRelationship implements Serializable {

  private static final long serialVersionUID = 1L;

  @Id
  @Basic(optional = false)
  @NotNull
  @Column(name = "OR_ID")
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "OR_1_SEQ")
  private Long orId;

  @Basic(optional = false)
  @NotNull
  @Column(name = "EFF_DT")
  @Temporal(TemporalType.TIMESTAMP)
  private Date effDt;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 1)
  @Column(name = "POSSIBLE_DOUBLE_COUNT")
  private String possibleDoubleCount;

  @Column(name = "END_DT")
  @Temporal(TemporalType.TIMESTAMP)
  private Date endDt;

  @Size(max = 1)
  @Column(name = "CURRENT_RECORD")
  private String currentRecord;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 100)
  @Column(name = "USER_CREATED")
  private String userCreated;

  @Basic(optional = false)
  @Column(name = "DATE_CREATED")
  @Temporal(TemporalType.TIMESTAMP)
  private Date dateCreated;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 100)
  @Column(name = "USER_MODIFIED")
  private String userModified;

  @Basic(optional = false)
  @Column(name = "DATE_MODIFIED")
  @Temporal(TemporalType.TIMESTAMP)
  private Date dateModified;

  @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "orId")
  private List<ProviderDefinition> providerDefinitionsList;

  @JoinColumn(name = "MST_HO_ID", referencedColumnName = "HO_ID")
  @ManyToOne(optional = false)
  private HealthOrganization mstHoId;

  @JoinColumn(name = "SUB_HO_ID", referencedColumnName = "HO_ID")
  @ManyToOne
  private HealthOrganization subHoId;

  @JoinColumn(name = "RELTYP_CODE", referencedColumnName = "RELTYP_CODE")
  @ManyToOne(optional = false)
  private RelationshipType reltypCode;

  public OrganizationRelationship() {}

  public OrganizationRelationship(Long orId) {
    this.orId = orId;
  }

  public OrganizationRelationship(
      Long orId,
      Date effDt,
      String possibleDoubleCount,
      String userCreated,
      Date dateCreated,
      String userModified,
      Date dateModified) {
    this.orId = orId;
    this.effDt = effDt;
    this.possibleDoubleCount = possibleDoubleCount;
    this.userCreated = userCreated;
    this.dateCreated = dateCreated;
    this.userModified = userModified;
    this.dateModified = dateModified;
  }

  public Long getOrId() {
    return orId;
  }

  public void setOrId(Long orId) {
    this.orId = orId;
  }

  public Date getEffDt() {
    return effDt;
  }

  public void setEffDt(Date effDt) {
    this.effDt = effDt;
  }

  public String getPossibleDoubleCount() {
    return possibleDoubleCount;
  }

  public void setPossibleDoubleCount(String possibleDoubleCount) {
    this.possibleDoubleCount = possibleDoubleCount;
  }

  public Date getEndDt() {
    return endDt;
  }

  public void setEndDt(Date endDt) {
    this.endDt = endDt;
  }

  public String getCurrentRecord() {
    return currentRecord;
  }

  public void setCurrentRecord(String currentRecord) {
    this.currentRecord = currentRecord;
  }

  public String getUserCreated() {
    return userCreated;
  }

  public void setUserCreated(String userCreated) {
    this.userCreated = userCreated;
  }

  public Date getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(Date dateCreated) {
    this.dateCreated = dateCreated;
  }

  public String getUserModified() {
    return userModified;
  }

  public void setUserModified(String userModified) {
    this.userModified = userModified;
  }

  public Date getDateModified() {
    return dateModified;
  }

  public void setDateModified(Date dateModified) {
    this.dateModified = dateModified;
  }

  public List<ProviderDefinition> getProviderDefinitionsList() {
    return providerDefinitionsList;
  }

  public void setProviderDefinitionsList(List<ProviderDefinition> providerDefinitionsList) {
    this.providerDefinitionsList = providerDefinitionsList;
  }

  public HealthOrganization getMstHoId() {
    return mstHoId;
  }

  public void setMstHoId(HealthOrganization mstHoId) {
    this.mstHoId = mstHoId;
  }

  public HealthOrganization getSubHoId() {
    return subHoId;
  }

  public void setSubHoId(HealthOrganization subHoId) {
    this.subHoId = subHoId;
  }

  public RelationshipType getReltypCode() {
    return reltypCode;
  }

  public void setReltypCode(RelationshipType reltypCode) {
    this.reltypCode = reltypCode;
  }

  @Override
  public int hashCode() {
    int hash = 0;
    hash += (orId != null ? orId.hashCode() : 0);
    return hash;
  }

  @Override
  public boolean equals(Object object) {
    // TODO: Warning - this method won't work in the case the id fields are not set
    if (!(object instanceof OrganizationRelationship)) {
      return false;
    }
    OrganizationRelationship other = (OrganizationRelationship) object;
    if ((this.orId == null && other.orId != null)
        || (this.orId != null && !this.orId.equals(other.orId))) {
      return false;
    }
    return true;
  }

  @Override
  public String toString() {
    return "ca.bc.gov.health.hamis.entity.OrganizationRelationship[ orId=" + orId + " ]";
  }
}
