package ca.bc.gov.health.hamis.entity;

import jakarta.persistence.*;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/** The persistent class for the IMPORT_FILES database table. */
@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name = "IMPORT_FILES")
@NamedQuery(name = "ImportFile.findAll", query = "SELECT i FROM ImportFile i")
public class ImportFile implements Serializable {
  private static final long serialVersionUID = 1L;

  @Id
  @Column(name = "IFL_ID")
  private long iflId;

  @Column(name = "AB_TRXN_TYPE")
  private String abTrxnType;

  private BigDecimal checksum;

  @Column(name = "CURRENT_RECORD")
  private String currentRecord;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "DATE_CREATED")
  private Date dateCreated;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "DATE_MODIFIED")
  private Date dateModified;

  @Temporal(TemporalType.DATE)
  @Column(name = "EXTRACT_DATE_TIME")
  private Date extractDateTime;

  @Temporal(TemporalType.DATE)
  @Column(name = "FILE_LOAD_DATE_TIME")
  private Date fileLoadDateTime;

  @Column(name = "FILE_NAME")
  private String fileName;

  @Column(name = "FOOTER_FILE_NAME")
  private String footerFileName;

  @Column(name = "FOOTER_STRING")
  private String footerString;

  @Column(name = "HARP_VERSION")
  private String harpVersion;

  @Temporal(TemporalType.DATE)
  @Column(name = "PURGED_DATE")
  private Date purgedDate;

  @Column(name = "PURGED_USER")
  private String purgedUser;

  @Column(name = "SERIAL_NUMBER")
  private String serialNumber;

  @Column(name = "SUB_ID")
  private BigDecimal subId;

  @Column(name = "USER_CREATED")
  private String userCreated;

  @Column(name = "USER_MODIFIED")
  private String userModified;

  // bi-directional many-to-one association to Import
  @OneToMany(mappedBy = "importFile")
  private List<Imports> imports;

  // bi-directional many-to-one association to FiscalYear
  @ManyToOne
  @JoinColumn(name = "FISCAL_YEAR")
  private FiscalYear fiscalYearBean;

  // bi-directional many-to-one association to HealthOrganization
  @ManyToOne
  @JoinColumn(name = "HO_ID")
  private HealthOrganization healthOrganization;

  // bi-directional many-to-one association to ImportSource
  @ManyToOne
  @JoinColumn(name = "IS_ID")
  private ImportSource importSource;

  // bi-directional many-to-one association to ImportFileRow
  @OneToMany(mappedBy = "importFile")
  private List<ImportFileRow> importFileRows;

  // bi-directional many-to-one association to ImportSefSourceDefinition
  @OneToMany(mappedBy = "importFile")
  private List<ImportSefSourceDefinition> importSefSourceDefinitions;
}
