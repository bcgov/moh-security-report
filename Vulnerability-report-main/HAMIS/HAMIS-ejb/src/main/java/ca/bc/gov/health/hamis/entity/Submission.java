package ca.bc.gov.health.hamis.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinColumns;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.io.Serializable;
import java.util.Date;
import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/** The persistent class for the SUBMISSIONS database table. */
@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name = "SUBMISSIONS")
@NamedQuery(name = "Submission.findAll", query = "SELECT s FROM Submission s")
public class Submission implements Serializable {
  private static final long serialVersionUID = 1L;

  @Id
  @Column(name = "SUB_ID")
  private long subId;

  @Column(name = "AB_TRXN_TYPE")
  private String abTrxnType;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "DATE_CREATED")
  private Date dateCreated;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "DATE_MODIFIED")
  private Date dateModified;

  @Column(name = "USER_CREATED")
  private String userCreated;

  @Column(name = "USER_MODIFIED")
  private String userModified;

  // bi-directional many-to-one association to BalanceSheetSummary
  @OneToMany(mappedBy = "submission")
  private List<BalanceSheetSummary> balanceSheetSummaries;

  // bi-directional many-to-one association to HealthOrganization
  @ManyToOne
  @JoinColumn(name = "HO_ID")
  private HealthOrganization healthOrganization;

  // bi-directional many-to-one association to ReportingPeriod
  @ManyToOne
  @JoinColumns({
    @JoinColumn(name = "FISCAL_YEAR", referencedColumnName = "FISCAL_YEAR"),
    @JoinColumn(name = "PERIOD", referencedColumnName = "PERIOD")
  })
  private ReportingPeriod reportingPeriod;

  // bi-directional many-to-one association to SubmissionsType
  @ManyToOne
  @JoinColumn(name = "STATUS_CD")
  private SubmissionsType submissionsType;

  // bi-directional many-to-one association to SubStatusType
  @ManyToOne
  @JoinColumn(name = "TYPE_CD")
  private SubStatusType subStatusType;

  // bi-directional many-to-one association to SubmissionMessage
  @OneToMany(mappedBy = "submission")
  private List<SubmissionMessage> submissionMessages;
}
