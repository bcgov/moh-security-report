/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.hamis.entity;

import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.List;

/** @author greg.perkins */
@Entity
@Table(name = "ACCOUNT_TYPES")
@NamedQueries({
  @NamedQuery(
      name = "AccountType.findAll",
      query = "SELECT a FROM AccountType a ORDER BY a.acctypCode"),
  @NamedQuery(
      name = "AccountType.findByAcctypCode",
      query = "SELECT a FROM AccountType a WHERE a.acctypCode = :acctypCode"),
  @NamedQuery(
      name = "AccountType.findByDescription",
      query = "SELECT a FROM AccountType a WHERE a.description = :description"),
  @NamedQuery(
      name = "AccountType.findByUserCreated",
      query = "SELECT a FROM AccountType a WHERE a.userCreated = :userCreated"),
  @NamedQuery(
      name = "AccountType.findByDateCreated",
      query = "SELECT a FROM AccountType a WHERE a.dateCreated = :dateCreated"),
  @NamedQuery(
      name = "AccountType.findByUserModified",
      query = "SELECT a FROM AccountType a WHERE a.userModified = :userModified"),
  @NamedQuery(
      name = "AccountType.findByDateModified",
      query = "SELECT a FROM AccountType a WHERE a.dateModified = :dateModified"),
  @NamedQuery(
      name = "AccountType.findByBalanceSheetFlag",
      query = "SELECT a FROM AccountType a WHERE a.balanceSheetFlag = :balanceSheetFlag")
})
public class AccountType implements Serializable {

  private static final long serialVersionUID = 1L;

  @Id
  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 1)
  @Column(name = "ACCTYP_CODE")
  private String acctypCode;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 80)
  @Column(name = "DESCRIPTION")
  private String description;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 100)
  @Column(name = "USER_CREATED")
  private String userCreated;

  @Basic(optional = false)
  @NotNull
  @Column(name = "DATE_CREATED")
  @Temporal(TemporalType.TIMESTAMP)
  private Date dateCreated;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 100)
  @Column(name = "USER_MODIFIED")
  private String userModified;

  @Basic(optional = false)
  @NotNull
  @Column(name = "DATE_MODIFIED")
  @Temporal(TemporalType.TIMESTAMP)
  private Date dateModified;

  @Size(max = 1)
  @Column(name = "BALANCE_SHEET_FLAG")
  private String balanceSheetFlag;

  @OneToMany(cascade = CascadeType.ALL, mappedBy = "acctypCode")
  private List<MiscoaPrimaryAcct> miscoaPrimaryAcctsList;

  @OneToMany(cascade = CascadeType.ALL, mappedBy = "acctypCode")
  private List<PrimaryLevel2> primaryLevel2List;

  public AccountType() {}

  public AccountType(String acctypCode) {
    this.acctypCode = acctypCode;
  }

  public AccountType(
      String acctypCode,
      String description,
      String userCreated,
      Date dateCreated,
      String userModified,
      Date dateModified) {
    this.acctypCode = acctypCode;
    this.description = description;
    this.userCreated = userCreated;
    this.dateCreated = dateCreated;
    this.userModified = userModified;
    this.dateModified = dateModified;
  }

  public String getAcctypCode() {
    return acctypCode;
  }

  public void setAcctypCode(String acctypCode) {
    this.acctypCode = acctypCode;
  }

  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public String getUserCreated() {
    return userCreated;
  }

  public void setUserCreated(String userCreated) {
    this.userCreated = userCreated;
  }

  public Date getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(Date dateCreated) {
    this.dateCreated = dateCreated;
  }

  public String getUserModified() {
    return userModified;
  }

  public void setUserModified(String userModified) {
    this.userModified = userModified;
  }

  public Date getDateModified() {
    return dateModified;
  }

  public void setDateModified(Date dateModified) {
    this.dateModified = dateModified;
  }

  public String getBalanceSheetFlag() {
    return balanceSheetFlag;
  }

  public void setBalanceSheetFlag(String balanceSheetFlag) {
    this.balanceSheetFlag = balanceSheetFlag;
  }

  public List<MiscoaPrimaryAcct> getMiscoaPrimaryAcctsList() {
    return miscoaPrimaryAcctsList;
  }

  public void setMiscoaPrimaryAcctsList(List<MiscoaPrimaryAcct> miscoaPrimaryAcctsList) {
    this.miscoaPrimaryAcctsList = miscoaPrimaryAcctsList;
  }

  public List<PrimaryLevel2> getPrimaryLevel2List() {
    return primaryLevel2List;
  }

  public void setPrimaryLevel2List(List<PrimaryLevel2> primaryLevel2List) {
    this.primaryLevel2List = primaryLevel2List;
  }

  @Override
  public int hashCode() {
    int hash = 0;
    hash += (acctypCode != null ? acctypCode.hashCode() : 0);
    return hash;
  }

  @Override
  public boolean equals(Object object) {
    // TODO: Warning - this method won't work in the case the id fields are not set
    if (!(object instanceof AccountType)) {
      return false;
    }
    AccountType other = (AccountType) object;
    if ((this.acctypCode == null && other.acctypCode != null)
        || (this.acctypCode != null && !this.acctypCode.equals(other.acctypCode))) {
      return false;
    }
    return true;
  }

  @Override
  public String toString() {
    return "ca.bc.gov.health.hamis.entity.AccountType[ acctypCode=" + acctypCode + " ]";
  }
}
