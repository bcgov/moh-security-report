package ca.bc.gov.health.hamis.entity;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OrderBy;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/** The persistent class for the CUSTOM_ACCOUNT_GROUPINGS database table. */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "CUSTOM_ACCOUNT_GROUPINGS")
@NamedQueries({
  @NamedQuery(
      name = "CustomAccountGrouping.findAll",
      query = "SELECT c FROM CustomAccountGrouping c"),
  @NamedQuery(
      name = "CustomAccountGrouping.findCAGForGivenDate",
      query =
          "SELECT c FROM CustomAccountGrouping c, DataSubmitter ds "
              + " JOIN  c.dataSubmitter  dsi  "
              + " JOIN ds.healthOrganization hoi ON (dsi.healthOrganization.hoId = :hoId)"
              + " WHERE dsi.dsId = ds.dsId"
              + " AND c.endDt is NULL  "
              + " AND c.fiscalYear.fiscalYear =:fiscalYear")
})
@SequenceGenerator(name = "CAG_SEQ", sequenceName = "CAG_SEQ", allocationSize = 1)
public class CustomAccountGrouping implements Serializable {

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 255)
  @Column(name = "NAME")
  private String name;

  private static final long serialVersionUID = 1L;

  @Id
  @Column(name = "CAG_ID")
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "CAG_SEQ")
  private Long cagId;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "DATE_CREATED")
  private Date dateCreated;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "DATE_MODIFIED")
  private Date dateModified;

  @Temporal(TemporalType.DATE)
  @Column(name = "EFF_DT")
  private Date effDt;

  @Temporal(TemporalType.DATE)
  @Column(name = "END_DT")
  private Date endDt;

  @Column(name = "USER_CREATED")
  private String userCreated;

  @Column(name = "USER_MODIFIED")
  private String userModified;

  // bi-directional many-to-one association to CustomAccount
  @OneToMany(mappedBy = "customAccountGrouping")
  @OrderBy("generalLedgerAcctNumber ASC")
  private List<CustomAccount> customAccounts;

  // bi-directional many-to-one association to DataSubmitter
  @ManyToOne
  @JoinColumn(name = "DS_ID")
  private DataSubmitter dataSubmitter;

  // bi-directional many-to-one association to FiscalYear
  @ManyToOne
  @JoinColumn(name = "CAG_FISCAL_YEAR")
  private FiscalYear fiscalYear;
}
