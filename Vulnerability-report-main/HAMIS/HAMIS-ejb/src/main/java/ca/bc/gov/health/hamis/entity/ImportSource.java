package ca.bc.gov.health.hamis.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.io.Serializable;
import java.util.Date;
import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/** The persistent class for the IMPORT_SOURCES database table. */
@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name = "IMPORT_SOURCES")
@NamedQuery(name = "ImportSource.findAll", query = "SELECT i FROM ImportSource i")
public class ImportSource implements Serializable {
  private static final long serialVersionUID = 1L;

  @Id
  @Column(name = "IS_ID")
  private long isId;

  @Column(name = "CONTACT_PERSON")
  private String contactPerson;

  @Column(name = "CURRENT_RECORD")
  private String currentRecord;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "DATE_CREATED")
  private Date dateCreated;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "DATE_MODIFIED")
  private Date dateModified;

  private String description;

  @Column(name = "DISTRIBUTION_DATE")
  private String distributionDate;

  @Temporal(TemporalType.DATE)
  @Column(name = "EFF_DT")
  private Date effDt;

  @Temporal(TemporalType.DATE)
  @Column(name = "END_DT")
  private Date endDt;

  @Column(name = "HARP_APPLICATION_VERSION")
  private String harpApplicationVersion;

  @Column(name = "HARP_DATABASE_VERSION")
  private String harpDatabaseVersion;

  @Column(name = "HARP_HA_NUMBER")
  private String harpHaNumber;

  private String location;

  @Column(name = "SERIAL_NUMBER")
  private String serialNumber;

  @Column(name = "USER_CREATED")
  private String userCreated;

  @Column(name = "USER_MODIFIED")
  private String userModified;

  // bi-directional many-to-one association to ImportFile
  @OneToMany(mappedBy = "importSource")
  private List<ImportFile> importFiles;

  // bi-directional many-to-one association to HealthOrganization
  @ManyToOne
  @JoinColumn(name = "HO_ID")
  private HealthOrganization healthOrganization;
}
