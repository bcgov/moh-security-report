package ca.bc.gov.health.hamis.session;

import ca.bc.gov.health.hamis.dto.ReportingPeriodDto;
import ca.bc.gov.health.hamis.entity.ReportingPeriod;
import ca.bc.gov.health.hamis.mapper.HamisMapper;
import ca.bc.gov.health.hamis.service.IReportingPeriodFacade;
import jakarta.ejb.Stateless;
import java.util.ArrayList;
import java.util.List;
import lombok.val;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

@Stateless
public class ReportingPeriodFacade extends AbstractFacade<ReportingPeriod>
    implements IReportingPeriodFacade {

  private final HamisMapper mapper = HamisMapper.INSTANCE;

  private static final Logger LOGGER = LogManager.getLogger(ReportingPeriodFacade.class);

  public ReportingPeriodFacade() {
    super(ReportingPeriod.class);
  }

  /**
   * Get the list of Reporting Periods for a fiscal Year
   *
   * @param fiscalYear
   * @return list of ReportingPeriodDto
   */
  @Override
  public List<ReportingPeriodDto> getReportingPeriodsForFiscalYear(final String fiscalYear) {
    LOGGER.debug("getReportingPeriodsForFiscalYear called");
    val reportingPeriodList = new ArrayList<ReportingPeriodDto>();
    val query =
        getEntityManager().createNamedQuery("ReportingPeriod.findReportingPeriodsForFiscalYear");
    query.setParameter("fiscalYear", fiscalYear);
    //    try {
    val results = query.getResultList();
    for (val result : results) {
      reportingPeriodList.add(mapper.toDto((ReportingPeriod) result));
    }

    return reportingPeriodList;
  }

  /**
   * Update a list of Reporting Periods given
   *
   * @param reportingPeriodList
   */
  @Override
  public void updateReportingPeriods(final List<ReportingPeriodDto> reportingPeriodList) {
    LOGGER.debug("updateReportingPeriods called");

    reportingPeriodList.forEach(
        period -> {
          super.edit(mapper.toModel(period));
        });
  }

  /**
   * delete all Reporting Periods for a fiscal year HARD DELETE
   *
   * @param fiscalYear
   */
  @Override
  public void deleteReportingPeriodsForFiscalYear(final String fiscalYear) {
    LOGGER.debug("deleteReportingPeriods called");
    val query =
        getEntityManager().createNamedQuery("ReportingPeriod.deleteReportingPeriodsForFiscalYear");
    query.setParameter("fiscalYear", fiscalYear);
    query.executeUpdate();
  }
}
