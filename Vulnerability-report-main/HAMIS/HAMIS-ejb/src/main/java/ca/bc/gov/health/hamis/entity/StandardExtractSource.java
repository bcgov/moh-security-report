package ca.bc.gov.health.hamis.entity;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/** The persistent class for the STANDARD_EXTRACT_SOURCES database table. */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "STANDARD_EXTRACT_SOURCES")
@NamedQueries({
  @NamedQuery(
      name = "StandardExtractSource.findAll",
      query = "SELECT s FROM StandardExtractSource s"),
  @NamedQuery(
      name = "StandardExtractSource.findSESForGivenFiscalYearAndHeathOrgId",
      query =
          "SELECT c FROM StandardExtractSource c, DataSubmitter ds "
              + " JOIN  c.dataSubmitter  dsi  "
              + " JOIN ds.healthOrganization hoi ON (dsi.healthOrganization.hoId = :hoId)"
              + " WHERE dsi.dsId = ds.dsId"
              + " AND c.endDt is NULL  "
              + " AND c.fiscalYear =:fiscalYear")
})
@SequenceGenerator(name = "SES_SEQ", sequenceName = "SES_SEQ", allocationSize = 1)
public class StandardExtractSource implements Serializable {

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 255)
  @Column(name = "NAME")
  private String name;

  @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "sesId")
  private List<ProviderDefinition> providerDefinitionsList;

  private static final long serialVersionUID = 1L;

  @Id
  @Column(name = "SES_ID")
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SES_SEQ")
  private Long sesId;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "DATE_CREATED")
  private Date dateCreated;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "DATE_MODIFIED")
  private Date dateModified;

  @Temporal(TemporalType.DATE)
  @Column(name = "EFF_DT")
  private Date effDt;

  @Temporal(TemporalType.DATE)
  @Column(name = "END_DT")
  private Date endDt;

  @Column(name = "FISCAL_YEAR")
  private String fiscalYear;

  @Column(name = "USER_CREATED")
  private String userCreated;

  @Column(name = "USER_MODIFIED")
  private String userModified;

  /*
   * //bi-directional many-to-one association to ProviderDefinition
   *
   * @OneToMany(mappedBy="standardExtractSource") private List<ProviderDefinition>
   * providerDefinitions;
   */
  // bi-directional many-to-one association to StandardExtractFile

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "standardExtractSource")
  private List<StandardExtractFile> standardExtractFiles;

  // bi-directional many-to-one association to DataSubmitter
  @ManyToOne
  @JoinColumn(name = "DS_ID")
  private DataSubmitter dataSubmitter;

  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public List<ProviderDefinition> getProviderDefinitionsList() {
    return providerDefinitionsList;
  }

  public void setProviderDefinitionsList(List<ProviderDefinition> providerDefinitionsList) {
    this.providerDefinitionsList = providerDefinitionsList;
  }
}
