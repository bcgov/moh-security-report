package ca.bc.gov.health.hamis.entity;

import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.io.Serializable;
import java.util.Date;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/** The persistent class for the REPORTING_PERIODS database table. */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "REPORTING_PERIODS")
@NamedQueries({
  @NamedQuery(
      name = "ReportingPeriod.findReportingPeriodsForFiscalYear",
      query = "SELECT r FROM ReportingPeriod r WHERE r.fiscalYearBean.fiscalYear = :fiscalYear"),
  @NamedQuery(
      name = "ReportingPeriod.deleteReportingPeriodsForFiscalYear",
      query = "DELETE FROM ReportingPeriod r WHERE r.fiscalYearBean.fiscalYear = :fiscalYear")
})
public class ReportingPeriod implements Serializable {
  private static final long serialVersionUID = 1L;

  @EmbeddedId private ReportingPeriodId id;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "DATE_CREATED")
  private Date dateCreated;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "DATE_MODIFIED")
  private Date dateModified;

  @Temporal(TemporalType.DATE)
  @Column(name = "DUE_DATE")
  private Date dueDate;

  @Temporal(TemporalType.DATE)
  @Column(name = "END_DATE")
  private Date endDate;

  @Temporal(TemporalType.DATE)
  @Column(name = "START_DATE")
  private Date startDate;

  @Column(name = "USER_CREATED")
  private String userCreated;

  @Column(name = "USER_MODIFIED")
  private String userModified;

  // bi-directional many-to-one association to FiscalYear
  @ManyToOne
  @JoinColumn(name = "FISCAL_YEAR", insertable = false, updatable = false)
  private FiscalYear fiscalYearBean;

  /*
   * // bi-directional many-to-one association to IndicatorData
   * @OneToMany(mappedBy="reportingPeriod") private List<IndicatorData>
   * indicatorData;
   *
   * //bi-directional many-to-one association to StandardExtractFile
   * @OneToMany(mappedBy="reportingPeriod") private List<StandardExtractFile>
   * standardExtractFiles;
   *
   * //bi-directional many-to-one association to Submission
   * @OneToMany(mappedBy="reportingPeriod") private List<Submission> submissions;
   *
   * //bi-directional many-to-one association to TrxnDataAcctValue
   * @OneToMany(mappedBy="reportingPeriod") private List<TrxnDataAcctValue>
   * trxnDataAcctValues;
   */

}
