package ca.bc.gov.health.hamis.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.io.Serializable;
import java.util.Date;
import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/** The persistent class for the FISCAL_YEARS database table. */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "FISCAL_YEARS")
@NamedQuery(name = "FiscalYear.findAll", query = "SELECT f FROM FiscalYear f")
public class FiscalYear implements Serializable {

  private static final long serialVersionUID = 1L;

  @Id
  @Column(name = "FISCAL_YEAR")
  private String fiscalYear;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "DATE_CREATED")
  private Date dateCreated;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "DATE_MODIFIED")
  private Date dateModified;

  @Temporal(TemporalType.DATE)
  @Column(name = "END_DATE")
  private Date endDate;

  @Column(name = "ROLLOVER_FLAG")
  private String rolloverFlag;

  @Temporal(TemporalType.DATE)
  @Column(name = "START_DATE")
  private Date startDate;

  @Column(name = "USER_CREATED")
  private String userCreated;

  @Column(name = "USER_MODIFIED")
  private String userModified;

  @Column(name = "YEAR_TYPE")
  private String yearType;

  // bi-directional many-to-one association to ReportingPeriod
  @OneToMany(fetch = FetchType.LAZY, mappedBy = "fiscalYearBean")
  private List<ReportingPeriod> reportingPeriods;

  // bi-directional many-to-one association to CustomAccountGrouping
  @OneToMany(fetch = FetchType.LAZY, mappedBy = "fiscalYear")
  private List<CustomAccountGrouping> customAccountGroupings;

  // bi-directional many-to-one association to SectorType
  @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "fiscalYear")
  private List<SectorType> sectorTypesList;

  // bi-directional many-to-one association to ServiceType
  @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "fiscalYear")
  private List<ServiceType> serviceTypesList;
  // bi-directional many-to-one association to ProviderType
  @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "fiscalYear")
  private List<ProviderType> providerTypesList;

  // bi-directional many-to-one association to MiscoaPrimaryAcct
  @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "fiscalYear")
  private List<MiscoaPrimaryAcct> miscoaPrimaryAcctsList;

  // bi-directional many-to-one association to MiscoaSecondaryAcct
  @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "fiscalYear")
  private List<MiscoaSecondaryAcct> miscoaSecondaryAcctsList;

  // bi-directional many-to-one association to PrimaryLevel2
  @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "fiscalYear")
  private List<PrimaryLevel2> primaryLevel2List;

  // bi-directional many-to-one association to SecondaryLevel1
  @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "fiscalYear")
  private List<SecondaryLevel1> secondaryLevel1List;

  /*
   * //bi-directional one-to-one association to BalanceSheetVarianceDtl
   * @OneToOne(mappedBy="fiscalYearBean") private BalanceSheetVarianceDtl
   * balanceSheetVarianceDtl;
   *
   * //bi-directional many-to-one association to DataQualPrvdrType
   * @OneToMany(mappedBy="fiscalYearBean") private List<DataQualPrvdrType>
   * dataQualPrvdrTypes;
   *
   * //bi-directional many-to-one association to ImportFile
   * @OneToMany(mappedBy="fiscalYearBean") private List<ImportFile> importFiles;
   *
   * //bi-directional many-to-one association to ImportLastReportPeriod
   * @OneToMany(mappedBy="fiscalYearBean") private List<ImportLastReportPeriod>
   * importLastReportPeriods;
   *
   * //bi-directional many-to-one association to PrimaryYearMap
   * @OneToMany(mappedBy="fiscalYearBean") private List<PrimaryYearMap>
   * primaryYearMaps;
   *
   * //bi-directional many-to-one association to SecondaryYearMap
   * @OneToMany(mappedBy="fiscalYearBean") private List<SecondaryYearMap>
   * secondaryYearMaps;
   *
   * //bi-directional many-to-one association to SignCheckDetail
   * @OneToMany(mappedBy="fiscalYearBean") private List<SignCheckDetail>
   * signCheckDetails;
   *
   * //bi-directional one-to-one association to StandardAmountReversDtl
   * @OneToOne(mappedBy="fiscalYearBean") private StandardAmountReversDtl
   * standardAmountReversDtl;
   *
   * public List<DataQualPrvdrType> getDataQualPrvdrTypes() { return
   * this.dataQualPrvdrTypes; }
   *
   * public void setDataQualPrvdrTypes(List<DataQualPrvdrType> dataQualPrvdrTypes)
   * { this.dataQualPrvdrTypes = dataQualPrvdrTypes; }
   *
   * public DataQualPrvdrType addDataQualPrvdrType(DataQualPrvdrType
   * dataQualPrvdrType) { getDataQualPrvdrTypes().add(dataQualPrvdrType);
   * dataQualPrvdrType.setFiscalYearBean(this);
   *
   * return dataQualPrvdrType; }
   *
   * public DataQualPrvdrType removeDataQualPrvdrType(DataQualPrvdrType
   * dataQualPrvdrType) { getDataQualPrvdrTypes().remove(dataQualPrvdrType);
   * dataQualPrvdrType.setFiscalYearBean(null);
   *
   * return dataQualPrvdrType; }
   */

  public List<SecondaryLevel1> getSecondaryLevel1List() {
    return secondaryLevel1List;
  }

  public void setSecondaryLevel1List(List<SecondaryLevel1> secondaryLevel1List) {
    this.secondaryLevel1List = secondaryLevel1List;
  }

  public List<MiscoaPrimaryAcct> getMiscoaPrimaryAcctsList() {
    return miscoaPrimaryAcctsList;
  }

  public void setMiscoaPrimaryAcctsList(List<MiscoaPrimaryAcct> miscoaPrimaryAcctsList) {
    this.miscoaPrimaryAcctsList = miscoaPrimaryAcctsList;
  }

  public List<MiscoaSecondaryAcct> getMiscoaSecondaryAcctsList() {
    return miscoaSecondaryAcctsList;
  }

  public void setMiscoaSecondaryAcctsList(List<MiscoaSecondaryAcct> miscoaSecondaryAcctsList) {
    this.miscoaSecondaryAcctsList = miscoaSecondaryAcctsList;
  }

  public List<PrimaryLevel2> getPrimaryLevel2List() {
    return primaryLevel2List;
  }

  public void setPrimaryLevel2List(List<PrimaryLevel2> primaryLevel2List) {
    this.primaryLevel2List = primaryLevel2List;
  }

  public List<SectorType> getSectorTypesList() {
    return sectorTypesList;
  }

  public void setSectorTypesList(List<SectorType> sectorTypesList) {
    this.sectorTypesList = sectorTypesList;
  }

  public List<ServiceType> getServiceTypesList() {
    return serviceTypesList;
  }

  public void setServiceTypesList(List<ServiceType> serviceTypesList) {
    this.serviceTypesList = serviceTypesList;
  }

  public List<ProviderType> getProviderTypesList() {
    return providerTypesList;
  }

  public void setProviderTypesList(List<ProviderType> providerTypesList) {
    this.providerTypesList = providerTypesList;
  }
}
