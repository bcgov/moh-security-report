function onGovMenuClick() {
    $('div.navbar-government-header-button,.government-menu-close-button').on('click', toggleGov);
}
function toggleGov() {
    var m = document.getElementById('government-menu');
    if (m.style.display == 'none') {
        m.style.display = 'block';
        m.style.visibility = 'visible';
    } else {
        m.style.display = 'none';
        m.style.visibility = 'hidden';
    }

    var d = document.querySelector('div.navbar-government-header-button span');
    d.classList.toggle('arrow-down');
    d.classList.toggle('arrow-up');
}

function confirmExit() {
    return confirm("Please confirm you want to sign out. \nThis will also end all other active Keycloak, PHSA, or SiteMinder sessions you have open.");
}

/**
 * Fix a PrimeFaces bug 
 * Previous p:autoComplete selection does not show when opening dropdown
 *
 * @param formId -> <h:form id="">
 * @param autoCompleteId -> <p:autoComplete id="">
 */
function selectAutoComplete(formId, autoCompleteId) {
    const PADDING = 5.56;
    var panel = $('#' + formId + '\\:' + autoCompleteId + '_panel');
    var inputValue = $('#' + formId + '\\:' + autoCompleteId + '_input').val();
    var selection = $('[data-item-value="' + inputValue + '"]');
    if (inputValue !== '' && selection.length != 0) {
        panel.scrollTop(selection.offset().top - panel.offset().top + (selection.index() * PADDING));
        selection.addClass("ui-state-active");
        $('[data-item-value]').removeClass("ui-state-highlight");
    } else {
        panel.scrollTop(0);
    }
}

/**
 * Menu Navigation JS
 * Ensure parent stays active when a user hovers over expanded menu
 */
$(document).ready(function () {
    $('li.dropdown').mouseenter(function () {
        $(this).toggleClass('active-dropdown');
    });

    $('li.dropdown').mouseleave(function () {
        $(this).toggleClass('active-dropdown');
    });
});

/**
 * Fix a PrimeFaces bug 
 * Clicking the scrollbar of an p:autoComplete dropdown closes the window
 */
$(document).ready(function () {
    $('body').on('mousedown', '.ui-autocomplete-panel', function (event) {
        event.stopImmediatePropagation();
    });
});

/**
 * Replace default jQuery slideUp() effect with fadeOut() when closing p:messages
 */
$(document).ready(function () {
    $('body').on('keydown mousedown', '.ui-messages-close', function () {
        $(this).removeAttr('onclick');
        $(this).attr('onclick', '$(this).parent().fadeOut();');
    });
});

// Session Management
const TIMEOUT = 1920000; // 32 MINS slightly longer than KC session timeout, 1 minute less than timeout in web.xml
const ACTIVITY_CHECK_INTERVAL = 60000; // 1 min
const MAX_TIME_REMAINING_BEFORE_GROWL = 120000; // growl will be shown when this many seconds are remaining in the session

$(document).ready(function () {
    $.active = false;
    $.growl = false;
    $.elapsed = 0;
    $('body').bind('click keypress', function () {
        $.active = true;
    });
    checkActivity();
    setInterval(checkActivity, ACTIVITY_CHECK_INTERVAL); // function, interval
});

function checkActivity() {
    if ($.active) {
        $.elapsed = 0;
        $.active = false;
        $.growl = false;
        PF('timeoutWarning').removeAll();
        extendSession(); // p:remoteCommand in gov30Template.xhtml
    }
    if ($.elapsed < TIMEOUT) {
        $.elapsed += ACTIVITY_CHECK_INTERVAL;
        // console.log($.elapsed + " " + new Date());

        if ($.elapsed > (TIMEOUT - MAX_TIME_REMAINING_BEFORE_GROWL) && $.growl === false) {
            PF('timeoutWarning').show([{
                    "summary": "Your session is about to expire",
                    "detail": "Please continue using the application to extend your session",
                    "severity": "warn"}]);
            $.growl = true;
        }
    } else {
        endSession().then(() => location.reload());
    }
}
