/*
 * *********************************************************************************************************************
 *  Copyright (c) 2020, Ministry of Health, BC.                                                                        *
 *                                                                                                                     *
 *  All rights reserved.                                                                                               *
 *    This information contained herein may not be used in whole                                                       *
 *    or in part without the express written consent of the                                                            *
 *    Government of British Columbia, Canada.                                                                          *
 *                                                                                                                     *
 *  Revision Control Information                                                                                       *
 *  File:                $Id:: LogoutBean.java 1644 2024-04-19 21:50:21Z ahoplock                                    $ *
 *  Date of Last Commit: $Date:: 2024-04-19 14:50:21 -0700 (Fri, 19 Apr 2024)                                        $ *
 *  Revision Number:     $Rev:: 1644                                                                                 $ *
 *  Last Commit by:      $Author:: ahoplock                                                                          $ *
 *                                                                                                                     *
 * *********************************************************************************************************************
 */
package ca.bc.gov.health.request;

import ca.bc.gov.health.security.OidcConfig;
import fish.payara.security.openid.api.OpenIdContext;
import jakarta.enterprise.context.RequestScoped;
import jakarta.faces.context.FacesContext;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import jakarta.servlet.ServletException;
import java.io.IOException;
import java.io.Serializable;
import java.net.URLEncoder;

/**
 * Logout bean
 *
 * @author CGI Information Management Consultants Inc.
 */
@RequestScoped
@Named("Logout")
public class LogoutBean implements Serializable {

  private static final long serialVersionUID = -2300227033759520822L;

  @Inject private OpenIdContext context;

  @Inject private OidcConfig oidcConfig;

  /**
   * Method to invalidate user session
   *
   * @throws jakarta.servlet.ServletException
   * @throws java.io.IOException
   */
  public void logout() throws ServletException, IOException {

    String idToken = "";
    if (context.getIdentityToken() != null) {
      idToken = context.getIdentityToken().getToken();
    }

    String logoutUrl;
    String keycloakLogoutUrl =
        oidcConfig.getProviderUri()
            + "protocol/openid-connect/logout?post_logout_redirect_uri="
            + URLEncoder.encode(oidcConfig.getRedirectUri(), "UTF-8")
            + "&id_token_hint="
            + idToken;

    if (context.getAccessToken() != null) {
      switch (context
          .getAccessToken()
          .getJwtClaims()
          .getStringClaim("identity_provider")
          .orElse("")) {
        case "idir":
          /**
           * Currently Keycloak does not support logging out of SiteMinder IDP's automatically so we
           * set the Keycloak Logout redirect_uri= parameter to be the SiteMinder logout and we set
           * the SiteMinder returl= parameter to be application which chains both logouts for full
           * Single Sign Out. https://github.com/bcgov/ocp-sso/issues/4
           */
          logoutUrl =
              oidcConfig.getSiteminderLogoutUri()
                  + "?retnow=1&returl="
                  + oidcConfig.getRedirectUri();
          keycloakLogoutUrl =
              oidcConfig.getProviderUri()
                  + "protocol/openid-connect/logout?post_logout_redirect_uri="
                  + URLEncoder.encode(logoutUrl, "UTF-8")
                  + "&id_token_hint="
                  + idToken;
          break;
        case "phsa":
          keycloakLogoutUrl = oidcConfig.getPhsaLogoutUri();
          break;
        case "moh_idp":
        default:
          break;
      }
    }

    FacesContext.getCurrentInstance().getExternalContext().redirect(keycloakLogoutUrl);
    FacesContext.getCurrentInstance().getExternalContext().invalidateSession();
  }
}
