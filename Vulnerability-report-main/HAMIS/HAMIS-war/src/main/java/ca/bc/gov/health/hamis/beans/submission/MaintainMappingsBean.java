package ca.bc.gov.health.hamis.beans.submission;

import ca.bc.gov.health.hamis.beans.session.DroplistBean;
import ca.bc.gov.health.hamis.beans.session.UserBean;
import ca.bc.gov.health.hamis.dto.CustomAccountGroupingDto;
import ca.bc.gov.health.hamis.dto.StandardExtractSourceDto;
import ca.bc.gov.health.hamis.service.ICustomAccountGroupingFacade;
import ca.bc.gov.health.hamis.service.IFiscalYearFacade;
import ca.bc.gov.health.hamis.service.IStandardExtractSourceFacade;
import jakarta.annotation.PostConstruct;
import jakarta.ejb.EJB;
import jakarta.faces.view.ViewScoped;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import java.util.List;
import lombok.Getter;
import lombok.Setter;

/**
 * Backing Bean for the Maintain Mappings screen
 *
 * @author greg.perkins
 */
@Named("MaintainMappingsBean")
@ViewScoped
@Getter
@Setter
public class MaintainMappingsBean implements java.io.Serializable {

  private static final long serialVersionUID = -1520524266456783237L;
  /* Inject required facade classes */
  @EJB private ICustomAccountGroupingFacade cagFacade;
  @EJB private IStandardExtractSourceFacade sefSourceFacade;
  @EJB private IFiscalYearFacade fiscalYearFacade;

  /* Inject references to other beans */
  @Inject private UserBean userBean;
  @Inject private transient DroplistBean droplists;

  /* List of Custom Account Maps filtered by FY*/
  private List<CustomAccountGroupingDto> customAccountMaps;
  /* List of SEF Sources filtered by FY*/
  private List<StandardExtractSourceDto> sefSourceMaps;

  /* Currently selected filters */
  private String selectedCustomAccountFiscalYear;
  private String selectedSefSourceFiscalYear;

  /** On startup, filter by default to the first value in the FY list */
  @PostConstruct
  public void init() {
    String currentFiscalYear = fiscalYearFacade.getCurrentFiscalYear().getFiscalYear();
    selectedCustomAccountFiscalYear = currentFiscalYear;
    filterCustomAccountByFiscalYear();
    selectedSefSourceFiscalYear = currentFiscalYear;
    filterSefSourceByFiscalYear();
  }

  /** Update list based on new filter value */
  public void filterCustomAccountByFiscalYear() {
    customAccountMaps =
        cagFacade.getAllCustomAccountGroupingsSummary(
            selectedCustomAccountFiscalYear, userBean.getHealthAuthority());
  }

  /** Update list based on new filter value */
  public void filterSefSourceByFiscalYear() {
    sefSourceMaps =
        sefSourceFacade.findStandardExtractSource(
            selectedSefSourceFiscalYear, userBean.getHealthAuthority());
  }
}
