/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.hamis.dto;

import java.util.Date;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * DTO class for the submission table
 *
 * @author greg.perkins
 */
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Data
public class SubmissionDto implements java.io.Serializable {

  private static final long serialVersionUID = 3277317893353515892L;

  public static final String ACCPT = "ACCPT";
  public static final String REJECT = "REJCT";
  public static final String SYSER = "SYSER";

  private long subId;

  private String abTrxnType;

  private Date dateCreated;

  private Date dateModified;

  private String userCreated;

  private String userModified;

  private String submissionsTypeCd;

  private String submissionsTypeDesc;

  private String subStatusTypeCd;

  private String subStatusTypeDesc;

  private boolean hasWarningMessages;

  private boolean isSectorValidation = false;

  /**
   * Gets the transaction type description
   *
   * @return String Actuals or Budget
   */
  public String getTransactionTypeDescription() {
    String suffix = "A".equals(abTrxnType) ? "Actuals" : "Budgets";
    if ("VALID".equals(subStatusTypeCd) || isSectorValidation) {
      String prefix = isSectorValidation ? "Sector" : "SEF";
      return prefix + " - " + suffix;
    } else {
      return suffix;
    }
  }

  /**
   * We need to override the status description coming from the database
   *
   * @return String
   */
  public String getCustomStatusDescription() {
    if (isAccepted()) {
      if (hasWarningMessages) {
        return "ACCEPTED (w/WARNINGS)";
      } else {
        return "ACCEPTED";
      }
    } else if (isError()) {
      return "SYSTEM ERROR";
    } else if (isRejected()) {
      return "REJECTED";
    } else {
      return subStatusTypeDesc;
    }
  }

  /**
   * Translate the progress step into a percentage
   *
   * @return int 0-100
   */
  public int getProgress() {
    if (ACCPT.equals(submissionsTypeCd)) {
      return 100;
    } else if (REJECT.equals(submissionsTypeCd)) {
      return 100;
    } else if (SYSER.equals(submissionsTypeCd)) {
      return 100;
    } else if ("PRC01".equals(submissionsTypeCd)) {
      return 16;
    } else if ("PRC02".equals(submissionsTypeCd)) {
      return 32;
    } else if ("PRC03".equals(submissionsTypeCd)) {
      return 48;
    } else if ("PRC04".equals(submissionsTypeCd)) {
      return 64;
    } else if ("PRC05".equals(submissionsTypeCd)) {
      return 80;
    }
    return 0;
  }

  /**
   * Returns true if the row is accepted
   *
   * @return boolean
   */
  public boolean isAccepted() {
    return ACCPT.equals(submissionsTypeCd);
  }

  /**
   * Returns true if the row is system error
   *
   * @return boolean
   */
  public boolean isError() {
    return SYSER.equals(submissionsTypeCd);
  }

  /**
   * Returns true if the row is rejected
   *
   * @return boolean
   */
  public boolean isRejected() {
    return REJECT.equals(submissionsTypeCd);
  }

  /**
   * Returns true if the row is in progress
   *
   * @return boolean
   */
  public boolean isInProgress() {
    return !isAccepted() && !isError() && !isRejected();
  }
}
