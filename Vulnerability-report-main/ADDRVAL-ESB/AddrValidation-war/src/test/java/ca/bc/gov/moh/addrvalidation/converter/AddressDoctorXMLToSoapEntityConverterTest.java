/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.addrvalidation.converter;

import ca.bc.gov.moh.addrvalidation.entity.wsdl.Result;
import ca.bc.gov.moh.addrvalidation.entity.wsdl.ResultData;
import org.junit.Assert;
import org.junit.Test;

/**
 *
 * @author killian.faussart
 */
public class AddressDoctorXMLToSoapEntityConverterTest {

    @Test
    public void testXMLConversion() {

        //GIVEN
        AddressDoctorXMLToSoapEntityConverter converter = new AddressDoctorXMLToSoapEntityConverter();
        String addrDoctorXMLResult = "ï»¿<?xml version=\"1.0\" encoding=\"UTF-16\"?>\n"
                + "<Result	 ProcessStatus=\"C4\"\n"
                + "	 ModeUsed=\"BATCH\"\n"
                + "	 Count=\"1\"\n"
                + "	 CountOverflow=\"NO\"\n"
                + "	 CountryISO3=\"CAN\"\n"
                + "	 PreferredScript=\"DATABASE\"\n"
                + "	 PreferredLanguage=\"DATABASE\">\n"
                + "\n"
                + "<ResultData ResultNumber=\"1\"\n"
                + "	 MailabilityScore=\"4\"\n"
                + "	 ResultPercentage=\"100.00\"\n"
                + "	 ElementResultStatus=\"80F0F0E0F000000000E0\"\n"
                + "	 ElementInputStatus=\"00606050600000000060\"\n"
                + "	 AddressResolutionCode=\"00000000000000000000\"\n"
                + "	 ExtElementStatus=\"00505050000000000000\"\n"
                + "	 ElementRelevance=\"10101010100000000010\"\n"
                + "	 AddressType=\"S\"\n"
                + "	 LanguageISO3=\"ENG\">\n"
                + "	<AddressElements>\n"
                + "		<Country Type=\"NAME_EN\" Item=\"1\">CANADA</Country>\n"
                + "		<Locality Item=\"1\">VICTORIA</Locality>\n"
                + "		<PostalCode Item=\"1\">V8W 2G2</PostalCode>\n"
                + "		<Province Item=\"1\">BC</Province>\n"
                + "		<Building Item=\"1\">test1</Building>\n"
                + "		<SubBuilding Item=\"1\">test2</SubBuilding>\n"
                + "		<Street Item=\"1\">DOUGLAS ST</Street>\n"
                + "		<Number Item=\"1\">1405</Number>\n"
                + "		<Contact Item=\"1\">test3</Contact>\n"
                + "		<DeliveryService Item=\"1\">test4</DeliveryService>\n"
                + "		<Key Item=\"1\">test5</Key>\n"
                + "		<Organization Item=\"1\">test6</Organization>\n"
                + "		<Residue Item=\"1\">test7</Residue>\n"
                + "	</AddressElements>\n"
                + "	<AddressLines>\n"
                + "		<DeliveryAddressLine Line=\"1\">1405 DOUGLAS ST</DeliveryAddressLine>\n"
                + "		<CountrySpecificLocalityLine Line=\"1\">VICTORIA BC V8W 2G2</CountrySpecificLocalityLine>\n"
                + "		<FormattedAddressLine Line=\"1\">1405 DOUGLAS ST</FormattedAddressLine>\n"
                + "		<FormattedAddressLine Line=\"2\">VICTORIA BC V8W 2G2</FormattedAddressLine>\n"
                + "		<RecipientLine Line=\"1\">VICTORIA BC V8W 2G2</RecipientLine>\n"
                + "	</AddressLines>\n"
                + "	<AddressComplete>1405 DOUGLAS ST VICTORIA BC V8W 2G2</AddressComplete>\n"
                + "</ResultData>\n"
                + "</Result>";

        //WHEN
        Result result = converter.convert(addrDoctorXMLResult);

        //THEN
        
        Assert.assertNotNull(result);
        Assert.assertEquals("CAN", result.getCountryISO3());
        Assert.assertEquals("C4", result.getProcessStatus());
        Assert.assertEquals(null, result.getErrorMessage());
        Assert.assertEquals(1, result.getResultDataSet().getResultData().size());
        ResultData resultData = result.getResultDataSet().getResultData().get(0);
        Assert.assertEquals("1", resultData.getResultNumber());
        Assert.assertEquals("4", resultData.getMailabilityScore());
        Assert.assertEquals("100.00", resultData.getResultPercentage());
        Assert.assertNotNull(resultData.getElementInputStatus());
        Assert.assertNotNull(resultData.getElementResultStatus());
        Assert.assertNotNull(resultData.getElementRelevance());
        Assert.assertNotNull(resultData.getExtElementStatus());
        Assert.assertNotNull(resultData.getAddressResolutionCode());
        Assert.assertEquals("S", resultData.getAddressType());
        Assert.assertEquals("ENG", resultData.getLanguageISO3());
        Assert.assertEquals("test5", resultData.getAddress().getRecordId());
        Assert.assertEquals(1,resultData.getAddress().getOrganization().getString().size());
        Assert.assertNull(resultData.getAddress().getDepartment());
        Assert.assertNull(resultData.getAddress().getEmail());
        Assert.assertEquals(1,resultData.getAddress().getContact().getString().size());
        Assert.assertEquals(1, resultData.getAddress().getBuilding().getString().size());
        Assert.assertEquals(1, resultData.getAddress().getSubBuilding().getString().size());
        Assert.assertEquals("DOUGLAS ST", resultData.getAddress().getStreet().getString().get(0));
        Assert.assertEquals("1405", resultData.getAddress().getHouseNumber().getString().get(0));
        Assert.assertEquals("1405 DOUGLAS ST", resultData.getAddress().getDeliveryAddressLines().getString().get(0));
        Assert.assertEquals("VICTORIA", resultData.getAddress().getLocality().getString().get(0));
        Assert.assertNull(resultData.getAddress().getPreferredLocality());
        Assert.assertEquals("V8W 2G2", resultData.getAddress().getPostalCode().getString().get(0));
        Assert.assertEquals("BC", resultData.getAddress().getProvince().getString().get(0));
        Assert.assertEquals("CANADA", resultData.getAddress().getCountry().getString().get(0));
        Assert.assertEquals("test1", resultData.getAddress().getBuilding().getString().get(0));
        Assert.assertEquals("test2", resultData.getAddress().getSubBuilding().getString().get(0));
        Assert.assertEquals("test3", resultData.getAddress().getContact().getString().get(0));
        Assert.assertEquals(1,resultData.getAddress().getResidue().getString().size());
        Assert.assertEquals("1405 DOUGLAS ST", resultData.getAddress().getDeliveryAddressLines().getString().get(0));
        Assert.assertEquals("VICTORIA BC V8W 2G2", resultData.getAddress().getCountrySpecificLocalityLine().getString().get(0));
        Assert.assertEquals("1405 DOUGLAS ST", resultData.getAddress().getFormattedAddress().getString().get(0));
        Assert.assertEquals("VICTORIA BC V8W 2G2", resultData.getAddress().getFormattedAddress().getString().get(1));
        Assert.assertEquals("1405 DOUGLAS ST VICTORIA BC V8W 2G2", resultData.getAddress().getAddressComplete());
    }
    
    @Test
    public void testInvalidXMLConversion() {

        //GIVEN
        AddressDoctorXMLToSoapEntityConverter converter = new AddressDoctorXMLToSoapEntityConverter();
        String addrDoctorXMLResult = "Invalid XML";

        //WHEN
        Result result = converter.convert(addrDoctorXMLResult);

        //THEN
        Assert.assertNull(result.getCountryISO3());
        Assert.assertNull(result.getEnrichments());
        Assert.assertNull(result.getErrorMessage());
        Assert.assertNull(result.getProcessStatus());
        Assert.assertNull(result.getResultDataSet());
    }

}
