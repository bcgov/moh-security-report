package ca.bc.gov.moh.rtrans.service.v2;

import ca.bc.gov.moh.rtrans.service.audit.RTransAuditProcessor;
import ca.bc.gov.moh.rtrans.service.audit.RTransAuditProcessorConfig;
import ca.bc.gov.moh.rtrans.service.audit.RTransFileDropProcessor;
import java.util.Properties;
import javax.naming.InitialContext;
import org.apache.camel.Processor;
import org.apache.camel.spring.SpringRouteBuilder;

/**
 *
 * @author David Sharpe (david.a.sharpe@cgi.com)
 */
public abstract class RTransRouteBuilder extends SpringRouteBuilder {

    public static final String R09 = "R09";
    public static final String R07 = "R07";
    public static final String R03 = "R03";
    public static final String RECEIVE = "RECEIVE";
    public static final String RESPOND = "RESPOND";
    public static final String START = "START";
    public static final String ESB_IN = "ESB_IN";
    public static final String ESB_OUT = "ESB_OUT";
    public static final String HCIM_IN = "HCIM_IN";
    public static final String HCIM_OUT = "HCIM_OUT";
    public static final String PROCESS_RESPONSE = "PROCESS_RESPONSE";
    public static final String COMPLETE = "COMPLETE";
    public static final String ERROR = "ERROR";
    public static final String INFO = "INFO";
    
    // Processor used to audit messages.
    protected static Processor AUDIT_PROCESSOR = new RTransAuditProcessor();
    
    // Processor used by routes to filedrop messages.
    protected static Processor FILEDROP_RECEIVE = new RTransFileDropProcessor(RECEIVE);
    protected static Processor FILEDROP_HCIM_IN = new RTransFileDropProcessor(HCIM_IN);
    protected static Processor FILEDROP_HCIM_OUT = new RTransFileDropProcessor(HCIM_OUT);
    protected static Processor FILEDROP_ESB_IN = new RTransFileDropProcessor(ESB_IN);
    protected static Processor FILEDROP_ESB_OUT = new RTransFileDropProcessor(ESB_OUT);
    protected static Processor FILEDROP_RESPOND = new RTransFileDropProcessor(RESPOND);
    protected static Processor FILEDROP_ERROR = new RTransFileDropProcessor(ERROR);
    
    // Application properties
    protected static Properties appProperties;
    private static final String JMS_QUEUE_NAME_PROPERTY = "jmsQueue";
    
    // Used by test classes to set the JMS queue URI to "direct:batchRecordQueue"
    protected static String jmsUri; /** "jms:jms/rtransQueue"; */
    
    @Override
    public void configure() throws Exception {
        
        if (appProperties == null || appProperties.isEmpty()) {
            setAppProperties((Properties) new InitialContext().lookup("java:app/rtrans/application_properties"));
        }
        
        jmsUri = "jms:" + appProperties.getProperty(JMS_QUEUE_NAME_PROPERTY);
        
        onException(Throwable.class)
                .logStackTrace(true)
                .logHandled(true)
                .handled(true)
                .to("direct:errorResponse");
    }
    
    /**
     * Sets the application properties. Used by InboundRouteBuilderTest to
     * inject dummy properties.
     * 
     * @param properties Properties
     */
    public static void setAppProperties(Properties properties) {
        appProperties = properties;
    }
}
