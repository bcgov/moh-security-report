package ca.bc.gov.health.midtier.web;

import ca.bc.gov.health.jsf.BaseBean;
import ca.bc.gov.health.midtier.ejb.entity.*;
import ca.bc.gov.health.midtier.ejb.session.*;
import jakarta.annotation.PostConstruct;
import jakarta.ejb.EJB;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.context.FacesContext;
import jakarta.faces.view.ViewScoped;
import jakarta.inject.Named;
import java.io.Serializable;
import java.util.List;

@Named("MaintainOrganization")
@ViewScoped
public class MaintainOrganization extends BaseBean implements Serializable {

  @EJB private OrganizationFacadeLocal organizationFacade;

  private List<Organization> allOrganizations;
  private Organization organization;
  private Object selectedKey;

  public MaintainOrganization() {}

  @PostConstruct
  public void init() {
    allOrganizations = organizationFacade.findAll();
    organization = new Organization();
  }

  public String add() {
    nullify();
    organizationFacade.create(organization);
    FacesContext.getCurrentInstance()
        .addMessage(
            null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Add Successful", "Add Successful"));
    init();
    ((Droplists) findBean("Droplists")).init();
    return clear();
  }

  public String update() {
    nullify();
    organizationFacade.edit(organization);
    FacesContext.getCurrentInstance()
        .addMessage(
            null,
            new FacesMessage(FacesMessage.SEVERITY_INFO, "Update Successful", "Update Successful"));
    ((Droplists) findBean("Droplists")).init();
    return clear();
  }

  public String delete() {
    organizationFacade.remove(organization);
    init();
    ((Droplists) findBean("Droplists")).init();
    return clear();
  }

  public String clear() {
    selectedKey = null;
    organization = new Organization();
    return null;
  }

  public String select() {
    for (int i = 0; i < allOrganizations.size(); i++) {
      if (allOrganizations.get(i).getOrganizationId().equals(selectedKey)) {
        organization = allOrganizations.get(i);
      }
    }
    return null;
  }

  private void nullify() {}

  public List<Organization> getAllOrganizations() {
    return allOrganizations;
  }

  public void setAllOrganizations(List<Organization> allOrganizations) {
    this.allOrganizations = allOrganizations;
  }

  public Organization getOrganization() {
    return organization;
  }

  public void setOrganization(Organization organization) {
    this.organization = organization;
  }

  public Object getSelectedKey() {
    return selectedKey;
  }

  public void setSelectedKey(Object selectedKey) {
    this.selectedKey = selectedKey;
  }
}
