package ca.bc.gov.health.midtier.web;

import ca.bc.gov.health.jsf.SelectItemHelper;
import ca.bc.gov.health.midtier.ejb.session.ApplicationFacadeLocal;
import ca.bc.gov.health.midtier.ejb.session.ContactFacadeLocal;
import ca.bc.gov.health.midtier.ejb.session.DistributionFacadeLocal;
import ca.bc.gov.health.midtier.ejb.session.MonitorFacadeLocal;
import ca.bc.gov.health.midtier.ejb.session.OrganizationFacadeLocal;
import ca.bc.gov.health.midtier.ejb.session.SigningAuthorityFacadeLocal;
import ca.bc.gov.health.midtier.ejb.session.TeamFacadeLocal;
import jakarta.annotation.PostConstruct;
import jakarta.ejb.EJB;
import jakarta.enterprise.context.ApplicationScoped;
import jakarta.faces.model.SelectItem;
import jakarta.inject.Named;
import java.util.List;

@Named("Droplists")
@ApplicationScoped
public class Droplists {

  @EJB private ApplicationFacadeLocal ApplicationFacade;
  @EJB private ContactFacadeLocal ContactFacade;
  @EJB private DistributionFacadeLocal DistributionFacade;
  @EJB private MonitorFacadeLocal MonitorFacade;
  @EJB private OrganizationFacadeLocal OrganizationFacade;
  @EJB private SigningAuthorityFacadeLocal SigningAuthorityFacade;
  @EJB private TeamFacadeLocal TeamFacade;

  private List<SelectItem> Organizations;
  private List<SelectItem> SigningAuthoritys;
  private List<SelectItem> Teams;

  @PostConstruct
  public void init() {
    Organizations =
        SelectItemHelper.buildSelectItemList(
            OrganizationFacade.findAll(), "organizationNm", "organizationId");
    SigningAuthoritys =
        SelectItemHelper.buildSelectItemList(
            SigningAuthorityFacade.findAll(), "authorityNm", "authorityId");
    Teams = SelectItemHelper.buildSelectItemList(TeamFacade.findAll(), "teamNm", "teamId");
  }

  public List<SelectItem> getApplications() {
    return SelectItemHelper.buildSelectItemList(
        ApplicationFacade.findAll(), "applicationNm", "applicationId");
  }

  public List<SelectItem> getContacts() {
    return SelectItemHelper.buildSelectItemList(ContactFacade.findAll(), "emailTxt", "contactId");
  }

  public List<SelectItem> getDistributions() {
    return SelectItemHelper.buildSelectItemList(
        DistributionFacade.findAll(), "primaryContactYn", "distributionId");
  }

  public List<SelectItem> getMonitors() {
    return SelectItemHelper.buildSelectItemList(MonitorFacade.findAll(), "monitorNm", "monitorId");
  }

  public List<SelectItem> getOrganizations() {
    return Organizations;
  }

  public List<SelectItem> getSigningAuthoritys() {
    return SigningAuthoritys;
  }

  public List<SelectItem> getTeams() {
    return Teams;
  }
}
