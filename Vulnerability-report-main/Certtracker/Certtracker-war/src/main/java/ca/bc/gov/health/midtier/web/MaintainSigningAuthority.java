package ca.bc.gov.health.midtier.web;

import ca.bc.gov.health.jsf.BaseBean;
import ca.bc.gov.health.midtier.ejb.entity.*;
import ca.bc.gov.health.midtier.ejb.session.*;
import jakarta.annotation.PostConstruct;
import jakarta.ejb.EJB;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.context.FacesContext;
import jakarta.faces.view.ViewScoped;
import jakarta.inject.Named;
import java.io.Serializable;
import java.util.List;

@Named("MaintainSigningAuthority")
@ViewScoped
public class MaintainSigningAuthority extends BaseBean implements Serializable {

  @EJB private SigningAuthorityFacadeLocal signingAuthorityFacade;

  private List<SigningAuthority> allSigningAuthoritys;
  private SigningAuthority signingAuthority;
  private Object selectedKey;

  public MaintainSigningAuthority() {}

  @PostConstruct
  public void init() {
    allSigningAuthoritys = signingAuthorityFacade.findAll();
    signingAuthority = new SigningAuthority();
  }

  public String add() {
    nullify();
    signingAuthorityFacade.create(signingAuthority);
    FacesContext.getCurrentInstance()
        .addMessage(
            null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Add Successful", "Add Successful"));
    init();
    ((Droplists) findBean("Droplists")).init();
    return clear();
  }

  public String update() {
    nullify();
    signingAuthorityFacade.edit(signingAuthority);
    FacesContext.getCurrentInstance()
        .addMessage(
            null,
            new FacesMessage(FacesMessage.SEVERITY_INFO, "Update Successful", "Update Successful"));
    ((Droplists) findBean("Droplists")).init();
    return clear();
  }

  public String delete() {
    signingAuthorityFacade.remove(signingAuthority);
    init();
    ((Droplists) findBean("Droplists")).init();
    return clear();
  }

  public String clear() {
    selectedKey = null;
    signingAuthority = new SigningAuthority();
    return null;
  }

  public String select() {
    for (int i = 0; i < allSigningAuthoritys.size(); i++) {
      if (allSigningAuthoritys.get(i).getAuthorityId().equals(selectedKey)) {
        signingAuthority = allSigningAuthoritys.get(i);
      }
    }
    return null;
  }

  private void nullify() {}

  public List<SigningAuthority> getAllSigningAuthoritys() {
    return allSigningAuthoritys;
  }

  public void setAllSigningAuthoritys(List<SigningAuthority> allSigningAuthoritys) {
    this.allSigningAuthoritys = allSigningAuthoritys;
  }

  public SigningAuthority getSigningAuthority() {
    return signingAuthority;
  }

  public void setSigningAuthority(SigningAuthority signingAuthority) {
    this.signingAuthority = signingAuthority;
  }

  public Object getSelectedKey() {
    return selectedKey;
  }

  public void setSelectedKey(Object selectedKey) {
    this.selectedKey = selectedKey;
  }
}
