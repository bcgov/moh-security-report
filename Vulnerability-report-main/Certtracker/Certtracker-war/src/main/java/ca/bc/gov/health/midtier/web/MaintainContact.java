package ca.bc.gov.health.midtier.web;

import ca.bc.gov.health.midtier.ejb.entity.*;
import ca.bc.gov.health.midtier.ejb.session.*;
import jakarta.annotation.PostConstruct;
import jakarta.ejb.EJB;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.context.FacesContext;
import jakarta.faces.context.Flash;
import jakarta.faces.view.ViewScoped;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import java.io.Serializable;

@Named("MaintainContact")
@ViewScoped
public class MaintainContact implements Serializable {

  @EJB private ContactFacadeLocal contactFacade;

  private Contact contact;

  @Inject private Flash flash;

  public MaintainContact() {}

  @PostConstruct
  public void init() {
    contact = new Contact();
    if (flash.get("selectedContactKey") != null) {
      contact = contactFacade.find(flash.get("selectedContactKey"));
    }
    if (contact.getTeamId() == null) {
      contact.setTeamId(new Team());
    }
    if (contact.getOrganizationId() == null) {
      contact.setOrganizationId(new Organization());
    }
  }

  public String select() {
    flash.keep("selectedContactKey");
    return "MaintainContact.xhtml";
  }

  public String add() {
    nullify();
    contactFacade.create(contact);
    FacesContext.getCurrentInstance()
        .addMessage(
            null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Add Successful", "Add Successful"));
    return null;
  }

  public String update() {
    nullify();
    contactFacade.edit(contact);
    FacesContext.getCurrentInstance()
        .addMessage(
            null,
            new FacesMessage(FacesMessage.SEVERITY_INFO, "Update Successful", "Update Successful"));
    return null;
  }

  public String delete() {
    nullify();
    contactFacade.remove(contact);
    return clear();
  }

  public String clear() {
    contact = new Contact();
    if (contact.getTeamId() == null) {
      contact.setTeamId(new Team());
    }
    if (contact.getOrganizationId() == null) {
      contact.setOrganizationId(new Organization());
    }
    return "ContactSearch.xhtml";
  }

  public String create() {
    contact = new Contact();
    if (contact.getTeamId() == null) {
      contact.setTeamId(new Team());
    }
    if (contact.getOrganizationId() == null) {
      contact.setOrganizationId(new Organization());
    }
    return "MaintainContact.xhtml";
  }

  private void nullify() {
    if (contact.getTeamId() != null && contact.getTeamId().getTeamId() == null) {
      contact.setTeamId(null);
    }
    if (contact.getOrganizationId() != null
        && contact.getOrganizationId().getOrganizationId() == null) {
      contact.setOrganizationId(null);
    }
  }

  public Contact getContact() {
    return contact;
  }

  public void setContact(Contact contact) {
    this.contact = contact;
  }

  public Flash getFlash() {
    return flash;
  }

  public void setFlash(Flash flash) {
    this.flash = flash;
  }
}
