package ca.bc.gov.health.midtier.web;

import ca.bc.gov.health.midtier.ejb.entity.*;
import ca.bc.gov.health.midtier.ejb.session.*;
import jakarta.annotation.PostConstruct;
import jakarta.ejb.EJB;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.context.FacesContext;
import jakarta.faces.context.Flash;
import jakarta.faces.view.ViewScoped;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import java.io.Serializable;

@Named("MaintainApplication")
@ViewScoped
public class MaintainApplication implements Serializable {

  @EJB private ApplicationFacadeLocal applicationFacade;

  private Application application;

  @Inject private Flash flash;

  public MaintainApplication() {}

  @PostConstruct
  public void init() {
    application = new Application();
    if (flash.get("selectedApplicationKey") != null) {
      application = applicationFacade.find(flash.get("selectedApplicationKey"));
    }
    if (application.getTeamId() == null) {
      application.setTeamId(new Team());
    }
    if (application.getOrganizationId() == null) {
      application.setOrganizationId(new Organization());
    }
  }

  public String select() {
    flash.keep("selectedApplicationKey");
    return "MaintainApplication.xhtml";
  }

  public String add() {
    nullify();
    applicationFacade.create(application);
    FacesContext.getCurrentInstance()
        .addMessage(
            "messages",
            new FacesMessage(FacesMessage.SEVERITY_INFO, "Add Successful", "Add Successful"));

    return null;
  }

  public String update() {
    nullify();
    applicationFacade.edit(application);
    FacesContext.getCurrentInstance()
        .addMessage(
            null,
            new FacesMessage(FacesMessage.SEVERITY_INFO, "Update Successful", "Update Successful"));
    return null;
  }

  public String delete() {
    applicationFacade.remove(application);
    return clear();
  }

  public String clear() {
    application = new Application();
    if (application.getTeamId() == null) {
      application.setTeamId(new Team());
    }
    if (application.getOrganizationId() == null) {
      application.setOrganizationId(new Organization());
    }
    return "ApplicationSearch.xhtml";
  }

  public String create() {
    application = new Application();
    if (application.getTeamId() == null) {
      application.setTeamId(new Team());
    }
    if (application.getOrganizationId() == null) {
      application.setOrganizationId(new Organization());
    }
    return "MaintainApplication.xhtml";
  }

  private void nullify() {
    if (application.getTeamId() != null && application.getTeamId().getTeamId() == null) {
      application.setTeamId(null);
    }
    if (application.getOrganizationId() != null
        && application.getOrganizationId().getOrganizationId() == null) {
      application.setOrganizationId(null);
    }
  }

  public Application getApplication() {
    return application;
  }

  public void setApplication(Application application) {
    this.application = application;
  }

  public Flash getFlash() {
    return flash;
  }

  public void setFlash(Flash flash) {
    this.flash = flash;
  }
}
