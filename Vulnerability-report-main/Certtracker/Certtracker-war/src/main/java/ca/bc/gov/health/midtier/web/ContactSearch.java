package ca.bc.gov.health.midtier.web;

import ca.bc.gov.health.jsf.BaseBean;
import ca.bc.gov.health.midtier.ejb.entity.*;
import ca.bc.gov.health.midtier.ejb.session.*;
import jakarta.annotation.PostConstruct;
import jakarta.ejb.EJB;
import jakarta.faces.view.ViewScoped;
import jakarta.inject.Named;
import java.io.Serializable;
import java.util.List;

/**
 * Backing bean to assist in searching for Contacts
 *
 * @author JSF Code Generator
 */
@Named("ContactSearch")
@ViewScoped
public class ContactSearch extends BaseBean implements Serializable {

  @EJB
  /* Session bean to perform searches */
  private ContactFacadeLocal paramsFacade;

  /* Search results */
  private List<Contact> results;
  /* Template object for query by example */
  private Contact params;

  /* Default constructor */
  public ContactSearch() {}

  @PostConstruct
  /* Initializes this bean after injection is complete */
  public void init() {
    clear();
    // search();
    results = paramsFacade.findAll();
  }

  /* Clears the state of this bean */
  public String clear() {
    params = new Contact();
    params.setTeamId(new Team());
    params.setOrganizationId(new Organization());
    results = null;
    return null;
  }

  /* Perform search */
  public String search() {
    if (!params.getEmailTxt().isEmpty()) {
      params.setEmailTxt(HelperSearch.addPattern(params.getEmailTxt()));
    }
    if (!params.getFirstGivenNm().isEmpty()) {
      params.setFirstGivenNm(HelperSearch.addPattern(params.getFirstGivenNm()));
    }
    if (!params.getPhoneTxt().isEmpty()) {
      params.setPhoneTxt(HelperSearch.addPattern(params.getPhoneTxt()));
    }
    if (!params.getSurnameNm().isEmpty()) {
      params.setSurnameNm(HelperSearch.addPattern(params.getSurnameNm()));
    }

    results = paramsFacade.search(params);
    if (!params.getEmailTxt().isEmpty()) {
      params.setEmailTxt(HelperSearch.removePattern(params.getEmailTxt()));
    }
    if (!params.getFirstGivenNm().isEmpty()) {
      params.setFirstGivenNm(HelperSearch.removePattern(params.getFirstGivenNm()));
    }
    if (!params.getPhoneTxt().isEmpty()) {
      params.setPhoneTxt(HelperSearch.removePattern(params.getPhoneTxt()));
    }
    if (!params.getSurnameNm().isEmpty()) {
      params.setSurnameNm(HelperSearch.removePattern(params.getSurnameNm()));
    }
    return null;
  }

  /* Getters and Setters */

  public Contact getParams() {
    return params;
  }

  public void setParams(Contact params) {
    this.params = params;
  }

  public List<Contact> getResults() {
    return results;
  }
}
