package ca.bc.gov.health.midtier.web;

import ca.bc.gov.health.jsf.BaseBean;
import ca.bc.gov.health.midtier.ejb.entity.*;
import ca.bc.gov.health.midtier.ejb.session.*;
import jakarta.annotation.PostConstruct;
import jakarta.ejb.EJB;
import jakarta.faces.view.ViewScoped;
import jakarta.inject.Named;
import java.io.Serializable;
import java.util.List;

/**
 * Backing bean to assist in searching for Monitors
 *
 * @author JSF Code Generator
 */
@Named("MonitorSearch")
@ViewScoped
public class MonitorSearch extends BaseBean implements Serializable {

  @EJB
  /* Session bean to perform searches */
  private MonitorFacadeLocal paramsFacade;

  /* Search results */
  private List<Monitor> results;
  /* Template object for query by example */
  private Monitor params;

  /* Default constructor */
  public MonitorSearch() {}

  @PostConstruct
  /* Initializes this bean after injection is complete */
  public void init() {
    clear();
    // search();
    results = paramsFacade.findAll();
  }

  /* Clears the state of this bean */
  public String clear() {
    params = new Monitor();
    params.setAuthorityId(new SigningAuthority());
    // params.setEmailId(new Email());
    params.setApplicationId(new Application());
    results = null;
    return null;
  }

  /* Perform search */
  public String search() {
    if (!params.getMonitorNm().isEmpty()) {
      params.setMonitorNm(HelperSearch.addPattern(params.getMonitorNm()));
    }
    if (!params.getCommentsTxt().isEmpty()) {
      params.setCommentsTxt(HelperSearch.addPattern(params.getCommentsTxt()));
    }
    if (!params.getCacertLocationTxt().isEmpty()) {
      params.setCacertLocationTxt(HelperSearch.addPattern(params.getCacertLocationTxt()));
    }
    if (!params.getKeystoreLocationTxt().isEmpty()) {
      params.setKeystoreLocationTxt(HelperSearch.addPattern(params.getKeystoreLocationTxt()));
    }
    if (!params.getMonitorType().isEmpty()) {
      params.setMonitorType(HelperSearch.addPattern(params.getMonitorType()));
    }
    results = paramsFacade.search(params);
    if (!params.getMonitorNm().isEmpty()) {
      params.setMonitorNm(HelperSearch.removePattern(params.getMonitorNm()));
    }
    if (!params.getCommentsTxt().isEmpty()) {
      params.setCommentsTxt(HelperSearch.removePattern(params.getCommentsTxt()));
    }
    if (!params.getCacertLocationTxt().isEmpty()) {
      params.setCacertLocationTxt(HelperSearch.removePattern(params.getCacertLocationTxt()));
    }
    if (!params.getKeystoreLocationTxt().isEmpty()) {
      params.setKeystoreLocationTxt(HelperSearch.removePattern(params.getKeystoreLocationTxt()));
    }
    if (!params.getMonitorType().isEmpty()) {
      params.setMonitorType(HelperSearch.removePattern(params.getMonitorType()));
    }
    return null;
  }

  /* Getters and Setters */
  public Monitor getParams() {
    return params;
  }

  public void setParams(Monitor params) {
    this.params = params;
  }

  public List<Monitor> getResults() {
    return results;
  }
}
