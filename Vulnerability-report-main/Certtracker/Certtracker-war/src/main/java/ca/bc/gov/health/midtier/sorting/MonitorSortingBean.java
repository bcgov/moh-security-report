/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.midtier.sorting;

import jakarta.faces.view.ViewScoped;
import jakarta.inject.Named;
import java.io.Serializable;
import org.primefaces.model.SortOrder;

/** @author Troy.McGinnis */
@Named("monitorSortingBean")
@ViewScoped
public class MonitorSortingBean implements Serializable {

  private static final long serialVersionUID = 1L;
  private SortOrder nameOrder = SortOrder.ASCENDING; // Make default
  private SortOrder notificationYnOrder = SortOrder.UNSORTED;
  private SortOrder startDateOrder = SortOrder.UNSORTED;
  private SortOrder endDateOrder = SortOrder.UNSORTED;
  private SortOrder commentsOrder = SortOrder.UNSORTED;
  private SortOrder notificationOrder = SortOrder.UNSORTED;
  private SortOrder cacertLocationOrder = SortOrder.UNSORTED;
  private SortOrder keystoreLocationOrder = SortOrder.UNSORTED;
  private SortOrder typeOrder = SortOrder.UNSORTED;

  public void sortByName() {
    // Reset all other columns sorting order
    notificationYnOrder = SortOrder.UNSORTED;
    startDateOrder = SortOrder.UNSORTED;
    endDateOrder = SortOrder.UNSORTED;
    commentsOrder = SortOrder.UNSORTED;
    notificationOrder = SortOrder.UNSORTED;
    cacertLocationOrder = SortOrder.UNSORTED;
    keystoreLocationOrder = SortOrder.UNSORTED;
    typeOrder = SortOrder.UNSORTED;

    if (nameOrder.equals(SortOrder.ASCENDING)) {
      setNameOrder(SortOrder.DESCENDING);
    } else {
      setNameOrder(SortOrder.ASCENDING);
    }
  }

  public void sortByNotificationYn() {
    // Reset all other columns sorting order
    nameOrder = SortOrder.UNSORTED;
    startDateOrder = SortOrder.UNSORTED;
    endDateOrder = SortOrder.UNSORTED;
    commentsOrder = SortOrder.UNSORTED;
    notificationOrder = SortOrder.UNSORTED;
    cacertLocationOrder = SortOrder.UNSORTED;
    keystoreLocationOrder = SortOrder.UNSORTED;
    typeOrder = SortOrder.UNSORTED;

    if (notificationYnOrder.equals(SortOrder.ASCENDING)) {
      setNotificationYnOrder(SortOrder.DESCENDING);
    } else {
      setNotificationYnOrder(SortOrder.ASCENDING);
    }
  }

  public void sortByStartDate() {
    // Reset all other columns sorting order
    nameOrder = SortOrder.UNSORTED;
    notificationYnOrder = SortOrder.UNSORTED;
    endDateOrder = SortOrder.UNSORTED;
    commentsOrder = SortOrder.UNSORTED;
    notificationOrder = SortOrder.UNSORTED;
    cacertLocationOrder = SortOrder.UNSORTED;
    keystoreLocationOrder = SortOrder.UNSORTED;
    typeOrder = SortOrder.UNSORTED;

    if (startDateOrder.equals(SortOrder.ASCENDING)) {
      setStartDateOrder(SortOrder.DESCENDING);
    } else {
      setStartDateOrder(SortOrder.ASCENDING);
    }
  }

  public void sortByEndDate() {
    // Reset all other columns sorting order
    nameOrder = SortOrder.UNSORTED;
    notificationYnOrder = SortOrder.UNSORTED;
    startDateOrder = SortOrder.UNSORTED;
    commentsOrder = SortOrder.UNSORTED;
    notificationOrder = SortOrder.UNSORTED;
    cacertLocationOrder = SortOrder.UNSORTED;
    keystoreLocationOrder = SortOrder.UNSORTED;
    typeOrder = SortOrder.UNSORTED;

    if (endDateOrder.equals(SortOrder.ASCENDING)) {
      setEndDateOrder(SortOrder.DESCENDING);
    } else {
      setEndDateOrder(SortOrder.ASCENDING);
    }
  }

  public void sortByComments() {
    // Reset all other columns sorting order
    nameOrder = SortOrder.UNSORTED;
    notificationYnOrder = SortOrder.UNSORTED;
    startDateOrder = SortOrder.UNSORTED;
    endDateOrder = SortOrder.UNSORTED;
    notificationOrder = SortOrder.UNSORTED;
    cacertLocationOrder = SortOrder.UNSORTED;
    keystoreLocationOrder = SortOrder.UNSORTED;
    typeOrder = SortOrder.UNSORTED;

    if (commentsOrder.equals(SortOrder.ASCENDING)) {
      setCommentsOrder(SortOrder.DESCENDING);
    } else {
      setCommentsOrder(SortOrder.ASCENDING);
    }
  }

  public void sortByNotification() {
    // Reset all other columns sorting order
    nameOrder = SortOrder.UNSORTED;
    notificationYnOrder = SortOrder.UNSORTED;
    startDateOrder = SortOrder.UNSORTED;
    endDateOrder = SortOrder.UNSORTED;
    commentsOrder = SortOrder.UNSORTED;
    cacertLocationOrder = SortOrder.UNSORTED;
    keystoreLocationOrder = SortOrder.UNSORTED;
    typeOrder = SortOrder.UNSORTED;

    if (notificationOrder.equals(SortOrder.ASCENDING)) {
      setNotificationOrder(SortOrder.DESCENDING);
    } else {
      setNotificationOrder(SortOrder.ASCENDING);
    }
  }

  public void sortByCacertLocation() {
    // Reset all other columns sorting order
    nameOrder = SortOrder.UNSORTED;
    notificationYnOrder = SortOrder.UNSORTED;
    startDateOrder = SortOrder.UNSORTED;
    endDateOrder = SortOrder.UNSORTED;
    commentsOrder = SortOrder.UNSORTED;
    notificationOrder = SortOrder.UNSORTED;
    keystoreLocationOrder = SortOrder.UNSORTED;
    typeOrder = SortOrder.UNSORTED;

    if (cacertLocationOrder.equals(SortOrder.ASCENDING)) {
      setCacertLocationOrder(SortOrder.DESCENDING);
    } else {
      setCacertLocationOrder(SortOrder.ASCENDING);
    }
  }

  public void sortByKeystoreLocation() {
    // Reset all other columns sorting order
    nameOrder = SortOrder.UNSORTED;
    notificationYnOrder = SortOrder.UNSORTED;
    startDateOrder = SortOrder.UNSORTED;
    endDateOrder = SortOrder.UNSORTED;
    commentsOrder = SortOrder.UNSORTED;
    notificationOrder = SortOrder.UNSORTED;
    cacertLocationOrder = SortOrder.UNSORTED;
    typeOrder = SortOrder.UNSORTED;

    if (keystoreLocationOrder.equals(SortOrder.ASCENDING)) {
      setKeystoreLocationOrder(SortOrder.DESCENDING);
    } else {
      setKeystoreLocationOrder(SortOrder.ASCENDING);
    }
  }

  public void sortByType() {
    // Reset all other columns sorting order
    nameOrder = SortOrder.UNSORTED;
    notificationYnOrder = SortOrder.UNSORTED;
    startDateOrder = SortOrder.UNSORTED;
    endDateOrder = SortOrder.UNSORTED;
    commentsOrder = SortOrder.UNSORTED;
    notificationOrder = SortOrder.UNSORTED;
    cacertLocationOrder = SortOrder.UNSORTED;
    keystoreLocationOrder = SortOrder.UNSORTED;

    if (typeOrder.equals(SortOrder.ASCENDING)) {
      setTypeOrder(SortOrder.DESCENDING);
    } else {
      setTypeOrder(SortOrder.ASCENDING);
    }
  }

  public SortOrder getCacertLocationOrder() {
    return cacertLocationOrder;
  }

  public void setCacertLocationOrder(SortOrder cacertLocationOrder) {
    this.cacertLocationOrder = cacertLocationOrder;
  }

  public SortOrder getCommentsOrder() {
    return commentsOrder;
  }

  public void setCommentsOrder(SortOrder commentsOrder) {
    this.commentsOrder = commentsOrder;
  }

  public SortOrder getNotificationYnOrder() {
    return notificationYnOrder;
  }

  public void setNotificationYnOrder(SortOrder notificationYnOrder) {
    this.notificationYnOrder = notificationYnOrder;
  }

  public SortOrder getEndDateOrder() {
    return endDateOrder;
  }

  public void setEndDateOrder(SortOrder endDateOrder) {
    this.endDateOrder = endDateOrder;
  }

  public SortOrder getKeystoreLocationOrder() {
    return keystoreLocationOrder;
  }

  public void setKeystoreLocationOrder(SortOrder keystoreLocationOrder) {
    this.keystoreLocationOrder = keystoreLocationOrder;
  }

  public SortOrder getNameOrder() {
    return nameOrder;
  }

  public void setNameOrder(SortOrder nameOrder) {
    this.nameOrder = nameOrder;
  }

  public SortOrder getNotificationOrder() {
    return notificationOrder;
  }

  public void setNotificationOrder(SortOrder notificationOrder) {
    this.notificationOrder = notificationOrder;
  }

  public SortOrder getStartDateOrder() {
    return startDateOrder;
  }

  public void setStartDateOrder(SortOrder startDateOrder) {
    this.startDateOrder = startDateOrder;
  }

  public SortOrder getTypeOrder() {
    return typeOrder;
  }

  public void setTypeOrder(SortOrder typeOrder) {
    this.typeOrder = typeOrder;
  }
}
