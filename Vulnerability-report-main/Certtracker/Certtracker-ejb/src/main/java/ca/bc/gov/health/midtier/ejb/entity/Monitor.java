/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.midtier.ejb.entity;

import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.Lob;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.List;

/** @author greg.perkins */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "MT_MONITORS")
@SequenceGenerator(
    name = "MonitorSeq",
    sequenceName = "MT_MONITOR_SEQ",
    allocationSize = 1,
    initialValue = 1)
@NamedQueries({@NamedQuery(name = "Monitor.findAll", query = "SELECT m FROM Monitor m")})
public class Monitor implements Serializable {
  private static final long serialVersionUID = 1L;

  @Id
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "MonitorSeq")
  @NotNull
  @Column(name = "MONITOR_ID")
  private Long monitorId;

  @Size(max = 1)
  @Column(name = "NOTIFICATION_YN")
  private String notificationYn;

  @Column(name = "START_DT")
  @Temporal(TemporalType.DATE)
  private Date startDt;

  @Column(name = "END_DT")
  @Temporal(TemporalType.DATE)
  private Date endDt;

  @Column(name = "MONITOR_NM")
  private String monitorNm;

  @Size(max = 4000)
  @Column(name = "COMMENTS_TXT")
  private String commentsTxt;

  @Column(name = "NOTIFICATION_LEAD_DYS")
  private Short notificationLeadDys;

  @Size(max = 500)
  @Column(name = "CACERT_LOCATION_TXT")
  private String cacertLocationTxt;

  @Size(max = 500)
  @Column(name = "KEYSTORE_LOCATION_TXT")
  private String keystoreLocationTxt;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 10)
  @Column(name = "MONITOR_TYPE")
  private String monitorType;

  @Lob
  @Basic(fetch = FetchType.LAZY)
  @Column(name = "CERTIFICATE_TXT")
  private byte[] certificateTxt;

  @Lob
  @Basic(fetch = FetchType.LAZY)
  @Column(name = "REQUEST_TXT")
  private byte[] requestTxt;

  @OneToMany(cascade = CascadeType.ALL, mappedBy = "monitorId")
  private List<Distribution> distributionList;

  @JoinColumn(name = "AUTHORITY_ID", referencedColumnName = "AUTHORITY_ID")
  @ManyToOne(optional = false)
  private SigningAuthority authorityId;

  @JoinColumn(name = "APPLICATION_ID", referencedColumnName = "APPLICATION_ID")
  @ManyToOne(optional = false)
  private Application applicationId;

  public Monitor() {}

  public Monitor(Long monitorId) {
    this.monitorId = monitorId;
  }

  public Monitor(Long monitorId, String monitorType) {
    this.monitorId = monitorId;
    this.monitorType = monitorType;
  }

  public Long getMonitorId() {
    return monitorId;
  }

  public void setMonitorId(Long monitorId) {
    this.monitorId = monitorId;
  }

  public String getNotificationYn() {
    return notificationYn;
  }

  public void setNotificationYn(String notificationYn) {
    this.notificationYn = notificationYn;
  }

  public Date getStartDt() {
    return startDt;
  }

  public void setStartDt(Date startDt) {
    this.startDt = startDt;
  }

  public Date getEndDt() {
    return endDt;
  }

  public void setEndDt(Date endDt) {
    this.endDt = endDt;
  }

  public String getMonitorNm() {
    return monitorNm;
  }

  public void setMonitorNm(String monitorNm) {
    this.monitorNm = monitorNm;
  }

  public String getCommentsTxt() {
    return commentsTxt;
  }

  public void setCommentsTxt(String commentsTxt) {
    this.commentsTxt = commentsTxt;
  }

  public Short getNotificationLeadDys() {
    return notificationLeadDys;
  }

  public void setNotificationLeadDys(Short notificationLeadDys) {
    this.notificationLeadDys = notificationLeadDys;
  }

  public String getCacertLocationTxt() {
    return cacertLocationTxt;
  }

  public void setCacertLocationTxt(String cacertLocationTxt) {
    this.cacertLocationTxt = cacertLocationTxt;
  }

  public String getKeystoreLocationTxt() {
    return keystoreLocationTxt;
  }

  public void setKeystoreLocationTxt(String keystoreLocationTxt) {
    this.keystoreLocationTxt = keystoreLocationTxt;
  }

  public String getMonitorType() {
    return monitorType;
  }

  public void setMonitorType(String monitorType) {
    this.monitorType = monitorType;
  }

  public byte[] getCertificateTxt() {
    return certificateTxt;
  }

  public void setCertificateTxt(byte[] certificateTxt) {
    this.certificateTxt = certificateTxt;
  }

  public byte[] getRequestTxt() {
    return requestTxt;
  }

  public void setRequestTxt(byte[] requestTxt) {
    this.requestTxt = requestTxt;
  }

  public List<Distribution> getDistributionList() {
    return distributionList;
  }

  public void setDistributionList(List<Distribution> distributionList) {
    this.distributionList = distributionList;
  }

  public SigningAuthority getAuthorityId() {
    return authorityId;
  }

  public void setAuthorityId(SigningAuthority authorityId) {
    this.authorityId = authorityId;
  }

  public Application getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(Application applicationId) {
    this.applicationId = applicationId;
  }

  @Override
  public int hashCode() {
    int hash = 0;
    hash += (monitorId != null ? monitorId.hashCode() : 0);
    return hash;
  }

  @Override
  public boolean equals(Object object) {
    // TODO: Warning - this method won't work in the case the id fields are not set
    if (!(object instanceof Monitor)) {
      return false;
    }
    Monitor other = (Monitor) object;
    if ((this.monitorId == null && other.monitorId != null)
        || (this.monitorId != null && !this.monitorId.equals(other.monitorId))) {
      return false;
    }
    return true;
  }

  @Override
  public String toString() {
    return "ca.bc.gov.health.midtier.ejb.entity.Monitor[ monitorId=" + monitorId + " ]";
  }
}
