/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.midtier.ejb.entity;

import ca.bc.gov.health.annotation.CodeTable;
import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.List;

/** @author greg.perkins */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "MT_ORGANIZATIONS")
@CodeTable(label = "ORGANIZATION_NM", value = "ORGANIZATION_ID")
@SequenceGenerator(
    name = "OrganizationSeq",
    sequenceName = "MT_ORGANIZATION_SEQ",
    allocationSize = 1,
    initialValue = 1)
@NamedQueries({@NamedQuery(name = "Organization.findAll", query = "SELECT o FROM Organization o")})
public class Organization implements Serializable {
  private static final long serialVersionUID = 1L;

  @Id
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "OrganizationSeq")
  @NotNull
  @Column(name = "ORGANIZATION_ID")
  private Long organizationId;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 25)
  @Column(name = "ORGANIZATION_NM")
  private String organizationNm;

  @Size(max = 2000)
  @Column(name = "ORGANIZATION_DSC")
  private String organizationDsc;

  @OneToMany(cascade = CascadeType.ALL, mappedBy = "organizationId")
  private List<Application> applicationList;

  @OneToMany(cascade = CascadeType.ALL, mappedBy = "organizationId")
  private List<Contact> contactList;

  public Organization() {}

  public Organization(Long organizationId) {
    this.organizationId = organizationId;
  }

  public Organization(Long organizationId, String organizationNm) {
    this.organizationId = organizationId;
    this.organizationNm = organizationNm;
  }

  public Long getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(Long organizationId) {
    this.organizationId = organizationId;
  }

  public String getOrganizationNm() {
    return organizationNm;
  }

  public void setOrganizationNm(String organizationNm) {
    this.organizationNm = organizationNm;
  }

  public String getOrganizationDsc() {
    return organizationDsc;
  }

  public void setOrganizationDsc(String organizationDsc) {
    this.organizationDsc = organizationDsc;
  }

  public List<Application> getApplicationList() {
    return applicationList;
  }

  public void setApplicationList(List<Application> applicationList) {
    this.applicationList = applicationList;
  }

  public List<Contact> getContactList() {
    return contactList;
  }

  public void setContactList(List<Contact> contactList) {
    this.contactList = contactList;
  }

  @Override
  public int hashCode() {
    int hash = 0;
    hash += (organizationId != null ? organizationId.hashCode() : 0);
    return hash;
  }

  @Override
  public boolean equals(Object object) {
    // TODO: Warning - this method won't work in the case the id fields are not set
    if (!(object instanceof Organization)) {
      return false;
    }
    Organization other = (Organization) object;
    if ((this.organizationId == null && other.organizationId != null)
        || (this.organizationId != null && !this.organizationId.equals(other.organizationId))) {
      return false;
    }
    return true;
  }

  @Override
  public String toString() {
    return "ca.bc.gov.health.midtier.ejb.entity.Organization[ organizationId="
        + organizationId
        + " ]";
  }
}
