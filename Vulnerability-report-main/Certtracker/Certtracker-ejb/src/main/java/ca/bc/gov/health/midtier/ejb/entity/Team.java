/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.health.midtier.ejb.entity;

import ca.bc.gov.health.annotation.CodeTable;
import ca.bc.gov.health.ejb.entitylistener.AuditListener;
import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.io.Serializable;
import java.util.List;

/** @author greg.perkins */
@Entity
@EntityListeners({AuditListener.class})
@Table(name = "MT_TEAMS")
@CodeTable(label = "TEAM_NM", value = "TEAM_ID")
@SequenceGenerator(
    name = "TeamSeq",
    sequenceName = "MT_TEAM_SEQ",
    allocationSize = 1,
    initialValue = 1)
@NamedQueries({@NamedQuery(name = "Team.findAll", query = "SELECT t FROM Team t")})
public class Team implements Serializable {
  private static final long serialVersionUID = 1L;

  @Id
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "TeamSeq")
  @NotNull
  @Column(name = "TEAM_ID")
  private Long teamId;

  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 25)
  @Column(name = "TEAM_NM")
  private String teamNm;

  @Size(max = 1000)
  @Column(name = "TEAM_DSC")
  private String teamDsc;

  @Size(max = 100)
  @Column(name = "EMAIL_TXT")
  private String emailTxt;

  @OneToMany(mappedBy = "teamId")
  private List<Distribution> distributionList;

  @OneToMany(cascade = CascadeType.ALL, mappedBy = "teamId")
  private List<Application> applicationList;

  @OneToMany(mappedBy = "teamId")
  private List<Contact> contactList;

  public Team() {}

  public Team(Long teamId) {
    this.teamId = teamId;
  }

  public Team(Long teamId, String teamNm) {
    this.teamId = teamId;
    this.teamNm = teamNm;
  }

  public Long getTeamId() {
    return teamId;
  }

  public void setTeamId(Long teamId) {
    this.teamId = teamId;
  }

  public String getTeamNm() {
    return teamNm;
  }

  public void setTeamNm(String teamNm) {
    this.teamNm = teamNm;
  }

  public String getTeamDsc() {
    return teamDsc;
  }

  public void setTeamDsc(String teamDsc) {
    this.teamDsc = teamDsc;
  }

  public String getEmailTxt() {
    return emailTxt;
  }

  public void setEmailTxt(String emailTxt) {
    this.emailTxt = emailTxt;
  }

  public List<Distribution> getDistributionList() {
    return distributionList;
  }

  public void setDistributionList(List<Distribution> distributionList) {
    this.distributionList = distributionList;
  }

  public List<Application> getApplicationList() {
    return applicationList;
  }

  public void setApplicationList(List<Application> applicationList) {
    this.applicationList = applicationList;
  }

  public List<Contact> getContactList() {
    return contactList;
  }

  public void setContactList(List<Contact> contactList) {
    this.contactList = contactList;
  }

  @Override
  public int hashCode() {
    int hash = 0;
    hash += (teamId != null ? teamId.hashCode() : 0);
    return hash;
  }

  @Override
  public boolean equals(Object object) {
    // TODO: Warning - this method won't work in the case the id fields are not set
    if (!(object instanceof Team)) {
      return false;
    }
    Team other = (Team) object;
    if ((this.teamId == null && other.teamId != null)
        || (this.teamId != null && !this.teamId.equals(other.teamId))) {
      return false;
    }
    return true;
  }

  @Override
  public String toString() {
    return "ca.bc.gov.health.midtier.ejb.entity.Team[ teamId=" + teamId + " ]";
  }
}
