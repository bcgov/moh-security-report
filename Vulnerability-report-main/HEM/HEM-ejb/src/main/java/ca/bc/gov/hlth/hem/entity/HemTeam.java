package ca.bc.gov.hlth.hem.entity;

import lombok.Getter;
import lombok.Setter;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import java.io.Serializable;
import java.util.Date;
import java.util.List;
import java.util.Objects;

@Entity
@Table(name = "HEM_TEAM", schema = "hem")
@Getter
@Setter
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "HemTeam.findAll",
            query = "SELECT h FROM HemTeam h WHERE h.archived = :archived ORDER BY h.teamName"),
    @NamedQuery(name = "HemTeam.findByUser",
            query = "SELECT t FROM HemTeam t INNER JOIN t.teamMembers m WHERE m.userId = :userId")
})
public class HemTeam implements Serializable {

    @Id
    @SequenceGenerator(name = "hem.\"hem_team_seq\"",
            sequenceName = "hem.\"hem_team_seq\"",
            allocationSize = 1)
    @GeneratedValue(generator = "hem.\"hem_team_seq\"")
    @Basic(optional = false)
    @NotNull
    @Column(name = "team_id", updatable = false)
    private Integer teamId;

    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 20)
    @Column(name = "team_name")
    private String teamName;

    @Basic(optional = false)
    @NotNull
    @Size(min = 9, max = 50)
    @Column(name = "team_email")
    private String teamEmail;

    @Basic(optional = false)
    @NotNull
    @Column(name = "team_signature")
    private String teamSignature;

    @Column(name = "flag_enabled")
    private boolean enabled = true;

    @Column(name = "created_by")
    private String createdBy;

    @Column(name = "created_date")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdDate;

    @Column(name = "last_modified_by")
    private String lastModifiedBy;

    @Column(name = "last_modified_date")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedDate;

    @NotNull
    @Column(name = "archived")
    private boolean archived = false;

    @Column(name = "archived_by")
    private String archivedBy;

    @Column(name = "archived_date")
    @Temporal(TemporalType.TIMESTAMP)
    private Date archivedDate;

    @ManyToMany
    @JoinTable(name = "hem_jnt_user_team", schema = "hem",
            joinColumns = @JoinColumn(name = "hem_team_id"),
            inverseJoinColumns = @JoinColumn(name = "hem_user_id"))
    private List<HemUser> teamMembers;

    public HemTeam() {
    }

    public HemTeam(Integer teamId, String teamName, String teamSignature, boolean enabled, List<HemUser> teamMembers) {
        this.teamId = teamId;
        this.teamName = teamName;
        this.teamSignature = teamSignature;
        this.enabled = enabled;
        this.teamMembers = teamMembers;
    }

    public Integer getTeamId() {
        return teamId;
    }

    public void setTeamId(Integer teamId) {
        this.teamId = teamId;
    }

    public String getTeamName() {
        return teamName;
    }

    public void setTeamName(String teamName) {
        this.teamName = teamName;
    }

    public String getTeamEmail() {
        return teamEmail;
    }

    public void setTeamEmail(String teamEmail) {
        this.teamEmail = teamEmail;
    }

    public String getTeamSignature() {
        return teamSignature;
    }

    public void setTeamSignature(String teamSignature) {
        this.teamSignature = teamSignature;
    }

    public boolean isEnabled() {
        return enabled;
    }

    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
    }

    public List<HemUser> getTeamMembers() {
        return teamMembers;
    }

    public void setTeamMembers(List<HemUser> teamMembers) {
        this.teamMembers = teamMembers;
    }

    @Override
    public boolean equals(Object o) {
        if (o == null) {
            return false;
        }
        if (!(o instanceof HemTeam)) {
            return false;
        }
        if (o == this) {
            return true;
        }
        return Objects.equals(this.teamId, ((HemTeam) o).teamId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(teamId);
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.hem.entity.HemTeam[ teamId=" + teamId + ",teamName=" + teamName + ",teamEmail=" + teamEmail + " ]";
    }
}
