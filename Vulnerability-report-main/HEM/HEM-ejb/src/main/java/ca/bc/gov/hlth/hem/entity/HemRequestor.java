package ca.bc.gov.hlth.hem.entity;

import lombok.Getter;
import lombok.Setter;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.List;
import java.util.Objects;

@Entity
@Table(name = "HEM_REQUESTOR", schema = "hem")
@Getter
@Setter
@XmlRootElement
@NamedQueries({
        @NamedQuery(name = "HemRequestor.findAll",
                query = "SELECT h FROM HemRequestor h WHERE h.archived = :archived ORDER BY h.requestorName"),
        @NamedQuery(name = "HemRequestor.findByRequestorId",
                query = "SELECT h FROM HemRequestor h WHERE h.requestorId = :requestorId"),
        @NamedQuery(name = "HemRequestor.findByRequestorName",
                query = "SELECT h FROM HemRequestor h WHERE h.requestorName = :requestorName")
})
public class HemRequestor implements Serializable {

    @Id
    @SequenceGenerator(name = "hem.\"HEM_REQUESTOR_requestor_id_seq\"",
            sequenceName = "hem.\"HEM_REQUESTOR_requestor_id_seq\"",
            allocationSize = 1)
    @GeneratedValue(generator = "hem.\"HEM_REQUESTOR_requestor_id_seq\"")
    @Column(name = "requestor_id")
    private Integer requestorId;

    @NotNull
    @Size(min = 1)
    @Column(name = "requestor_name")
    private String requestorName;

    @Column(name = "requestor_email")
    private String requestorEmail;

    @Column(name = "created_by")
    private String createdBy;

    @Column(name = "created_date")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdDate;

    @Column(name = "last_modified_by")
    private String lastModifiedBy;

    @Column(name = "last_modified_date")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedDate;

    @NotNull
    @Column(name = "archived")
    private boolean archived = false;

    @Column(name = "archived_by")
    private String archivedBy;

    @Column(name = "archived_date")
    @Temporal(TemporalType.TIMESTAMP)
    private Date archivedDate;

    @OneToMany(mappedBy = "hemRequestor", cascade = CascadeType.ALL)
    private List<HemChangeRequest> hemChangeRequestList;

    public HemRequestor() {
    }

    @Override
    public boolean equals(Object o) {
        if (o == null) return false;
        if (!(o instanceof HemRequestor)) return false;
        if (o == this) return true;
        return Objects.equals(this.requestorId, ((HemRequestor) o).requestorId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(requestorId);
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.hem.entity.HemRequestor[ requestorId=" + requestorId + " ]";
    }
}
