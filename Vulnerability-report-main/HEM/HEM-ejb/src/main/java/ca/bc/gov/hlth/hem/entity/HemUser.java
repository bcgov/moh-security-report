package ca.bc.gov.hlth.hem.entity;

import lombok.Getter;
import lombok.Setter;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

@Entity
@Table(name = "HEM_USER", schema = "hem")
@Getter
@Setter
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "HemUser.findAll",
            query = "SELECT h FROM HemUser h WHERE h.archived = :archived ORDER BY h.userName"),
    @NamedQuery(name = "HemUser.findByUserId",
            query = "SELECT h FROM HemUser h WHERE h.userId = :userId"),
    @NamedQuery(name = "HemUser.findByUserName",
            query = "SELECT h FROM HemUser h WHERE h.userName = :userName"),
    @NamedQuery(name = "HemUser.findByUserRole",
            query = "SELECT h FROM HemUser h WHERE h.userRole = :userRole"),
    @NamedQuery(name = "HemUser.findByUserLock",
            query = "SELECT h FROM HemUser h WHERE h.userLock = :userLock")
})
public class HemUser implements Serializable {

    @Id
    @SequenceGenerator(name = "hem.\"HEM_USER_user_id_seq\"",
            sequenceName = "hem.\"HEM_USER_user_id_seq\"",
            allocationSize = 1)
    @GeneratedValue(generator = "hem.\"HEM_USER_user_id_seq\"")
    @Basic(optional = false)
    @Column(name = "user_id")
    private Integer userId;

    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 2147483647)
    @Column(name = "user_name")
    private String userName;

    @Basic(optional = true)
    @Size(max = 100)
    @Column(name = "user_email")
    private String userEmail;

    @Basic(optional = false)
    @Size(max = 2147483647)
    @NotNull
    @Column(name = "user_role")
    private String userRole;

    @Basic(optional = false)
    @NotNull
    @Column(name = "user_lock")
    private boolean userLock;

    @Size(max = 2147483647)
    @NotNull
    @Column(name = "user_signature")
    private String userSignature;

    @Column(name = "created_by")
    private String createdBy;

    @Column(name = "created_date")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdDate;

    @Column(name = "last_modified_by")
    private String lastModifiedBy;

    @Column(name = "last_modified_date")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedDate;

    @NotNull
    @Column(name = "archived")
    private boolean archived = false;

    @Column(name = "archived_by")
    private String archivedBy;

    @Column(name = "archived_date")
    @Temporal(TemporalType.TIMESTAMP)
    private Date archivedDate;

    public HemUser() {
    }

    public HemUser(Integer userId, String userName, boolean userLock, String userSignature) {
        this.userId = userId;
        this.userName = userName;
        this.userLock = userLock;
        this.userSignature = userSignature;
    }

    public HemUser(Integer userId, String userName, String userEmail, String userRole, boolean userLock, String userSignature) {
        this.userId = userId;
        this.userName = userName;
        this.userEmail = userEmail;
        this.userRole = userRole;
        this.userLock = userLock;
        this.userSignature = userSignature;
    }

    public Integer getUserId() {
        return userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    public String getUserEmail() {
        return userEmail;
    }

    public void setUserEmail(String userEmail) {
        this.userEmail = userEmail;
    }

    public String getUserRole() {
        return userRole;
    }

    public void setUserRole(String userRole) {
        this.userRole = userRole;
    }

    public boolean getUserLock() {
        return userLock;
    }

    public void setUserLock(boolean userLock) {
        this.userLock = userLock;
    }

    public String getUserSignature() {
        return userSignature;
    }

    public void setUserSignature(String userSignature) {
        this.userSignature = userSignature;
    }

    @Override
    public boolean equals(Object o) {
        if (o == null) {
            return false;
        }
        if (!(o instanceof HemUser)) {
            return false;
        }
        if (o == this) {
            return true;
        }
        return Objects.equals(this.userId, ((HemUser) o).userId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(userId);
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.hem.entity.HemUser[ userId=" + userId + " ]";
    }
}
