package ca.bc.gov.hlth.hem.entity;

import lombok.Getter;
import lombok.Setter;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import java.io.Serializable;
import java.util.Date;
import java.util.List;
import java.util.Objects;

@Entity
@Table(name = "HEM_CHANGE_CATEGORY", schema = "hem")
@Getter
@Setter
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "HemChangeCategory.findAll",
            query = "SELECT h FROM HemChangeCategory h WHERE h.archived = :archived ORDER BY h.categoryName"),
    @NamedQuery(name = "HemChangeCategory.findByCategoryId",
            query = "SELECT h FROM HemChangeCategory h WHERE h.categoryId = :categoryId"),
    @NamedQuery(name = "HemChangeCategory.findByCategoryName",
            query = "SELECT h FROM HemChangeCategory h WHERE h.categoryName = :categoryName"),
    @NamedQuery(name = "HemChangeCategory.findExistingCategory",
            query = "SELECT h.categoryId FROM HemChangeCategory h WHERE h.categoryName = :categoryName AND h.categoryId <> :categoryId")
})
public class HemChangeCategory implements Serializable {

    @Id
    @SequenceGenerator(name = "hem.\"HEM_CHANGE_CATEGORY_category_id_seq\"",
            sequenceName = "hem.\"HEM_CHANGE_CATEGORY_category_id_seq\"",
            allocationSize = 1)
    @GeneratedValue(generator = "hem.\"HEM_CHANGE_CATEGORY_category_id_seq\"")
    @Basic(optional = false)
    @NotNull
    @Column(name = "category_id")
    private Integer categoryId;

    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 2147483647)
    @Column(name = "category_name")
    private String categoryName;

    @Basic(optional = false)
    @Column(name = "category_color")
    private String categoryColor;

    @Basic(optional = false)
    @NotNull
    @Column(name = "category_release_override")
    private boolean categoryReleaseOverride;

    @Column(name = "created_by")
    private String createdBy;

    @Column(name = "created_date")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdDate;

    @Column(name = "last_modified_by")
    private String lastModifiedBy;

    @Column(name = "last_modified_date")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedDate;

    @NotNull
    @Column(name = "archived")
    private boolean archived = false;

    @Column(name = "archived_by")
    private String archivedBy;

    @Column(name = "archived_date")
    @Temporal(TemporalType.TIMESTAMP)
    private Date archivedDate;

    @OneToMany(cascade = CascadeType.ALL, mappedBy = "hemCategory")
    private List<HemChangeRequest> hemChangeRequestList;

    public HemChangeCategory() {
    }
    
    public HemChangeCategory(Integer categoryId, String categoryName, String categoryColor, boolean categoryReleaseOverride) {
        this.categoryId = categoryId;
        this.categoryName = categoryName;
        this.categoryColor = categoryColor;
        this.categoryReleaseOverride = categoryReleaseOverride;
    }

    public HemChangeCategory(Integer categoryId, String categoryName, String categoryColor, boolean categoryReleaseOverride, List<HemChangeRequest> hemChangeRequestList) {
        this.categoryId = categoryId;
        this.categoryName = categoryName;
        this.categoryColor = categoryColor;
        this.categoryReleaseOverride = categoryReleaseOverride;
        this.hemChangeRequestList = hemChangeRequestList;
    }

    public Integer getCategoryId() {
        return categoryId;
    }

    public void setCategoryId(Integer categoryId) {
        this.categoryId = categoryId;
    }

    public String getCategoryName() {
        return categoryName;
    }

    public void setCategoryName(String categoryName) {
        this.categoryName = categoryName;
    }

    public String getCategoryColor() {
        return categoryColor;
    }

    public void setCategoryColor(String categoryColor) {
        this.categoryColor = categoryColor;
    }

    @XmlTransient
    public List<HemChangeRequest> getHemChangeRequestList() {
        return hemChangeRequestList;
    }

    public void setHemChangeRequestList(List<HemChangeRequest> hemChangeRequestList) {
        this.hemChangeRequestList = hemChangeRequestList;
    }

    public boolean isCategoryReleaseOverride() {
        return categoryReleaseOverride;
    }

    public void setCategoryReleaseOverride(boolean categoryReleaseOverride) {
        this.categoryReleaseOverride = categoryReleaseOverride;
    }

    @Override
    public boolean equals(Object o) {
        if (o == null) return false;
        if (!(o instanceof HemChangeCategory)) return false;
        if (o == this) return true;
        return Objects.equals(this.categoryId, ((HemChangeCategory) o).categoryId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(categoryId);
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.hem.entity.HemChangeCategory[ categoryId=" + categoryId + " ]";
    }
}
