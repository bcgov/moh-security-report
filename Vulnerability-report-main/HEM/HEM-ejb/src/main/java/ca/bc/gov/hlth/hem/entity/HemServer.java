package ca.bc.gov.hlth.hem.entity;

import lombok.Getter;
import lombok.Setter;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.List;
import java.util.Objects;

@Entity
@Table(name = "HEM_SERVER", schema = "hem")
@Getter
@Setter
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "HemServer.findAll",
            query = "SELECT h FROM HemServer h WHERE h.archived = :archived ORDER BY h.serverName"),
    @NamedQuery(name = "HemServer.findByServerId",
            query = "SELECT h FROM HemServer h WHERE h.serverId = :serverId"),
    @NamedQuery(name = "HemServer.findByServerName",
            query = "SELECT h FROM HemServer h WHERE h.serverName = :serverName"),
    @NamedQuery(name = "HemServer.findByServerType",
            query = "SELECT h FROM HemServer h WHERE h.serverType = :serverType"),
    @NamedQuery(name = "HemServer.findByServerAddress",
            query = "SELECT h FROM HemServer h WHERE h.serverAddress = :serverAddress"),
    @NamedQuery(name = "HemServer.findByAuthenticationMethod",
            query = "SELECT h FROM HemServer h WHERE h.authenticationMethod = :authenticationMethod"),
    @NamedQuery(name = "HemServer.findByEnvironment",
            query = "SELECT h FROM HemServer h WHERE h.hemEnvironment = :hemEnvironment ORDER BY h.serverName"),
    @NamedQuery(name = "HemServer.findExistingServer",
            query = "SELECT h.serverId FROM HemServer h WHERE h.serverName = :serverName AND h.serverId <> :serverId")
})
public class HemServer implements Serializable {

    @Id
    @SequenceGenerator(name = "hem.\"HEM_SERVER_server_id_seq\"",
            sequenceName = "hem.\"HEM_SERVER_server_id_seq\"",
            allocationSize = 1)
    @GeneratedValue(generator = "hem.\"HEM_SERVER_server_id_seq\"")
    @Basic(optional = false)
    @NotNull
    @Column(name = "server_id", updatable = false)
    private Integer serverId;

    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 2147483647)
    @Column(name = "server_name")
    private String serverName;

    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 2147483647)
    @Column(name = "server_type")
    private String serverType;

    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 2147483647)
    @Column(name = "server_address")
    private String serverAddress;

    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 2147483647)
    @Column(name = "authentication_method")
    private String authenticationMethod;

    @JoinColumn(name = "environment_id", referencedColumnName = "environment_id")
    @ManyToOne(optional = false)
    private HemEnvironment hemEnvironment;

    @Column(name = "created_by")
    private String createdBy;

    @Column(name = "created_date")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdDate;

    @Column(name = "last_modified_by")
    private String lastModifiedBy;

    @Column(name = "last_modified_date")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastModifiedDate;

    @NotNull
    @Column(name = "archived")
    private boolean archived = false;

    @Column(name = "archived_by")
    private String archivedBy;

    @Column(name = "archived_date")
    @Temporal(TemporalType.TIMESTAMP)
    private Date archivedDate;

    @ManyToMany(mappedBy = "hemServer")
    private List<HemChangeRequest> hemChangeRequestList;

    public HemServer() {
    }

    public Integer getServerId() {
        return serverId;
    }

    public void setServerId(Integer serverId) {
        this.serverId = serverId;
    }

    public String getServerName() {
        return serverName;
    }

    public void setServerName(String serverName) {
        this.serverName = serverName;
    }

    public String getServerType() {
        return serverType;
    }

    public void setServerType(String serverType) {
        this.serverType = serverType;
    }

    public String getServerAddress() {
        return serverAddress;
    }

    public void setServerAddress(String serverAddress) {
        this.serverAddress = serverAddress;
    }

    public String getAuthenticationMethod() {
        return authenticationMethod;
    }

    public void setAuthenticationMethod(String authenticationMethod) {
        this.authenticationMethod = authenticationMethod;
    }

    public HemEnvironment getHemEnvironment() {
        return hemEnvironment;
    }

    public void setHemEnvironment(HemEnvironment hemEnvironment) {
        this.hemEnvironment = hemEnvironment;
    }

    @XmlTransient
    public List<HemChangeRequest> getHemChangeRequestList() {
        return hemChangeRequestList;
    }

    public void setHemChangeRequestList(List<HemChangeRequest> hemChangeRequestList) {
        this.hemChangeRequestList = hemChangeRequestList;
    }

    @Override
    public boolean equals(Object o) {
        if (o == null) return false;
        if (!(o instanceof HemServer)) return false;
        if (o == this) return true;
        return Objects.equals(this.serverId, ((HemServer) o).serverId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(serverId);
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.hem.entity.HemServer[ serverId=" + serverId + " ]";
    }
}
