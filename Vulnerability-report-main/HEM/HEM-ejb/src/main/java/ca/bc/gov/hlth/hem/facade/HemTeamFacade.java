package ca.bc.gov.hlth.hem.facade;

import ca.bc.gov.hlth.hem.entity.HemTeam;
import ca.bc.gov.hlth.hem.entity.HemUser;
import java.sql.Timestamp;
import java.time.Instant;

import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import java.util.List;

@Stateless
public class HemTeamFacade extends AbstractFacade<HemTeam> implements HemTeamFacadeLocal {

    @PersistenceContext(unitName = "HEM-pu")
    private EntityManager em;

    @Override
    protected EntityManager getEntityManager() {
        return em;
    }

    public HemTeamFacade() {
        super(HemTeam.class);
    }

    @Override
    public void create(HemTeam h, String username) {
        h.setCreatedBy(username);
        h.setCreatedDate(Timestamp.from(Instant.now()));

        h.setLastModifiedBy(username);
        h.setLastModifiedDate(Timestamp.from(Instant.now()));
        h.setTeamSignature("Please update the team signature");
        em.persist(h);
    }

    @Override
    public void edit(HemTeam h, String username) {
        h.setLastModifiedBy(username);
        h.setLastModifiedDate(Timestamp.from(Instant.now()));
        if (h.getTeamSignature().isBlank()){
            h.setTeamSignature("Please edit the team signature");
        }
        em.merge(h);
    }

    @Override
    public void remove(HemTeam h, String username) {
        h.setArchived(true);
        h.setArchivedBy(username);
        h.setArchivedDate(Timestamp.from(Instant.now()));

        edit(h);
    }

    @Override
    public List<HemTeam> findAll() {
        Query query = em.createNamedQuery("HemTeam.findAll");
        query.setParameter("archived", false);

        return query.getResultList();
    }

    @Override
    public List<HemTeam> findByUser(HemUser user) {
        Query query = em.createNamedQuery("HemTeam.findByUser");
        query.setParameter("userId", user.getUserId());
        return query.getResultList();
    }
}
