package ca.bc.gov.hlth.hem.entity;

import lombok.Getter;
import lombok.Setter;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Objects;

@Entity
@Table(name = "hem_availability_impact", schema = "hem")
@Getter
@Setter
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "HemAvailabilityImpact.findAll",
            query = "SELECT h FROM HemAvailabilityImpact h WHERE h.archived = :archived"),
    @NamedQuery(name = "HemAvailabilityImpact.findByAvailabilityImpactId",
            query = "SELECT h FROM HemAvailabilityImpact h WHERE h.availabilityImpactId = :availabilityImpactId"),
    @NamedQuery(name = "HemAvailabilityImpact.findByAvailabilityImpactName",
            query = "SELECT h FROM HemAvailabilityImpact h WHERE h.availabilityImpactName = :availabilityImpactName"),
    @NamedQuery(name = "HemAvailabilityImpact.findAllOrderByLevel",
            query = "SELECT h FROM HemAvailabilityImpact h ORDER BY h.orderringLevel")
})
public class HemAvailabilityImpact implements Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    /*
    @SequenceGenerator(name = "hem.\"hem_availability_impact_availability_impact_id_seq\"",
            sequenceName = "hem.\"hem_availability_impact_availability_impact_id_seq\"",
            allocationSize = 1)
    @GeneratedValue(generator = "hem.\"hem_availability_impact_availability_impact_id_seq\"")
    */
    @Basic(optional = false)
    @NotNull
    @Column(name = "availability_impact_id", updatable = false)
    private Integer availabilityImpactId = 8; // 8 = not required

    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 50)
    @Column(name = "availability_impact_name")
    private String availabilityImpactName;

    @Column(name ="orderring_level")
    private short orderringLevel;

    @Column(name = "created_by")
    private String createdBy;

    @Column(name = "created_date")
    private LocalDateTime createdDate;

    @Column(name = "last_modified_by")
    private String lastModifiedBy;

    @Column(name = "last_modified_date")
    private LocalDateTime lastModifiedDate;

    @NotNull
    @Column(name = "archived")
    private boolean archived = false;

    @Column(name = "archived_by")
    private String archivedBy;

    @Column(name = "archived_date")
    private LocalDateTime archivedDate;

    @OneToMany(cascade = CascadeType.ALL, mappedBy = "fkAvailabilityImpactId")
    private List<HemEmailNotification> hemEmailNotificationList;

    public HemAvailabilityImpact() {
    }

    public Integer getAvailabilityImpactId() {
        return availabilityImpactId;
    }

    public void setAvailabilityImpactId(Integer availabilityImpactId) {
        this.availabilityImpactId = availabilityImpactId;
    }

    public String getAvailabilityImpactName() {
        return availabilityImpactName;
    }

    public void setAvailabilityImpactName(String availabilityImpactName) {
        this.availabilityImpactName = availabilityImpactName;
    }

    public short getOrderringLevel() {
        return orderringLevel;
    }

    public void setOrderringLevel(short orderringLevel) {
        this.orderringLevel = orderringLevel;
    }

    @XmlTransient
    public List<HemEmailNotification> getHemEmailNotificationList() {
        return hemEmailNotificationList;
    }

    public void setHemEmailNotificationList(List<HemEmailNotification> hemEmailNotificationList) {
        this.hemEmailNotificationList = hemEmailNotificationList;
    }

    @Override
    public boolean equals(Object o) {
        if (o == null) return false;
        if (!(o instanceof HemAvailabilityImpact)) return false;
        if (o == this) return true;
        return Objects.equals(this.availabilityImpactId, ((HemAvailabilityImpact) o).availabilityImpactId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(availabilityImpactId);
    }

    @Override
    public String toString() {
        return "ca.bc.gov.hlth.hem.entity.HemAvailabilityImpact[ availabilityImpactId=" + availabilityImpactId + " ]";
    }
}
