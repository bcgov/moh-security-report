/* 
 * *********************************************************************************************************************
 *  Copyright (c) 2017, Ministry of Health, BC.                                                                        *
 *                                                                                                                     *
 *  All rights reserved.                                                                                               *
 *    This information contained herein may not be used in whole                                                       *
 *    or in part without the express written consent of the                                                            *
 *    Government of British Columbia, Canada.                                                                          *
 *                                                                                                                     *
 *  Revision Control Information                                                                                       *
 *  File:                $Id:: EntityConverter.java 96 2017-09-08 17:31:13Z ahoplock                                 $ *
 *  Date of Last Commit: $Date:: 2017-09-08 10:31:13 -0700 (Fri, 08 Sep 2017)                                        $ *
 *  Revision Number:     $Rev:: 96                                                                                   $ *
 *  Last Commit by:      $Author:: ahoplock                                                                          $ *
 *                                                                                                                     *
 * *********************************************************************************************************************
 */
package ca.bc.gov.hlth.hem.utils;
import org.apache.commons.beanutils.BeanUtils;
import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.convert.Converter;
import javax.faces.convert.FacesConverter;
import java.lang.reflect.InvocationTargetException;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.AttributeConverter;

/**
 *
 * @author CGI Information Management Consultants Inc.
 */

@FacesConverter("EntityConverter")
@javax.persistence.Converter(autoApply = true)
public class EntityConverter implements Converter,  AttributeConverter<LocalDateTime, Timestamp> {

    @Override
    public Object getAsObject(FacesContext context, UIComponent component, String value) {
        try {
            if ("".equals(value)) {
                return null;
            }
            String className = value.substring(0, value.indexOf("["));
            Object out = Class.forName(className).getDeclaredConstructor().newInstance();
            String pairs[] = value.substring(value.indexOf("[") + 1, value.indexOf("]")).trim().split(",");

            // many values
            if (pairs.length > 1) {
                for (String pair : pairs) {
                    String values[] = pair.trim().split("=");
                    BeanUtils.setProperty(out, values[0], values[1]);
                }
            } // just pk
            else {
                String pk[] = value.substring(value.indexOf("[") + 1, value.indexOf("]")).trim().split("=");
                BeanUtils.setProperty(out, pk[0], pk[1]);
            }
            return out;
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | InvocationTargetException | SecurityException | NoSuchMethodException ex) {
            Logger.getLogger(EntityConverter.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
    }

    @Override
    public String getAsString(FacesContext context, UIComponent component, Object value) {
        return value.toString();
    }

    @Override
    public Timestamp convertToDatabaseColumn(LocalDateTime locDateTime) {
        return locDateTime == null ? null : Timestamp.valueOf(locDateTime);
    }

    @Override
    public LocalDateTime convertToEntityAttribute(Timestamp sqlTimestamp) {
        return sqlTimestamp == null ? null : sqlTimestamp.toLocalDateTime();
    }
}