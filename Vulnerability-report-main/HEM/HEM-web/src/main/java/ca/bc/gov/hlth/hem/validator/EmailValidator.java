/*
 * *********************************************************************************************************************
 *  Copyright (c) 2017, Ministry of Health, BC.                                                 *
 *                                                                                                                     *
 *  All rights reserved.                                                                                               *
 *    This information contained herein may not be used in whole                                                       *
 *    or in part without the express written consent of the                                                            *
 *    Government of British Columbia, Canada.                                                                          *
 *                                                                                                                     *
 *  Revision Control Information                                                                                       *
 *  File:                $Id::                                                                                       $ *
 *  Date of Last Commit: $Date::                                                                                     $ *
 *  Revision Number:     $Rev::                                                                                      $ *
 *  Last Commit by:      $Author::                                                                                   $ *
 *                                                                                                                     *
 * *********************************************************************************************************************
 */
package ca.bc.gov.hlth.hem.validator;

import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.enterprise.context.RequestScoped;
import javax.faces.application.FacesMessage;
import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.validator.Validator;
import javax.faces.validator.ValidatorException;
import javax.inject.Named;

/**
 * Custom validator to ensure the email format is good.
 *
 * @author CGI Information Management Consultants Inc.
 */
@Named
@RequestScoped
public class EmailValidator implements Validator {

    private static final String EMAIL_REGEX = "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])";
    private static final String CLASSNAME = EmailValidator.class.getSimpleName();
    private static final Logger LOGGER = Logger.getLogger(CLASSNAME);

    private final Pattern pattern;
    private Matcher matcher;

    public EmailValidator() {
        pattern = Pattern.compile(EMAIL_REGEX);
    }

    /**
     * Runs validation check to ensure this component's name value is not
     * already existing in the database.
     *
     * @param context FacesContext
     * @param component UIComponent
     * @param value Object
     * @throws ValidatorException
     */
    @Override
    public void validate(FacesContext context, UIComponent component, Object value) throws ValidatorException {
        if(value == null){
            LOGGER.log(Level.SEVERE, "Email is null");
            return;
        }
        String content = value.toString();

        // One or more emails in the list
        // If yes, split it and check each email.
        String[] emails;
        if (content.contains(";")) {
            emails = content.split(";");
        } else {
            emails = new String[1];
            emails[0] = content;
        }

        for (String email : emails) {
            matcher = pattern.matcher(email.trim().toLowerCase());
            if (!"".equals(email.trim().toLowerCase()) && !matcher.matches()) {
                FacesMessage msg = new FacesMessage("Invalid email:" + email, "Invalid E-mail format.");
                msg.setSeverity(FacesMessage.SEVERITY_ERROR);
                LOGGER.log(Level.SEVERE, "Invalid email format for email : {0}", email);
                throw new ValidatorException(msg);
            }
        }
    }
}
