/*
 * *********************************************************************************************************************
 *  Copyright (c) 2017, Ministry of Health, BC.                                                 *
 *                                                                                                                     *
 *  All rights reserved.                                                                                               *
 *    This information contained herein may not be used in whole                                                       *
 *    or in part without the express written consent of the                                                            *
 *    Government of British Columbia, Canada.                                                                          *
 *                                                                                                                     *
 *  Revision Control Information                                                                                       *
 *  File:                $Id::                                                                                       $ *
 *  Date of Last Commit: $Date::                                                                                     $ *
 *  Revision Number:     $Rev::                                                                                      $ *
 *  Last Commit by:      $Author::                                                                                   $ *
 *                                                                                                                     *
 * *********************************************************************************************************************
 */
package ca.bc.gov.hlth.hem.security;

import ca.bc.gov.hlth.hem.entity.HemUser;
import ca.bc.gov.hlth.hem.facade.HemUserFacadeLocal;
import ca.bc.gov.hlth.hem.jsf.BaseBean;
import ca.bc.gov.hlth.hem.request.LogoutBean;
import fish.payara.security.openid.api.OpenIdContext;
import java.io.IOException;
import java.io.Serializable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.enterprise.context.SessionScoped;
import javax.inject.Inject;
import javax.inject.Named;
import javax.servlet.ServletException;

/**
 *
 * @author CGI Information Management Consultants Inc.
 */
@Named("Login")
@SessionScoped
public class Login extends BaseBean implements Serializable {

    private static final String CLASSNAME = Login.class.getSimpleName();
    private static final Logger LOGGER = Logger.getLogger(CLASSNAME);
    
    private static final String ADMIN = "admin";
    private static final String PMADMIN = "pmAdmin";
    private static final String SERVERADMIN = "serverAdmin";

    private String userName;
    private HemUser hemUser;

    @Inject
    private OpenIdContext context;

    @Inject
    private LogoutBean logout;

    @EJB
    private HemUserFacadeLocal userFacade;

    private static final long serialVersionUID = 1L;

    /**
     * Creates a new instance of Login
     */
    public Login() {
        //Dummy
    }

    @PostConstruct
    public void init() {
        userName = "";
        if (context.getAccessToken() != null) {
            userName = (String) context.getAccessToken().getClaim("preferred_username");
            hemUser = userFacade.findByUserName(userName);
        }
    }

    /**
     * @return the username
     */
    public String getUserName() {
        return userName;
    }

    /**
     * @param userName the username to set
     */
    public void setUserName(String userName) {
        this.userName = userName;
    }

    public String getLoginUserName() {
        try {
            return hemUser.getUserName();
        } catch (NullPointerException e) {
            try {
                logout.logout();
            } catch (ServletException | IOException ex) {
                LOGGER.log(Level.SEVERE, null, ex);
            }
        }
        return userName;
    }

    public boolean isUserLogged() {
        return hemUser != null;
    }

    public boolean isUserHasViewerRoleOnly() {
        return "viewer".equals(hemUser.getUserRole());
    }

    public boolean isUserHasOneOfAdminRoles() {
        return hemUser != null && (ADMIN.equals(hemUser.getUserRole()) || PMADMIN.equals(hemUser.getUserRole()) || SERVERADMIN.equals(hemUser.getUserRole()));
    }

    public boolean isUserHasAdminRole() {
        return hemUser != null && (ADMIN.equals(hemUser.getUserRole()));
    }

    public boolean isUserHasServerAdminRole() {
        return hemUser != null && (ADMIN.equals(hemUser.getUserRole()) || SERVERADMIN.equals(hemUser.getUserRole()));
    }

    public boolean isUserHasPmAdminRole() {
        return hemUser != null && (ADMIN.equals(hemUser.getUserRole()) || PMADMIN.equals(hemUser.getUserRole()));
    }

}
