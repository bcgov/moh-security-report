/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.util.audit;

import static ca.bc.gov.moh.hsa.util.audit.AuditProcessor.TRANSACTION_HEADER_KEY;
import org.apache.camel.CamelContext;
import org.apache.camel.Exchange;
import org.apache.camel.component.file.GenericFileEndpoint;
import org.apache.camel.component.file.GenericFileOperations;
import org.apache.camel.component.file.GenericFileProducer;
import org.apache.camel.impl.DefaultExchange;
import org.apache.camel.impl.DefaultCamelContext;

/**
 *
 * @author trevpr.schiavone
 */
public class AuditErrorFileProducer<T> extends GenericFileProducer<T> {

    private final AuditErrorFileEndPoint endpoint;

    protected AuditErrorFileProducer(AuditErrorFileEndPoint endpoint, GenericFileOperations<T> operations) {
        super((GenericFileEndpoint<T>) endpoint, operations);
        this.endpoint = endpoint;
    }

    @Override
    public void process(Exchange exchange) throws Exception {
        String transactionType = exchange.getIn().getHeader(FileDropComponent.TRANSACTION_MESSAGE_TYPE_HEADER_KEY, String.class);
        String messageContext = getMessageContext();
        String outputMessage;

        boolean messageToBeSaved = isMessageToBeSaved(transactionType, messageContext);
        
        outputMessage = (String) exchange.getIn().getHeader(TRANSACTION_HEADER_KEY);
        exchange.getIn().setBody(outputMessage);

        if (messageToBeSaved) {
            super.process(exchange);
        }
    }

    public String getMessageContext() {
        return endpoint.getMessageContext();
    }

    private boolean isMessageToBeSaved(String transactionType, String messageContext) {
        return endpoint.isMessageToBeSaved(transactionType, messageContext);
    }
}
