/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.esb.service.batch;

import ca.bc.gov.moh.hsa.esb.service.batch.dto.BatchResponseDTO;
import ca.bc.gov.moh.hsa.util.dto.MessageDTO;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import org.apache.camel.Exchange;
import org.apache.camel.Processor;
import org.springframework.stereotype.Component;

/**
 * Converter to take individual MessageDTO objects and convert them into a single BatchResponseDTO
 *
 * @author conrad.gustafson
 * @author greg.perkins
 */
@Component
public class BatchResponseConverter implements Processor {

    /**
     * Process this exchange - convert individual responses into a batch response, and add sender info
     *
     * @param exchange Exchange
     * @throws Exception
     */
    @Override
    public void process(Exchange exchange) throws Exception {
        ArrayList<MessageDTO> results = (ArrayList<MessageDTO>) exchange.getIn().getBody();
        BatchResponseDTO response = createResponse(results, exchange);
        response.setOrganization(exchange.getIn().getHeader(HeaderConstants.SENDING_ORG).toString());
        response.setDevice(exchange.getIn().getHeader(HeaderConstants.SENDING_DEVICE).toString());
        exchange.getIn().setBody(response);
    }

    /**
     * Converts the list of individual messages into a batch response
     *
     * @param results ArrayList<MessageDTO> - Input MessageDTOs
     * @return BatchResponseDTO
     */
    private BatchResponseDTO createResponse(ArrayList<MessageDTO> results, Exchange exchange) {

        BatchResponseDTO batchResponseDTO = new BatchResponseDTO();

        List<String> exceptions = new ArrayList<String>();
        boolean hasException = false;
        for (Iterator<MessageDTO> it = results.iterator(); it.hasNext();) {
            MessageDTO individualResponseDTO = it.next();
            String individualMessageBody = individualResponseDTO.getMessageBody();

            boolean isGetDemographics = MessageDTO.MessageType.GET_DEMOGRAPHICS_MESSAGE_TYPE == individualResponseDTO.getMessageType();
            boolean isGetEligibility = MessageDTO.MessageType.GET_ELIGIBILITY_MESSAGE_TYPE == individualResponseDTO.getMessageType();

            if (isGetDemographics) {
                batchResponseDTO.setGetDemographicsResponse(individualMessageBody);
            } else if (isGetEligibility) {
                batchResponseDTO.setGetEligibilityResponse(individualMessageBody);
            } else {
                hasException = true;
                exceptions.add(individualMessageBody);
            }

        }

        if (batchResponseDTO.getDemographicsResponse==null && batchResponseDTO.getEligibilityResponse==null){
            batchResponseDTO.setGetDemographicsResponse(exceptions.get(0));
            batchResponseDTO.setGetEligibilityResponse(exceptions.get(1));
        }else if (batchResponseDTO.getDemographicsResponse==null){
            batchResponseDTO.setGetDemographicsResponse(exceptions.get(0));
        }else if (batchResponseDTO.getEligibilityResponse==null){
            batchResponseDTO.setGetEligibilityResponse(exceptions.get(0));
        }

        if (hasException){
            //batchResponseDTO.setResponseCode("AE");
        }
        
        return batchResponseDTO;
    }

}
