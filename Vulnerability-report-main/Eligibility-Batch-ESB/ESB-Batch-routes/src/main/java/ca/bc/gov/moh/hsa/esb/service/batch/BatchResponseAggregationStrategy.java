/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.bc.gov.moh.hsa.esb.service.batch;

import ca.bc.gov.moh.hsa.util.dto.MessageDTO;
import java.util.ArrayList;
import org.apache.camel.Exchange;
import org.apache.camel.impl.DefaultMessage;
import org.apache.camel.processor.aggregate.AggregationStrategy;
import org.springframework.stereotype.Component;

/**
 * Aggregation Strategy for handling Batch Message responses
 *
 * @author conrad.gustafson
 * @author greg.perkins
 */
@Component
public class BatchResponseAggregationStrategy implements AggregationStrategy {

    /**
     * Performs the aggregation of messages
     *
     * @param oldExchange Exchange
     * @param newExchange Exchange
     * @return Exchange - The Aggregated Response
     */
    @Override
    public Exchange aggregate(Exchange oldExchange, Exchange newExchange) {

        // Create the individual response DTO
        MessageDTO individualResponseDTO = null;
        Exception caused = (Exception) newExchange.getProperty(Exchange.EXCEPTION_CAUGHT, Throwable.class);
        if (caused == null) {
            individualResponseDTO = newExchange.getIn().getBody(MessageDTO.class);
        } else {
            //individualResponseDTO = newExchange.getIn().getBody(MessageDTO.class);
            individualResponseDTO = new MessageDTO();
            DefaultMessage df = newExchange.getIn().getBody(DefaultMessage.class);
            individualResponseDTO.setMessageBody(df.getBody(String.class));
            //individualResponseDTO.setException(caused);
            //Clear out the exception from the exchange, so we proceed normally
//            newExchange.setException(null);
//            newExchange.setProperty(Exchange.EXCEPTION_CAUGHT, null);
        }

        Exchange exchangeToReturn = null;
        ArrayList<MessageDTO> arrayList = null;

        if (oldExchange == null) {
            // If this is the first message received by the aggregator,
            // set up the collection that will hold all the responses
            arrayList = new ArrayList<MessageDTO>();
            newExchange.getIn().setBody(arrayList);
            exchangeToReturn = newExchange;
        } else {
            // If this is not the first message, the collection is already set up
            arrayList = (ArrayList<MessageDTO>) oldExchange.getIn().getBody();
            exchangeToReturn = oldExchange;
        }

        arrayList.add(individualResponseDTO);

        return exchangeToReturn;
    }

}
